SELECT i.i_category AS item_category, s.s_state AS store_state, COUNT(DISTINCT ss.ss_ticket_number) AS total_sales, AVG(ss.ss_net_paid_inc_tax) AS avg_sale_amount, COUNT(DISTINCT sr.sr_ticket_number) AS total_returns, SUM(sr.sr_return_amt_inc_tax) AS total_return_amount, AVG(sr.sr_return_amt_inc_tax) AS avg_return_amount, COUNT(DISTINCT wp.wp_web_page_sk) AS total_web_pages, SUM(wp.wp_image_count) AS total_images, AVG(wp.wp_image_count) AS avg_images_per_page FROM store_sales ss JOIN item i ON ss.ss_item_sk = i.i_item_sk JOIN store s ON ss.ss_store_sk = s.s_store_sk LEFT JOIN store_returns sr ON ss.ss_ticket_number = sr.sr_ticket_number LEFT JOIN web_page wp ON ss.ss_customer_sk = wp.wp_customer_sk WHERE s.s_state IN ('CA', 'TX', 'NY') AND i.i_category IN ('Electronics', 'Home Appliances', 'Books') AND ss.ss_sold_date_sk BETWEEN 20020101 AND 20021231 AND (wp.wp_image_count IS NULL OR wp.wp_image_count >= 3) GROUP BY item_category, store_state ORDER BY total_sales DESC, total_return_amount DESC;
SELECT dd.d_year, dd.d_quarter_name, ca.ca_state, SUM(ss.ss_quantity) AS total_quantity_sold, SUM(ss.ss_ext_sales_price) AS total_sales, AVG(ss.ss_sales_price) AS avg_sales_price, COUNT(DISTINCT ss.ss_ticket_number) AS total_sales_transactions, SUM(sr.sr_return_quantity) AS total_quantity_returned, SUM(sr.sr_return_amt) AS total_returns, AVG(sr.sr_return_amt) AS avg_return_amt, COUNT(DISTINCT sr.sr_ticket_number) AS total_return_transactions, SUM(wr.wr_return_quantity) AS total_web_quantity_returned, SUM(wr.wr_return_amt) AS total_web_returns, AVG(wr.wr_return_amt) AS avg_web_return_amt, COUNT(DISTINCT wr.wr_order_number) AS total_web_return_transactions FROM store_sales ss JOIN date_dim dd ON ss.ss_sold_date_sk = dd.d_date_sk JOIN customer_address ca ON ss.ss_addr_sk = ca.ca_address_sk LEFT JOIN store_returns sr ON ss.ss_item_sk = sr.sr_item_sk AND ss.ss_ticket_number = sr.sr_ticket_number LEFT JOIN web_returns wr ON ss.ss_item_sk = wr.wr_item_sk AND ss.ss_ticket_number = wr.wr_order_number WHERE dd.d_year = 2001 AND ca.ca_country = 'United States' AND (sr.sr_returned_date_sk IS NULL OR dd.d_date_sk = sr.sr_returned_date_sk) AND (wr.wr_returned_date_sk IS NULL OR dd.d_date_sk = wr.wr_returned_date_sk) GROUP BY dd.d_year, dd.d_quarter_name, ca.ca_state ORDER BY dd.d_year, dd.d_quarter_name, ca.ca_state;
SELECT dd.d_year, dd.d_moy, sm.sm_type, COUNT(DISTINCT cs.cs_order_number) AS total_orders, SUM(cs.cs_quantity) AS total_quantity_sold, SUM(cs.cs_net_paid) AS total_net_sales, AVG(cs.cs_net_paid) AS avg_net_sales_per_order, SUM(sr.sr_return_quantity) AS total_quantity_returned, SUM(sr.sr_net_loss) AS total_net_loss, AVG(sr.sr_net_loss) AS avg_net_loss_per_return, SUM(wr.wr_return_quantity) AS total_web_quantity_returned, SUM(wr.wr_net_loss) AS total_web_net_loss, AVG(wr.wr_net_loss) AS avg_web_net_loss_per_return, COUNT(DISTINCT hd.hd_demo_sk) AS unique_customers FROM date_dim dd LEFT JOIN catalog_sales cs ON dd.d_date_sk = cs.cs_sold_date_sk LEFT JOIN store_returns sr ON dd.d_date_sk = sr.sr_returned_date_sk LEFT JOIN web_returns wr ON dd.d_date_sk = wr.wr_returned_date_sk LEFT JOIN ship_mode sm ON cs.cs_ship_mode_sk = sm.sm_ship_mode_sk LEFT JOIN household_demographics hd ON cs.cs_bill_hdemo_sk = hd.hd_demo_sk WHERE dd.d_year = 2003 AND sm.sm_carrier IN ('ZOUROS', 'ALLIANCE', 'GREAT EASTERN') AND hd.hd_income_band_sk IN (10, 3, 16) AND hd.hd_buy_potential IN ('Unknown', '501-1000', '1001-5000') GROUP BY dd.d_year, dd.d_moy, sm.sm_type ORDER BY dd.d_year, dd.d_moy, sm.sm_type;
SELECT w_state, i_manufact_id, i_manufact, SUM(sr_return_amt + wr_return_amt) AS total_return_amount, AVG(sr_return_amt + wr_return_amt) AS avg_return_amount, COUNT(DISTINCT sr_ticket_number) AS count_store_returns, COUNT(DISTINCT wr_order_number) AS count_web_returns, SUM(CASE WHEN p_promo_sk IS NOT NULL THEN 1 ELSE 0 END) AS promo_related_returns FROM warehouse w LEFT JOIN store_returns sr ON w.w_warehouse_sk = sr.sr_addr_sk LEFT JOIN web_returns wr ON w.w_warehouse_sk = wr.wr_refunded_addr_sk LEFT JOIN item i ON i.i_item_sk = sr.sr_item_sk OR i.i_item_sk = wr.wr_item_sk LEFT JOIN promotion p ON p.p_item_sk = i.i_item_sk AND (sr.sr_returned_date_sk BETWEEN p.p_start_date_sk AND p.p_end_date_sk OR wr.wr_returned_date_sk BETWEEN p.p_start_date_sk AND p.p_end_date_sk) WHERE w_state = 'TN' AND i_manufact_id IN (70, 177, 479) GROUP BY w_state, i_manufact_id, i_manufact HAVING SUM(sr_return_amt + wr_return_amt) > 0 ORDER BY total_return_amount DESC;
SELECT cc.cc_name, cc.cc_city, cc.cc_state, COUNT(*) AS number_of_promotions, SUM(inv.inv_quantity_on_hand) AS total_inventory, AVG(p.p_cost) AS average_promotion_cost, SUM(CASE WHEN p.p_discount_active = 'Y' THEN 1 ELSE 0 END) AS active_discounts FROM call_center cc JOIN promotion p ON cc.cc_call_center_sk = p.p_item_sk JOIN inventory inv ON p.p_item_sk = inv.inv_item_sk WHERE cc.cc_rec_end_date = '2000-12-31' AND inv.inv_date_sk = 2450815 AND inv.inv_quantity_on_hand IN (104, 11, 180) AND cc.cc_employees IN (1, 2, 3) GROUP BY cc.cc_name, cc.cc_city, cc.cc_state ORDER BY cc.cc_name, cc.cc_city, cc.cc_state;
SELECT ss.ss_item_sk AS item_sku, SUM(ss.ss_quantity) AS total_quantity_sold, SUM(ss.ss_net_paid_inc_tax) AS total_sales_inc_tax, AVG(ss.ss_ext_discount_amt) AS avg_discount_amt, COUNT(DISTINCT ss.ss_ticket_number) AS total_sales_transactions, SUM(wr.wr_return_quantity) AS total_quantity_returned, SUM(wr.wr_return_amt_inc_tax) AS total_return_amount_inc_tax, SUM(wr.wr_net_loss) AS total_net_loss_from_returns, SUM(ws.ws_net_profit) AS total_net_profit_from_web_sales FROM store_sales ss LEFT JOIN web_returns wr ON ss.ss_item_sk = wr.wr_item_sk AND ss.ss_ticket_number = wr.wr_order_number LEFT JOIN web_sales ws ON ss.ss_item_sk = ws.ws_item_sk AND ss.ss_ticket_number = ws.ws_order_number GROUP BY ss.ss_item_sk ORDER BY total_net_profit_from_web_sales DESC;
SELECT i.i_category, COUNT(DISTINCT cs.cs_order_number) AS total_catalog_orders, COUNT(DISTINCT ws.ws_order_number) AS total_web_orders, AVG(cs.cs_sales_price) AS avg_catalog_sales_price, AVG(ws.ws_sales_price) AS avg_web_sales_price, SUM(cs.cs_net_profit) AS total_catalog_net_profit, SUM(ws.ws_net_profit) AS total_web_net_profit, SUM(CASE WHEN cs.cs_promo_sk IS NOT NULL THEN 1 ELSE 0 END) AS promo_catalog_sales, SUM(CASE WHEN ws.ws_promo_sk IS NOT NULL THEN 1 ELSE 0 END) AS promo_web_sales, COUNT(DISTINCT d.d_date_sk) AS days_in_Q4 FROM item i LEFT JOIN catalog_sales cs ON i.i_item_sk = cs.cs_item_sk LEFT JOIN web_sales ws ON i.i_item_sk = ws.ws_item_sk LEFT JOIN date_dim d ON (cs.cs_sold_date_sk = d.d_date_sk OR ws.ws_sold_date_sk = d.d_date_sk) WHERE d.d_quarter_name = 'Q4' GROUP BY i.i_category ORDER BY total_catalog_net_profit DESC, total_web_net_profit DESC;
SELECT d_year, d_quarter_name, SUM(cs_net_profit) AS total_profit, AVG(cs_quantity) AS average_quantity, COUNT(DISTINCT cs_order_number) AS total_orders, COUNT(DISTINCT sr_ticket_number) AS total_returns, SUM(sr_net_loss) AS total_return_loss, AVG(sr_return_quantity) AS average_return_quantity, COUNT(DISTINCT c_customer_sk) AS total_customers FROM date_dim JOIN catalog_sales ON cs_sold_date_sk = d_date_sk JOIN store_returns ON sr_returned_date_sk = d_date_sk JOIN customer ON (cs_bill_customer_sk = c_customer_sk OR sr_customer_sk = c_customer_sk) JOIN web_site ON c_first_shipto_date_sk = web_open_date_sk WHERE d_moy IN (5, 1, 6) AND web_close_date_sk IN (2448854, 2446944, 2448752) AND sr_returned_date_sk IN (2451779, 2451809) AND c_first_shipto_date_sk IN (2450817, 2450990, 2450273, 2449359, 2449289, 2449658) AND c_first_name IN ('Alecia', 'Allen', 'Deanne') GROUP BY d_year, d_quarter_name ORDER BY d_year, d_quarter_name;
SELECT w_state, t_shift, sm_type as shipping_type, avg(hd_income_band_sk) as avg_income_band, sum(case when hd_buy_potential = 'High' then 1 else 0 end) as high_buy_potential_count, avg(hd_dep_count) as avg_dependent_count, avg(hd_vehicle_count) as avg_vehicle_count, count(distinct sm_ship_mode_sk) as shipping_mode_count FROM household_demographics hd JOIN warehouse w ON hd.hd_demo_sk = w.w_warehouse_sk JOIN time_dim td ON td.t_time_sk = w.w_warehouse_sk JOIN ship_mode sm ON sm.sm_ship_mode_sk = w.w_warehouse_sk WHERE hd.hd_dep_count IN (2, 3, 6, 9) AND hd.hd_vehicle_count IN (0, 1, 2, 3, 4) AND td.t_shift IS NOT NULL AND sm.sm_type IS NOT NULL GROUP BY w_state, t_shift, sm_type ORDER BY avg_income_band DESC, high_buy_potential_count DESC, avg_vehicle_count DESC;
SELECT ca.ca_state, cd.cd_education_status, COUNT(DISTINCT c.c_customer_sk) AS total_customers, SUM(ss.ss_quantity) AS total_sales_quantity, AVG(ss.ss_net_profit) AS avg_net_profit, SUM(sr.sr_return_quantity) AS total_return_quantity, AVG(sr.sr_net_loss) AS avg_net_loss, AVG(inv.inv_quantity_on_hand) AS avg_inventory_on_hand FROM customer c JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk LEFT JOIN inventory inv ON inv.inv_warehouse_sk = ca.ca_address_sk WHERE ca.ca_country = 'SERBIA' AND cd.cd_purchase_estimate BETWEEN 3500 AND 10000 AND inv.inv_warehouse_sk IN (1, 2) GROUP BY ca.ca_state, cd.cd_education_status ORDER BY ca.ca_state, cd.cd_education_status;
SELECT i.i_category AS item_category, i.i_brand AS item_brand, COUNT(DISTINCT ws.ws_order_number) AS total_orders, SUM(ws.ws_quantity) AS total_quantity_sold, SUM(ws.ws_net_paid_inc_ship_tax) AS total_sales, AVG(ws.ws_sales_price) AS average_sales_price, COUNT(DISTINCT i.i_item_sk) AS item_count FROM web_sales ws JOIN item i ON ws.ws_item_sk = i.i_item_sk JOIN web_site w ON ws.ws_web_site_sk = w.web_site_sk JOIN ship_mode sm ON ws.ws_ship_mode_sk = sm.sm_ship_mode_sk WHERE w.web_mkt_class = 'Right efforts must no' AND sm.sm_code = 'SEA' AND w.web_company_id = 1 GROUP BY i.i_category, i.i_brand ORDER BY total_sales DESC, item_category, item_brand;
SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COUNT(DISTINCT hd.hd_demo_sk) AS household_count, SUM(cs.cs_ext_sales_price) AS total_sales_amount, AVG(cs.cs_sales_price) AS average_sales_price, COUNT(DISTINCT cs.cs_order_number) AS total_orders FROM catalog_sales cs JOIN household_demographics hd ON cs.cs_bill_hdemo_sk = hd.hd_demo_sk JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk JOIN time_dim t ON cs.cs_sold_time_sk = t.t_time_sk JOIN warehouse w ON cs.cs_warehouse_sk = w.w_warehouse_sk WHERE t.t_shift = 'Morning' AND ib.ib_upper_bound <= 190000 AND w.w_gmt_offset = -5.00 AND w.w_street_name IN ('Ash Laurel', '6th', 'Wilson Elm', 'View First') GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound ORDER BY ib.ib_income_band_sk;
SELECT cc.cc_name, cc.cc_city, cc.cc_state, cc.cc_tax_percentage, AVG(wr.wr_return_amt_inc_tax) AS avg_return_amt_inc_tax, SUM(wr.wr_return_amt) AS total_return_amt, SUM(wr.wr_return_tax) AS total_return_tax, COUNT(DISTINCT wr.wr_returning_customer_sk) AS distinct_returning_customers FROM web_returns wr JOIN customer c ON wr.wr_returning_customer_sk = c.c_customer_sk JOIN call_center cc ON cc.cc_city = c.c_login JOIN catalog_page cp ON wr.wr_web_page_sk = cp.cp_catalog_page_sk WHERE cp.cp_start_date_sk BETWEEN 2451088 AND 2451510 AND wr.wr_return_amt > 0 AND cc.cc_tax_percentage IS NOT NULL GROUP BY cc.cc_name, cc.cc_city, cc.cc_state, cc.cc_tax_percentage ORDER BY total_return_amt DESC, avg_return_amt_inc_tax DESC;
SELECT c.c_customer_id, sm.sm_type as shipping_type, count(cs_order_number) as total_orders, sum(cs_quantity) as total_quantity, avg(cs_net_paid) as average_net_paid, sum(cs_net_profit) as total_net_profit, date_part('year', d.d_date) as sale_year, d.d_quarter_name as sale_quarter, ib.ib_lower_bound as income_band_lower_bound, ib.ib_upper_bound as income_band_upper_bound FROM catalog_sales cs JOIN date_dim d ON cs.cs_sold_date_sk = d.d_date_sk JOIN customer c ON cs.cs_bill_customer_sk = c.c_customer_sk JOIN ship_mode sm ON cs.cs_ship_mode_sk = sm.sm_ship_mode_sk JOIN income_band ib ON c.c_current_hdemo_sk = ib.ib_income_band_sk WHERE d.d_year = 2023 AND sm.sm_code = 'SEA' AND ib.ib_lower_bound >= 30001 AND ib.ib_upper_bound <= 80001 GROUP BY c.c_customer_id, shipping_type, sale_year, sale_quarter, income_band_lower_bound, income_band_upper_bound ORDER BY total_net_profit DESC, total_orders DESC;
