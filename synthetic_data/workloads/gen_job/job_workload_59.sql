SELECT kt.kind, AVG(CAST(mi.info AS FLOAT)) AS average_rating, COUNT(DISTINCT cc.movie_id) AS unique_movies, COUNT(DISTINCT rt.id) AS different_roles FROM movie_info mi INNER JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id INNER JOIN kind_type kt ON mi.movie_id = kt.id INNER JOIN complete_cast cc ON mi.movie_id = cc.movie_id INNER JOIN comp_cast_type cct ON cc.status_id = cct.id INNER JOIN role_type rt ON cct.kind = rt.role WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS FLOAT) > 0 AND kt.kind IN ('tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT mi.movie_id) AS movies_with_keywords, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_cast_count, COUNT(DISTINCT pi.person_id) AS total_person_info_entries, AVG(CASE WHEN rt.id = 1 THEN 1.0 ELSE 0 END) AS avg_movies_with_main_cast FROM title t LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN comp_cast_type cct ON cc.subject_id = cct.id LEFT JOIN person_info pi ON t.id = pi.person_id LEFT JOIN role_type rt ON cc.status_id = rt.id WHERE t.kind_id IN (2, 7) AND (t.season_nr IS NULL OR t.season_nr IN (20, 3)) GROUP BY t.kind_id;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT ml.movie_id) AS total_movie_links, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS count_of_series, COUNT(DISTINCT t.id) FILTER (WHERE t.title = 'It Came from the Nightosphere' OR t.title = 'Wes Craven Presents Don''t Look Down') AS specific_titles_count FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN comp_cast_type ct ON mc.company_type_id = ct.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE ct.id IN (2, 3) AND mc.company_type_id = 1 AND (ml.link_type_id IN (12, 1, 13, 15) OR ml.link_type_id IS NULL) GROUP BY ct.kind
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, SUM(CASE WHEN mi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS interview_movie_count, SUM(CASE WHEN mi.note LIKE '%(Original version)%' THEN 1 ELSE 0 END) AS original_version_movie_count, COUNT(DISTINCT k.id) AS distinct_keywords_used, AVG(mi.id) AS average_movie_info_id FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE it.id IN (9, 31) AND k.keyword IN ('cobra', 'dinosaur-egg', 'startled', 'paranoia') GROUP BY it.info ORDER BY movie_count DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.series_years LIKE '%????' THEN 1 ELSE 0 END) AS ongoing_series_count, ct.kind AS company_type_kind, AVG(CAST(cn.country_code AS numeric)) AS average_country_code_numeric, ct.id AS company_type_id, MAX(t.season_nr) AS max_season_number FROM title t JOIN company_name cn ON t.id = cn.id JOIN company_type ct ON cn.id = ct.id JOIN complete_cast cc ON t.id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN aka_title at ON t.id = at.movie_id JOIN info_type it ON at.id = it.id WHERE t.season_nr IN (6, 15, 8, 17) AND t.series_years IN ('1963-1969', '2003-2006', '1997-1998', '1974-????', '1956-????', '1993-1994') AND it.id IN (20, 107, 32, 88) AND it.info IN ('death notes', 'votes', 'LD subtitles', 'LD dynamic range', 'LD close captions-teletext-ld-g', 'adaption') AND cct.id = 1 AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND at.id = 33786 AND at.production_year IN (2002, 1976, 1959) GROUP BY ct.kind, ct.id ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_roles_per_movie, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT k.id) AS total_keywords FROM cast_info ci JOIN keyword k ON k.keyword = 'christ-the-redeemer-rio-de-janeiro' JOIN link_type lt ON lt.id = ci.role_id WHERE lt.link IN ('edited into', 'features', 'follows', 'similar to', 'edited from') GROUP BY ci.movie_id;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS number_of_movies_produced, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_movie_count, SUM(CASE WHEN k.keyword = 'comedy' THEN 1 ELSE 0 END) AS comedy_movie_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_keyword mk ON mc.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.company_type_id = 1 AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND cn.country_code = 'US' GROUP BY cn.name ORDER BY average_movie_rating DESC, number_of_movies_produced DESC;
SELECT AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT aka.id) AS total_alternate_titles, COUNT(DISTINCT pi.person_id) AS total_persons_involved, SUM(CASE WHEN ct.kind = 'Distributor' THEN 1 ELSE 0 END) AS total_distributors, MAX(mi_idx.info) AS max_rating_info, MIN(mi_idx.info) AS min_rating_info FROM aka_title AS aka JOIN movie_info_idx AS mi_idx ON aka.movie_id = mi_idx.movie_id JOIN person_info AS pi ON pi.info_type_id = mi_idx.info_type_id JOIN company_type AS ct ON ct.id = mi_idx.info_type_id WHERE aka.production_year BETWEEN 1990 AND 2020 AND mi_idx.note IS NOT NULL AND aka.md5sum IN ('8173fbc966e75848163d8bf3766b4497', 'b17609e6b3c789ed4cc36812549fe2b4', 'df5fc0502294c32330a516626ef75c18') GROUP BY mi_idx.info_type_id HAVING COUNT(DISTINCT aka.movie_id) > 10 ORDER BY average_production_year DESC, total_alternate_titles;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN t.kind_id = '2' THEN 1 ELSE 0 END) AS number_of_kind_id_2, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved, MAX(t.episode_nr) AS highest_episode_number FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN person_info AS pi ON pi.person_id = mc.company_id WHERE mc.note LIKE '%(TV)%' AND t.production_year BETWEEN 1990 AND 2000 GROUP BY t.production_year ORDER BY t.production_year;
SELECT rt.ROLE as role_type, COUNT(DISTINCT ci.person_id) as num_people, AVG(ci.nr_order) as average_order, SUM(CASE WHEN lt.link = 'referenced in' THEN 1 ELSE 0 END) as num_referenced_in, COUNT(DISTINCT cc.subject_id) as num_unique_subjects FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id LEFT JOIN link_type lt ON lt.id = cc.status_id WHERE rt.ROLE IN ('actress', 'writer') AND (lt.link = 'referenced in' OR lt.link = 'edited from') GROUP BY rt.ROLE ORDER BY num_people DESC;
SELECT kt.kind AS movie_kind, avg(title.production_year) AS average_production_year, count(DISTINCT title.id) AS number_of_titles, count(DISTINCT cast_info.person_id) AS number_of_participants, count(DISTINCT movie_keyword.keyword_id) AS number_of_unique_keywords, sum(case when role_type.role = 'actor' then 1 else 0 end) AS number_of_actors, sum(case when role_type.role = 'actress' then 1 else 0 end) AS number_of_actresses FROM title JOIN kind_type AS kt ON title.kind_id = kt.id LEFT JOIN cast_info ON title.id = cast_info.movie_id LEFT JOIN role_type ON cast_info.role_id = role_type.id LEFT JOIN movie_keyword ON title.id = movie_keyword.movie_id WHERE kt.kind IN ('video movie', 'video game') AND title.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind;
SELECT it.info AS info_category, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mn.movie_id) AS total_movies, AVG(CAST(pi.info AS INTEGER)) FILTER (WHERE it.info = 'runtimes') AS average_runtime, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'remade as') AS total_remake_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'features') AS total_feature_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'spoofed in') AS total_spoof_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'edited from') AS total_edit_links, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = 103) AS total_LD_language_entries FROM company_name AS cn JOIN movie_link AS mn ON cn.id = mn.movie_id JOIN link_type AS lt ON mn.link_type_id = lt.id JOIN person_info AS pi ON cn.imdb_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE cn.country_code = 'US' AND it.info IN ('portrayed in', 'runtimes', 'release dates', 'alternate versions', 'LD quality of source') GROUP BY it.info;
SELECT AVG(COALESCE(NULLIF(pi.info::NUMERIC, 0), 0)) AS avg_person_info_numeric, SUM(CASE WHEN mk.keyword_id IN (2717, 2798) THEN 1 ELSE 0 END) AS sum_movie_keyword_special, COUNT(DISTINCT mc.movie_id) AS count_distinct_movies_with_companies, COUNT(DISTINCT an.person_id) AS count_distinct_persons_with_aka, COUNT(DISTINCT ml.linked_movie_id) AS count_linked_movies FROM person_info pi LEFT JOIN aka_name an ON pi.person_id = an.person_id LEFT JOIN movie_keyword mk ON mk.movie_id = an.person_id LEFT JOIN movie_companies mc ON mc.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mc.movie_id WHERE an.name IN ('Alouf, Bernard', 'Almedia-Pederalba, Karen', 'Chanclettes, The', 'Ali, Muhammed', 'Verbrugge, Willy') AND pi.id IN ('3188', '489', '4904') AND mk.id IN ('4094', '2901', '4468') AND ml.id IN ('608', '4874', '3573');
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(ml.movie_id) AS average_movie_id, SUM(ml.linked_movie_id) AS total_linked_movie_id, (SELECT COUNT(*) FROM movie_companies WHERE company_type_id = 1) AS total_production_companies, (SELECT COUNT(DISTINCT person_id) FROM aka_name WHERE surname_pcode IN ('R3', 'D261')) AS distinct_actors_with_surname_codes FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id WHERE ml.link_type_id IN (10, 17, 8, 4) AND ml.linked_movie_id IN (18308, 2451963, 244970, 615863, 1221214, 2112428) AND EXISTS (SELECT 1 FROM movie_companies WHERE movie_id = ml.movie_id AND company_type_id = 1) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.name) AS distinct_company_names, COUNT(DISTINCT cn.country_code) AS distinct_country_codes, AVG(cc.movie_id) AS average_movie_id, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producers, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS total_editors, COUNT(DISTINCT cc.movie_id) AS distinct_movies_with_complete_cast, MAX(cc.status_id) AS max_status_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN complete_cast cc ON cc.movie_id = cn.imdb_id JOIN role_type rt ON rt.id = cc.subject_id WHERE cn.country_code != 'US' AND rt.role IN ('guest', 'actress', 'editor', 'producer') GROUP BY ct.kind ORDER BY total_producers DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_sequels, MAX(pi.info) AS latest_actor_information FROM char_name cn JOIN cast_info ci ON cn.id = ci.person_role_id JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE cn.surname_pcode IN ('A', 'T61', 'E153', 'A13', 'C2', 'B6353') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') GROUP BY cn.name;
SELECT a_t.title AS alternate_title, COUNT(c_i.id) AS total_cast_members, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN a_t.production_year > 2000 THEN 1 ELSE 0 END) AS post_2000_titles_count FROM aka_title AS a_t JOIN cast_info AS c_i ON a_t.movie_id = c_i.movie_id JOIN movie_info_idx AS mi_idx ON a_t.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = 100 AND a_t.movie_id IN ('8428', '19659') GROUP BY a_t.title;
SELECT cct.kind AS cast_type, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(mk.id) AS keyword_count, AVG(ct.id) AS average_company_type_id FROM comp_cast_type cct JOIN movie_keyword mk ON cct.id = mk.movie_id JOIN company_type ct ON mk.keyword_id = ct.id GROUP BY cct.kind HAVING COUNT(DISTINCT mk.movie_id) > 5 ORDER BY movie_count DESC, keyword_count DESC;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT a.movie_id) AS number_of_movies, SUM(CASE WHEN cct.kind = 'actor' THEN 1 ELSE 0 END) AS total_actors, MAX(mic.info) AS max_movie_info FROM aka_title AS a INNER JOIN complete_cast AS cc ON a.movie_id = cc.movie_id INNER JOIN comp_cast_type AS cct ON cc.subject_id = cct.id INNER JOIN movie_companies AS mc ON a.movie_id = mc.movie_id INNER JOIN movie_info_idx AS mic ON a.movie_id = mic.movie_id WHERE a.production_year > 2000 AND mc.company_id IN (910, 1073) AND mic.info_type_id IN (100, 99) AND (a.season_nr IS NULL OR a.season_nr = 27) AND a.kind_id = 1 GROUP BY a.kind_id HAVING COUNT(DISTINCT a.movie_id) > 10;
SELECT rt.ROLE as role_type, COUNT(DISTINCT t.id) as total_titles, COALESCE(SUM(t.episode_nr), 0) as total_episodes, ROUND(AVG(t.production_year), 2) as average_production_year FROM title t JOIN role_type rt ON t.kind_id = rt.id GROUP BY rt.ROLE ORDER BY total_titles DESC;
SELECT rt.role, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, COUNT(DISTINCT pi.person_id) AS number_of_people, COUNT(DISTINCT cn.id) AS number_of_char_names, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM role_type rt JOIN name n ON n.id = CAST(rt.id AS INTEGER) LEFT JOIN char_name cn ON cn.md5sum = n.md5sum LEFT JOIN person_info pi ON pi.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = pi.person_id WHERE rt.role IN ('director', 'producer', 'composer') AND pi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('trivia', 'quotes', 'birth notes')) AND (pi.note IS NULL OR pi.note <> 'Jacqeline Buono') GROUP BY rt.role;
SELECT AVG(ak.title_count) AS average_titles_per_movie, SUM(mc.company_count) AS total_companies_involved, COUNT(DISTINCT n.id) AS unique_actors_count FROM (SELECT movie_id, COUNT(*) AS title_count FROM aka_title GROUP BY movie_id) ak JOIN aka_title at ON ak.movie_id = at.movie_id JOIN (SELECT movie_id, COUNT(*) AS company_count FROM movie_companies GROUP BY movie_id) mc ON at.movie_id = mc.movie_id JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN name n ON cc.movie_id = n.id JOIN movie_companies mcom ON mcom.movie_id = ak.movie_id JOIN company_type ct ON mcom.company_type_id = ct.id JOIN link_type lt ON lt.id = 15 WHERE cct.kind = 'actors' AND ct.kind LIKE '%production%' AND lt.link = 'features' AND at.production_year BETWEEN 2000 AND 2010 GROUP BY ak.movie_id;
