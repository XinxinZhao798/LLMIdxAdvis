SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS total_movies, AVG(ak.production_year) AS average_production_year, SUM(CASE WHEN ak.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_us_titles, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT n.id) AS number_of_contributors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS ak ON ml.movie_id = ak.movie_id JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id JOIN name AS n ON ak.id = n.id WHERE ak.title IS NOT NULL AND n.gender IN ('m', 'f') AND lt.id IN (3, 6) GROUP BY lt.LINK ORDER BY total_movies DESC;
SELECT n.gender, COUNT(DISTINCT n.id) AS total_people, AVG(ci.nr_order) AS average_credit_order FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id WHERE n.gender IN ('M', 'F') AND ci.note LIKE '%(2000)%' GROUP BY n.gender;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT n.id) AS number_of_cast_members, COUNT(DISTINCT cc.subject_id) AS number_of_cast_types, AVG(cc.status_id) AS average_status_id FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id WHERE cc.status_id = 4 AND t.production_year > 1990 GROUP BY t.kind_id ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT ct.kind AS cast_type, AVG(movcomp_notes.note_length) AS average_note_length, COUNT(DISTINCT movcomp.movie_id) AS number_of_movies, COUNT(DISTINCT comp.name) AS number_of_companies, SUM(CASE WHEN movcomp.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_producers, MAX(comp_cast.subject_id) AS max_subject_id_for_cast_type FROM complete_cast AS comp_cast JOIN comp_cast_type AS ct ON comp_cast.subject_id = ct.id JOIN movie_companies AS movcomp ON movcomp.movie_id = comp_cast.movie_id JOIN company_name AS comp ON movcomp.company_id = comp.id LEFT JOIN (SELECT movie_id, LENGTH(note) AS note_length FROM movie_companies) AS movcomp_notes ON movcomp.movie_id = movcomp_notes.movie_id WHERE comp_cast.id IN (4264, 2513, 575, 1032) AND comp_cast.subject_id = 1 AND ct.id = 4 GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT cn.id) AS number_of_char_names, AVG(mi_idx.info::numeric) AS average_movie_info, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS indexed_aka_names_count FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = kt.id LEFT JOIN char_name AS cn ON cn.imdb_id = mi_idx.movie_id LEFT JOIN aka_name AS an ON an.person_id = mi_idx.movie_id WHERE kt.id IN (SELECT DISTINCT info_type_id FROM movie_info_idx) AND cn.id IN ('60670', '10694') AND mi_idx.note IS NOT NULL GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(cast_info.nr_order) AS average_cast_order, SUM(case when cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON kt.kind IN ('episode', 'video game', 'video movie', 'tv movie', 'tv mini series', 'tv series') JOIN movie_keyword mk ON mk.movie_id = mc.movie_id JOIN cast_info ON cast_info.movie_id = mc.movie_id WHERE mk.movie_id IN ('12147', '11128', '12146') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_length, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors, MAX(n.name) AS most_recent_actor_name FROM movie_companies AS mc JOIN kind_type AS kt ON mc.movie_id = kt.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id WHERE mc.note LIKE '%(TV)%' AND kt.kind = 'movie' AND n.name_pcode_cf IN ('A2531', 'A4136', 'A21', 'A6123', 'A2', 'A5656') AND n.gender IN ('M', 'F') GROUP BY kt.kind;
SELECT t.production_year, ct.kind AS company_type, COUNT(t.id) AS movie_count FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id WHERE cn.country_code IN ('[gb]', '[dk]') AND ct.kind IN ('Distribution', 'Production') GROUP BY t.production_year, ct.kind ORDER BY t.production_year ASC, ct.kind;
SELECT mc.company_id, COUNT(mc.movie_id) AS num_movies, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS num_completed_cast, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year FROM movie_companies AS mc JOIN title AS t ON mc.movie_id = t.id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id WHERE t.md5sum = '12d48ee4d0d61ef22a7ce0c5a1d93caf' GROUP BY mc.company_id ORDER BY num_movies DESC;
SELECT kt.kind, AVG(CAST(mi.info AS FLOAT)) AS average_rating, COUNT(DISTINCT cc.movie_id) AS unique_movies, COUNT(DISTINCT rt.id) AS different_roles FROM movie_info mi INNER JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id INNER JOIN kind_type kt ON mi.movie_id = kt.id INNER JOIN complete_cast cc ON mi.movie_id = cc.movie_id INNER JOIN comp_cast_type cct ON cc.status_id = cct.id INNER JOIN role_type rt ON cct.kind = rt.role WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS FLOAT) > 0 AND kt.kind IN ('tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT t.title AS movie_title, COUNT(DISTINCT mi.id) AS info_count, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(mc.company_id) FILTER (WHERE mc.company_type_id = 1) AS sum_production_companies, COUNT(DISTINCT cc.id) AS cast_count, MAX(t.production_year) AS latest_production_year FROM title AS t JOIN movie_info AS mi ON t.id = mi.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN info_type AS it ON mi.info_type_id = it.id WHERE t.production_year > 1990 AND (mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating' OR info = 'countries')) AND mc.company_type_id = 1 AND (mc.note NOT LIKE '%(USA)%' OR mc.note IS NULL) AND (cc.status_id = 1 OR cc.status_id = 2) GROUP BY t.title ORDER BY average_rating DESC, sum_production_companies DESC LIMIT 10;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT AVG(ak.title_count) AS average_title_count, MAX(ak.max_production_year) AS latest_production_year, MIN(ak.min_production_year) AS earliest_production_year, SUM(ak.title_count) AS total_titles, COUNT(DISTINCT ki.id) AS total_unique_keywords, COUNT(DISTINCT pi.person_id) AS total_unique_persons FROM (SELECT at.movie_id, COUNT(at.id) AS title_count, MAX(at.production_year) AS max_production_year, MIN(at.production_year) AS min_production_year FROM aka_title at GROUP BY at.movie_id ) ak LEFT JOIN movie_keyword mk ON mk.movie_id = ak.movie_id LEFT JOIN keyword ki ON ki.id = mk.keyword_id AND ki.keyword IN ('vampire-hunter', 'training', 'newspaper-editor', 'multiple-views', 'historical-fiction', 'forbidden-love') LEFT JOIN movie_info_idx mi ON mi.movie_id = ak.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id GROUP BY ki.keyword;
