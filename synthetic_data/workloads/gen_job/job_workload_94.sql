SELECT AVG(mc.company_id) AS average_company_id, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, SUM(CASE WHEN mi.info = 'Tatar' THEN 1 ELSE 0 END) AS tatar_movies_count, SUM(CASE WHEN mi.info = 'Hebrew' THEN 1 ELSE 0 END) AS hebrew_movies_count, SUM(CASE WHEN mi.info = 'Inuktitut' THEN 1 ELSE 0 END) AS inuktitut_movies_count, COUNT(DISTINCT an.person_id) AS unique_actors_count FROM movie_companies AS mc JOIN movie_link AS ml ON mc.movie_id = ml.movie_id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id LEFT JOIN aka_name AS an ON an.surname_pcode = mi.info WHERE an.name_pcode_cf IN ('V3415', 'A5163', 'B6525') AND mi.info IN ('Tatar', 'Hebrew', 'Inuktitut') GROUP BY mc.company_type_id;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(ci.person_id) AS num_performances, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_keyword_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN aka_title at ON ci.movie_id = at.movie_id LEFT JOIN (SELECT mk.movie_id, k.keyword FROM movie_keyword mk JOIN keyword k ON mk.keyword_id = k.id) AS k ON ci.movie_id = k.movie_id WHERE rt.id IN ('12', '7', '9', '3') AND ci.person_id IN ('1145', '1200', '1289') AND at.movie_id IN ('19436', '18749', '11251', '18754', '17100') GROUP BY rt.ROLE HAVING COUNT(DISTINCT ci.movie_id) > 1 ORDER BY num_movies DESC, num_performances DESC;
SELECT lt.LINK, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'budget') AS total_budget FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS it ON mi.info_type_id = it.id WHERE ml.movie_id IN ('11225', '16185', '8060') OR ml.linked_movie_id IN ('438568', '10238', '2451792', '1949408') AND mi.note IN ('(English subtitles)', '(Original Version)', '(a few lines)', '(Original version)') GROUP BY lt.LINK;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_role_order, SUM(CASE WHEN cn.surname_pcode = 'G3143' THEN 1 ELSE 0 END) AS count_surname_G3143_roles, it.info AS information_type, COUNT(DISTINCT ci.person_id) AS number_of_persons FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN char_name cn ON ci.person_role_id = cn.id JOIN info_type it ON cn.imdb_id = it.id WHERE ci.person_id IN (1663, 1868, 1050, 1120) AND ci.person_role_id IN (538, 1342, 1444, 1143, 1039) AND rt.id IN (5, 3, 1, 11) GROUP BY rt.ROLE, it.info ORDER BY number_of_movies DESC, average_role_order;
SELECT rt.ROLE as role, COUNT(DISTINCT ci.person_id) as number_of_people, AVG(ci.nr_order) as average_order, SUM(case when ct.kind = 'distributors' then 1 else 0 end) as number_of_distributors, COUNT(DISTINCT ml.movie_id) as linked_movies_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN company_type ct ON ci.person_role_id = ct.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE ci.nr_order IN (14, 15) AND rt.id IN (7, 1) GROUP BY rt.ROLE;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN it.info = 'budget' THEN CAST(mi.info AS MONEY) ELSE 0::MONEY END) AS total_budget, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM movie_info mi JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN aka_title at ON ci.movie_id = at.movie_id JOIN kind_type kt ON kt.id = at.kind_id JOIN info_type it ON it.id = mi.info_type_id WHERE it.info IN ('budget', 'box office gross') AND kt.kind IN ('actor', 'actress') AND mc.company_type_id IN (1, 2) GROUP BY kt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cc.id) AS total_complete_casts, COUNT(DISTINCT ml.id) AS total_movie_links, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS subject_1_cast_count FROM company_type ct LEFT JOIN complete_cast cc ON cc.subject_id = ct.id LEFT JOIN movie_link ml ON ml.movie_id = cc.movie_id GROUP BY ct.kind ORDER BY total_complete_casts DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(pi.info_type_id) AS average_info_type_id, MIN(k.keyword) AS minimum_keyword, SUM(ml.movie_id) AS sum_movie_ids, MAX(ml.linked_movie_id) AS max_linked_movie_id FROM movie_link AS ml JOIN link_type AS lt ON lt.id = ml.link_type_id JOIN keyword AS k ON k.id = ml.id JOIN person_info AS pi ON pi.id = ml.id WHERE k.keyword LIKE 'physician%' AND lt.LINK IN ('similar to', 'spin off') AND pi.note ILIKE '%Director%' GROUP BY lt.LINK;
SELECT kt.kind AS Movie_Type, AVG(t.production_year) AS Average_Production_Year, COUNT(DISTINCT t.id) AS Total_Movies, COUNT(DISTINCT cc.id) AS Total_Complete_Casts, SUM(CASE WHEN t.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS Total_Seasons FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IN ('movie', 'tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY Total_Movies DESC;
SELECT kt.kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mi_idx.info::NUMERIC) AS average_info, SUM(mi_idx.info::NUMERIC) AS total_info, COUNT(DISTINCT cn.id) AS total_companies, STRING_AGG(DISTINCT cn.name, ', ') AS company_names FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id JOIN kind_type kt ON mi_idx.movie_id = kt.id JOIN company_name cn ON cn.imdb_id = mi_idx.movie_id WHERE kt.kind IN ('video movie', 'tv mini series', 'tv series', 'tv movie') AND cn.country_code = 'US' AND it.info = 'budget' GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, rt.ROLE AS role, COUNT(ci.movie_id) AS role_count, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS with_role_info, COUNT(DISTINCT ci.person_id) AS distinct_actors, COUNT(DISTINCT mc.company_id) AS distinct_companies, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM cast_info ci INNER JOIN kind_type kt ON ci.movie_id = kt.id INNER JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE kt.kind IN ('video game', 'video movie', 'tv movie', 'episode', 'movie', 'tv mini series') AND rt.role IN ('writer', 'actor', 'miscellaneous crew', 'production designer', 'editor') GROUP BY kt.kind, rt.ROLE ORDER BY movie_type, role_count DESC;
SELECT t.title AS movie_title, t.production_year AS movie_year, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_related_movies, SUM(CASE WHEN ci.note LIKE '%(plastic surgeon)%' THEN 1 ELSE 0 END) AS plastic_surgeon_roles FROM title AS t LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year > 1990 AND (ml.linked_movie_id IN ('6083', '1392360', '1432949', '672621', '2395841', '604373') OR ml.linked_movie_id IS NULL) AND (ml.link_type_id = '11' OR ml.link_type_id IS NULL) AND (ci.person_role_id IS NOT NULL) GROUP BY t.title, t.production_year HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY total_cast_members DESC, movie_year DESC;
