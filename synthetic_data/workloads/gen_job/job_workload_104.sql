SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(ml.movie_id) AS average_movie_id, SUM(CASE WHEN pi.info_type_id = 7 THEN 1 ELSE 0 END) AS count_info_with_type_7, MAX(pi.note) AS latest_note FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS avg_production_year, COUNT(DISTINCT aka.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN aka.kind_id = 4 THEN 1 ELSE 0 END) AS total_tv_series FROM aka_title aka JOIN kind_type kt ON aka.kind_id = kt.id LEFT JOIN movie_companies mc ON aka.movie_id = mc.movie_id GROUP BY kt.kind HAVING COUNT(DISTINCT aka.movie_id) > 100 ORDER BY avg_production_year DESC, total_movies;
SELECT it.info AS information_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN k.phonetic_code = 'H5632' THEN 1 ELSE 0 END) AS count_specific_phonetic_code, COUNT(DISTINCT k.id) AS unique_keywords_used FROM aka_title at JOIN info_type it ON at.kind_id = it.id LEFT JOIN keyword k ON at.movie_id = k.id WHERE at.kind_id IN (7, 3, 4) AND it.info IN ('trade mark', 'production process protocol', 'languages', 'LD catalog number', 'mini biography') AND at.production_year IS NOT NULL GROUP BY it.info ORDER BY total_movies DESC, average_production_year DESC;
SELECT AVG(title.production_year) AS average_production_year, SUM(CASE WHEN aka_title.production_year >= 2000 THEN 1 ELSE 0 END) AS titles_since_2000, COUNT(DISTINCT aka_name.person_id) AS unique_person_count, info_type.info AS info_type_description, COUNT(aka_title.id) AS aka_title_count FROM title LEFT JOIN aka_title ON title.id = aka_title.movie_id LEFT JOIN aka_name ON aka_name.person_id = title.id INNER JOIN info_type ON info_type.id = aka_title.kind_id WHERE title.production_year IS NOT NULL AND aka_title.md5sum IN ('d83332e937d61be7b06ae03d69ea3b48', 'f94e5c713cf9f2c4161c7ab6131590db') AND aka_name.name_pcode_nf IN ('J5264', 'M5262') AND info_type.info IN ('LD color rendition', 'copyright holder', 'opening weekend', 'LD video quality', 'plot') GROUP BY info_type.info ORDER BY average_production_year DESC;
SELECT ct.kind AS cast_type, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_genre_info, COUNT(DISTINCT k.id) AS unique_keyword_count, MAX(mi.movie_id) AS max_movie_id FROM comp_cast_type ct JOIN complete_cast cc ON ct.id = cc.subject_id JOIN movie_companies mc ON cc.movie_id = mc.movie_id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN keyword k ON k.id = ANY(ARRAY[6997, 6526]) WHERE mc.company_type_id BETWEEN 1 AND 5 AND mi.info_type_id IN (1, 2, 3, 4) AND mi.note IS NOT NULL AND cc.status_id IN (SELECT id FROM link_type WHERE id IN (4, 8, 12)) GROUP BY ct.kind ORDER BY unique_keyword_count DESC, average_company_id;
SELECT cn.name AS company_name, kt.kind AS movie_kind, (t.production_year / 10) * 10 AS decade, COUNT(t.id) AS movie_count, AVG(t.imdb_id) AS average_imdb_id FROM company_name cn JOIN title t ON cn.imdb_id = t.imdb_id JOIN kind_type kt ON t.kind_id = kt.id WHERE cn.country_code = 'XX' AND t.production_year IS NOT NULL GROUP BY company_name, movie_kind, decade ORDER BY company_name, movie_kind, decade;
SELECT lt.LINK, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(mk.keyword_id) AS avg_keyword_id, SUM(CASE WHEN mi.movie_id = 924359 THEN 1 ELSE 0 END) AS count_specific_movie_info, COUNT(DISTINCT an.person_id) AS num_person_aliases FROM link_type lt LEFT JOIN movie_keyword mk ON lt.id = mk.id LEFT JOIN movie_info mi ON mk.movie_id = mi.movie_id LEFT JOIN aka_name an ON an.person_id = mi.movie_id WHERE lt.LINK IN ('featured in', 'version of', 'features', 'edited into') AND mk.id IN (1943, 3232, 4574, 1304) GROUP BY lt.LINK;
SELECT cct.kind AS cast_type, ct.kind AS company_kind, COUNT(DISTINCT k.id) AS keyword_count, AVG(LENGTH(k.keyword)) AS average_keyword_length, COUNT(DISTINCT lt.id) AS link_type_count FROM comp_cast_type cct JOIN company_type ct ON cct.id = ct.id LEFT JOIN keyword k ON SUBSTRING(k.phonetic_code, 1, 1) = 'A' LEFT JOIN link_type lt ON LENGTH(lt.link) > 10 GROUP BY cct.kind, ct.kind ORDER BY keyword_count DESC, average_keyword_length DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::integer) AS average_rating, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS number_of_us_companies_involved, COUNT(DISTINCT ci.person_id) AS number_of_cast_members FROM movie_companies AS mc JOIN kind_type AS kt ON kt.id = mc.company_type_id JOIN cast_info AS ci ON ci.movie_id = mc.movie_id JOIN company_name AS cn ON cn.id = mc.company_id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = mc.movie_id AND mi_idx.info_type_id = 101 WHERE mc.movie_id IN (19315, 15715, 19236, 19775, 18865, 11243) AND mc.note LIKE '%(TV)%' AND kt.kind IN ('movie', 'episode') AND cn.name_pcode_sf IN ('B5261', 'H1535', 'T5642', 'W5214', 'C3163', 'K2145') GROUP BY kt.kind;
SELECT rt.ROLE, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS DOUBLE PRECISION)) AS average_rating, SUM(CASE WHEN mi.note IN ('(some dialogue)', '(only a few lines)', '(Original Version)', '(a few words)', '(a few lines)', '(English version)') THEN 1 ELSE 0 END) AS dialogue_mentions_count FROM movie_info_idx AS mi_idx JOIN movie_info AS mi ON mi_idx.movie_id = mi.movie_id JOIN person_info AS pi ON mi.movie_id = pi.info_type_id JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE mi_idx.info_type_id = 3 AND mi.info_type_id IN (24, 36) AND rt.id IN ('8', '10', '3') AND rt.role IN ('costume designer', 'miscellaneous crew', 'writer', 'composer') GROUP BY rt.ROLE ORDER BY average_rating DESC, number_of_movies DESC;
SELECT cn.name AS company_name, k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT an.person_id) AS number_of_aka_names, AVG(cn.imdb_id) AS average_imdb_id_for_company FROM movie_keyword mk INNER JOIN keyword k ON mk.keyword_id = k.id INNER JOIN company_name cn ON cn.country_code = 'us' INNER JOIN aka_name an ON an.person_id != 0 WHERE mk.id IN (4493, 3974, 1711, 3754) AND mk.movie_id IN (18717, 12274, 9073) AND k.id IN (1749, 8745, 6590, 5243, 3691) GROUP BY cn.name, k.keyword ORDER BY number_of_movies DESC, number_of_aka_names DESC;
SELECT kt.kind AS movie_type, COUNT(t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) FILTER (WHERE ct.kind = 'special effects companies') AS special_effects_companies_involved, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN aka_name AS an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND kt.kind IN ('tv movie', 'video movie', 'tv mini series', 'movie') GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, SUM(p.info_type_id) AS total_info_types, COUNT(DISTINCT ch.id) AS total_characters, MAX(ci.nr_order) AS max_cast_order FROM aka_title AS a JOIN cast_info AS ci ON a.movie_id = ci.movie_id JOIN char_name AS ch ON ci.person_id = ch.id JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id JOIN person_info AS p ON ci.person_id = p.person_id WHERE a.production_year > 1899 GROUP BY a.movie_id ORDER BY total_movies DESC, average_production_year;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS films_after_2000, MAX(t.production_year) AS latest_production_year FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN cast_info ci ON ci.movie_id = cn.id JOIN title t ON ci.movie_id = t.id GROUP BY ct.kind ORDER BY number_of_companies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS num_of_people, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS num_complete_verified, cn.country_code, COUNT(DISTINCT mk.keyword_id) AS num_of_keywords, AVG(CASE WHEN mi.info SIMILAR TO '[0-9]+\.[0-9]' THEN CAST(mi.info AS FLOAT) ELSE NULL END) AS average_info_numeric FROM cast_info ci INNER JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN comp_cast_type cct ON ci.person_role_id = cct.id LEFT JOIN company_name cn ON ci.person_id = cn.imdb_id LEFT JOIN movie_keyword mk ON ci.movie_id = mk.movie_id LEFT JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id WHERE mi.movie_id::VARCHAR LIKE '%19410%' AND mi.info SIMILAR TO '(0|84|349|11\.7)%' AND mk.id IN (1932, 3564, 2558, 997, 3482, 1435) GROUP BY rt.ROLE, cn.country_code ORDER BY num_of_people DESC, average_order ASC;
SELECT ct.kind AS company_type, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN akat.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN akat.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT ml.link_type_id) AS distinct_link_types FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS akat ON mc.movie_id = akat.movie_id JOIN movie_keyword AS mk ON akat.movie_id = mk.movie_id JOIN movie_link AS ml ON akat.movie_id = ml.movie_id WHERE mc.note IS NOT NULL AND akat.production_year BETWEEN 2000 AND 2010 AND ml.id IN ('434', '4988', '3490', '3087', '1401', '4759') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT chn.id) AS number_of_characters, MAX(chn.name) AS max_character_name, MIN(chn.name) AS min_character_name FROM role_type AS rt JOIN char_name AS chn ON chn.name IN ('Un gangster', 'Clancey') JOIN movie_info AS mi ON mi.movie_id = chn.id GROUP BY rt.ROLE;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cast_count.cast_count) AS average_cast_per_movie, SUM(keyword_count.keyword_count) AS total_keywords FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN (SELECT movie_id, COUNT(*) AS cast_count FROM cast_info GROUP BY movie_id) AS cast_count ON mc.movie_id = cast_count.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS keyword_count ON mc.movie_id = keyword_count.movie_id GROUP BY cn.name ORDER BY total_movies_produced DESC, average_cast_per_movie DESC, total_keywords DESC;
SELECT AVG(CAST(pi.info AS numeric)) AS average_rating, COUNT(cc.id) AS total_cast_members, COUNT(DISTINCT at.id) AS total_alternate_titles, SUM(CASE WHEN at.title ILIKE '%love%' THEN 1 ELSE 0 END) AS titles_with_love FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN person_info pi ON cc.movie_id = pi.person_id WHERE at.movie_id IN (52294, 98509, 1635723, 1678623) AND pi.info_type_id = 101 GROUP BY at.movie_id;
SELECT COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mk_cnt.keyword_count) AS avg_keywords_per_movie, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS count_similar_to_links, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(NULLIF(regexp_replace(mi_idx.info, '\D', '', 'g'), '')::NUMERIC) AS average_info_numeric, SUM(CASE WHEN k.phonetic_code IN ('M342', 'N2165') THEN 1 ELSE 0 END) AS count_specific_phonetic_codes FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id JOIN movie_companies AS mc ON ml.movie_id = mc.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN keyword AS k ON mk.keyword_id = k.id JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS mk_cnt ON mk.movie_id = mk_cnt.movie_id WHERE mi_idx.info_type_id = '100' AND mi_idx.info SIMILAR TO '%[0-9]{6,}%' AND (ml.movie_id IN ('11122', '14650', '11447', '7786', '14516') OR ml.id IN ('3768', '4002', '4548', '963', '430', '4309')) GROUP BY lt.link;
SELECT k.keyword, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, AVG(sub_person_roles.roles_count) AS avg_roles_per_person, COUNT(DISTINCT an.id) AS unique_pseudonyms_count FROM keyword AS k LEFT JOIN movie_keyword AS mk ON k.id = mk.keyword_id LEFT JOIN movie_link AS ml ON mk.movie_id = ml.movie_id LEFT JOIN person_info AS pi ON pi.info_type_id = k.id LEFT JOIN (SELECT pi.person_id, COUNT(DISTINCT pi.info_type_id) AS roles_count FROM person_info AS pi INNER JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE rt.id IN (1, 8, 7, 5) GROUP BY pi.person_id ) AS sub_person_roles ON pi.person_id = sub_person_roles.person_id LEFT JOIN aka_name AS an ON pi.person_id = an.person_id WHERE k.keyword IN ('murder', 'mystery', 'thriller') AND pi.info_type_id IN (70, 2, 75, 36, 50) GROUP BY k.keyword;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CASE WHEN mi_idx.info_type_id = 100 THEN CAST(mi_idx.info AS FLOAT) END) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 101 THEN CAST(mi_idx.info AS INTEGER) END) AS total_budget, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved FROM movie_info_idx mi_idx JOIN company_type ct ON mi_idx.info_type_id = ct.id LEFT JOIN person_info pi ON mi_idx.movie_id = pi.person_id WHERE mi_idx.info_type_id IN (100, 101, 99) GROUP BY ct.kind;
SELECT t.production_year, kt.kind, AVG(LENGTH(t.title)) AS average_title_length, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IS NOT NULL GROUP BY t.production_year, kt.kind ORDER BY t.production_year DESC, kt.kind;
