SELECT kt.kind AS movie_genre, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS average_rating, MAX(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS highest_rating FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON kt.id = mi_idx.info_type_id WHERE mi_idx.info LIKE '%Genre%' GROUP BY kt.kind;
SELECT pi.person_id, COUNT(DISTINCT k.id) AS keyword_count, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT cn.id) AS unique_char_count FROM person_info pi JOIN info_type it ON pi.info_type_id = it.id JOIN keyword k ON it.id = k.id AND k.phonetic_code IN ('S5312', 'M3243', 'W16', 'C26', 'W3616') JOIN char_name cn ON pi.person_id = cn.id AND cn.name_pcode_nf IN ('R2631', 'N', 'D2362') AND cn.surname_pcode IN ('C64', 'C145', 'W43', 'V5365', 'P6536') GROUP BY pi.person_id ORDER BY keyword_count DESC, unique_char_count DESC;
SELECT c.name AS company_name, c.country_code, rt.ROLE, COUNT(DISTINCT t.id) AS number_of_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_genres_assigned, COUNT(DISTINCT mi.info) AS unique_movie_info_entries FROM company_name AS c JOIN title AS t ON c.imdb_id = t.imdb_id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN role_type AS rt ON rt.id = mi.info_type_id WHERE rt.ROLE IN ('composer', 'guest', 'production designer') AND t.production_year BETWEEN 2000 AND 2023 AND c.country_code = 'US' GROUP BY c.name, c.country_code, rt.ROLE ORDER BY number_of_titles DESC, average_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_lead_roles, COUNT(DISTINCT cn.id) AS number_of_unique_characters FROM cast_info ci JOIN aka_title at ON ci.movie_id = at.movie_id JOIN kind_type kt ON at.kind_id = kt.id JOIN char_name cn ON ci.person_role_id = cn.id WHERE at.production_year BETWEEN 1990 AND 2000 AND kt.kind = 'feature' GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_order_of_appearance, COUNT(DISTINCT pi.person_id) AS distinct_actors_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_lead_roles FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.person_role_id IN (1344, 1214) GROUP BY kt.kind ORDER BY movie_count DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.name) AS distinct_company_names, COUNT(DISTINCT cn.country_code) AS distinct_country_codes, AVG(cc.movie_id) AS average_movie_id, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producers, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS total_editors, COUNT(DISTINCT cc.movie_id) AS distinct_movies_with_complete_cast, MAX(cc.status_id) AS max_status_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN complete_cast cc ON cc.movie_id = cn.imdb_id JOIN role_type rt ON rt.id = cc.subject_id WHERE cn.country_code != 'US' AND rt.role IN ('guest', 'actress', 'editor', 'producer') GROUP BY ct.kind ORDER BY total_producers DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keyword_count, SUM(CASE WHEN an.name_pcode_cf LIKE 'A%' THEN 1 ELSE 0 END) AS names_starting_with_a, COUNT(DISTINCT an.person_id) AS total_actors_with_alternate_names FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN aka_name AS an ON an.person_id = t.id JOIN company_type AS ct ON ct.id = t.kind_id WHERE t.production_year > 2000 AND mk.keyword_id IN (4192, 3543, 917, 3554) AND an.name_pcode_cf IN ('K365', 'J262', 'C4625', 'A1526') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(mc.company_type_id) AS avg_company_type_id, COUNT(DISTINCT mc.company_id) AS num_companies_involved, link.link AS link_description, COUNT(link.id) AS num_links FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id INNER JOIN link_type AS link ON mc.company_type_id = link.id GROUP BY k.keyword, link.link ORDER BY num_movies DESC, num_companies_involved DESC;
SELECT ct.kind AS company_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mki.movie_id) AS total_movies, COUNT(DISTINCT kw.id) AS total_unique_keywords, SUM(CASE WHEN akat.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_dubbed_versions FROM aka_title akat JOIN movie_keyword mkw ON akat.movie_id = mkw.movie_id JOIN keyword kw ON mkw.keyword_id = kw.id JOIN movie_info_idx mki ON akat.movie_id = mki.movie_id JOIN company_type ct ON mki.info_type_id = ct.id WHERE akat.production_year BETWEEN 2000 AND 2020 GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT it.info AS information_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN k.phonetic_code = 'H5632' THEN 1 ELSE 0 END) AS count_specific_phonetic_code, COUNT(DISTINCT k.id) AS unique_keywords_used FROM aka_title at JOIN info_type it ON at.kind_id = it.id LEFT JOIN keyword k ON at.movie_id = k.id WHERE at.kind_id IN (7, 3, 4) AND it.info IN ('trade mark', 'production process protocol', 'languages', 'LD catalog number', 'mini biography') AND at.production_year IS NOT NULL GROUP BY it.info ORDER BY total_movies DESC, average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS total_unique_keywords, SUM(CASE WHEN mk.keyword_id = 1849 THEN 1 ELSE 0 END) AS keyword_1849_count, SUM(CASE WHEN mk.keyword_id = 830 THEN 1 ELSE 0 END) AS keyword_830_count, SUM(CASE WHEN mk.keyword_id = 3752 THEN 1 ELSE 0 END) AS keyword_3752_count, AVG(cc.status_id) AS average_status_id FROM complete_cast AS cc JOIN movie_keyword AS mk ON cc.movie_id = mk.movie_id JOIN kind_type AS kt ON cc.subject_id = kt.id WHERE kt.kind IN ('video movie', 'tv series', 'video game') GROUP BY kt.kind;
SELECT n.gender, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ci.movie_id) AS movies_participated, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN kt.kind = 'movie' THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN kt.kind = 'tv' THEN 1 ELSE 0 END) AS total_tv_shows, MAX(ci.nr_order) AS highest_cast_position, MIN(ci.nr_order) AS lowest_cast_position FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN kind_type kt ON mc.company_type_id = kt.id JOIN name n ON ci.person_id = n.id WHERE ci.note NOT LIKE '%archive footage%' AND n.gender = 'm' GROUP BY n.gender;
SELECT COUNT(DISTINCT ml.movie_id) AS NumberOfMovies, COUNT(DISTINCT ml.linked_movie_id) AS NumberOfLinkedMovies, AVG(n.imdb_id) AS AverageIMDbID, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS Status3Count, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS Status4Count FROM movie_link AS ml JOIN complete_cast AS cc ON cc.movie_id = ml.movie_id JOIN name AS n ON n.id = cc.subject_id WHERE cc.status_id IN (3, 4) GROUP BY cc.subject_id;
SELECT cn.country_code, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(ci.imdb_id) AS average_imdb_id, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_type_1_companies FROM movie_companies AS mc INNER JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN name AS ci ON cn.imdb_id = ci.imdb_id WHERE cn.country_code IN ('[dm]', '[mt]', '[ph]', '[gb]', '[kz]', '[cz]') AND mc.note IN ('(1967) (USA) (TV) (original airing)', '(2009-2010) (Switzerland) (TV) (SF1)', '(2006) (Germany) (DVD)') GROUP BY cn.country_code
SELECT rt.role, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS total_characters, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS movie_keyword_count, COUNT(DISTINCT pi.person_id) AS total_persons_with_info FROM role_type rt LEFT JOIN aka_title akat ON rt.id = akat.kind_id LEFT JOIN char_name cn ON cn.name = akat.title LEFT JOIN movie_keyword mk ON mk.movie_id = akat.movie_id LEFT JOIN person_info pi ON pi.info_type_id = rt.id WHERE akat.production_year > 2000 GROUP BY rt.role ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN mi.info = 'Brazilian Sign Language' THEN 1 ELSE 0 END) AS number_of_brazilian_sign_language_movies, SUM(CASE WHEN mi.info = 'Mandarin' THEN 1 ELSE 0 END) AS number_of_mandarin_movies, SUM(CASE WHEN mi.info = 'Finnish' THEN 1 ELSE 0 END) AS number_of_finnish_movies, SUM(CASE WHEN mi.info = 'Slovenian' THEN 1 ELSE 0 END) AS number_of_slovenian_movies, SUM(CASE WHEN mi.info = 'Tagalog' THEN 1 ELSE 0 END) AS number_of_tagalog_movies, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS number_of_german_movies FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN company_name cn ON mc.company_id = cn.id JOIN movie_info mi ON mc.movie_id = mi.movie_id AND mi.info_type_id = 4 JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, COUNT(DISTINCT mc.company_id) AS total_production_companies, AVG(COUNT(mi.id)) OVER (PARTITION BY mc.movie_id) AS average_info_per_movie FROM movie_companies mc INNER JOIN cast_info ci ON mc.movie_id = ci.movie_id AND ci.role_id = (SELECT id FROM comp_cast_type WHERE kind = 'actor') INNER JOIN movie_info mi ON mc.movie_id = mi.movie_id WHERE mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production companies') GROUP BY mc.movie_id;
SELECT cnt.kind AS company_type, AVG(mc_notes.note_length) AS average_note_length, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mc.movie_id) AS movies_involved, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cnt ON mc.company_type_id = cnt.id LEFT JOIN ( SELECT movie_id, company_id, LENGTH(note) as note_length FROM movie_companies WHERE note IS NOT NULL ) AS mc_notes ON mc.movie_id = mc_notes.movie_id AND mc.company_id = mc_notes.company_id LEFT JOIN ( SELECT name.id, name.gender FROM name WHERE name.gender IN ('F', 'M') ) AS n ON mc.company_id = n.id GROUP BY cnt.kind ORDER BY cnt.kind;
SELECT kt.kind AS movie_kind, MIN(at.title) AS alternative_title, AVG(CASE WHEN mi.info_type_id = it.id AND it.info = 'rating' THEN CAST(mi.info AS FLOAT) END) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN mc.company_type_id = ct.id AND ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(at.production_year) AS latest_production_year FROM kind_type AS kt LEFT JOIN aka_title AS at ON kt.id = at.kind_id LEFT JOIN movie_info AS mi ON at.movie_id = mi.movie_id LEFT JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_companies AS mc ON at.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id WHERE at.production_year >= 1990 AND (at.title = 'The 11th Hour' OR at.title = 'Anna and Wulin' OR at.title = 'Arabian Tale') AND (at.imdb_index = 'I' OR at.imdb_index = 'III' OR at.imdb_index = 'IV') GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_produced_after_2000 FROM aka_name an INNER JOIN name n ON an.person_id = n.id INNER JOIN aka_title at ON n.id = at.movie_id INNER JOIN title t ON at.movie_id = t.id INNER JOIN kind_type kt ON t.kind_id = kt.id INNER JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN char_name chn ON an.person_id = chn.id WHERE (chn.name = 'Clarkson' OR chn.name = 'Miguelito' OR chn.name = 'Basket coach') GROUP BY kt.kind;
SELECT rt.role, COUNT(DISTINCT akn.person_id) AS distinct_person_count, COUNT(DISTINCT mk.movie_id) AS distinct_movie_count, AVG(LENGTH(akn.name)) AS average_name_length, SUM(CASE WHEN mk.id IN (2147, 3674, 4385, 278, 891, 2589) THEN 1 ELSE 0 END) AS specific_keyword_movie_count FROM role_type rt LEFT JOIN aka_name akn ON rt.id = akn.id LEFT JOIN movie_keyword mk ON mk.movie_id = akn.person_id WHERE rt.role IN ('production designer', 'composer', 'producer', 'cinematographer', 'actor') AND rt.id IN ('6', '4') AND akn.name IN ('Aldave, Damie', 'Alkhovskaya, V.', 'Allen, Flanagan and', 'Allum, Dan', 'Rando, Jesús Alvaide', 'Allen, Eric') AND mk.movie_id IN ('7272', '8946', '15394', '15484', '7641') GROUP BY rt.role;
SELECT COUNT(DISTINCT mk.movie_id) AS total_movies, k.keyword, AVG(lt.id) AS average_link_type_id, SUM(CASE WHEN k.phonetic_code = 'T2351' THEN 1 ELSE 0 END) AS count_t2351, SUM(CASE WHEN k.phonetic_code = 'D35' THEN 1 ELSE 0 END) AS count_d35 FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN link_type AS lt ON mk.id = lt.id GROUP BY k.keyword ORDER BY total_movies DESC, k.keyword;
