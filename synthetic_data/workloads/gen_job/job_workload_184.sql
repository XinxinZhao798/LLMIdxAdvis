SELECT cn.name AS company_name, COUNT(mc.movie_id) AS number_of_movies, AVG(cast(mi_idx.info AS numeric)) AS average_movie_rating, SUM(CASE WHEN lt.LINK = 'distributor' THEN 1 ELSE 0 END) AS distribution_deals_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN link_type AS lt ON mc.company_type_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.company_id IN ('908', '1169', '855') AND mc.company_type_id = '1' AND cn.name IN ('StudioCanal', 'Dollhouse', 'Images Film Library', 'Creative Video Features', 'Afterschool Special', 'Star Creations International') GROUP BY cn.name ORDER BY number_of_movies DESC, average_movie_rating DESC;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(at.production_year) AS average_production_year, SUM(mc.company_type_id) AS sum_company_types, MIN(n.name) AS earliest_name_entry FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS at ON ml.movie_id = at.movie_id JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN name AS n ON n.imdb_id = ANY(ARRAY[at.movie_id, ml.linked_movie_id]) WHERE lt.id IN ('14', '15', '17', '12') AND mc.company_type_id BETWEEN 1 AND 10 AND n.gender = 'M' GROUP BY lt.LINK ORDER BY total_links DESC, average_production_year;
SELECT kt.kind AS movie_kind, MIN(t.title) AS movie_title, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, COUNT(DISTINCT mi_idx.movie_id) AS total_movies_with_info, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS sum_complete_status FROM title AS t INNER JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id GROUP BY kt.kind ORDER BY total_linked_movies DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, cn.country_code, rt.ROLE, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_short_films, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT ml.link_type_id) AS number_of_unique_link_types FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN role_type AS rt ON mc.company_type_id = rt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 1990 AND 2000 AND rt.id IN ('6', '8') AND mc.note LIKE '%(TV)%' GROUP BY cn.country_code, rt.ROLE ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT t.title AS original_title, COUNT(ak.id) AS alternate_title_count, COUNT(DISTINCT mk.keyword_id) AS keyword_count, AVG(t.production_year) AS average_production_year FROM title t LEFT JOIN aka_title ak ON t.id = ak.movie_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE t.title LIKE '%Crime%' OR t.title LIKE '%Fashion%' GROUP BY t.title ORDER BY alternate_title_count DESC, keyword_count DESC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS num_roles_with_person_role_id, COUNT(DISTINCT ci.person_id) AS num_unique_actors FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN kind_type kt ON kt.id = 1 JOIN cast_info ci ON mc.movie_id = ci.movie_id WHERE mc.company_type_id = 1 AND kt.kind IN ('episode', 'video movie') GROUP BY ct.kind, kt.kind;
SELECT kt.kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS total_directors, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT k.id) AS total_unique_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN keyword k ON t.id = k.id WHERE t.production_year > 2000 AND kt.id = 5 AND ci.note LIKE '%(20%' AND ci.role_id IN (1, 2) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_movie_duration, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, MAX(CAST(mi.info AS INTERVAL)) AS longest_movie_duration, MIN(CAST(mi.info AS INTERVAL)) AS shortest_movie_duration FROM movie_info mi JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN comp_cast_type cct ON ci.person_role_id = cct.id JOIN char_name cn ON ci.person_id = cn.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') AND mc.note LIKE '%(USA)%' AND cct.kind IN ('cast', 'complete') AND cn.surname_pcode IN ('E235', 'A6432', 'E2536', 'A1526') GROUP BY mc.company_id ORDER BY average_movie_duration DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS total_alias_credits, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT ci.person_id) AS unique_cast_members FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id WHERE ct.kind IN ('distributors', 'miscellaneous companies', 'special effects companies') AND ci.note IS NOT NULL GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, AVG(sub.keyword_count) AS average_keywords, COUNT(DISTINCT mk.movie_id) AS total_movies FROM movie_keyword mk JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) sub ON sub.movie_id = mk.movie_id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM title WHERE id = mk.movie_id LIMIT 1) JOIN movie_companies mc ON mc.movie_id = mk.movie_id JOIN company_type ct ON ct.id = mc.company_type_id WHERE ct.kind = 'production companies' AND kt.kind IN ('movie', 'tv series', 'mini series') AND EXISTS (SELECT 1 FROM title WHERE id = mk.movie_id AND production_year > 2000) GROUP BY ct.kind, kt.kind ORDER BY average_keywords DESC;
SELECT kt.kind as movie_kind, AVG(t.production_year) as average_production_year, COUNT(DISTINCT t.id) as total_movies, SUM(CASE WHEN at.title IS NOT NULL THEN 1 ELSE 0 END) as total_aka_titles, COUNT(DISTINCT mi_idx.movie_id) as movies_with_info, AVG(CASE WHEN mi_idx.info ~ E'^\\d+(\\.\\d+)?$' THEN CAST(mi_idx.info AS FLOAT) ELSE NULL END) as average_numeric_info FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies_count FROM role_type rt LEFT JOIN comp_cast_type cct ON rt.id = cct.id LEFT JOIN company_name cn ON cn.name_pcode_nf = 'M5236' OR cn.name_pcode_sf = 'L5612' LEFT JOIN movie_keyword mk ON mk.keyword_id IN (3479, 3152) WHERE cn.id IN (69171, 31595, 57187, 23935, 26659, 14910) AND rt.id IN (6, 5, 1, 7, 2) GROUP BY rt.ROLE ORDER BY number_of_companies DESC, number_of_movies_with_keywords DESC;
SELECT cct.kind AS cast_type_kind, AVG(mi_idx.info::numeric) AS average_movie_length, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT pi.person_id) AS number_of_people_with_info FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE mk.keyword_id IN (3246, 2661, 3786) AND mi_idx.info_type_id = cct.id AND pi.info_type_id = cct.id GROUP BY cct.kind;
SELECT t.kind_id, AVG(CASE WHEN mi.info_type_id = 101 THEN CAST(mi.info AS NUMERIC) ELSE NULL END) AS avg_budget, SUM(CASE WHEN at.title LIKE '%Finnish%' THEN 1 ELSE 0 END) AS finnish_title_count, COUNT(DISTINCT t.id) AS total_movies, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title t LEFT JOIN movie_info mi ON t.id = mi.movie_id LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN complete_cast cc ON t.id = cc.movie_id WHERE (t.kind_id = 2 OR t.kind_id = 7) AND (at.phonetic_code IN ('C4231', 'U4351', 'D5353') OR t.phonetic_code = 'F635') AND (at.season_nr IN (30, 7, 9) OR t.production_year BETWEEN 2005 AND 2015) AND (mi.info = 'Finnish' OR mi.info = 'Serbo-Croatian') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND cn.country_code IS NOT NULL AND ct.kind <> 'production companies' AND t.kind_id NOT IN (SELECT id FROM comp_cast_type WHERE kind = 'tv series') GROUP BY cn.country_code, ct.kind ORDER BY average_rating DESC, total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(LENGTH(mi_idx.info)) AS average_info_length, SUM(CASE WHEN mi_idx.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_info_count FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_roles, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN movie_link ml ON ci.movie_id = ml.movie_id GROUP BY rt.ROLE HAVING COUNT(DISTINCT ci.person_id) > 50;
SELECT mi_idx.movie_id, COUNT(DISTINCT a.person_id) AS unique_person_count, COUNT(a.id) AS total_aka_names, AVG(COUNT(a.id)) OVER () AS avg_aka_names_per_movie FROM movie_info_idx mi_idx LEFT JOIN aka_name a ON a.person_id = mi_idx.movie_id GROUP BY mi_idx.movie_id ORDER BY unique_person_count DESC, total_aka_names DESC;
SELECT rt.role AS role_type, COUNT(*) AS num_roles, AVG(cast(mi_idx.info AS double precision)) AS average_rating, SUM(cast(mi.info AS integer)) AS total_award_count FROM role_type AS rt JOIN char_name AS cn ON cn.id = rt.id JOIN movie_info_idx AS mi_idx ON cn.id = mi_idx.movie_id JOIN movie_info AS mi ON cn.id = mi.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') AND rt.role IN ('actor', 'actress', 'producer', 'director') GROUP BY rt.role ORDER BY num_roles DESC, average_rating DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT n.id) AS number_of_unique_actors, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ct.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM title t LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name ct ON mc.company_id = ct.id LEFT JOIN movie_link ml ON t.id = ml.movie_id GROUP BY t.production_year HAVING COUNT(DISTINCT t.id) > 5 ORDER BY t.production_year DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, SUM(CASE WHEN k.keyword = 'disco-ball' THEN 1 ELSE 0 END) AS disco_ball_keyword_count, SUM(CASE WHEN k.keyword = 'bandana' THEN 1 ELSE 0 END) AS bandana_keyword_count, STRING_AGG(DISTINCT ct.kind, ', ') AS involved_company_types FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN kind_type kt ON kt.id = mi.info_type_id JOIN movie_info mii ON mii.movie_id = mi.movie_id JOIN link_type lt ON lt.id = mi_idx.id JOIN keyword k ON k.id = mi_idx.id JOIN company_type ct ON ct.id = mi_idx.id WHERE mi.id IN ('7268657', '7271065', '7267731') AND mi.movie_id IN ('924506', '925955', '929745', '938512', '930430') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND mi_idx.info SIMILAR TO '(%...[0-9]*[0-9].[0-9]*[0-9]%)' GROUP BY kt.kind;
SELECT it.info AS info_type, COUNT(DISTINCT akn.person_id) AS unique_person_count, COUNT(DISTINCT k.id) AS unique_keyword_count, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN k.phonetic_code IN ('S6252', 'C351', 'F2352') THEN 1 ELSE 0 END) AS specific_phonetic_code_count FROM aka_name akn JOIN info_type it ON akn.surname_pcode = it.info JOIN keyword k ON akn.name_pcode_nf = k.phonetic_code JOIN movie_companies mc ON akn.person_id = mc.company_id GROUP BY it.info ORDER BY unique_person_count DESC, unique_keyword_count DESC;
SELECT tk.kind, AVG(t.production_year) AS average_production_year, SUM(t.production_year) AS total_production_year_sum, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT mc.company_type_id) AS distinct_company_types_involved FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN (SELECT id, 'Drama' AS kind FROM title WHERE kind_id = 1 UNION ALL SELECT id, 'Comedy' AS kind FROM title WHERE kind_id = 2 ) AS tk ON t.id = tk.id GROUP BY tk.kind ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT t.title AS Movie_Title, t.production_year AS Production_Year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords, COUNT(DISTINCT mc.company_id) AS Number_of_Companies_Involved, AVG(t.production_year) OVER () AS Average_Production_Year, COUNT(*) OVER () AS Total_Movies_Analyzed FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ml.link_type_id IN ('12', '11', '13', '6') AND t.series_years IN ('1985-????', '2004-????', '2013-????', '1988-????', '2010-2010') AND t.production_year > (SELECT AVG(production_year) FROM title) GROUP BY t.id HAVING COUNT(DISTINCT mk.keyword_id) > 5 ORDER BY Number_of_Keywords DESC, Production_Year DESC;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.id) AS total_unique_casts, SUM(CASE WHEN l.id IN (7, 8) THEN 1 ELSE 0 END) AS total_edited_or_spin_off_links, COUNT(DISTINCT cn.id) AS total_unique_characters, COUNT(*) AS total_titles FROM aka_title AS a JOIN complete_cast AS c ON a.movie_id = c.movie_id JOIN char_name AS cn ON cn.id = ANY(ARRAY[54785, 4119, 86783, 28862]) JOIN link_type AS l ON l.id = ANY(ARRAY[7, 8, 6, 3]) WHERE a.production_year IS NOT NULL AND c.status_id IN (3, 4) AND a.episode_of_id IS NOT NULL AND a.episode_of_id IN (15984, 4570, 5164, 247, 20256, 15791) AND l.link IN ('edited from', 'spin off') GROUP BY c.subject_id;
