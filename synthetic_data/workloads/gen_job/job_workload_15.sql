SELECT ct.kind AS cast_type, AVG(movcomp_notes.note_length) AS average_note_length, COUNT(DISTINCT movcomp.movie_id) AS number_of_movies, COUNT(DISTINCT comp.name) AS number_of_companies, SUM(CASE WHEN movcomp.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_producers, MAX(comp_cast.subject_id) AS max_subject_id_for_cast_type FROM complete_cast AS comp_cast JOIN comp_cast_type AS ct ON comp_cast.subject_id = ct.id JOIN movie_companies AS movcomp ON movcomp.movie_id = comp_cast.movie_id JOIN company_name AS comp ON movcomp.company_id = comp.id LEFT JOIN (SELECT movie_id, LENGTH(note) AS note_length FROM movie_companies) AS movcomp_notes ON movcomp.movie_id = movcomp_notes.movie_id WHERE comp_cast.id IN (4264, 2513, 575, 1032) AND comp_cast.subject_id = 1 AND ct.id = 4 GROUP BY ct.kind;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS number_of_unique_movies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, COUNT(DISTINCT mi.id) AS total_movie_info_records FROM aka_title at JOIN movie_keyword mk ON at.movie_id = mk.movie_id JOIN movie_info mi ON at.movie_id = mi.movie_id WHERE mi.info_type_id = 4 AND at.production_year IS NOT NULL GROUP BY at.kind_id ORDER BY average_production_year DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS movie_count, AVG(keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT ci.person_id) AS distinct_actor_count FROM title t LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id ) AS mk ON t.id = mk.movie_id LEFT JOIN cast_info ci ON t.id = ci.movie_id AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') LEFT JOIN name n ON ci.person_id = n.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year ORDER BY t.production_year;
SELECT COUNT(DISTINCT cn.id) AS number_of_characters, AVG(k.id) AS average_keyword_id, SUM(mi.movie_id) AS total_movie_info_movie_ids, mi.info AS movie_info, MAX(cn.name) AS max_character_name FROM char_name cn JOIN movie_info mi ON cn.id = mi.movie_id JOIN keyword k ON k.id = mi.info_type_id GROUP BY mi.info ORDER BY number_of_characters DESC, average_keyword_id;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_actors, COUNT(DISTINCT kn.id) AS number_of_keywords, SUM(CASE WHEN cn.name LIKE 'A%' THEN 1 ELSE 0 END) AS actors_starting_with_a, COUNT(DISTINCT cmn.id) AS number_of_companies, MAX(akat.episode_nr) AS max_episode_number FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN complete_cast cc ON akat.movie_id = cc.movie_id LEFT JOIN char_name cn ON cn.id = cc.subject_id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id LEFT JOIN keyword kn ON mk.keyword_id = kn.id AND kn.phonetic_code IN ('D525', 'G6431', 'T2623', 'S1425', 'M4165', 'G5123') LEFT JOIN movie_companies mc ON akat.movie_id = mc.movie_id LEFT JOIN company_name cmn ON mc.company_id = cmn.id WHERE akat.production_year >= 2000 GROUP BY kt.kind
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS num_roles_with_person_role_id, COUNT(DISTINCT ci.person_id) AS num_unique_actors FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN kind_type kt ON kt.id = 1 JOIN cast_info ci ON mc.movie_id = ci.movie_id WHERE mc.company_type_id = 1 AND kt.kind IN ('episode', 'video movie') GROUP BY ct.kind, kt.kind;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN pi.info_type_id = 38 THEN 1 ELSE 0 END) AS total_awards_won, COUNT(DISTINCT at.id) AS number_of_alternative_titles FROM name AS n JOIN person_info AS pi ON n.id = pi.person_id LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN aka_title AS at ON at.movie_id = an.person_id WHERE pi.info_type_id IN (34, 35, 38) AND n.gender = 'M' AND (at.season_nr = 28 OR at.season_nr IS NULL) GROUP BY n.gender;
SELECT mi.info AS genre, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT at.id) AS number_of_alternate_titles, at.production_year FROM movie_info mi INNER JOIN aka_title at ON mi.movie_id = at.movie_id INNER JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id WHERE mi.info_type_id = 3 AND mi_idx.info_type_id = 1 AND at.production_year IS NOT NULL GROUP BY mi.info, at.production_year ORDER BY at.production_year DESC, average_rating DESC;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT l.id) AS total_link_types, COUNT(DISTINCT a.id) AS total_aka_titles, SUM(CASE WHEN a.episode_nr = 23 THEN 1 ELSE 0 END) AS count_episode_23, SUM(CASE WHEN a.episode_nr = 2 THEN 1 ELSE 0 END) AS count_episode_2, SUM(CASE WHEN a.episode_nr = 198 THEN 1 ELSE 0 END) AS count_episode_198 FROM aka_title AS a JOIN comp_cast_type AS c ON a.kind_id = c.id JOIN link_type AS l ON a.id = l.id WHERE a.production_year IS NOT NULL AND a.md5sum IN ('fb468fe5a2dd6cbadb547cbfcc31fe6e', 'aebc712f90712d70c4098b641cecc92c', 'f13da07aa2abf77454bb4a2209a5fc0d') GROUP BY a.kind_id;
SELECT rt.role, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS movie_count FROM role_type rt JOIN movie_info_idx mii ON rt.id = mii.info_type_id JOIN title t ON mii.movie_id = t.id JOIN info_type it ON mii.info_type_id = it.id WHERE it.info = 'LD contrast' AND it.id IN ('74', '69') GROUP BY rt.role ORDER BY movie_count DESC, average_production_year DESC;
SELECT ct.kind AS cast_type, AVG(mi_idx.info::numeric) AS average_info_numeric, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT k.id) AS number_of_keywords, MAX(cn.name) AS largest_company_name FROM comp_cast_type AS ct JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = ct.id JOIN company_name AS cn ON cn.id = mi_idx.movie_id JOIN keyword AS k ON k.id = mi_idx.info_type_id JOIN movie_link AS ml ON ml.movie_id = mi_idx.movie_id JOIN role_type AS rt ON rt.id = ml.link_type_id WHERE cn.name_pcode_nf IN ('C252', 'T5252', 'D5213', 'B4242', 'K1253', 'E4261') AND rt.ROLE LIKE '%producer%' GROUP BY ct.kind ORDER BY average_info_numeric DESC;
SELECT COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(cc.status_id) AS average_status, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS titles_after_2000, lt.LINK, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN link_type lt ON cc.subject_id = lt.id GROUP BY lt.LINK ORDER BY total_alternate_titles DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_roles, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN movie_link ml ON ci.movie_id = ml.movie_id GROUP BY rt.ROLE HAVING COUNT(DISTINCT ci.person_id) > 50;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(aka.production_year) AS average_production_year, SUM(CASE WHEN mi.info_type_id = 100 THEN 1 ELSE 0 END) as total_type_100_info, SUM(CASE WHEN mi.info_type_id = 101 THEN 1 ELSE 0 END) as total_type_101_info, COUNT(DISTINCT pi.person_id) AS total_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, rt.ROLE AS role_type, COUNT(DISTINCT CASE WHEN rt.id IN (1, 10, 7) THEN pi.person_id END) AS count_specific_roles FROM movie_info mi JOIN aka_title aka ON mi.movie_id = aka.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN person_info pi ON pi.info IN ('1988', 'Gontkov√°, Olga', 'Wallerstein, Robin', 'Son with Booth: ''Al Adamson'' (qv)', 'Dresden, Germany', 'Adasky, Beryl') AND pi.note = 'woodyanders' LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN role_type rt ON rt.id IN (1, 10, 7) GROUP BY it.info, rt.ROLE ORDER BY total_movies DESC;
SELECT it.info AS info_category, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mn.movie_id) AS total_movies, AVG(CAST(pi.info AS INTEGER)) FILTER (WHERE it.info = 'runtimes') AS average_runtime, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'remade as') AS total_remake_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'features') AS total_feature_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'spoofed in') AS total_spoof_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'edited from') AS total_edit_links, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = 103) AS total_LD_language_entries FROM company_name AS cn JOIN movie_link AS mn ON cn.id = mn.movie_id JOIN link_type AS lt ON mn.link_type_id = lt.id JOIN person_info AS pi ON cn.imdb_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE cn.country_code = 'US' AND it.info IN ('portrayed in', 'runtimes', 'release dates', 'alternate versions', 'LD quality of source') GROUP BY it.info;
SELECT kt.kind AS movie_genre, AVG(mi_idx.note::int) AS average_rating, COUNT(DISTINCT k.id) AS unique_keywords, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_cast_movies, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS verified_cast_movies FROM movie_info_idx mi_idx JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id JOIN keyword k ON ml.link_type_id = k.id JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN complete_cast cc ON mi_idx.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id WHERE kt.kind IN ('drama', 'comedy', 'action') AND mi_idx.info LIKE '%rating%' AND k.keyword IN ('epic', 'cult', 'thriller', 'romance') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT cn.name AS company_name, cn.country_code, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN it.info = 'votes' THEN 1 ELSE 0 END) AS total_votes, COUNT(DISTINCT t.id) AS number_of_titles FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN title AS t ON mc.movie_id = t.id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE cn.country_code NOT IN ('US', 'CA') AND mc.company_type_id = 2 AND it.info IN ('rating', 'votes') AND cct.id IN (1, 3, 4) AND t.production_year BETWEEN 2010 AND 2020 GROUP BY cn.name, cn.country_code ORDER BY average_rating DESC, total_votes DESC, number_of_titles DESC, number_of_actors DESC LIMIT 10;
SELECT kt.kind, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT at.title) AS title_count, SUM(CASE WHEN cn.id IS NOT NULL THEN 1 ELSE 0 END) AS unique_character_count FROM aka_title AS at JOIN kind_type AS kt ON at.kind_id = kt.id LEFT JOIN movie_info AS mi ON at.movie_id = mi.movie_id LEFT JOIN char_name AS cn ON mi.movie_id = cn.id WHERE at.production_year IS NOT NULL GROUP BY kt.kind ORDER BY avg_production_year DESC, title_count DESC;
SELECT ct.kind AS company_type, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(k.id) AS keyword_count, SUM(CASE WHEN it.info = 'LD official retail price' THEN CAST(mi.info AS NUMERIC) ELSE 0 END) AS total_official_retail_price FROM company_type ct JOIN movie_info mi ON ct.id = mi.info_type_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN info_type it ON mi.info_type_id = it.id WHERE mk.keyword_id IN (2506, 2862, 589, 3476, 4237) AND k.phonetic_code IN ('D1653', 'H532', 'M6321', 'H4326', 'F2426', 'A3513') AND it.id IN (15, 16, 18, 76, 39, 111) AND mi.movie_id IN (9091, 13237, 927238) AND (mi.note ILIKE '%(English subtitles)%' OR mi.note ILIKE '%(Original version)%') GROUP BY ct.kind;
SELECT ct.kind AS company_kind, COUNT(mc.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ti.series_years IS NOT NULL THEN 1 ELSE 0 END) AS total_series, COUNT(DISTINCT t.id) AS unique_titles, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN title AS ti ON t.episode_of_id = ti.id WHERE ct.kind IN ('production companies', 'special effects companies') AND t.production_year BETWEEN 1980 AND 2005 AND (t.series_years = '1985-1987' OR t.series_years = '1987-????' OR t.series_years LIKE '1968-%' OR t.series_years LIKE '1978-1979') AND mc.company_id = 909 GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT rt.ROLE as role, COUNT(ci.id) as total_cast, AVG(ci.nr_order) as average_order, SUM(case when ci.note LIKE '%(voice:%' THEN 1 ELSE 0 END) as total_voice_roles, cm.name as company_name, cm.country_code as company_country, COUNT(distinct mc.movie_id) as total_movies_produced FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id AND rt.id IN (1, 10, 3, 5, 8, 9) JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_name cm ON mc.company_id = cm.id WHERE mc.company_type_id = 1 AND mc.note LIKE '%(USA)%' AND ci.note NOT LIKE '%(credit only)%' GROUP BY role, company_name, company_country ORDER BY total_movies_produced DESC, total_cast DESC;
SELECT pi.person_id, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS number_of_alias_roles, COUNT(DISTINCT pi.info_type_id) AS distinct_info_types FROM person_info pi JOIN cast_info ci ON pi.person_id = ci.person_id JOIN company_type ct ON ci.role_id = ct.id WHERE ci.person_id IN (1575, 1003, 1034, 1127, 1520, 1048) AND ci.note SIMILAR TO '%(\(pelotari\)|\(as [^)]+\)|\(2011\))%' GROUP BY pi.person_id ORDER BY number_of_movies DESC;
