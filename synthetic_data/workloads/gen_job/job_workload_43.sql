SELECT n.gender, COUNT(DISTINCT n.id) AS total_actors, AVG(pi.info::numeric) AS average_salary, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_since_2000, COUNT(DISTINCT an.id) AS alias_count FROM name AS n LEFT JOIN person_info AS pi ON n.id = pi.person_id AND pi.info_type_id = 5 LEFT JOIN aka_name AS an ON n.id = an.person_id JOIN title AS t ON t.production_year IS NOT NULL WHERE n.gender = 'm' AND an.surname_pcode IN ('A314', 'M625', 'A623') AND ( t.md5sum = 'e12660c2276e1be7ab2cedff19318a06' OR t.md5sum = 'ed4e8da1cad9d62090810472bc647ccb' ) GROUP BY n.gender;
SELECT SUM(CASE WHEN pi.info_type_id = 1 THEN 1 ELSE 0 END) AS total_actors, AVG(CASE WHEN pi.info_type_id = 2 THEN CAST(pi.info AS NUMERIC) ELSE NULL END) AS average_director_salary, COUNT(DISTINCT k.id) AS unique_keywords_used, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS count_high_budget_movies FROM cast_info AS ci JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN keyword AS k ON ci.movie_id = k.id WHERE ci.role_id = 1 AND pi.info_type_id IN (1, 2) AND mi_idx.info_type_id IN (3) AND mi_idx.info LIKE '%Million%' GROUP BY ci.movie_id;
SELECT rt.ROLE, COUNT(DISTINCT ml.movie_id) AS num_movies, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT k.id) AS num_keywords FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN char_name cn ON ci.person_role_id = cn.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id GROUP BY rt.ROLE ORDER BY num_movies DESC, avg_imdb_id DESC;
SELECT AVG(title.production_year) AS average_production_year, COUNT(DISTINCT name.id) AS number_of_actors, COUNT(DISTINCT title.id) AS number_of_movies, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors, MAX(title.production_year) AS latest_production_year, MIN(title.production_year) AS earliest_production_year FROM title JOIN aka_title ON title.id = aka_title.movie_id JOIN person_info ON aka_title.movie_id = person_info.person_id JOIN name ON person_info.person_id = name.id WHERE title.production_year BETWEEN 2000 AND 2020 AND name.name_pcode_nf IN ('N4532', 'H6341', 'M2164') GROUP BY title.kind_id HAVING COUNT(DISTINCT title.id) > 10 ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, AVG(CAST(an.id AS NUMERIC)) AS average_aka_name_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_based_companies FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN kind_type AS kt ON kt.id = mc.company_type_id LEFT JOIN aka_name AS an ON an.person_id = mc.id WHERE mc.movie_id IN ('23623', '12089', '22009', '20658', '18570', '31165') GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, AVG(aka_count.aka_name_count) AS average_aka_names_per_movie_kind FROM kind_type kt JOIN movie_info_idx t ON kt.id = t.info_type_id JOIN movie_companies mc ON t.movie_id = mc.movie_id LEFT JOIN ( SELECT an.person_id, COUNT(*) as aka_name_count FROM aka_name an GROUP BY an.person_id ) aka_count ON mc.movie_id = aka_count.person_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, COUNT(DISTINCT at.movie_id) AS unique_movies, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN lt.link = 'alternate language version of' THEN 1 ELSE 0 END) AS alt_lang_versions, SUM(CASE WHEN lt.link = 'version of' THEN 1 ELSE 0 END) AS versions, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS features_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN movie_info_idx mii ON at.movie_id = mii.movie_id JOIN link_type lt ON mii.id = lt.id WHERE at.imdb_index = 'IV' AND at.episode_of_id IN ('11942', '6153', '1980', '7480', '8274') AND kt.kind IN ('tv series', 'video movie', 'video game', 'tv mini series') AND mii.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%0..11202%' OR info LIKE '.0..002212') GROUP BY kt.kind;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(t.episode_nr) AS total_episodes, k.keyword, gender FROM name AS n JOIN title AS t ON t.id = n.id JOIN keyword AS k ON k.id = t.id WHERE n.gender = 'm' AND t.production_year BETWEEN 1990 AND 2020 AND k.keyword IN ('string-of-beads', 'atm-card', 'based-on-sketch-comedy', 'skeleton-in-a-closet', 'rugged-terrain', 'reference-to-zorro') GROUP BY k.keyword, n.gender ORDER BY total_actors DESC, average_production_year DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE it.info = 'rating') AS average_rating, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT mi.info) FILTER (WHERE it.info = 'release dates') AS total_release_dates FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE kt.kind IN ('movie', 'tv series', 'video game') AND n.gender = 'm' AND it.id IN ('17', '71', '44', '69', '79', '64') AND mi.id IN ('7266297', '7266302', '7266333', '7267324', '7267795') AND t.production_year BETWEEN 2000 AND 2010 GROUP BY kt.kind;
SELECT cn.country_code, k.keyword, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(CAST(NULLIF(REGEXP_REPLACE(mi_duration.info, '[^\d.]', '', 'g'), '') AS NUMERIC)) AS average_movie_duration, SUM(CASE WHEN mi_release.info_type_id = 4 THEN 1 ELSE 0 END) AS count_movie_releases FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN movie_info AS mi_release ON mc.movie_id = mi_release.movie_id AND mi_release.info_type_id = 4 LEFT JOIN movie_info AS mi_duration ON mc.movie_id = mi_duration.movie_id AND mi_duration.info_type_id = 3 WHERE k.keyword IN ('dead-mother', 'manipulation') AND mi_release.note IN ('(some dialogue)', '(none)', '(only a few lines)', '(a few lines)', '(a few words)') GROUP BY cn.country_code, k.keyword ORDER BY cn.country_code, k.keyword;
SELECT ak.production_year, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, AVG(ci.nr_order) AS average_cast_order FROM movie_keyword mk INNER JOIN aka_title ak ON mk.movie_id = ak.movie_id INNER JOIN cast_info ci ON mk.movie_id = ci.movie_id INNER JOIN movie_info_idx mi ON mk.movie_id = mi.movie_id WHERE mk.keyword_id IN (3815, 3067) AND ak.production_year BETWEEN 1980 AND 1990 GROUP BY ak.production_year ORDER BY ak.production_year;
SELECT COUNT(DISTINCT cn.id) AS total_companies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN lt.id = '12' THEN 1 ELSE 0 END) AS count_type_12_links, COUNT(DISTINCT t.id) AS total_titles, COUNT(DISTINCT mi_idx.info) AS total_unique_info FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN title t ON mc.movie_id = t.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id WHERE cn.country_code = 'US' AND t.production_year BETWEEN 1990 AND 2000 AND mc.note IS NOT NULL AND (lt.id = '15' OR lt.id = '12') GROUP BY cn.country_code, t.production_year ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT cn.id) AS total_characters, AVG(mii.movie_id) AS average_movie_id, SUM(CASE WHEN kt.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS total_keywords_linked, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, MAX(mii_idx.info) AS max_movie_votes FROM char_name cn LEFT JOIN movie_info_idx mii_idx ON cn.id = mii_idx.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = mii_idx.movie_id LEFT JOIN movie_info_idx mii ON mii.movie_id = cc.movie_id LEFT JOIN keyword k ON k.phonetic_code LIKE 'A%' LEFT JOIN ( SELECT mk.movie_id, mk.keyword_id FROM movie_keyword mk INNER JOIN keyword k ON k.id = mk.keyword_id WHERE k.phonetic_code = 'A323' OR k.phonetic_code = 'B124' ) AS kt ON kt.movie_id = mii.movie_id WHERE cn.name_pcode_nf IN ('C614', 'J525', 'C6346', 'A4152') AND cc.id IN ('2966', '2652', '3214', '2072', '724', '2015') GROUP BY cn.surname_pcode;
SELECT t.production_year, ct.kind AS company_type, COUNT(t.id) AS movie_count FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id WHERE cn.country_code IN ('[gb]', '[dk]') AND ct.kind IN ('Distribution', 'Production') GROUP BY t.production_year, ct.kind ORDER BY t.production_year ASC, ct.kind;
SELECT ct.kind AS company_type, AVG(ati.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ati.movie_id) AS number_of_movies, SUM(CASE WHEN ati.note LIKE '%(subtitle)%' THEN 1 ELSE 0 END) AS number_of_subtitled_movies, SUM(CASE WHEN ati.note LIKE '%(series title)%' THEN 1 ELSE 0 END) AS number_of_series_titles, SUM(CASE WHEN ati.note LIKE '%(informal literal title)%' THEN 1 ELSE 0 END) AS number_of_informal_literal_titles FROM aka_title ati JOIN company_type ct ON ati.kind_id = ct.id LEFT JOIN company_name cn ON ati.movie_id = cn.imdb_id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, COUNT(DISTINCT k.id) AS unique_keywords_used FROM movie_link AS ml JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN kind_type AS kt ON kt.id = cc.status_id JOIN name AS n ON n.id = (SELECT subject_id FROM complete_cast WHERE movie_id = ml.movie_id LIMIT 1) JOIN movie_keyword AS mk ON mk.movie_id = ml.movie_id JOIN keyword AS k ON k.id = mk.keyword_id WHERE kt.id IN (7, 4) AND n.name_pcode_cf IN ('A2343', 'A3152', 'A6216', 'A2324', 'A436', 'A254') AND n.imdb_index = 'IV' AND k.phonetic_code IN ('S4623', 'I5264', 'U5321') AND k.keyword IN ('scavenging-for-food', 'garbage-truck', 'obscenity', 'red-wine', 'sexism', 'glass') GROUP BY kt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS roles_with_person_role, COUNT(DISTINCT ci.person_id) AS distinct_actors_count FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN company_type ct ON cct.id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT MAX(cn.name) AS company_name, ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS num_companies, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT cct.id) AS cast_type_count, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT it.id) AS info_type_count, COUNT(DISTINCT lt.id) AS link_type_count FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN comp_cast_type cct ON cn.id = cct.id JOIN info_type it ON cn.id = it.id JOIN link_type lt ON cn.id = lt.id WHERE cn.country_code IN ('US', 'JP', 'FR') AND cn.name_pcode_sf IN ('M3652', 'A6163', 'L2641', 'D6123') AND ct.id IN (1, 2, 3, 4) AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY us_based_companies DESC, num_companies DESC;
SELECT T.production_year, COUNT(*) AS total_titles, AVG(KW.count_keywords) AS avg_keywords_per_title, SUM(CASE WHEN T.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN T.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN T.kind_id = 3 THEN 1 ELSE 0 END) AS total_video_games FROM title AS T LEFT JOIN ( SELECT MK.movie_id, COUNT(MK.keyword_id) AS count_keywords FROM movie_keyword AS MK GROUP BY MK.movie_id ) AS KW ON T.id = KW.movie_id WHERE T.production_year BETWEEN 2000 AND 2020 GROUP BY T.production_year ORDER BY T.production_year;
SELECT COUNT(DISTINCT ci.id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT mk.id) AS total_movie_keywords, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mi.id) AS total_movie_info_records, ct.kind AS company_kind, COUNT(DISTINCT n.id) AS total_people FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN title t ON ci.movie_id = t.id JOIN movie_info mi ON mi.movie_id = t.id JOIN company_type ct ON ct.id = mi.info_type_id JOIN name n ON n.id = ci.person_id WHERE ci.role_id = 1 AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND ci.nr_order IN (36, 47, 23, 39) AND mk.movie_id IN (14906, 12662, 17516, 17625) GROUP BY ct.kind ORDER BY total_movie_keywords DESC;
