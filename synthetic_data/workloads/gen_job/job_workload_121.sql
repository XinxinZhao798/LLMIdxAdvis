SELECT kt.kind AS movie_kind, MIN(at.title) AS alternative_title, AVG(CASE WHEN mi.info_type_id = it.id AND it.info = 'rating' THEN CAST(mi.info AS FLOAT) END) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN mc.company_type_id = ct.id AND ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(at.production_year) AS latest_production_year FROM kind_type AS kt LEFT JOIN aka_title AS at ON kt.id = at.kind_id LEFT JOIN movie_info AS mi ON at.movie_id = mi.movie_id LEFT JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_companies AS mc ON at.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id WHERE at.production_year >= 1990 AND (at.title = 'The 11th Hour' OR at.title = 'Anna and Wulin' OR at.title = 'Arabian Tale') AND (at.imdb_index = 'I' OR at.imdb_index = 'III' OR at.imdb_index = 'IV') GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS number_of_tv_related_movies, COUNT(DISTINCT ci.person_id) AS number_of_cast_members, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM cast_info ci JOIN kind_type kt ON kt.id = ci.role_id JOIN movie_info_idx mi_idx ON mi_idx.movie_id = ci.movie_id JOIN movie_companies mc ON mc.movie_id = ci.movie_id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id WHERE ci.role_id = 1 AND ci.person_id <> 1331 AND mi_idx.info_type_id = 101 AND ( ci.movie_id IN (929802, 930487) OR mi_idx.id IN (582, 3094, 1805, 510, 2997, 1382) OR mc.movie_id IN (28517, 18627, 13753, 26411, 16217) ) GROUP BY kt.kind ORDER BY number_of_movies DESC, average_movie_rating DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(mi.info AS DECIMAL)) AS average_movie_length, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_movies_with_specific_info, MIN(t.title) AS shortest_movie_title, MAX(t.title) AS longest_movie_title, COUNT(DISTINCT c.id) AS number_of_complete_cast_records FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN title t ON mi.movie_id = t.id LEFT JOIN complete_cast c ON t.id = c.movie_id WHERE ct.id = 3 GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 5;
SELECT ct.kind AS company_type, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.id) AS average_movie_info_id, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS count_of_notes FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN company_type ct ON ct.id::text = mi.info WHERE mi.info_type_id IN (80, 15, 107, 26, 82) AND it.info LIKE 'crazy credits' AND mi_idx.id IN (2000, 184) AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind, it.info ORDER BY number_of_movies DESC, average_movie_info_id;
SELECT COUNT(DISTINCT ml.movie_id) AS NumberOfMovies, COUNT(DISTINCT ml.linked_movie_id) AS NumberOfLinkedMovies, AVG(n.imdb_id) AS AverageIMDbID, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS Status3Count, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS Status4Count FROM movie_link AS ml JOIN complete_cast AS cc ON cc.movie_id = ml.movie_id JOIN name AS n ON n.id = cc.subject_id WHERE cc.status_id IN (3, 4) GROUP BY cc.subject_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN cct.kind = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN cct.kind = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN comp_cast_type cct ON ci.person_role_id = cct.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT akn.person_id) AS unique_actors_with_alternate_names, SUM(CASE WHEN cn.name LIKE 'John %' THEN 1 ELSE 0 END) AS count_char_john FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN aka_name akn ON mk.movie_id = akn.person_id JOIN char_name cn ON akn.person_id = cn.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.note IS NULL AND cn.md5sum IN ('8d27c5ba7c1446502255ecfe6fec5a75', 'b314ed1fd1802d098b87fb46fbba3d62', 'b7658b3c5efeaba483fa8fb61d460be3') GROUP BY mi_idx.info_type_id;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, COUNT(DISTINCT k.id) AS unique_keywords_used FROM movie_link AS ml JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN kind_type AS kt ON kt.id = cc.status_id JOIN name AS n ON n.id = (SELECT subject_id FROM complete_cast WHERE movie_id = ml.movie_id LIMIT 1) JOIN movie_keyword AS mk ON mk.movie_id = ml.movie_id JOIN keyword AS k ON k.id = mk.keyword_id WHERE kt.id IN (7, 4) AND n.name_pcode_cf IN ('A2343', 'A3152', 'A6216', 'A2324', 'A436', 'A254') AND n.imdb_index = 'IV' AND k.phonetic_code IN ('S4623', 'I5264', 'U5321') AND k.keyword IN ('scavenging-for-food', 'garbage-truck', 'obscenity', 'red-wine', 'sexism', 'glass') GROUP BY kt.kind;
SELECT ct.kind AS company_kind, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_movie_budget, COUNT(DISTINCT cn.id) AS total_production_companies, COUNT(DISTINCT mi_idx.movie_id) AS total_movies_with_budget, COUNT(DISTINCT rt.id) AS total_distinct_roles FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id AND it.info = 'budget' JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind = 'production companies' JOIN cast_info ci ON mi_idx.movie_id = ci.movie_id JOIN role_type rt ON ci.role_id = rt.id GROUP BY ct.kind HAVING COUNT(DISTINCT mi_idx.movie_id) > 3;
SELECT ct.kind AS company_type, AVG(cast_info.nr_order) AS average_cast_order, COUNT(DISTINCT aka_title.movie_id) AS number_of_movies, SUM(CASE WHEN complete_cast.status_id = 1 THEN 1 ELSE 0 END) AS number_of_completed_movies, MAX(aka_title.production_year) AS latest_production_year, MIN(aka_title.production_year) AS earliest_production_year FROM movie_companies JOIN company_type AS ct ON movie_companies.company_type_id = ct.id JOIN aka_title ON movie_companies.movie_id = aka_title.movie_id JOIN cast_info ON aka_title.movie_id = cast_info.movie_id LEFT JOIN complete_cast ON aka_title.movie_id = complete_cast.movie_id WHERE cast_info.person_id = 1448 AND complete_cast.id = 2902 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS movie_count, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords, AVG(CAST(mi.info AS NUMERIC)) AS average_info_numeric_value, SUM(CASE WHEN mi.info LIKE '%...26...2.%' THEN 1 ELSE 0 END) AS pattern_26_info_count, MAX(n.name) AS max_actor_name FROM movie_info_idx mi JOIN kind_type kt ON mi.info_type_id = kt.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON mi.movie_id = ml.movie_id JOIN name n ON ml.movie_id = n.id WHERE kt.kind = 'episode' AND mi.info_type_id IN (100, 101, 99) AND mi.info SIMILAR TO '%(4.2|....001322|0....01313|...26...2.|2.......24|2..2..2.4.)%' AND mk.keyword_id IN (2474, 3652) AND ml.linked_movie_id IN (254369, 1452436, 446227, 989565) AND ml.movie_id IN (20573, 12164, 2661) GROUP BY kt.kind;
