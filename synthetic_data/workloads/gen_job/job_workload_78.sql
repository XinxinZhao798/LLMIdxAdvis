SELECT cct.kind AS cast_type_kind, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_numeric_value, COUNT(DISTINCT mi_idx.movie_id) AS unique_movies_count, COUNT(mi_idx.note) AS notes_count FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id WHERE cct.kind IN ('crew', 'cast', 'complete+verified') AND mi_idx.info_type_id = 99 GROUP BY cct.kind ORDER BY average_info_numeric_value DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ml.movie_id) AS count_of_movies_with_links, COUNT(DISTINCT at.movie_id) AS count_of_alternate_titles, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS count_of_movies, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS count_of_tv_shows, COUNT(DISTINCT k.id) AS count_of_unique_keywords FROM aka_title at LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id LEFT JOIN keyword k ON at.title LIKE CONCAT('%', k.keyword, '%') WHERE at.production_year > 2000 AND (ml.id IN (4856, 1568, 48, 747, 1537, 3901) OR ml.linked_movie_id = 2323856) AND at.episode_nr IN (38, 29, 26, 64, 24) AND k.phonetic_code IS NOT NULL GROUP BY at.kind_id;
SELECT kt.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_lead_roles, COUNT(DISTINCT cn.id) AS number_of_unique_characters FROM cast_info ci JOIN aka_title at ON ci.movie_id = at.movie_id JOIN kind_type kt ON at.kind_id = kt.id JOIN char_name cn ON ci.person_role_id = cn.id WHERE at.production_year BETWEEN 1990 AND 2000 AND kt.kind = 'feature' GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mi.info) AS unique_info_types, SUM(CASE WHEN t.season_nr IN ('8', '20', '12', '24', '33') THEN 1 ELSE 0 END) AS count_specific_seasons, COUNT(DISTINCT pi.person_id) AS total_persons_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info_idx AS mi ON t.id = mi.movie_id LEFT JOIN person_info AS pi ON pi.person_id = t.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS numeric)) FILTER (WHERE mi_idx.info_type_id = '100') AS average_rating_100, SUM(CAST(mi_idx.info AS numeric)) FILTER (WHERE mi_idx.info_type_id = '101') AS total_budget_101, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = '99') AS count_of_person_info_type_99 FROM movie_info_idx mi_idx JOIN company_type ct ON mi_idx.movie_id = ct.id LEFT JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND (mi_idx.note IS NULL OR mi_idx.note != '') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT ct.kind AS company_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mki.movie_id) AS total_movies, COUNT(DISTINCT kw.id) AS total_unique_keywords, SUM(CASE WHEN akat.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_dubbed_versions FROM aka_title akat JOIN movie_keyword mkw ON akat.movie_id = mkw.movie_id JOIN keyword kw ON mkw.keyword_id = kw.id JOIN movie_info_idx mki ON akat.movie_id = mki.movie_id JOIN company_type ct ON mki.info_type_id = ct.id WHERE akat.production_year BETWEEN 2000 AND 2020 GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT at.id) AS total_titles, AVG(cc.status_id) AS average_cast_status, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM company_name AS cn JOIN aka_title AS at ON cn.id = at.kind_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN person_info AS pi ON cc.subject_id = pi.person_id JOIN keyword AS k ON at.id = k.id WHERE cn.name IN ('Sunset Productions (II)', 'Coming Soon TV', 'Tucker Film', 'Windfall Films', 'NMK') AND k.keyword IN ('lavatory', 'society') AND at.production_year BETWEEN 2000 AND 2023 GROUP BY cn.country_code ORDER BY total_us_companies DESC, latest_production_year DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT lt.id) AS number_of_link_types, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, MAX(cn.id) AS max_company_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON cn.id = lt.id WHERE cn.md5sum IN ('98b3290c059fa23b472f7277bba9e6c9', '7ddd8c092b2c8500fe94d9138d2cacd7') AND lt.id IN ('12', '13', '4', '14') GROUP BY ct.kind;
SELECT SUM(mc.company_id) AS total_company_ids, AVG(CASE WHEN mc.company_type_id = 1 THEN mc.movie_id ELSE NULL END) AS average_movie_id_for_type_1, COUNT(DISTINCT ml.link_type_id) AS unique_link_types, COUNT(DISTINCT pi.person_id) AS unique_person_count, AVG(CASE WHEN pi.info_type_id = 5 THEN LENGTH(pi.info) ELSE NULL END) AS average_info_length_for_type_5 FROM movie_companies mc FULL OUTER JOIN movie_link ml ON mc.movie_id = ml.movie_id FULL OUTER JOIN person_info pi ON mc.company_id = pi.person_id GROUP BY mc.company_type_id;
SELECT AVG(pi.id) AS average_person_info_id, COUNT(DISTINCT an.person_id) AS unique_aka_person_count, COUNT(DISTINCT lt.id) AS link_type_count, SUM(CASE WHEN an.name IS NOT NULL THEN 1 ELSE 0 END) AS not_null_aka_names, MAX(an.id) AS max_aka_name_id FROM aka_name AS an JOIN person_info AS pi ON an.person_id = pi.person_id JOIN link_type AS lt ON pi.info LIKE '%' || lt.link || '%' GROUP BY an.person_id HAVING COUNT(DISTINCT pi.info_type_id) > 1 ORDER BY unique_aka_person_count DESC, average_person_info_id ASC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN t.kind_id = '2' THEN 1 ELSE 0 END) AS number_of_kind_id_2, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved, MAX(t.episode_nr) AS highest_episode_number FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN person_info AS pi ON pi.person_id = mc.company_id WHERE mc.note LIKE '%(TV)%' AND t.production_year BETWEEN 1990 AND 2000 GROUP BY t.production_year ORDER BY t.production_year;
SELECT AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.company_id) AS number_of_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS german_movie_count FROM movie_info mi JOIN movie_companies ci ON mi.movie_id = ci.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN title t ON mi.movie_id = t.id WHERE (mi.note LIKE '%(interviews)%' OR mi.note LIKE '%(Original Version)%' OR mi.note LIKE '%(only a few lines)%' OR mi.note LIKE '%(English subtitles)%') GROUP BY mi.movie_id;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(mc.company_type_id) AS avg_company_type_id, COUNT(DISTINCT mc.company_id) AS num_companies_involved, link.link AS link_description, COUNT(link.id) AS num_links FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id INNER JOIN link_type AS link ON mc.company_type_id = link.id GROUP BY k.keyword, link.link ORDER BY num_movies DESC, num_companies_involved DESC;
SELECT ct.kind AS company_kind, AVG(mc.id) AS average_movie_company_id, COUNT(DISTINCT k.id) AS total_distinct_keywords, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000, COUNT(DISTINCT rt.id) AS total_distinct_roles FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN keyword AS k ON k.id = ml.id JOIN role_type AS rt ON rt.id = ml.link_type_id GROUP BY ct.kind HAVING COUNT(DISTINCT at.id) > 5;
SELECT cn.name AS company_name, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_runtime, SUM(CASE WHEN it.info = 'locations' THEN 1 ELSE 0 END) AS total_locations, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN complete_cast AS cc ON mi_idx.movie_id = cc.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE it.info IN ('runtimes', 'locations') AND cn.name_pcode_nf = 'G2642' GROUP BY cn.name ORDER BY average_runtime DESC, number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(n.imdb_id) AS avg_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM movie_companies AS mc JOIN link_type AS lt ON mc.company_type_id = lt.id JOIN name AS n ON mc.movie_id = n.id WHERE mc.company_type_id = 1 AND lt.link IN ('featured in', 'alternate language version of') AND mc.movie_id = 18491 GROUP BY lt.LINK;
SELECT ct.kind AS company_category, COUNT(DISTINCT ml.movie_id) AS total_movies_linked, COUNT(DISTINCT akn.person_id) AS distinct_person_count, SUM(CASE WHEN ml.id IN ('3629', '2913', '3444', '4653', '4412', '4422') THEN 1 ELSE 0 END) AS special_movie_links_count FROM movie_link AS ml JOIN company_type AS ct ON ct.kind IN ('special effects companies', 'miscellaneous companies') LEFT JOIN aka_name AS akn ON akn.person_id = ml.movie_id GROUP BY ct.kind;
SELECT ml.movie_id, lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(cn.imdb_id) AS avg_company_imdb_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN company_name AS cn ON ml.movie_id = cn.id GROUP BY ml.movie_id, lt.LINK ORDER BY total_links DESC, avg_company_imdb_id DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.avg_movie_score) AS average_movie_score, SUM(CASE WHEN mi.info = '(Original Version)' THEN 1 ELSE 0 END) AS original_version_count, SUM(CASE WHEN mi.info = '(English subtitles)' THEN 1 ELSE 0 END) AS english_subtitles_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN (SELECT movie_id, AVG(CAST(info AS DOUBLE PRECISION)) AS avg_movie_score FROM movie_info_idx WHERE info_type_id = 101 GROUP BY movie_id) AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN movie_info AS mi ON mc.movie_id = mi.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT an.person_id) AS number_of_unique_persons, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN ml.link_type_id = 12 THEN 1 ELSE 0 END) AS count_of_link_type_12 FROM aka_title AS ak JOIN aka_name AS an ON ak.id = an.person_id JOIN movie_keyword AS mk ON ak.movie_id = mk.movie_id JOIN movie_link AS ml ON ak.movie_id = ml.movie_id WHERE an.name_pcode_cf IN ('P54', 'A5321', 'D232', 'A1463', 'V4214', 'A235') AND ak.kind_id = (SELECT id FROM info_type WHERE info = 'movie') AND ak.production_year BETWEEN 2000 AND 2020 GROUP BY ak.kind_id;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(at.production_year) AS average_production_year, SUM(mc.company_type_id) AS sum_company_types, MIN(n.name) AS earliest_name_entry FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS at ON ml.movie_id = at.movie_id JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN name AS n ON n.imdb_id = ANY(ARRAY[at.movie_id, ml.linked_movie_id]) WHERE lt.id IN ('14', '15', '17', '12') AND mc.company_type_id BETWEEN 1 AND 10 AND n.gender = 'M' GROUP BY lt.LINK ORDER BY total_links DESC, average_production_year;
SELECT ct.kind AS company_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_since_2000 FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN company_type AS ct ON t.kind_id = ct.id WHERE ct.kind IN ('special effects companies', 'distributors') AND t.production_year IS NOT NULL GROUP BY ct.kind;
SELECT cc.movie_id, COUNT(DISTINCT chn.id) AS number_of_characters, COUNT(DISTINCT cn.id) AS number_of_companies_involved, AVG(cn.country_code::int) AS average_country_code_numeric, SUM(CASE WHEN cn.name = 'Circuit Films' THEN 1 ELSE 0 END) AS count_circuit_films, SUM(CASE WHEN cn.name = 'Wild East Productions' THEN 1 ELSE 0 END) AS count_wild_east_productions, SUM(CASE WHEN cn.name = 'Léo & Compagnie' THEN 1 ELSE 0 END) AS count_leo_and_compagnie, SUM(CASE WHEN cn.name = 'C3Studios' THEN 1 ELSE 0 END) AS count_c3studios, SUM(CASE WHEN cn.name = 'M.A. Marcondes' THEN 1 ELSE 0 END) AS count_ma_marcondes FROM complete_cast cc JOIN char_name chn ON cc.subject_id = chn.id JOIN company_name cn ON cc.movie_id = cn.imdb_id GROUP BY cc.movie_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(LENGTH(mi_idx.info)) AS average_info_length, SUM(CASE WHEN mi_idx.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_info_count FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people_involved, AVG(ci.nr_order) AS avg_cast_order, SUM(case when mi_idx.info_type_id = '100' THEN 1 ELSE 0 END) AS count_type_100, SUM(case when mi_idx.info_type_id = '101' THEN 1 ELSE 0 END) AS count_type_101, SUM(case when mi_idx.info_type_id = '99' THEN 1 ELSE 0 END) AS count_type_99 FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND ci.person_role_id = (SELECT id FROM info_type WHERE id = '94') GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT cc.id) AS total_complete_cast_records, COUNT(DISTINCT k.id) AS total_unique_keywords FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_companies mc ON at.movie_id = mc.movie_id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN keyword k ON k.id = ANY(ARRAY[6884, 9943]) WHERE at.md5sum IN ('44c0080e0912e3ca5d10075839063f1b', 'a5be4ea19dc2872037b2956fcb845de1', 'ec82f287db52c1fe7be3ed79dfb0a06a', '42824af6235a76885dde510273e9d1a7', 'cd3e9be473ea7275bd1b401dce7d08f9', 'c994ea29391a6ac08145be73f75d09ff') GROUP BY kt.kind;
SELECT cn.name AS company_name, COUNT(at.id) AS number_of_titles, AVG(at.production_year) AS average_production_year, kt.kind AS movie_kind, COUNT(DISTINCT at.movie_id) AS unique_movies FROM aka_title at JOIN company_name cn ON at.movie_id = cn.id JOIN comp_cast_type kt ON at.kind_id = kt.id WHERE cn.name_pcode_sf IN ('G3532', 'J2614') AND cn.name IN ('CHASE', 'Lowbrow Customs', 'Universal Film R. T.', 'Aloisia Film', 'Home on the Range Productions') GROUP BY cn.name, kt.kind ORDER BY number_of_titles DESC, average_production_year DESC;
SELECT it.info AS info_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT kw.id) AS unique_keywords_count, SUM(mc.company_id) AS total_company_id_sum, rt.ROLE AS role_type, COUNT(DISTINCT cc.movie_id) AS movies_count FROM info_type AS it JOIN movie_companies AS mc ON it.id = mc.company_type_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN keyword AS kw ON mc.movie_id = kw.id LEFT JOIN name AS nm ON cc.subject_id = nm.id JOIN role_type AS rt ON cc.status_id = rt.id WHERE mc.company_type_id = '1' AND (nm.name_pcode_nf = 'B4645' OR nm.name_pcode_nf = 'B1436') AND (rt.ROLE = 'producer' OR rt.ROLE = 'actor') AND mc.movie_id IN ('1646081', '1699392', '1666532', '1678176', '1677967') GROUP BY it.info, rt.ROLE ORDER BY movies_count DESC, average_imdb_id;
