SELECT kt.kind AS movie_kind, AVG(mi.info::numeric) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT an.id) AS total_actors, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_production_companies FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'rating' LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN complete_cast an ON cc.id = an.id WHERE kt.kind IN ('video game', 'episode', 'tv series', 'tv mini series') AND t.production_year > 2000 GROUP BY kt.kind HAVING AVG(mi.info::numeric) > 5.0 ORDER BY average_rating DESC;
SELECT t.kind_id AS movie_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS direct_to_video_count, SUM(CASE WHEN t.imdb_index IN ('I', 'II') THEN 1 ELSE 0 END) AS sequel_count, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(pi.info_type_id) AS average_info_type_id FROM title AS t LEFT JOIN person_info AS pi ON t.id = pi.person_id LEFT JOIN char_name AS cn ON cn.id = pi.person_id LEFT JOIN keyword AS k ON k.id = pi.info_type_id GROUP BY t.kind_id HAVING COUNT(DISTINCT cn.surname_pcode) > 1 ORDER BY number_of_movies DESC;
SELECT k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, COUNT(DISTINCT n.id) AS number_of_actors FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info AS mi ON mk.movie_id = mi.movie_id AND mi.info_type_id = 4 INNER JOIN name AS n ON mi.movie_id = n.imdb_id WHERE mk.keyword_id IN (3881, 2089, 3415, 3648) GROUP BY k.keyword ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, AVG((n.gender = 'M')::int) AS avg_male_actors, AVG((n.gender = 'F')::int) AS avg_female_actors, SUM(CASE WHEN mi_idx.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_movies, COUNT(DISTINCT pi.person_id) AS number_of_person_info_entries FROM company_type AS ct JOIN company_name AS cn ON cn.country_code NOT LIKE '[pl]' JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = cn.id LEFT JOIN person_info AS pi ON pi.info_type_id = mi_idx.info_type_id LEFT JOIN name AS n ON n.id = pi.person_id WHERE cn.name LIKE '%Entertainment%' AND ct.id IN (1, 2, 3) AND n.surname_pcode LIKE 'A4%' GROUP BY ct.kind;
SELECT cct.kind AS cast_type_kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(kt.id) AS average_kind_type_id, SUM(mk.keyword_id) AS total_keyword_id_sum FROM comp_cast_type cct JOIN movie_keyword mk ON cct.id = mk.movie_id JOIN kind_type kt ON mk.movie_id = kt.id WHERE cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND mk.movie_id IN (13927, 7318, 9248, 15407) GROUP BY cct.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT akn.person_id) AS unique_person_count, AVG(LENGTH(akn.name)) AS average_name_length, SUM(CASE WHEN akn.surname_pcode = 'A262' THEN 1 ELSE 0 END) AS surname_A262_count, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords FROM company_type AS ct LEFT JOIN movie_companies AS mc ON ct.id = mc.company_type_id LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_name AS akn ON mk.movie_id = akn.person_id GROUP BY ct.kind
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.info::NUMERIC) AS average_movie_length, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM movie_companies AS mc JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 1 JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN name AS n ON n.id = ANY (ARRAY [9129, 3874, 7033, 7761, 6454]) WHERE mc.company_type_id IN (1, 2) AND mi.note LIKE '%(a few words)%' GROUP BY mc.company_id ORDER BY number_of_movies DESC, average_movie_length;
SELECT AVG(aka_title.production_year) AS avg_production_year, COUNT(DISTINCT movie_keyword.keyword_id) AS num_keywords, COUNT(DISTINCT aka_title.movie_id) AS num_movies, AVG(COUNT(DISTINCT aka_title.movie_id)) OVER (PARTITION BY aka_title.production_year) AS avg_num_movies_per_year FROM aka_title JOIN complete_cast ON aka_title.movie_id = complete_cast.movie_id JOIN movie_keyword ON aka_title.movie_id = movie_keyword.movie_id WHERE complete_cast.status_id = 1 GROUP BY aka_title.production_year;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT akat.movie_id) AS total_movies FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id LEFT JOIN movie_companies AS mc ON akat.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN movie_keyword AS mk ON akat.movie_id = mk.movie_id WHERE akat.production_year IS NOT NULL AND mk.keyword_id = 2464 GROUP BY kt.kind ORDER BY average_production_year DESC, total_us_companies DESC;
SELECT AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN mi.info = 'Hungarian' THEN 1 ELSE 0 END) AS total_hungarian_movies, SUM(CASE WHEN mi.info = 'Ukrainian' THEN 1 ELSE 0 END) AS total_ukrainian_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN movie_info mi ON mi.movie_id = mk.movie_id JOIN movie_companies mc ON mc.movie_id = mk.movie_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND mi.info IN ('Hungarian', 'Ukrainian', 'Georgian', 'Gujarati') AND mi.note = '(some dialogue)' AND mc.id IN ('3664', '4755', '120', '941', '3015') GROUP BY mc.company_id HAVING COUNT(DISTINCT mk.keyword_id) > 5 ORDER BY average_rating DESC, number_of_movies_with_keywords DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT an.id) AS total_aka_names, COUNT(DISTINCT mi.id) AS total_movie_info, SUM(CASE WHEN lt.LINK = 'remade as' THEN 1 ELSE 0 END) AS total_remake_links FROM title t LEFT JOIN aka_name an ON t.id = an.person_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id LEFT JOIN link_type lt ON mi.info_type_id = lt.id LEFT JOIN company_type ct ON t.kind_id = ct.id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_production_companies, COUNT(DISTINCT pi.person_id) AS number_of_individual_contributors, SUM(CASE WHEN t.md5sum IN ('1f1ce7379075bf949e40cb57616b3f4d', '0d05192e412a817cc87628ae56d58d5b') THEN 1 ELSE 0 END) AS count_of_specific_md5sum FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN person_info pi ON pi.person_id = t.id WHERE ct.kind = 'production' AND t.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT pi.person_id) AS number_of_unique_persons, AVG(pi.id) AS average_person_info_id, SUM(CASE WHEN pi.note IN ('Mimi Gold', 'Paul Becker', 'Rory Leahy', 'Archie York', 'Laurel A Adler', 'Chris') THEN 1 ELSE 0 END) AS count_special_notes FROM kind_type kt LEFT JOIN movie_link ml ON ml.link_type_id = kt.id LEFT JOIN company_name cn ON cn.imdb_id = ml.movie_id LEFT JOIN person_info pi ON pi.info_type_id = kt.id WHERE ml.link_type_id = '15' GROUP BY kt.kind;
SELECT rt.ROLE, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.LINK = 'featured in' THEN 1 ELSE 0 END) AS featured_in_count, SUM(CASE WHEN lt.LINK = 'followed by' THEN 1 ELSE 0 END) AS followed_by_count, SUM(CASE WHEN lt.LINK = 'referenced in' THEN 1 ELSE 0 END) AS referenced_in_count, SUM(CASE WHEN lt.LINK = 'remade as' THEN 1 ELSE 0 END) AS remade_as_count FROM title AS t JOIN role_type AS rt ON t.kind_id = rt.id JOIN link_type AS lt ON t.kind_id = lt.id JOIN info_type AS it ON t.kind_id = it.id WHERE t.production_year BETWEEN 1990 AND 2010 AND t.episode_nr IS NOT NULL AND rt.id = 7 AND rt.ROLE = 'editor' AND lt.id IN (5, 15) AND it.id IN (31, 10, 50, 76, 73) GROUP BY rt.ROLE ORDER BY total_titles DESC;
SELECT kt.kind AS movie_kind, AVG(mk.keyword_id) AS average_keyword_id, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN cct.kind = 'crew' THEN 1 ELSE 0 END) AS total_crew_companies, MAX(cn.name) AS largest_company_name FROM movie_keyword AS mk JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id JOIN kind_type AS kt ON ml.link_type_id = kt.id WHERE ml.link_type_id IN ('7', '8') AND cct.id IN ('2', '1', '4', '3') GROUP BY kt.kind ORDER BY number_of_movies DESC, average_keyword_id;
SELECT avg(pi.info::numeric) AS average_rating, count(DISTINCT ci.person_id) AS number_of_actors, count(DISTINCT mk.keyword_id) AS number_of_keywords, kt.kind_id, kt.production_year FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id INNER JOIN cast_info AS ci ON mc.movie_id = ci.movie_id INNER JOIN aka_title AS kt ON mc.movie_id = kt.movie_id INNER JOIN person_info AS pi ON ci.person_id = pi.person_id AND pi.info_type_id = 101 WHERE kt.title IN ('Law & Order: Special Victims Unit', 'Plus One Minus One', 'The Searchers') AND mc.movie_id IN ('12242', '26379') AND kt.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind_id, kt.production_year ORDER BY average_rating DESC, number_of_actors DESC, number_of_keywords DESC;
SELECT cn.country_code, kt.kind AS title_kind, t.production_year AS year_of_production, COUNT(DISTINCT t.id) AS total_titles, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_names_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_names_count FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN name n ON t.id = n.imdb_id WHERE t.production_year IS NOT NULL AND (n.gender = 'M' OR n.gender = 'F') GROUP BY cn.country_code, kt.kind, t.production_year ORDER BY cn.country_code, total_titles DESC, t.production_year DESC;
SELECT t.title AS movie_title, t.production_year, COUNT(ci.id) AS total_cast, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT a.id) AS total_alternate_titles, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_cast_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_cast_count, COUNT(DISTINCT mi.id) AS total_movie_info_entries FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN aka_title a ON t.id = a.movie_id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info mi ON t.id = mi.movie_id WHERE t.production_year > 2000 AND n.name_pcode_cf IN ('A264', 'A4312') AND ci.nr_order IN (20, 21, 42) AND ci.person_role_id IN (936, 1189, 544) AND a.episode_of_id IN (23907, 8118) GROUP BY t.title, t.production_year ORDER BY t.production_year DESC, total_cast DESC;
SELECT rt.ROLE as role_type, COUNT(DISTINCT t.id) as total_titles, COALESCE(SUM(t.episode_nr), 0) as total_episodes, ROUND(AVG(t.production_year), 2) as average_production_year FROM title t JOIN role_type rt ON t.kind_id = rt.id GROUP BY rt.ROLE ORDER BY total_titles DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count FROM cast_info ci JOIN kind_type kt ON ci.person_role_id = kt.id JOIN name n ON ci.person_id = n.id JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE cc.subject_id = 1 AND ci.id IN (17192, 15329, 15074) AND kt.kind <> 'unknown' GROUP BY kt.kind ORDER BY total_movies DESC, movie_kind;
SELECT rt.ROLE, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS DOUBLE PRECISION)) AS average_rating, SUM(CASE WHEN mi.note IN ('(some dialogue)', '(only a few lines)', '(Original Version)', '(a few words)', '(a few lines)', '(English version)') THEN 1 ELSE 0 END) AS dialogue_mentions_count FROM movie_info_idx AS mi_idx JOIN movie_info AS mi ON mi_idx.movie_id = mi.movie_id JOIN person_info AS pi ON mi.movie_id = pi.info_type_id JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE mi_idx.info_type_id = 3 AND mi.info_type_id IN (24, 36) AND rt.id IN ('8', '10', '3') AND rt.role IN ('costume designer', 'miscellaneous crew', 'writer', 'composer') GROUP BY rt.ROLE ORDER BY average_rating DESC, number_of_movies DESC;
SELECT AVG(ak.title_count) AS average_title_count, MAX(ak.max_production_year) AS latest_production_year, MIN(ak.min_production_year) AS earliest_production_year, SUM(ak.title_count) AS total_titles, COUNT(DISTINCT ki.id) AS total_unique_keywords, COUNT(DISTINCT pi.person_id) AS total_unique_persons FROM (SELECT at.movie_id, COUNT(at.id) AS title_count, MAX(at.production_year) AS max_production_year, MIN(at.production_year) AS min_production_year FROM aka_title at GROUP BY at.movie_id ) ak LEFT JOIN movie_keyword mk ON mk.movie_id = ak.movie_id LEFT JOIN keyword ki ON ki.id = mk.keyword_id AND ki.keyword IN ('vampire-hunter', 'training', 'newspaper-editor', 'multiple-views', 'historical-fiction', 'forbidden-love') LEFT JOIN movie_info_idx mi ON mi.movie_id = ak.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id GROUP BY ki.keyword;
SELECT kt.kind, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_complete_status_4, COUNT(DISTINCT pi.person_id) AS unique_persons_with_info FROM kind_type kt LEFT JOIN movie_link ml ON kt.id = ml.link_type_id LEFT JOIN complete_cast cc ON ml.movie_id = cc.movie_id LEFT JOIN cast_info ci ON ml.movie_id = ci.movie_id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ml.movie_id IN (50, 8753, 6613, 11172, 11020, 10583) AND ml.link_type_id IN (4, 13, 9) AND cc.subject_id = 1 AND cc.status_id IN (4, 3) AND pi.note IN ('matt-282', 'K-maf', '2Fun', 'Todd Adelman') AND pi.id IN (4001, 3574) AND ci.person_role_id IN (533, 546, 1445) GROUP BY kt.kind;
SELECT ct.kind AS cast_type_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(mi.info_type_id) AS average_info_type_id, COUNT(DISTINCT rt.id) AS distinct_role_types, SUM(CASE WHEN ml.linked_movie_id IN ('2506545', '2342579', '147212', '15711', '1448011') THEN 1 ELSE 0 END) AS linked_movies_count, STRING_AGG(DISTINCT mi.info, ', ') AS movie_languages FROM movie_link AS ml JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN comp_cast_type AS ct ON ml.link_type_id = ct.id JOIN role_type AS rt ON ct.id = rt.id WHERE mi.info IN ('Tatar', 'Arabic', 'Slovenian', 'Mandarin', 'Maori', 'Icelandic') AND rt.role IN ('actor', 'writer', 'miscellaneous crew', 'director') AND mi.id IN ('7270303', '7268889', '7270059', '7267623', '7271071', '7268128') AND ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY ct.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT comp.id) AS number_of_companies, AVG(CAST(SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)') AS INTEGER)) AS average_production_year, COUNT(DISTINCT ccast.subject_id) AS number_of_unique_subjects, COUNT(DISTINCT k.id) AS number_of_keywords, SUM(CASE WHEN lt.link ILIKE '%spin off%' THEN 1 ELSE 0 END) AS count_spin_off_links FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS comp ON mc.company_id = comp.id LEFT JOIN complete_cast AS ccast ON mc.movie_id = ccast.movie_id LEFT JOIN movie_info_idx AS mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword AS k ON mi.info = k.keyword LEFT JOIN link_type AS lt ON mi.info_type_id = lt.id WHERE mc.note NOT LIKE '%(TV)%' AND SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)')::INTEGER BETWEEN 1990 AND 2023 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_sequels, MAX(pi.info) AS latest_actor_information FROM char_name cn JOIN cast_info ci ON cn.id = ci.person_role_id JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE cn.surname_pcode IN ('A', 'T61', 'E153', 'A13', 'C2', 'B6353') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') GROUP BY cn.name;
SELECT it.info AS info_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT kw.id) AS unique_keywords_count, SUM(mc.company_id) AS total_company_id_sum, rt.ROLE AS role_type, COUNT(DISTINCT cc.movie_id) AS movies_count FROM info_type AS it JOIN movie_companies AS mc ON it.id = mc.company_type_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN keyword AS kw ON mc.movie_id = kw.id LEFT JOIN name AS nm ON cc.subject_id = nm.id JOIN role_type AS rt ON cc.status_id = rt.id WHERE mc.company_type_id = '1' AND (nm.name_pcode_nf = 'B4645' OR nm.name_pcode_nf = 'B1436') AND (rt.ROLE = 'producer' OR rt.ROLE = 'actor') AND mc.movie_id IN ('1646081', '1699392', '1666532', '1678176', '1677967') GROUP BY it.info, rt.ROLE ORDER BY movies_count DESC, average_imdb_id;
SELECT kt.kind AS movie_kind, rt.role AS cast_role, AVG(aka.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS total_unique_actors, SUM(CASE WHEN k.keyword = 'vietnamese-restaurant' THEN 1 ELSE 0 END) AS vietnamese_restaurant_keyword_count, SUM(CASE WHEN k.keyword = 'symbol' THEN 1 ELSE 0 END) AS symbol_keyword_count FROM aka_title aka JOIN kind_type kt ON aka.kind_id = kt.id JOIN cast_info ci ON aka.movie_id = ci.movie_id JOIN role_type rt ON ci.role_id = rt.id JOIN keyword k ON aka.id = k.id WHERE aka.production_year > 2000 GROUP BY kt.kind, rt.role ORDER BY total_unique_actors DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS count_similar_movies, rt.role AS role_type, COUNT(DISTINCT cct.id) AS count_of_cast_types FROM aka_title at JOIN movie_link ml ON at.movie_id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id JOIN role_type rt ON rt.id = 4 JOIN comp_cast_type cct ON cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') WHERE at.md5sum IN ('efba398a3a676bcdd49811cf868754d9', '532902abff1e92fb97a2eef43fb530a6', '803eb3353f2aeb81555223391ef4de88', 'eaf5b1adddabc3742e27581d5b19c2ac') GROUP BY rt.role;
