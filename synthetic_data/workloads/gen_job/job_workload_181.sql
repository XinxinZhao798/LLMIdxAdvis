SELECT kt.kind AS movie_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, COUNT(DISTINCT k.id) AS unique_keywords_used FROM movie_link AS ml JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN kind_type AS kt ON kt.id = cc.status_id JOIN name AS n ON n.id = (SELECT subject_id FROM complete_cast WHERE movie_id = ml.movie_id LIMIT 1) JOIN movie_keyword AS mk ON mk.movie_id = ml.movie_id JOIN keyword AS k ON k.id = mk.keyword_id WHERE kt.id IN (7, 4) AND n.name_pcode_cf IN ('A2343', 'A3152', 'A6216', 'A2324', 'A436', 'A254') AND n.imdb_index = 'IV' AND k.phonetic_code IN ('S4623', 'I5264', 'U5321') AND k.keyword IN ('scavenging-for-food', 'garbage-truck', 'obscenity', 'red-wine', 'sexism', 'glass') GROUP BY kt.kind;
SELECT pi.person_id, COUNT(DISTINCT an.id) AS alternative_name_count, AVG(LENGTH(an.name)) AS avg_alternative_name_length, COUNT(DISTINCT pi.id) AS info_count, cct.kind AS cast_type FROM person_info pi JOIN info_type it ON pi.info_type_id = it.id AND it.info IN ('LD release date', 'LD master format', 'LD analog right', 'LD aspect ratio') JOIN aka_name an ON pi.person_id = an.person_id JOIN comp_cast_type cct ON cct.id = pi.info_type_id GROUP BY pi.person_id, cct.kind ORDER BY alternative_name_count DESC, avg_alternative_name_length DESC, info_count DESC;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN akat.imdb_index IS NOT NULL THEN 1 ELSE 0 END) AS indexed_movies_count, COUNT(mk.keyword_id) AS total_keywords FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT at.id) AS total_titles, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.episode_of_id) AS total_series, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) AS total_videos, COUNT(DISTINCT ct.id) AS total_company_types, COUNT(DISTINCT cct.id) AS total_cast_types, COUNT(DISTINCT lt.id) AS total_link_types FROM aka_title at LEFT JOIN company_type ct ON at.movie_id = ct.id LEFT JOIN comp_cast_type cct ON at.kind_id = cct.id LEFT JOIN link_type lt ON at.id = lt.id WHERE at.production_year BETWEEN 1990 AND 2000 AND at.phonetic_code IN ('S1232', 'W5165') AND ct.id IS NOT NULL AND cct.id IN (1) AND lt.id IN (12, 2, 4, 15);
SELECT kt.kind AS content_type, COUNT(DISTINCT chn.id) AS unique_characters, AVG(comp_cast_type.id) AS average_comp_cast_type_id, COUNT(DISTINCT company_type.id) AS number_of_company_types FROM char_name AS chn JOIN kind_type AS kt ON chn.id = kt.id JOIN comp_cast_type ON chn.id = comp_cast_type.id JOIN company_type ON chn.id = company_type.id WHERE kt.kind IN ('tv movie', 'tv series', 'video game', 'movie', 'episode', 'video movie') AND company_type.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY kt.kind ORDER BY unique_characters DESC, average_comp_cast_type_id;
SELECT it.info AS info_category, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT cc.id) AS total_complete_cast_records, COUNT(DISTINCT mi_idx.movie_id) AS movies_with_additional_info, AVG(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS average_votes, SUM(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_votes, MIN(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS min_votes, MAX(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS max_votes, COUNT(DISTINCT lt.id) AS number_of_link_types, STRING_AGG(DISTINCT lt.link, ', ') AS link_types_used FROM complete_cast cc JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id JOIN link_type lt ON lt.id = mi_idx.info_type_id WHERE cc.status_id <> 0 AND it.info IN ('height', 'tech info', 'votes', 'mini biography') AND lt.link IN ('remake of', 'remade as', 'featured in', 'spin off') GROUP BY it.info;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(mi_idx.info::NUMERIC) AS average_rating, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT ci.person_id) AS total_actors, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 100 LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE t.production_year BETWEEN 1990 AND 2020 AND (t.imdb_index = 'V' OR t.imdb_index = 'I' OR t.imdb_index = 'II') AND ci.note IS NOT NULL AND mi_idx.note IS NOT NULL GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS total_series, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info, COUNT(DISTINCT pi.person_id) AS total_persons_with_info, COUNT(DISTINCT cn.id) AS total_companies, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at LEFT JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_info mi ON at.movie_id = mi.movie_id LEFT JOIN person_info pi ON mi.movie_id = pi.person_id LEFT JOIN company_name cn ON mi.movie_id = cn.imdb_id GROUP BY kt.kind ORDER BY total_alternate_titles DESC;
SELECT n.gender, COUNT(DISTINCT n.id) AS number_of_people, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN lt.LINK = 'sequel' THEN 1 ELSE 0 END) AS count_sequel_links, COUNT(DISTINCT k.id) AS number_of_keywords, COUNT(DISTINCT an.id) AS number_of_aka_names FROM name AS n LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN movie_link AS ml ON ml.movie_id IN (SELECT movie_id FROM movie_info_idx WHERE id IN (1031, 375, 3321, 4177, 537)) LEFT JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id GROUP BY n.gender HAVING COUNT(DISTINCT k.id) > 5 ORDER BY average_movie_rating DESC;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_unique_characters, SUM(CASE WHEN ct.kind = 'Production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(mc.note) AS longest_note FROM aka_title AS akat JOIN movie_companies AS mc ON akat.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN char_name AS cn ON akat.id = cn.id WHERE akat.production_year BETWEEN 2000 AND 2020 AND ct.kind IN ('Production', 'Distributors', 'Special Effects') GROUP BY ct.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT chn.id) AS total_character_names, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info, AVG(mi.info_type_id) AS average_info_type_id FROM title AS t LEFT JOIN char_name AS chn ON chn.id = t.id LEFT JOIN movie_info_idx AS mi ON mi.movie_id = t.id WHERE t.production_year BETWEEN 1990 AND 2020 AND (t.title LIKE '%Roaring Twenties%' OR t.title LIKE '%Nothing Like Experience%') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT c.name AS company_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(k.id) AS average_keyword_id, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS count_of_info_type_4, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords, STRING_AGG(DISTINCT mi.info, ', ') FILTER (WHERE mi.info_type_id = 4) AS movie_info_languages FROM company_name AS c JOIN movie_companies AS mc ON c.id = mc.company_id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON mc.movie_id = ci.movie_id WHERE c.country_code = '[us]' AND mi.info IN ('Czech', 'Ladino', 'Ukrainian') GROUP BY c.name ORDER BY number_of_movies DESC, average_keyword_id;
SELECT t.title, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_type_3_infos FROM title t JOIN movie_info mi ON t.id = mi.movie_id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 AND mi.info_type_id = 101 AND mk.keyword_id IN ('3774', '2749', '3382', '2831', '1138') AND mi_idx.info_type_id IN ('3', '5', '7') GROUP BY t.title ORDER BY average_rating DESC, total_linked_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS total_movies, AVG(ak.production_year) AS average_production_year, SUM(CASE WHEN ak.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_us_titles, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT n.id) AS number_of_contributors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS ak ON ml.movie_id = ak.movie_id JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id JOIN name AS n ON ak.id = n.id WHERE ak.title IS NOT NULL AND n.gender IN ('m', 'f') AND lt.id IN (3, 6) GROUP BY lt.LINK ORDER BY total_movies DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CASE WHEN n.gender = 'm' THEN 1.0 ELSE NULL END) AS avg_male_involvement, AVG(CASE WHEN n.gender = 'f' THEN 1.0 ELSE NULL END) AS avg_female_involvement, COUNT(DISTINCT an.person_id) AS unique_aka_names, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS count_info_type_4 FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN aka_name an ON an.person_id = mi.movie_id LEFT JOIN name n ON n.id = mi.movie_id WHERE mi.info LIKE '%Mandarin%' OR mi.info_type_id IN ('47', '5', '7') OR n.surname_pcode IN ('A432', 'A416', 'A414') OR n.imdb_index IN ('VI', 'XVII', 'XIV', 'I') GROUP BY it.info;
SELECT c.name AS company_name, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(name.imdb_id) AS average_imdb_id, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS count_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS count_female_actors FROM movie_link AS ml JOIN complete_cast AS cc ON cc.movie_id = ml.movie_id JOIN name ON name.id = cc.subject_id JOIN movie_companies AS mc ON mc.movie_id = ml.movie_id JOIN company_name AS c ON c.id = mc.company_id WHERE name.name_pcode_nf IN ('B534', 'A214', 'N6435', 'M243', 'O5254') GROUP BY c.name ORDER BY number_of_linked_movies DESC, average_imdb_id DESC;
SELECT t.title AS movie_title, COUNT(ci.id) AS total_cast_members, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.imdb_index IN ('I', 'II') THEN 1 ELSE 0 END) AS count_sequels, mi.info AS movie_info, COUNT(DISTINCT k.id) AS distinct_keywords FROM title AS t JOIN cast_info AS ci ON ci.movie_id = t.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id JOIN movie_info AS mi ON mi.movie_id = t.id LEFT JOIN keyword AS k ON mi.info = k.keyword WHERE ci.person_role_id = 619 AND t.production_year > 2005 GROUP BY t.title, mi.info ORDER BY total_cast_members DESC, average_production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count FROM cast_info ci JOIN kind_type kt ON ci.person_role_id = kt.id JOIN name n ON ci.person_id = n.id JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE cc.subject_id = 1 AND ci.id IN (17192, 15329, 15074) AND kt.kind <> 'unknown' GROUP BY kt.kind ORDER BY total_movies DESC, movie_kind;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS US_based_companies, t.production_year, COUNT(DISTINCT t.id) AS number_of_movies FROM title t LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year HAVING COUNT(DISTINCT t.id) > 10 ORDER BY t.production_year DESC;
