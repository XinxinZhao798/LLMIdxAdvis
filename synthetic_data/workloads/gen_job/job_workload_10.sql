SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_productions, COUNT(DISTINCT pi.person_id) AS unique_actors_info, MAX(n.name) AS latest_actor_name FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON ci.movie_id = t.id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN person_info pi ON n.id = pi.person_id LEFT JOIN company_name cn ON cn.imdb_id = t.imdb_id WHERE kt.kind IN ('tv series', 'video movie', 'movie', 'video game') AND (cn.country_code = '[us]' OR cn.country_code IS NULL) AND n.id IN ('7106', '6832', '5625') AND pi.info_type_id IN ('34', '39', '27', '21') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_actors, AVG(nk.keyword_count) AS average_keywords_per_actor, SUM(nk.keyword_count) AS total_keywords FROM name AS n INNER JOIN ( SELECT mk.movie_id, COUNT(*) AS keyword_count FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id WHERE k.phonetic_code IN ('H525', 'C4252', 'P3624', 'A543', 'F6526', 'M1525') GROUP BY mk.movie_id ) AS nk ON nk.movie_id = n.id INNER JOIN role_type AS rt ON rt.id IN ('1', '2', '6', '10', '5', '4') INNER JOIN movie_companies AS mc ON mc.movie_id = nk.movie_id WHERE n.gender IS NOT NULL GROUP BY rt.ROLE ORDER BY total_actors DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ct.id IN (3, 4) AND cn.country_code IN ('[mk]', '[ua]', '[kr]', '[ir]', '[ph]') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT cn.name AS company_name, cn.country_code, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN it.info = 'votes' THEN 1 ELSE 0 END) AS total_votes, COUNT(DISTINCT t.id) AS number_of_titles FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN title AS t ON mc.movie_id = t.id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE cn.country_code NOT IN ('US', 'CA') AND mc.company_type_id = 2 AND it.info IN ('rating', 'votes') AND cct.id IN (1, 3, 4) AND t.production_year BETWEEN 2010 AND 2020 GROUP BY cn.name, cn.country_code ORDER BY average_rating DESC, total_votes DESC, number_of_titles DESC, number_of_actors DESC LIMIT 10;
SELECT n.name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT ci.role_id) AS total_distinct_roles FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id WHERE mk.keyword_id IN (3583, 3557) GROUP BY n.name ORDER BY total_movies DESC, average_cast_position;
