SELECT c.name AS company_name, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(name.imdb_id) AS average_imdb_id, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS count_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS count_female_actors FROM movie_link AS ml JOIN complete_cast AS cc ON cc.movie_id = ml.movie_id JOIN name ON name.id = cc.subject_id JOIN movie_companies AS mc ON mc.movie_id = ml.movie_id JOIN company_name AS c ON c.id = mc.company_id WHERE name.name_pcode_nf IN ('B534', 'A214', 'N6435', 'M243', 'O5254') GROUP BY c.name ORDER BY number_of_linked_movies DESC, average_imdb_id DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributors, COUNT(DISTINCT pi.person_id) AS number_of_people_involved, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN movie_companies AS mc ON mi_idx.movie_id = mc.movie_id JOIN person_info AS pi ON mi_idx.movie_id = pi.person_id JOIN movie_link AS ml ON mi_idx.movie_id = ml.movie_id WHERE it.id IN (18, 57, 72, 5, 81) AND mc.id = 1085 AND mi_idx.id = 21 AND mc.note IS NOT NULL AND mi_idx.movie_id IN (8975, 19179, 18832, 8413, 9810) GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT cn.country_code, k.keyword, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(CAST(NULLIF(REGEXP_REPLACE(mi_duration.info, '[^\d.]', '', 'g'), '') AS NUMERIC)) AS average_movie_duration, SUM(CASE WHEN mi_release.info_type_id = 4 THEN 1 ELSE 0 END) AS count_movie_releases FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN movie_info AS mi_release ON mc.movie_id = mi_release.movie_id AND mi_release.info_type_id = 4 LEFT JOIN movie_info AS mi_duration ON mc.movie_id = mi_duration.movie_id AND mi_duration.info_type_id = 3 WHERE k.keyword IN ('dead-mother', 'manipulation') AND mi_release.note IN ('(some dialogue)', '(none)', '(only a few lines)', '(a few lines)', '(a few words)') GROUP BY cn.country_code, k.keyword ORDER BY cn.country_code, k.keyword;
SELECT ct.kind AS company_kind, COUNT(DISTINCT at.id) AS total_movies, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_movie_rating, SUM(CASE WHEN k.keyword = 'staring' THEN 1 ELSE 0 END) AS count_staring_keyword, SUM(CASE WHEN k.keyword = 'disarming-someone' THEN 1 ELSE 0 END) AS count_disarming_keyword FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN aka_title AS at ON mc.movie_id = at.id JOIN movie_info_idx AS mi_idx ON at.id = mi_idx.movie_id LEFT JOIN movie_keyword AS mk ON at.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE ct.kind IN ('production companies', 'distributors') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS DECIMAL) >= 5.0 AND at.production_year BETWEEN 2000 AND 2010 GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.person_id) AS total_unique_actors, AVG(CAST(t.production_year AS DECIMAL)) AS average_production_year, AVG(CAST(sub.nr_roles AS DECIMAL)) AS average_roles_per_movie FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN ( SELECT movie_id, COUNT(*) AS nr_roles FROM cast_info GROUP BY movie_id ) sub ON t.id = sub.movie_id LEFT JOIN cast_info ci ON t.id = ci.movie_id WHERE t.production_year IS NOT NULL AND t.id IN ('19580', '17102', '17123', '10072') GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT pi.person_id) AS total_actors FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN movie_info mi ON ci.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'actor') GROUP BY kt.kind HAVING COUNT(DISTINCT ci.movie_id) > 10 ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_produced_after_2000 FROM aka_name an INNER JOIN name n ON an.person_id = n.id INNER JOIN aka_title at ON n.id = at.movie_id INNER JOIN title t ON at.movie_id = t.id INNER JOIN kind_type kt ON t.kind_id = kt.id INNER JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN char_name chn ON an.person_id = chn.id WHERE (chn.name = 'Clarkson' OR chn.name = 'Miguelito' OR chn.name = 'Basket coach') GROUP BY kt.kind;
SELECT kt.kind AS content_type, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(movie_link.id) AS average_movie_link_id, SUM(mc.company_id) AS total_company_ids, COUNT(DISTINCT k.id) AS unique_keywords FROM cast_info ci JOIN kind_type kt ON ci.movie_id IN (2360100, 2237184, 947729, 1615145) JOIN movie_link ON movie_link.movie_id = ci.movie_id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN keyword k ON k.phonetic_code IN ('S4623', 'P4162', 'M4252') WHERE kt.kind IN ('video game', 'tv movie', 'episode', 'video movie', 'tv series', 'tv mini series') AND ci.nr_order IN (87, 12, 8, 34) AND movie_link.id IN (1606, 3369, 1804, 3838) GROUP BY kt.kind;
SELECT CN.name AS company_name, COUNT(DISTINCT AN.id) AS total_aliases, AVG(AT.production_year) AS average_production_year, SUM(CASE WHEN N.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN N.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name CN JOIN aka_title AT ON CN.id = AT.movie_id JOIN aka_name AN ON AN.person_id = AT.movie_id JOIN name N ON N.id = AN.person_id WHERE CN.country_code = 'US' AND AT.production_year >= 2000 AND N.gender IN ('M', 'F') GROUP BY CN.name;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_with_role, n.gender, n.name_pcode_nf FROM cast_info ci JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN name n ON ci.person_id = n.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND n.name_pcode_nf IN ('T6535', 'E3245', 'T124') AND ci.nr_order IN (2, 21, 10, 117, 42) GROUP BY n.gender, n.name_pcode_nf ORDER BY average_movie_rating DESC;
SELECT ct.kind as company_type, COUNT(DISTINCT ti.id) as total_titles, AVG(ti.production_year) as average_production_year, SUM(CASE WHEN k.phonetic_code = 'G5641' THEN 1 ELSE 0 END) as count_g5641_keywords, SUM(CASE WHEN k.phonetic_code = 'A61' THEN 1 ELSE 0 END) as count_a61_keywords FROM title ti INNER JOIN movie_info mi ON ti.id = mi.movie_id INNER JOIN info_type it ON mi.info_type_id = it.id INNER JOIN keyword k ON ti.id = k.id INNER JOIN company_type ct ON ct.kind = 'distributors' WHERE it.info IN ('LD quality of source', 'votes distribution', 'LD catalog number', 'locations') AND mi.note IS NOT NULL GROUP BY ct.kind;
SELECT ct.kind AS company_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(COUNT(DISTINCT mk.keyword_id)) OVER (PARTITION BY mc.company_type_id) AS total_keywords FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id GROUP BY ct.kind, mc.company_type_id ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT COUNT(DISTINCT a.id) AS unique_alternate_titles, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.movie_id) AS total_movies_with_complete_cast, SUM(CASE WHEN k.keyword = 'dry-cleaners' THEN 1 ELSE 0 END) AS dry_cleaners_keyword_count, (SELECT COUNT(*) FROM link_type) AS total_link_types FROM aka_title AS a LEFT JOIN complete_cast AS c ON a.movie_id = c.movie_id LEFT JOIN movie_keyword AS mk ON a.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE a.production_year >= 2000 AND c.status_id IN (SELECT id FROM comp_cast_type WHERE kind = 'complete+verified') AND (k.phonetic_code = 'L2523' OR k.keyword IN ('imam', 'jug', 'greek', 'richard-nixon')) GROUP BY a.kind_id HAVING COUNT(DISTINCT c.movie_id) > 5;
SELECT AVG(aka_title.production_year) AS avg_production_year, COUNT(DISTINCT movie_keyword.keyword_id) AS num_keywords, COUNT(DISTINCT aka_title.movie_id) AS num_movies, AVG(COUNT(DISTINCT aka_title.movie_id)) OVER (PARTITION BY aka_title.production_year) AS avg_num_movies_per_year FROM aka_title JOIN complete_cast ON aka_title.movie_id = complete_cast.movie_id JOIN movie_keyword ON aka_title.movie_id = movie_keyword.movie_id WHERE complete_cast.status_id = 1 GROUP BY aka_title.production_year;
SELECT k.keyword, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(CAST(movie_cast.total_cast AS FLOAT)) AS average_cast_members, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, lt.LINK AS link_type FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN cast_info AS ci ON mk.movie_id = ci.movie_id LEFT JOIN ( SELECT movie_id, COUNT(*) AS total_cast FROM cast_info GROUP BY movie_id ) AS movie_cast ON ci.movie_id = movie_cast.movie_id LEFT JOIN movie_link AS ml ON ci.movie_id = ml.movie_id LEFT JOIN link_type AS lt ON ml.link_type_id = lt.id WHERE k.keyword IN ('superhero', 'villain', 'science fiction', 'fantasy', 'action') AND (lt.LINK IS NULL OR lt.LINK IN ('follows', 'followed by', 'featured in')) GROUP BY k.keyword, lt.LINK ORDER BY number_of_movies DESC, average_cast_members DESC;
SELECT SUM(mc.company_id) AS total_company_ids, AVG(CASE WHEN mc.company_type_id = 1 THEN mc.movie_id ELSE NULL END) AS average_movie_id_for_type_1, COUNT(DISTINCT ml.link_type_id) AS unique_link_types, COUNT(DISTINCT pi.person_id) AS unique_person_count, AVG(CASE WHEN pi.info_type_id = 5 THEN LENGTH(pi.info) ELSE NULL END) AS average_info_length_for_type_5 FROM movie_companies mc FULL OUTER JOIN movie_link ml ON mc.movie_id = ml.movie_id FULL OUTER JOIN person_info pi ON mc.company_id = pi.person_id GROUP BY mc.company_type_id;
SELECT k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, COUNT(DISTINCT n.id) AS number_of_actors FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info AS mi ON mk.movie_id = mi.movie_id AND mi.info_type_id = 4 INNER JOIN name AS n ON mi.movie_id = n.imdb_id WHERE mk.keyword_id IN (3881, 2089, 3415, 3648) GROUP BY k.keyword ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, AVG(ci.nr_order) AS average_cast_nr_order, COUNT(DISTINCT ci.person_id) AS total_unique_actors, COUNT(DISTINCT mc.movie_id) AS total_movies, SUM(CASE WHEN it.info = 'languages' THEN 1 ELSE 0 END) AS total_movies_with_languages_info FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN kind_type kt ON ci.role_id = kt.id JOIN info_type it ON ci.person_role_id = it.id WHERE ci.nr_order IN (35, 54, 23, 1) AND mc.movie_id IN (1542488, 1515644, 1097704) AND kt.id IN (3, 4, 2, 1) AND it.info IN ('taglines', 'languages', 'pictorial') GROUP BY company_kind, movie_kind;
SELECT rt.ROLE, COUNT(DISTINCT ml.movie_id) AS num_movies, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT k.id) AS num_keywords FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN char_name cn ON ci.person_role_id = cn.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id GROUP BY rt.ROLE ORDER BY num_movies DESC, avg_imdb_id DESC;
SELECT COUNT(DISTINCT akat.movie_id) AS total_movies, AVG(CAST(akat.production_year AS DECIMAL)) AS average_production_year, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS total_movies_with_notes, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN it.info = 'English' THEN 1 ELSE 0 END) AS total_english_language_movies FROM aka_title akat JOIN movie_info mi ON akat.movie_id = mi.movie_id JOIN movie_info_idx miidx ON akat.movie_id = miidx.movie_id JOIN movie_keyword mk ON akat.movie_id = mk.movie_id JOIN movie_companies mc ON akat.movie_id = mc.movie_id JOIN info_type it ON mi.info_type_id = it.id WHERE akat.production_year IN (1979, 1966) AND mc.company_type_id IN (SELECT id FROM link_type WHERE id = 7) AND mk.id IN (3803, 847) GROUP BY akat.kind_id;
SELECT COUNT(DISTINCT a.id) AS total_aka_titles, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT m.company_id) AS total_companies_involved, COUNT(DISTINCT n.id) AS total_unique_names, COUNT(DISTINCT ml.movie_id) AS total_movies_with_links, SUM(CASE WHEN a.production_year BETWEEN 1990 AND 2000 THEN 1 ELSE 0 END) AS titles_from_90s FROM aka_title AS a JOIN movie_companies AS m ON a.movie_id = m.movie_id JOIN name AS n ON n.md5sum = a.md5sum LEFT JOIN movie_link AS ml ON a.movie_id = ml.movie_id WHERE a.production_year IS NOT NULL AND m.note IS NOT NULL AND n.gender IN ('F', 'M') GROUP BY n.gender ORDER BY total_aka_titles DESC;
SELECT rt.role, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_numeric_value, SUM(CASE WHEN mi_idx.info_type_id IN (100, 101) THEN 1 ELSE 0 END) AS total_info_100_101_count FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN role_type rt ON mi.info_type_id = rt.id WHERE rt.id IN (7, 2, 1, 6, 8, 9) AND mi_idx.note IS NOT NULL AND mi_idx.info ~ '^\d+(\.\d+)?$' GROUP BY rt.role ORDER BY number_of_movies DESC, average_info_numeric_value DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS number_of_movies_produced, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_movie_count, SUM(CASE WHEN k.keyword = 'comedy' THEN 1 ELSE 0 END) AS comedy_movie_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_keyword mk ON mc.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.company_type_id = 1 AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND cn.country_code = 'US' GROUP BY cn.name ORDER BY average_movie_rating DESC, number_of_movies_produced DESC;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_info, SUM(CASE WHEN mi_idx.note = 'Y' THEN 1 ELSE 0 END) AS count_noted_info FROM complete_cast cc JOIN kind_type kt ON cc.subject_id = kt.id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id WHERE cc.status_id IN (1, 2, 3) AND mi_idx.info_type_id BETWEEN 10 AND 20 AND mi_idx.id NOT IN (4072, 3466, 2096, 1652, 1371) AND cc.id NOT IN (3672, 620) GROUP BY kt.kind HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY average_movie_info DESC;
SELECT rt.ROLE, COUNT(*) AS total_roles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_imdb_index_I, SUM(CASE WHEN t.imdb_index = 'II' THEN 1 ELSE 0 END) AS count_imdb_index_II, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS count_imdb_index_V, COUNT(DISTINCT t.id) AS unique_titles, COUNT(DISTINCT k.id) AS unique_keywords FROM role_type rt LEFT JOIN char_name cn ON rt.id = cn.id LEFT JOIN movie_keyword mk ON cn.id = mk.keyword_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN title t ON mk.movie_id = t.id WHERE rt.id IN (3, 9, 8, 1, 11) AND t.production_year IS NOT NULL AND ( cn.name_pcode_nf IN ('R13', 'C6456', 'J326', 'R25', 'A3235', 'L6324') OR cn.surname_pcode = 'G16' ) GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS total_produced_by_company_type_1, COUNT(DISTINCT n.id) AS total_actors_involved, AVG(CAST(n.gender AS integer)) AS average_gender_code FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = t.id LEFT JOIN name n ON n.id = cc.subject_id AND cc.status_id = 1 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, COUNT(DISTINCT k.id) AS distinct_keywords_used FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN char_name cn ON t.id = cn.imdb_id LEFT JOIN name n ON cn.id = n.id WHERE t.production_year >= 2000 AND (n.surname_pcode = 'A41' OR n.surname_pcode = 'A42' OR n.surname_pcode = 'A435') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, rt.role AS cast_role, AVG(aka.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS total_unique_actors, SUM(CASE WHEN k.keyword = 'vietnamese-restaurant' THEN 1 ELSE 0 END) AS vietnamese_restaurant_keyword_count, SUM(CASE WHEN k.keyword = 'symbol' THEN 1 ELSE 0 END) AS symbol_keyword_count FROM aka_title aka JOIN kind_type kt ON aka.kind_id = kt.id JOIN cast_info ci ON aka.movie_id = ci.movie_id JOIN role_type rt ON ci.role_id = rt.id JOIN keyword k ON aka.id = k.id WHERE aka.production_year > 2000 GROUP BY kt.kind, rt.role ORDER BY total_unique_actors DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CASE WHEN mi_numeric.info_type_id = 3 THEN mi_numeric.info::NUMERIC END) AS average_movie_length, COUNT(DISTINCT kw.id) AS number_of_unique_keywords, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count FROM movie_info mi JOIN kind_type kt ON mi.info_type_id = kt.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword kw ON mk.keyword_id = kw.id LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN name n ON ml.movie_id = n.id LEFT JOIN movie_info mi_numeric ON mi.movie_id = mi_numeric.movie_id AND mi_numeric.info_type_id = 3 WHERE kt.kind = 'complete' AND kw.keyword IN ('santiago-de-chile', 'golf-club', 'tripping') AND n.name IN ('Anderson, Othello', 'Ammar, Ali', 'Ameyl, Dzaga') GROUP BY kt.kind;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_actors, AVG(nk.keyword_count) AS average_keywords_per_actor, SUM(nk.keyword_count) AS total_keywords FROM name AS n INNER JOIN ( SELECT mk.movie_id, COUNT(*) AS keyword_count FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id WHERE k.phonetic_code IN ('H525', 'C4252', 'P3624', 'A543', 'F6526', 'M1525') GROUP BY mk.movie_id ) AS nk ON nk.movie_id = n.id INNER JOIN role_type AS rt ON rt.id IN ('1', '2', '6', '10', '5', '4') INNER JOIN movie_companies AS mc ON mc.movie_id = nk.movie_id WHERE n.gender IS NOT NULL GROUP BY rt.ROLE ORDER BY total_actors DESC;
