SELECT n.gender, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS avg_cast_order, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, SUM(CASE WHEN ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_roles, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS total_distributor_roles FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id WHERE n.gender = 'm' AND ci.role_id = 1 AND mc.company_id IN (1057, 946, 317, 31, 1181, 84) AND ci.note NOT LIKE '%(voice)%' GROUP BY n.gender;
SELECT ct.kind AS company_type, AVG(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS avg_female_cast, AVG(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS avg_male_cast, COUNT(DISTINCT mc.movie_id) AS num_movies, COUNT(DISTINCT mc.company_id) AS num_companies, SUM(CASE WHEN mc.note LIKE '%worldwide%' THEN 1 ELSE 0 END) AS worldwide_releases FROM movie_companies AS mc JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id JOIN name AS n ON mc.company_id = n.id GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY num_movies DESC;
SELECT t.production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'spin off' THEN 1 ELSE 0 END) AS spin_off_count, STRING_AGG(DISTINCT cn.name, ', ') AS character_names FROM title t JOIN cast_info ci ON ci.movie_id = t.id LEFT JOIN char_name cn ON cn.id = ci.person_id LEFT JOIN movie_link ml ON ml.movie_id = t.id LEFT JOIN link_type lt ON lt.id = ml.link_type_id WHERE t.production_year BETWEEN 2000 AND 2010 GROUP BY t.production_year ORDER BY t.production_year;
SELECT rt.role, COUNT(DISTINCT akn.person_id) AS distinct_person_count, COUNT(DISTINCT mk.movie_id) AS distinct_movie_count, AVG(LENGTH(akn.name)) AS average_name_length, SUM(CASE WHEN mk.id IN (2147, 3674, 4385, 278, 891, 2589) THEN 1 ELSE 0 END) AS specific_keyword_movie_count FROM role_type rt LEFT JOIN aka_name akn ON rt.id = akn.id LEFT JOIN movie_keyword mk ON mk.movie_id = akn.person_id WHERE rt.role IN ('production designer', 'composer', 'producer', 'cinematographer', 'actor') AND rt.id IN ('6', '4') AND akn.name IN ('Aldave, Damie', 'Alkhovskaya, V.', 'Allen, Flanagan and', 'Allum, Dan', 'Rando, JesÃºs Alvaide', 'Allen, Eric') AND mk.movie_id IN ('7272', '8946', '15394', '15484', '7641') GROUP BY rt.role;
SELECT kt.kind, COUNT(DISTINCT at.movie_id) AS num_movies, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT ml.movie_id) AS num_linked_movies, COUNT(DISTINCT cn.id) AS num_companies_involved, SUM(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) AS count_video_movie, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS count_tv_movie FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id LEFT JOIN company_name cn ON cn.id = ANY(ARRAY[68879, 29883]) WHERE kt.id IN (4, 7) AND kt.kind IN ('video movie', 'tv movie') AND ml.linked_movie_id IN (577922, 468657, 898205, 1933962) GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN name n ON mc.company_id = n.id WHERE ct.kind IN ('production companies', 'special effects companies', 'distributors') GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE k.keyword IN ('graffiti', 'goblet') AND n.name LIKE '%a%' GROUP BY cct.kind ORDER BY total_actors DESC;
SELECT AVG(mi_idx.info::numeric) AS average_movie_rating, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(cn.name) AS largest_company_name, ct.kind AS company_type, MIN(lt.link) AS link_type_description, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN company_name cn ON cn.country_code = '[lv]' OR cn.country_code = '[by]' JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON lt.id = mi_idx.info_type_id WHERE mi_idx.info_type_id = (SELECT id FROM link_type WHERE link = 'edited from') AND (k.keyword = 'blind-woman' OR k.keyword = 'weather-forecasting') AND cn.name_pcode_sf IN ('O2163', 'G4214', 'A4314') GROUP BY ct.kind ORDER BY average_movie_rating DESC;
SELECT kt.kind, AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS total_votes, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT p.id) AS number_of_people_involved FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies mc ON t.id = mc.movie_id JOIN person_info p ON p.info_type_id = mi_idx.info_type_id WHERE kt.kind = 'movie' AND t.production_year BETWEEN 2000 AND 2010 AND mi_idx.info_type_id IN (1, 3) GROUP BY kt.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY average_rating DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_num, SUM(CAST(CASE WHEN mi_idx.info LIKE '%1%' THEN 1 ELSE 0 END AS INTEGER)) AS count_info_with_1 FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id JOIN name n ON ml.movie_id = n.id WHERE n.md5sum IN ('801a5d533ecc2c88317db66319d4aad9', 'caa370cb4f3c3b62016775d613ce5575', '4fc8edf0bba0a30ce337c1c452a645f0') AND ml.linked_movie_id IN (1412141, 604005, 716090) AND mi_idx.info SIMILAR TO '%[0-9]%' AND mk.keyword_id IN ( SELECT id FROM keyword WHERE keyword IN ('wind-up-toy', 'money-in-title', 'suicide-pill') ) GROUP BY kt.kind ORDER BY total_movies_with_keywords DESC;
SELECT link_type.LINK AS link_type, COUNT(DISTINCT movie_link.movie_id) AS total_movies, AVG(aka_title.production_year) AS average_production_year, SUM(CASE WHEN aka_title.kind_id = 1 THEN 1 ELSE 0 END) AS total_full_length_movies, COUNT(DISTINCT company_name.id) AS total_different_companies, COUNT(DISTINCT movie_companies.company_type_id) AS total_company_types, MAX(aka_title.season_nr) AS max_season_number, MIN(aka_title.episode_nr) AS min_episode_number, COUNT(DISTINCT info_type.id) AS total_info_types FROM movie_link JOIN link_type ON movie_link.link_type_id = link_type.id JOIN aka_title ON movie_link.movie_id = aka_title.movie_id JOIN movie_companies ON aka_title.movie_id = movie_companies.movie_id JOIN company_name ON movie_companies.company_id = company_name.id JOIN info_type ON 1=1 WHERE link_type.LINK IN ('features', 'alternate language version of', 'featured in', 'edited into', 'remade as') AND aka_title.kind_id IN (1, 4, 3, 7, 2, 6) AND aka_title.md5sum IN ('1b81d95ddc7a645727ec6e01c28ec5be', 'de1cedb89a8eeb93cc5cba31a251e0f8', 'b4e6ea5bd996a24faacd0571b2f495dd') AND company_name.country_code = '[tr]' GROUP BY link_type.LINK;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT t.id) AS total_titles, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, COUNT(DISTINCT k.id) AS total_keywords, t.series_years, n.surname_pcode FROM name AS n INNER JOIN title AS t ON n.id = t.id LEFT JOIN keyword AS k ON k.id = t.id WHERE n.surname_pcode IN ('A424', 'A414') AND t.series_years LIKE '1993-____' AND (k.id = '74' OR k.id = '8451') GROUP BY t.series_years, n.surname_pcode ORDER BY total_actors DESC, average_production_year DESC;
SELECT cct.kind AS cast_type, COUNT(DISTINCT mi.movie_id) AS total_movies, COUNT(DISTINCT k.id) AS total_keywords, AVG(COUNT(k.id)) OVER (PARTITION BY cct.kind) AS avg_keywords_per_movie FROM comp_cast_type AS cct JOIN movie_info_idx AS mi ON cct.id = mi.info_type_id JOIN keyword AS k ON mi.movie_id = k.id WHERE cct.kind IN ('complete', 'complete+verified') GROUP BY cct.kind;
