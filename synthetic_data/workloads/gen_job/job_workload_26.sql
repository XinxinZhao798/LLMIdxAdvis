SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN mi.info = 'Color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'Black and White' THEN 1 ELSE 0 END) AS number_of_black_and_white_movies, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM movie_info_idx AS mi_idx JOIN movie_info AS mi ON mi_idx.movie_id = mi.movie_id AND mi_idx.info_type_id = mi.info_type_id JOIN title AS t ON t.id = mi.movie_id JOIN comp_cast_type AS cct ON t.kind_id = cct.id WHERE mi_idx.info_type_id IN ('100', '101') AND mi.info_type_id IN ('100', '101') AND cct.kind = 'complete+verified' GROUP BY cct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(LENGTH(mi_idx.info)) AS average_info_length, SUM(CASE WHEN mi_idx.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_info_count FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IN (56, 1326) THEN 1 ELSE 0 END) AS count_special_roles, COUNT(DISTINCT cn.id) AS total_unique_characters, COUNT(DISTINCT k.id) AS total_unique_keywords, MAX(mi.info) AS longest_movie_info FROM cast_info ci JOIN char_name cn ON ci.person_id = cn.id JOIN movie_info mi ON ci.movie_id = mi.movie_id JOIN keyword k ON k.phonetic_code = 'O16' WHERE mi.info <> 'None' AND mi.info LIKE '%Czech%' GROUP BY ci.movie_id;
SELECT k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, COUNT(DISTINCT n.id) AS number_of_actors FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info AS mi ON mk.movie_id = mi.movie_id AND mi.info_type_id = 4 INNER JOIN name AS n ON mi.movie_id = n.imdb_id WHERE mk.keyword_id IN (3881, 2089, 3415, 3648) GROUP BY k.keyword ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_participants_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_participants_count, MAX(t.production_year) AS latest_movie_year, MIN(t.production_year) AS oldest_movie_year FROM movie_companies AS mc JOIN title AS t ON mc.movie_id = t.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN name AS n ON t.id = n.id WHERE mc.company_type_id = 1 GROUP BY mc.company_id ORDER BY number_of_movies DESC, average_rating DESC;
SELECT rt.ROLE, COUNT(ci.id) AS num_cast_entries, AVG(ci.nr_order) AS average_order, SUM(ci.person_id) AS total_person_ids, MAX(pinfo.info) AS latest_info, MIN(pinfo.info) AS earliest_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN person_info pinfo ON ci.person_id = pinfo.person_id WHERE ci.nr_order IS NOT NULL AND pinfo.info_type_id = ( SELECT id FROM info_type WHERE info = 'quotes' ) GROUP BY rt.ROLE ORDER BY num_cast_entries DESC, average_order;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ml.movie_id) AS count_of_movies_with_links, COUNT(DISTINCT at.movie_id) AS count_of_alternate_titles, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS count_of_movies, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS count_of_tv_shows, COUNT(DISTINCT k.id) AS count_of_unique_keywords FROM aka_title at LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id LEFT JOIN keyword k ON at.title LIKE CONCAT('%', k.keyword, '%') WHERE at.production_year > 2000 AND (ml.id IN (4856, 1568, 48, 747, 1537, 3901) OR ml.linked_movie_id = 2323856) AND at.episode_nr IN (38, 29, 26, 64, 24) AND k.phonetic_code IS NOT NULL GROUP BY at.kind_id;
SELECT kind.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN at.title LIKE '%War%' THEN 1 ELSE 0 END) AS num_war_related_titles, COUNT(DISTINCT ci.person_id) AS num_unique_actors FROM company_type kind JOIN movie_info_idx mi_idx ON mi_idx.info LIKE '0.0%' JOIN movie_info mi ON mi.movie_id = mi_idx.movie_id AND mi.info = 'Romanian' JOIN aka_title at ON at.movie_id = mi.movie_id JOIN cast_info ci ON ci.movie_id = at.movie_id WHERE kind.kind = 'special effects companies' AND at.imdb_index IN ('I', 'II', 'III', 'IV') GROUP BY kind.kind;
