SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN it.info = 'budget' THEN CAST(mi.info AS MONEY) ELSE 0::MONEY END) AS total_budget, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM movie_info mi JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN aka_title at ON ci.movie_id = at.movie_id JOIN kind_type kt ON kt.id = at.kind_id JOIN info_type it ON it.id = mi.info_type_id WHERE it.info IN ('budget', 'box office gross') AND kt.kind IN ('actor', 'actress') AND mc.company_type_id IN (1, 2) GROUP BY kt.kind;
SELECT ct.kind AS company_kind, AVG(ti.production_year) AS average_production_year, COUNT(*) AS total_movies, SUM(CASE WHEN ml.link_type_id = 10 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT n.id) AS distinct_actors FROM title ti INNER JOIN company_type ct ON ti.kind_id = ct.id LEFT JOIN movie_link ml ON ti.id = ml.movie_id AND ml.link_type_id IN (10, 11, 5, 6, 13) LEFT JOIN cast_info ci ON ti.id = ci.movie_id LEFT JOIN name n ON ci.person_id = n.id WHERE ti.production_year BETWEEN 2000 AND 2020 GROUP BY ct.kind ORDER BY total_movies DESC, average_production_year;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS movie_count, AVG(cn.imdb_index::numeric) AS avg_imdb_index, COUNT(DISTINCT ml.linked_movie_id) AS unique_linked_movies_count FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN char_name AS cn ON mk.movie_id = cn.id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id WHERE k.id IN (5710) AND cn.name IN ('George Curtis', 'Sheet-metal worker', 'Sam Hall', 'Mr. Wood', 'Basil''s Henchman', 'Harvard Interviewer') AND cn.md5sum = '935983a2b8b5ca56e24c96447e850d60' GROUP BY k.keyword ORDER BY movie_count DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN a.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_titles, kt.kind AS title_kind, n.gender AS actor_gender FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN name n ON ci.person_id = n.id JOIN aka_title a ON t.id = a.movie_id JOIN (SELECT id, CASE kind_id WHEN 2 THEN 'Feature' WHEN 7 THEN 'TV Movie' ELSE 'Other' END AS kind FROM title) kt ON t.kind_id = kt.id WHERE t.kind_id IN (2, 7) AND a.kind_id IN (6, 4, 3, 1) AND (ci.note LIKE '%(1988)%' OR a.imdb_index IN ('III', 'IV', 'I', 'II')) AND n.name IN ('Anazald, Mark', 'Anderson, Dean', 'Ancevski, Blagoja') GROUP BY kt.kind, n.gender;
SELECT cn.country_code, k.keyword, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(CAST(NULLIF(REGEXP_REPLACE(mi_duration.info, '[^\d.]', '', 'g'), '') AS NUMERIC)) AS average_movie_duration, SUM(CASE WHEN mi_release.info_type_id = 4 THEN 1 ELSE 0 END) AS count_movie_releases FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN movie_info AS mi_release ON mc.movie_id = mi_release.movie_id AND mi_release.info_type_id = 4 LEFT JOIN movie_info AS mi_duration ON mc.movie_id = mi_duration.movie_id AND mi_duration.info_type_id = 3 WHERE k.keyword IN ('dead-mother', 'manipulation') AND mi_release.note IN ('(some dialogue)', '(none)', '(only a few lines)', '(a few lines)', '(a few words)') GROUP BY cn.country_code, k.keyword ORDER BY cn.country_code, k.keyword;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT cc.id) AS total_complete_cast_records, COUNT(DISTINCT k.id) AS total_unique_keywords FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_companies mc ON at.movie_id = mc.movie_id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN keyword k ON k.id = ANY(ARRAY[6884, 9943]) WHERE at.md5sum IN ('44c0080e0912e3ca5d10075839063f1b', 'a5be4ea19dc2872037b2956fcb845de1', 'ec82f287db52c1fe7be3ed79dfb0a06a', '42824af6235a76885dde510273e9d1a7', 'cd3e9be473ea7275bd1b401dce7d08f9', 'c994ea29391a6ac08145be73f75d09ff') GROUP BY kt.kind;
SELECT AT.production_year, CT.kind AS company_kind, IT.info AS info_type, AVG(CI.nr_order) AS average_cast_order, COUNT(DISTINCT MK.keyword_id) AS number_of_keywords, COUNT(DISTINCT ML.link_type_id) AS number_of_link_types, SUM(CASE WHEN AT.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title AT JOIN movie_keyword MK ON AT.movie_id = MK.movie_id JOIN movie_link ML ON AT.movie_id = ML.movie_id JOIN cast_info CI ON AT.movie_id = CI.movie_id JOIN company_type CT ON AT.kind_id = CT.id JOIN info_type IT ON MK.keyword_id = IT.id WHERE AT.production_year BETWEEN 2000 AND 2020 AND CT.kind = 'production' AND IT.info LIKE '%genre%' GROUP BY AT.production_year, CT.kind, IT.info ORDER BY AT.production_year, number_of_keywords DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, COUNT(DISTINCT k.id) AS distinct_keywords_used FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN char_name cn ON t.id = cn.imdb_id LEFT JOIN name n ON cn.id = n.id WHERE t.production_year >= 2000 AND (n.surname_pcode = 'A41' OR n.surname_pcode = 'A42' OR n.surname_pcode = 'A435') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT pi.person_id) AS actors_with_additional_info, SUM(CASE WHEN rt.ROLE = 'Actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.ROLE = 'Director' THEN 1 ELSE 0 END) AS total_director_roles, COUNT(DISTINCT t.id) AS total_titles FROM title t LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN role_type rt ON cc.status_id = rt.id LEFT JOIN person_info pi ON n.id = pi.person_id WHERE t.production_year IN ('1998', '1971') GROUP BY t.kind_id ORDER BY average_production_year DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.season_nr) AS average_season_number, SUM(mov_comp.company_id) AS total_company_contributions, rt.ROLE, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT an.person_id) AS number_of_actors_with_aliases, MAX(t.episode_nr) AS max_episode_number FROM title AS t JOIN movie_companies AS mov_comp ON mov_comp.movie_id = t.id JOIN company_name AS cn ON cn.id = mov_comp.company_id JOIN role_type AS rt ON rt.id = mov_comp.company_type_id LEFT JOIN aka_name AS an ON an.person_id = t.id WHERE t.production_year BETWEEN 1990 AND 2020 AND cn.name IN ('Vestron UK', 'Messina Films') AND rt.id = 9 AND t.id IN ('17038', '13408', '18586', '19239', '26429') GROUP BY t.production_year, rt.ROLE ORDER BY t.production_year DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, AVG(mk.keyword_id) AS average_keyword_id, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN cct.kind = 'crew' THEN 1 ELSE 0 END) AS total_crew_companies, MAX(cn.name) AS largest_company_name FROM movie_keyword AS mk JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id JOIN kind_type AS kt ON ml.link_type_id = kt.id WHERE ml.link_type_id IN ('7', '8') AND cct.id IN ('2', '1', '4', '3') GROUP BY kt.kind ORDER BY number_of_movies DESC, average_keyword_id;
SELECT cn.name AS company_name, COUNT(DISTINCT t.movie_id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT CASE WHEN kt.kind = 'episode' THEN t.movie_id END) AS total_episodes, COUNT(DISTINCT CASE WHEN kt.kind = 'video game' THEN t.movie_id END) AS total_video_games FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN aka_title t ON mc.movie_id = t.movie_id JOIN kind_type kt ON t.kind_id = kt.id WHERE cn.country_code = '[us]' AND t.production_year > 2000 GROUP BY cn.name ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mki.movie_id) AS total_movies, COUNT(DISTINCT kw.id) AS total_unique_keywords, SUM(CASE WHEN akat.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_dubbed_versions FROM aka_title akat JOIN movie_keyword mkw ON akat.movie_id = mkw.movie_id JOIN keyword kw ON mkw.keyword_id = kw.id JOIN movie_info_idx mki ON akat.movie_id = mki.movie_id JOIN company_type ct ON mki.info_type_id = ct.id WHERE akat.production_year BETWEEN 2000 AND 2020 GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT aka.title) AS unique_aka_titles, COUNT(DISTINCT ci.person_id) AS number_of_cast_members, MAX(ml.link_type_id) AS highest_link_type_id FROM aka_title aka JOIN cast_info ci ON aka.movie_id = ci.movie_id JOIN movie_companies mc ON aka.movie_id = mc.movie_id JOIN movie_link ml ON aka.movie_id = ml.movie_id WHERE aka.title IS NOT NULL AND aka.production_year IS NOT NULL AND (aka.title LIKE '0....01124%' OR aka.title LIKE '...0012111%' OR aka.title LIKE '%758%') GROUP BY aka.production_year ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT a.id) AS total_alternate_titles, COUNT(DISTINCT n.id) AS total_unique_actors, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequels FROM kind_type kt JOIN aka_title a ON kt.id = a.kind_id JOIN title t ON a.movie_id = t.id JOIN cast_info ci ON t.id = ci.movie_id JOIN name n ON ci.person_id = n.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id = 1 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.info::NUMERIC) AS average_movie_length, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM movie_companies AS mc JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 1 JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN name AS n ON n.id = ANY (ARRAY [9129, 3874, 7033, 7761, 6454]) WHERE mc.company_type_id IN (1, 2) AND mi.note LIKE '%(a few words)%' GROUP BY mc.company_id ORDER BY number_of_movies DESC, average_movie_length;
SELECT COUNT(DISTINCT t.id) AS total_movies, SUM(mc.company_id) AS total_companies_involved, link_typ.LINK AS link_type, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id JOIN link_type AS link_typ ON link_typ.id = ml.link_type_id WHERE t.production_year BETWEEN 2000 AND 2020 AND mc.company_type_id = 2 AND link_typ.id IN (3, 10, 6, 15, 11) AND mk.movie_id IN (13936, 8886, 13347, 7802, 15519, 18796) GROUP BY link_typ.LINK ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, MIN(at.title) AS example_movie, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.note LIKE '%(imdb display title)%' THEN 1 ELSE 0 END) AS imdb_display_title_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN movie_keyword mk ON at.movie_id = mk.movie_id JOIN movie_info mi ON at.movie_id = mi.movie_id WHERE at.production_year BETWEEN 1990 AND 2020 AND at.note LIKE '%(imdb display title)%' AND mi.movie_id IN ('931220', '926777', '925133') GROUP BY kt.kind HAVING COUNT(DISTINCT at.movie_id) > 10 ORDER BY total_movies_with_keywords DESC;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, AVG(mc.company_id) AS average_company_id, SUM(ml.linked_movie_id) AS total_linked_movie_ids FROM complete_cast cc JOIN kind_type kt ON cc.subject_id = kt.id JOIN movie_companies mc ON cc.movie_id = mc.movie_id JOIN movie_link ml ON cc.movie_id = ml.movie_id WHERE cc.status_id IN (1, 2) AND kt.id IN (1, 2, 5, 3) AND mc.id IN (2678, 1671, 621, 430) AND ml.movie_id IN (20571, 5979, 11130) GROUP BY kt.kind;
SELECT lt.LINK, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(mk.keyword_id) AS avg_keyword_id, SUM(CASE WHEN mi.movie_id = 924359 THEN 1 ELSE 0 END) AS count_specific_movie_info, COUNT(DISTINCT an.person_id) AS num_person_aliases FROM link_type lt LEFT JOIN movie_keyword mk ON lt.id = mk.id LEFT JOIN movie_info mi ON mk.movie_id = mi.movie_id LEFT JOIN aka_name an ON an.person_id = mi.movie_id WHERE lt.LINK IN ('featured in', 'version of', 'features', 'edited into') AND mk.id IN (1943, 3232, 4574, 1304) GROUP BY lt.LINK;
