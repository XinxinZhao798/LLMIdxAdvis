SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS number_of_movies, cct.kind, k.keyword, SUM(CASE WHEN akat.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, SUM(CASE WHEN akat.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title akat JOIN comp_cast_type cct ON akat.kind_id = cct.id JOIN keyword k ON k.id IN (58, 8642, 3881, 5552, 5846) WHERE akat.production_year > 1990 AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind, k.keyword ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_males, COUNT(DISTINCT ml.movie_id) AS unique_movies_linked FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN name AS n ON ml.linked_movie_id = n.id WHERE lt.LINK IN ('features', 'featured in', 'spin off from', 'follows', 'followed by') AND ml.linked_movie_id IN (2362378, 227254, 1337065, 1230549) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_order_of_appearance, COUNT(DISTINCT pi.person_id) AS distinct_actors_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_lead_roles FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.person_role_id IN (1344, 1214) GROUP BY kt.kind ORDER BY movie_count DESC;
SELECT t.title AS original_title, COUNT(DISTINCT at.id) AS number_of_alternative_titles, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distribution_companies, COUNT(DISTINCT n.id) AS number_of_unique_actors FROM title t LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 100 LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN name n ON n.id IN ('7238', '8193', '11843', '6809', '6894', '6651') LEFT JOIN movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = 3 WHERE t.production_year BETWEEN 1990 AND 2000 AND n.id IS NOT NULL AND mi.note IS NOT NULL GROUP BY t.title ORDER BY average_movie_rating DESC LIMIT 10;
SELECT kt.kind AS movie_kind, avg(title.production_year) AS average_production_year, count(DISTINCT title.id) AS number_of_titles, count(DISTINCT cast_info.person_id) AS number_of_participants, count(DISTINCT movie_keyword.keyword_id) AS number_of_unique_keywords, sum(case when role_type.role = 'actor' then 1 else 0 end) AS number_of_actors, sum(case when role_type.role = 'actress' then 1 else 0 end) AS number_of_actresses FROM title JOIN kind_type AS kt ON title.kind_id = kt.id LEFT JOIN cast_info ON title.id = cast_info.movie_id LEFT JOIN role_type ON cast_info.role_id = role_type.id LEFT JOIN movie_keyword ON title.id = movie_keyword.movie_id WHERE kt.kind IN ('video movie', 'video game') AND title.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT an.id) AS number_of_alternative_names, COUNT(DISTINCT cct.id) AS number_of_cast_types, AVG(LENGTH(n.name)) AS average_actor_name_length FROM name n LEFT JOIN aka_name an ON n.id = an.person_id LEFT JOIN comp_cast_type cct ON an.id = cct.id WHERE n.name LIKE '%Amplify%' OR an.name IN ('Allen, ''Barefoot'' Chris', 'Alsamia, Etienne', 'Altamirano, Lisa Mariea', 'Aller, Gina', 'Smith, Mary Alice') GROUP BY n.gender;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT n.id) AS total_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, COUNT(DISTINCT k.id) AS total_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id WHERE t.production_year BETWEEN 2000 AND 2020 AND kt.kind IN ('movie', 'tv series', 'video') AND t.season_nr IS NULL GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.avg_movie_score) AS average_movie_score, SUM(CASE WHEN mi.info = '(Original Version)' THEN 1 ELSE 0 END) AS original_version_count, SUM(CASE WHEN mi.info = '(English subtitles)' THEN 1 ELSE 0 END) AS english_subtitles_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN (SELECT movie_id, AVG(CAST(info AS DOUBLE PRECISION)) AS avg_movie_score FROM movie_info_idx WHERE info_type_id = 101 GROUP BY movie_id) AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN movie_info AS mi ON mc.movie_id = mi.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT t.title AS Movie_Title, COUNT(DISTINCT n.id) AS Number_of_Actors, AVG(mi_idx.info::numeric) AS Average_Rating, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS Total_Actors, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS Total_Actresses, t.production_year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND t.production_year BETWEEN 2000 AND 2010 AND rt.role IN ('actor', 'actress') GROUP BY t.title, t.production_year HAVING COUNT(DISTINCT n.id) > 10 ORDER BY Average_Rating DESC, Number_of_Actors DESC LIMIT 10;
SELECT cn.country_code, COUNT(DISTINCT cn.id) AS num_companies, AVG(mi_idx.id) AS avg_movie_info_idx_id, SUM(CASE WHEN mi.info_type_id = mi_idx.info_type_id THEN 1 ELSE 0 END) AS sum_matching_info_types, COUNT(DISTINCT pi.person_id) AS num_people FROM company_name AS cn LEFT JOIN movie_info_idx AS mi_idx ON cn.imdb_id = mi_idx.movie_id LEFT JOIN movie_info AS mi ON mi.movie_id = mi_idx.movie_id LEFT JOIN person_info AS pi ON pi.info_type_id = mi.info_type_id WHERE cn.country_code = '[be]' AND mi_idx.movie_id IN ('925666', '929198', '939783', '925877', '930515', '925116') AND cn.md5sum IN ('6490953d16a7d7a36b9daafe4a9e84b6', 'b68f1bd9708e765d511e6e251f56419a', '11b8906a4c994a2996176bba270124ac', '8eb39544eea1fca12f1a46d1747c807c') GROUP BY cn.country_code;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN at.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes, kt.kind AS movie_kind, COUNT(DISTINCT k.id) AS distinct_keywords FROM title AS t JOIN aka_title AS at ON t.id = at.movie_id JOIN keyword AS k ON at.id = k.id JOIN company_type AS kt ON t.kind_id = kt.id WHERE t.production_year > 1990 AND at.md5sum IN ('3fbf6cc79b437aac2b533ef93a1a1f72', '3b7d0f2a4c38d29ba47fb2bef6fdc62a', '3029182796f9ac1107d5ec5eba333955', '3f32d0b04dd67b92118e6032b58a8be4', '33e7b8cd483255b73ad813d49d5f4a46') AND at.imdb_index IN ('III', 'IV', 'I', 'II') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.note LIKE '%(producer)%' THEN 1 ELSE 0 END) AS total_producer_mentions, cct.kind AS cast_type_kind, MIN(cn.name) AS company_name, MAX(ci.nr_order) AS highest_cast_order FROM cast_info AS ci JOIN comp_cast_type AS cct ON ci.person_role_id = cct.id JOIN company_name AS cn ON cn.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN link_type AS lt ON ci.role_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id WHERE cct.kind IN ('complete', 'complete+verified') AND cn.name_pcode_sf IN ('C6532', 'L2653', 'U53', 'D252') AND (ci.note LIKE '%(producer)%' OR ci.note IS NULL) AND lt.id IN ('7', '15') GROUP BY cct.kind ORDER BY average_movie_rating DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT at.id) AS total_movies, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_movie_rating, SUM(CASE WHEN k.keyword = 'staring' THEN 1 ELSE 0 END) AS count_staring_keyword, SUM(CASE WHEN k.keyword = 'disarming-someone' THEN 1 ELSE 0 END) AS count_disarming_keyword FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN aka_title AS at ON mc.movie_id = at.id JOIN movie_info_idx AS mi_idx ON at.id = mi_idx.movie_id LEFT JOIN movie_keyword AS mk ON at.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE ct.kind IN ('production companies', 'distributors') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS DECIMAL) >= 5.0 AND at.production_year BETWEEN 2000 AND 2010 GROUP BY ct.kind;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE mi.info_type_id = 101) AS average_rating, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.linked_movie_id IN (10496, 260662, 2464253, 553702, 58480, 2087155)) AS movies_with_specific_links FROM company_type ct JOIN movie_info mi ON mi.info ~ ct.kind JOIN movie_link ml ON mi.movie_id = ml.movie_id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified_casts, MIN(cn.country_code) AS country_code, MAX(mi.info) AS maximum_movie_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id JOIN company_name cn ON ci.person_id = cn.id JOIN movie_info mi ON ci.movie_id = mi.movie_id WHERE ci.person_role_id IN (107, 448, 439, 1389, 1249, 420) AND cc.movie_id = 1643515 AND cc.id IN (4897, 2653, 4910, 182, 342, 359) AND mi.info LIKE '0.......26%' GROUP BY rt.ROLE ORDER BY number_of_people DESC, average_cast_order;
