SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ml.link_type_id = 9 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT k.id) AS distinct_keywords, COUNT(DISTINCT mi_idx.movie_id) AS movies_with_trivia, MAX(t.production_year) AS latest_movie_year, MIN(t.production_year) AS earliest_movie_year FROM title AS t LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN info_type AS it ON mi_idx.info_type_id = it.id AND it.info = 'trivia' LEFT JOIN keyword AS k ON k.keyword = 'sequel' WHERE t.kind_id IN (SELECT id FROM comp_cast_type WHERE kind IN ('feature', 'tv series')) AND (ml.link_type_id IN (9, 5, 11, 16, 12, 15) OR ml.link_type_id IS NULL) AND (ml.linked_movie_id IN (1606280, 1432513, 1440129, 10552, 453927, 2160552) OR ml.linked_movie_id IS NULL) GROUP BY t.kind_id;
SELECT it.info AS InfoType, COUNT(DISTINCT ci.movie_id) AS NumberOfMovies, COUNT(DISTINCT ci.person_id) AS NumberOfPeople, AVG(ci.nr_order) AS AverageCastOrder, COUNT(DISTINCT cc.movie_id) AS CompleteMoviesCount, MAX(n.name) AS MostCommonName, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS MaleCount, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS NonMaleCount, mi.info AS MovieInfo FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN info_type it ON ci.role_id = it.id JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id JOIN name n ON ci.person_id = n.id WHERE ci.role_id IN (100, 101, 99) AND n.surname_pcode IN ('A452', 'A424') AND n.gender = 'm' AND mi.info_type_id IN (100, 101, 99) GROUP BY it.info, mi.info ORDER BY NumberOfMovies DESC, NumberOfPeople DESC;
SELECT rt.ROLE as role_type, AVG(title.production_year) as average_production_year, COUNT(DISTINCT title.id) as total_movies, COUNT(DISTINCT cast_info.person_id) as total_actors, SUM(case when title.production_year BETWEEN 1970 AND 1980 then 1 else 0 end) as movies_1970s, SUM(case when title.production_year BETWEEN 1981 AND 1990 then 1 else 0 end) as movies_1980s FROM title JOIN cast_info ON title.id = cast_info.movie_id JOIN role_type rt ON cast_info.role_id = rt.id WHERE title.phonetic_code = 'C6123' AND title.production_year IN ('1974', '1969', '1987', '1957') GROUP BY rt.ROLE ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN a.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_titles, kt.kind AS title_kind, n.gender AS actor_gender FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN name n ON ci.person_id = n.id JOIN aka_title a ON t.id = a.movie_id JOIN (SELECT id, CASE kind_id WHEN 2 THEN 'Feature' WHEN 7 THEN 'TV Movie' ELSE 'Other' END AS kind FROM title) kt ON t.kind_id = kt.id WHERE t.kind_id IN (2, 7) AND a.kind_id IN (6, 4, 3, 1) AND (ci.note LIKE '%(1988)%' OR a.imdb_index IN ('III', 'IV', 'I', 'II')) AND n.name IN ('Anazald, Mark', 'Anderson, Dean', 'Ancevski, Blagoja') GROUP BY kt.kind, n.gender;
SELECT COUNT(DISTINCT at.id) AS number_of_titles, AVG(at.production_year) AS average_production_year, rt.role AS role_type, COUNT(DISTINCT mi.id) AS number_of_movie_infos, SUM(CASE WHEN at.kind_id = '1' THEN 1 ELSE 0 END) AS number_of_movies, SUM(CASE WHEN at.kind_id = '2' THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT at.episode_of_id) AS number_of_unique_series, MAX(at.season_nr) AS max_season_number, MAX(at.episode_nr) AS max_episode_number FROM aka_title at JOIN movie_info mi ON at.movie_id = mi.movie_id JOIN role_type rt ON mi.info_type_id = rt.id WHERE at.production_year BETWEEN 1990 AND 2020 AND mi.info LIKE '%color%' GROUP BY rt.role ORDER BY number_of_titles DESC, average_production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT pi.person_id) AS total_actors, COUNT(DISTINCT pi2.person_id) AS total_crew_members, COUNT(DISTINCT lt.id) AS total_link_types_used FROM cast_info ci JOIN kind_type kt ON ci.person_role_id = kt.id JOIN person_info pi ON ci.person_id = pi.person_id JOIN person_info pi2 ON ci.person_role_id = pi2.person_id AND pi2.info_type_id = ci.role_id JOIN link_type lt ON ci.role_id = lt.id WHERE ci.person_role_id IN (675, 613) AND pi.note NOT IN ('Jon C. Hopwood', 'CelebrityLoop.com', 'Adler and Associates Entertainment', 'Self.', 'ali aga') AND pi.info NOT IN ('15 August 1966', 'First president to live in the White House.', 'Rejowiec Fabryczny, Lubelskie, Poland') AND lt.id IN (15, 11, 8, 17) AND lt.link IN ('featured in', 'edited from', 'unknown link', 'spin off from', 'followed by') GROUP BY kt.kind;
SELECT ct.kind AS company_type, avg(at.production_year) AS average_production_year, count(DISTINCT at.movie_id) AS total_alternate_titles, sum(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_full_cast_movies, count(DISTINCT n.id) AS total_actors, count(DISTINCT mi.movie_id) AS total_movies_with_info FROM aka_title at JOIN movie_info mi ON at.movie_id = mi.movie_id JOIN complete_cast cc ON mi.movie_id = cc.movie_id JOIN company_type ct ON cc.subject_id = ct.id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN name n ON n.imdb_index = at.imdb_index WHERE mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('birth date', 'mini biography')) AND mi.note NOT LIKE '%(interviews)%' AND at.kind_id NOT IN (SELECT id FROM info_type WHERE info = 'admissions') AND (at.phonetic_code = 'M5251' OR at.phonetic_code = 'B4536') GROUP BY ct.kind ORDER BY total_alternate_titles DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(n.imdb_id) AS average_imdb_id, MIN(n.name) AS first_alphabetical_actor_name, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS total_actresses, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_actors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN name AS n ON n.id = ml.movie_id OR n.id = ml.linked_movie_id WHERE lt.id IN (8, 6, 13, 10, 16, 7) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT ct.kind AS company_type, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS titles_since_2000 FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN title AS t ON mc.movie_id = t.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE cn.name IN ('SalviNET SIA', 'IconNicholson', 'Globe TV') AND it.info = 'rating' AND ct.kind IN ('production companies', 'distributors') GROUP BY ct.kind;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(pk.count_per_keyword) AS average_keywords_per_movie, MAX(cast(pi.info as integer)) AS max_budget, MIN(cast(pi.info as integer)) AS min_budget FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN (SELECT movie_id, COUNT(keyword_id) AS count_per_keyword FROM movie_keyword GROUP BY movie_id) AS pk ON t.id = pk.movie_id LEFT JOIN person_info AS pi ON t.id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget') LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY t.production_year ORDER BY t.production_year;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS average_production_year, COUNT(ci.person_id) AS total_cast_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS actor_count, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS actress_count FROM aka_title AS aka JOIN kind_type AS kt ON aka.kind_id = kt.id JOIN cast_info AS ci ON aka.movie_id = ci.movie_id JOIN movie_info AS mi ON aka.movie_id = mi.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id WHERE aka.title LIKE '%The Hobbits%' OR aka.id IN (34831, 39506, 43821, 20330) OR mi.movie_id IN (18783, 19260, 8743, 8393) GROUP BY kt.kind ORDER BY average_production_year DESC;
SELECT AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(mc.company_id) AS largest_company_id, MIN(t.production_year) AS earliest_production_year, SUM(t.episode_nr) AS total_episodes FROM cast_info AS ci JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN name AS n ON ci.person_id = n.id JOIN title AS t ON ci.movie_id = t.id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE ci.role_id = 1 AND n.imdb_index IN ('XI', 'IV', 'IX', 'XVII') AND k.keyword IN ('elevator-stuck-between-floors', 'pregnancy', 'snake', 'slave-owner') AND t.kind_id = 1 GROUP BY t.kind_id;
SELECT ct.kind AS company_kind, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mk.movie_id) AS num_movies_with_keywords, COUNT(DISTINCT mc.movie_id) AS num_movies_by_company_type, COUNT(DISTINCT aka.name) AS unique_aka_names FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id AND it.info = 'rating' JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN movie_companies mc ON mk.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id LEFT JOIN aka_name aka ON aka.person_id = mc.company_id WHERE mk.keyword_id IN (2900, 3761, 2634) AND mc.company_type_id IN (SELECT id FROM company_type WHERE kind LIKE '%production%') AND aka.name_pcode_cf IN ('M65', 'S352', 'C64') GROUP BY ct.kind ORDER BY average_rating DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT pi.person_id) AS number_of_people, AVG(subquery.avg_keywords_per_movie) AS average_keywords_per_movie FROM company_type ct JOIN movie_keyword mk ON mk.keyword_id = ct.id JOIN person_info pi ON pi.info_type_id = mk.id LEFT JOIN (SELECT mk1.movie_id, AVG(mk1.keyword_id) AS avg_keywords_per_movie FROM movie_keyword mk1 GROUP BY mk1.movie_id) AS subquery ON mk.movie_id = subquery.movie_id WHERE ct.kind = 'distributors' AND pi.note IN ('TrendEkiD@aol.com', 'maria afsharian', 'InVerse PR/Infonet', 'sam reden', 'Mattias Thuresson', 'Turkajans') AND pi.info = 'White Lake, Michigan, USA' GROUP BY ct.kind;
SELECT t.kind_id, t.production_year, COUNT(DISTINCT t.id) AS number_of_titles, COUNT(DISTINCT n.id) AS number_of_unique_persons, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, SUM(CASE WHEN at.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS number_of_episodes FROM title t LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id AND mi.info_type_id = 100 LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id WHERE t.production_year BETWEEN 2000 AND 2020 AND t.kind_id IN (1, 2, 3) GROUP BY t.kind_id, t.production_year ORDER BY t.kind_id, t.production_year;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, COUNT(DISTINCT at.id) AS number_of_alternative_titles, rt.ROLE, COUNT(*) AS total_movies_by_role_type FROM title AS t JOIN movie_keyword AS mk ON mk.movie_id = t.id JOIN aka_title AS at ON at.movie_id = t.id JOIN role_type AS rt ON rt.id = at.kind_id WHERE t.production_year BETWEEN 1990 AND 2000 AND rt.id IN ('5', '4', '6') AND t.imdb_index IN ('V', 'I', 'II') GROUP BY rt.ROLE ORDER BY total_movies_by_role_type DESC;
SELECT rt.ROLE as role_type, COUNT(DISTINCT t.id) as total_titles, COALESCE(SUM(t.episode_nr), 0) as total_episodes, ROUND(AVG(t.production_year), 2) as average_production_year FROM title t JOIN role_type rt ON t.kind_id = rt.id GROUP BY rt.ROLE ORDER BY total_titles DESC;
