SELECT cct.kind AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT k.id) AS number_of_keywords FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN keyword k ON k.keyword LIKE '%murder%' OR k.keyword LIKE '%violence%' WHERE ci.person_role_id IN (2, 3, 4) GROUP BY cct.kind ORDER BY number_of_people DESC, average_cast_order;
SELECT it.info AS genre, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(a_t.production_year) AS average_production_year, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT a_t.id) AS number_of_alternate_titles FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info IN ('Action', 'Comedy', 'Drama', 'Sci-Fi', 'Romance') JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON mi.movie_id = ml.movie_id JOIN aka_title a_t ON mi.movie_id = a_t.movie_id GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_sequels, MAX(pi.info) AS latest_actor_information FROM char_name cn JOIN cast_info ci ON cn.id = ci.person_role_id JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE cn.surname_pcode IN ('A', 'T61', 'E153', 'A13', 'C2', 'B6353') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') GROUP BY cn.name;
SELECT kt.kind AS movie_kind, AVG(CASE WHEN rt.ROLE = 'director' THEN 1 ELSE 0 END) AS avg_director_presence, COUNT(DISTINCT ml.movie_id) AS num_movies_linked, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, SUM(CASE WHEN mi.info_type_id = 2 AND mi.info = 'color' THEN 1 ELSE 0 END) AS total_color_movies, COUNT(DISTINCT t.id) AS total_movies FROM title t LEFT JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN movie_info mi ON t.id = mi.movie_id LEFT JOIN role_type rt ON mi.info_type_id = rt.id WHERE t.production_year BETWEEN 1990 AND 2020 AND kt.kind IN ('movie', 'tv series', 'video game') AND (ml.link_type_id IN (5, 12, 16) OR ml.link_type_id IS NULL) AND (ml.linked_movie_id IN (1639371, 2307098) OR ml.linked_movie_id IS NULL) AND rt.ROLE IN ('director', 'actor', 'producer') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(mc.movie_id) AS average_movie_id, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT mc.company_type_id) AS total_company_types, kt.link AS link_type_description, COUNT(DISTINCT k.id) FILTER (WHERE k.phonetic_code = 'C5242') AS count_keywords_c5242, COUNT(DISTINCT k.id) FILTER (WHERE k.phonetic_code = 'V352') AS count_keywords_v352, COUNT(DISTINCT n.id) FILTER (WHERE n.gender = 'M') AS count_male_names, COUNT(DISTINCT n.id) FILTER (WHERE n.gender = 'F') AS count_female_names, AVG(n.imdb_id) AS average_imdb_id FROM movie_companies mc JOIN link_type kt ON mc.company_type_id = kt.id JOIN keyword k ON k.id = mc.id JOIN name n ON n.id = mc.id WHERE kt.link IN ('remake of', 'references') GROUP BY kt.link;
SELECT it.info AS info_category, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(cast_info.nr_order) AS average_order, SUM(CASE WHEN cn.surname_pcode IS NOT NULL THEN 1 ELSE 0 END) AS total_with_surname_code, MAX(cast_info.nr_order) AS max_order_in_cast, MIN(cast_info.nr_order) AS min_order_in_cast FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN char_name AS cn ON cn.imdb_id = mi_idx.movie_id JOIN cast_info ON cast_info.movie_id = mi_idx.movie_id WHERE it.info IN ('LD sound encoding', 'spouse', 'copyright holder') AND cn.name_pcode_nf = 'R1513' AND mi_idx.movie_id = 8488 GROUP BY it.info;
SELECT it.info AS genre, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(mi.info::numeric) AS average_budget, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'budget' JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN person_info pi ON pi.person_id = mi.movie_id JOIN name n ON pi.person_id = n.id WHERE mi.movie_id IN ('19606', '114', '12283', '8086') GROUP BY it.info;
SELECT COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cn.id) AS num_companies, AVG(complete_cast.status_id) AS avg_status_id, SUM(CASE WHEN pi.info_type_id = 19 THEN 1 ELSE 0 END) AS count_info_type_19, SUM(CASE WHEN pi.info_type_id = 20 THEN 1 ELSE 0 END) AS count_info_type_20, COUNT(DISTINCT mk.keyword_id) AS num_keywords FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = ci.movie_id JOIN complete_cast ON complete_cast.movie_id = ci.movie_id JOIN person_info pi ON pi.person_id = ci.person_id WHERE ci.note NOT LIKE '%(archive footage)%' AND cn.country_code = 'US' AND complete_cast.subject_id = 1 AND (pi.info LIKE '%Stage:%' OR pi.info LIKE '%AIDS%') GROUP BY cn.country_code;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, SUM(CASE WHEN cn.country_code = '[sd]' THEN 1 ELSE 0 END) AS sudanese_company_movies, SUM(CASE WHEN cn.country_code = '[dz]' THEN 1 ELSE 0 END) AS algerian_company_movies, SUM(CASE WHEN cn.country_code = '[dm]' THEN 1 ELSE 0 END) AS dominican_company_movies, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN movie_info_idx AS mi_votes ON mi_idx.movie_id = mi_votes.movie_id AND mi_votes.info_type_id = 41 JOIN company_name AS cn ON mi_idx.movie_id = cn.imdb_id LEFT JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE mi_idx.info_type_id IN (112, 72) AND kt.id IN (2, 1, 3) GROUP BY kt.kind;
SELECT avg(pi.info::numeric) AS average_rating, count(DISTINCT ci.person_id) AS number_of_actors, count(DISTINCT mk.keyword_id) AS number_of_keywords, kt.kind_id, kt.production_year FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id INNER JOIN cast_info AS ci ON mc.movie_id = ci.movie_id INNER JOIN aka_title AS kt ON mc.movie_id = kt.movie_id INNER JOIN person_info AS pi ON ci.person_id = pi.person_id AND pi.info_type_id = 101 WHERE kt.title IN ('Law & Order: Special Victims Unit', 'Plus One Minus One', 'The Searchers') AND mc.movie_id IN ('12242', '26379') AND kt.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind_id, kt.production_year ORDER BY average_rating DESC, number_of_actors DESC, number_of_keywords DESC;
SELECT COUNT(DISTINCT cn.id) AS unique_character_count, AVG(mi_idx.info::numeric) AS average_movie_info_numeric, SUM(case when lt.id = '7' then 1 else 0 end) AS total_remake_links, MAX(cn.name) AS last_character_name_alphabetically FROM char_name cn JOIN complete_cast cc ON cn.id = cc.subject_id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id JOIN link_type lt ON lt.id = cc.status_id WHERE cn.surname_pcode IN ('S362', 'S246') AND mi_idx.info SIMILAR TO '%[0-9]+%' AND cc.movie_id IN ('1635482', '1626761', '96348', '52977') AND mi_idx.id IN ('268', '1318', '4406', '2884', '1174') AND lt.link IN ('remake of', 'spin off from', 'similar to', 'featured in') GROUP BY cn.surname_pcode;
SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi_idx.avg_rating) AS average_movie_rating, SUM(case when ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS total_voice_roles FROM cast_info ci JOIN (SELECT movie_id, AVG(CAST(info AS FLOAT)) as avg_rating FROM movie_info_idx WHERE info_type_id = 101 GROUP BY movie_id) mi_idx ON mi_idx.movie_id = ci.movie_id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN char_name chn ON chn.id = ci.person_role_id JOIN aka_name an ON an.person_id = ci.person_id WHERE chn.surname_pcode IN ('L236', 'S4251', 'H61', 'M13', 'G64', 'B4123') AND an.md5sum IN ('335ed401df5f248a3e329bb55d27dd0d', '7b6c3470024015d9b7509ce72ba9bdbe', '676e4dab04ea3f8b91859f8353698682', 'ae437679898b344a4c9d5b911ff41b3d', '2326d6a8ac3328a37b6196b7d6122ca1', '2f0962bd6afa28b8588a8333f39cbb4e') AND mk.keyword_id IN (SELECT id FROM movie_keyword WHERE movie_id = mk.movie_id) GROUP BY chn.surname_pcode;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN k.keyword IN ('intelligence-agency', 'armed-forces') THEN 1 ELSE 0 END) AS military_related_movies, COUNT(DISTINCT CASE WHEN k.keyword = 'monster-in-the-closet' THEN akat.movie_id END) AS monster_in_the_closet_movies FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id LEFT JOIN keyword AS k ON akat.movie_id = k.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE it.info = 'rating') AS average_rating FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id WHERE it.info = 'rating' AND mi.info ~ '^[0-9]+(\.[0-9]+)?$';
SELECT lt.LINK, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'budget') AS total_budget FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS it ON mi.info_type_id = it.id WHERE ml.movie_id IN ('11225', '16185', '8060') OR ml.linked_movie_id IN ('438568', '10238', '2451792', '1949408') AND mi.note IN ('(English subtitles)', '(Original Version)', '(a few lines)', '(Original version)') GROUP BY lt.LINK;
SELECT a.imdb_index AS imdb_index_version, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.person_id) AS number_of_people_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, lt.LINK AS link_type_description FROM aka_title a JOIN cast_info c ON a.movie_id = c.movie_id JOIN movie_keyword mk ON a.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_link ml ON a.movie_id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id WHERE a.imdb_index IN ('I', 'II', 'III', 'IV') AND lt.LINK IN ('remake of', 'version of') GROUP BY a.imdb_index, lt.LINK ORDER BY average_production_year DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ct.id IN (3, 4) AND cn.country_code IN ('[mk]', '[ua]', '[kr]', '[ir]', '[ph]') GROUP BY ct.kind ORDER BY number_of_movies DESC;
