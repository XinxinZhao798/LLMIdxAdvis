SELECT AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT ci.movie_id) AS count_movies, COUNT(DISTINCT ci.person_id) AS count_actors, SUM(CASE WHEN ct.kind = 'producer' THEN 1 ELSE 0 END) AS count_producer_companies, SUM(CASE WHEN ct.kind = 'distributor' THEN 1 ELSE 0 END) AS count_distributor_companies, COUNT(DISTINCT mk.keyword_id) AS count_unique_keywords FROM movie_info_idx mi_idx JOIN cast_info ci ON mi_idx.movie_id = ci.movie_id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_type ct ON ct.id = ci.role_id WHERE mi_idx.info_type_id = 1 AND ci.person_role_id IS NOT NULL AND ct.id IN (1, 4, 2) GROUP BY ct.kind;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS total_actors, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_position, MIN(mi_idx.info) AS min_info_value, MAX(mi_idx.info) AS max_info_value, it.info AS info_type_description FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id WHERE it.info IN ('sound mix', 'LD audio noise', 'LD dynamic range', 'magazine cover photo', 'novel', 'certificates') AND rt.ROLE IN ('actor', 'actress', 'producer', 'director') GROUP BY rt.ROLE, it.info ORDER BY total_movies DESC, total_actors DESC, average_cast_position;
SELECT t.title AS movie_title, ct.kind AS company_type, rt.role AS role, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mi.movie_id) AS number_of_movie_info_entries, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS total_director_roles FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON t.id = mi.movie_id JOIN role_type rt ON t.id = rt.id WHERE ct.kind IN ('miscellaneous companies', 'special effects companies', 'distributors') AND rt.role IN ('actor', 'guest', 'writer', 'director') AND t.season_nr IS NULL AND t.production_year BETWEEN 2000 AND 2023 GROUP BY t.title, ct.kind, rt.role ORDER BY average_production_year DESC, number_of_companies DESC, number_of_movie_info_entries DESC;
SELECT AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT aka.title) AS unique_aka_titles, COUNT(DISTINCT ci.person_id) AS number_of_cast_members, MAX(ml.link_type_id) AS highest_link_type_id FROM aka_title aka JOIN cast_info ci ON aka.movie_id = ci.movie_id JOIN movie_companies mc ON aka.movie_id = mc.movie_id JOIN movie_link ml ON aka.movie_id = ml.movie_id WHERE aka.title IS NOT NULL AND aka.production_year IS NOT NULL AND (aka.title LIKE '0....01124%' OR aka.title LIKE '...0012111%' OR aka.title LIKE '%758%') GROUP BY aka.production_year ORDER BY average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT cn.id) as number_of_companies, COUNT(DISTINCT pi.person_id) as number_of_people, AVG(CASE WHEN pi.note SIMILAR TO '%(Coverland|Chris Hendren|maria afsharian|CelebrityLoop.com)%' THEN CAST(pi.info AS NUMERIC) ELSE NULL END) as average_info_rating, SUM(CASE WHEN kt.kind = 'video movie' THEN 1 ELSE 0 END) as video_movie_count, SUM(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) as tv_mini_series_count, SUM(CASE WHEN kt.kind = 'video game' THEN 1 ELSE 0 END) as video_game_count FROM company_name cn JOIN kind_type kt ON cn.id = kt.id JOIN person_info pi ON cn.id = pi.person_id WHERE cn.country_code NOT IN ('US', 'GB') AND pi.info_type_id BETWEEN 1 AND 5 AND kt.id IN ('1', '2', '4', '5', '7') GROUP BY kt.kind ORDER BY number_of_companies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(cn.imdb_id::NUMERIC) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'us' THEN 1 ELSE 0 END) AS num_us_companies, COUNT(DISTINCT cn.id) AS num_companies_involved FROM movie_keyword AS mk JOIN movie_info AS mi ON mk.movie_id = mi.movie_id JOIN kind_type AS kt ON mi.info_type_id = kt.id AND kt.id IN ('2', '3', '4', '5', '6') JOIN company_name AS cn ON mk.movie_id = cn.imdb_id WHERE (mk.keyword_id IN ('3195', '2832', '4019', '2965', '3002') OR mi.info IN ('Albanian', 'Norwegian', 'Ladino', 'Filipino', 'Estonian')) AND cn.name_pcode_nf IN ('R5365', 'C514', 'E5314', 'L532') AND cn.id IN ('23278', '44380', '28077', '6858', '43412', '27250') GROUP BY kt.kind;
SELECT n.name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT ci.role_id) AS total_distinct_roles FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id WHERE mk.keyword_id IN (3583, 3557) GROUP BY n.name ORDER BY total_movies DESC, average_cast_position;
SELECT COUNT(DISTINCT cn.id) AS num_companies, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN rt.ROLE = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.ROLE = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles, COUNT(DISTINCT n.id) AS num_actors, COUNT(DISTINCT t.id) AS num_titles FROM name AS n JOIN char_name AS chn ON n.name_pcode_nf = chn.name_pcode_nf JOIN role_type AS rt ON n.id = chn.id JOIN title AS t ON t.phonetic_code IN ('A1265', 'M3151', 'R5434') JOIN movie_companies AS mc ON mc.movie_id = t.id JOIN company_name AS cn ON cn.id = mc.company_id WHERE t.production_year BETWEEN 1990 AND 2000 AND chn.md5sum IN ('c8d3a477c4092e8d35d54ee4e2a854a7', '7887e4403fb219782fde01f150e22f05', 'b90077cfb2486002f9581b5cd2a1a04b', 'b6658816fc7029718e649600b2cc328e') GROUP BY t.production_year;
SELECT it.info AS info_type, COUNT(DISTINCT mi.id) AS movie_count, AVG(mc.company_id) AS average_company_id, SUM(mc.company_id) AS sum_company_id, COUNT(DISTINCT ak.id) AS alias_count, rt.ROLE, COUNT(DISTINCT kw.id) AS keyword_count FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_companies AS mc ON mi.movie_id = mc.movie_id JOIN role_type AS rt ON mc.company_type_id = rt.id JOIN aka_name AS ak ON mi.movie_id = ak.person_id JOIN keyword AS kw ON ak.surname_pcode = kw.phonetic_code GROUP BY it.info, rt.ROLE ORDER BY movie_count DESC, average_company_id;
SELECT kt.kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS total_directors, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT k.id) AS total_unique_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN keyword k ON t.id = k.id WHERE t.production_year > 2000 AND kt.id = 5 AND ci.note LIKE '%(20%' AND ci.role_id IN (1, 2) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT it.info AS info_type, COUNT(DISTINCT pi.person_id) AS total_people, AVG(pi.person_id) AS average_person_id, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN ml.link_type_id = '16' THEN 1 ELSE 0 END) AS count_link_type_16, SUM(CASE WHEN ml.link_type_id = '7' THEN 1 ELSE 0 END) AS count_link_type_7, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, COUNT(DISTINCT aka.id) AS total_aka_names FROM person_info AS pi JOIN info_type AS it ON pi.info_type_id = it.id LEFT JOIN movie_link AS ml ON ml.movie_id = pi.person_id LEFT JOIN movie_keyword AS mk ON mk.movie_id = pi.person_id LEFT JOIN aka_name AS aka ON aka.person_id = pi.person_id LEFT JOIN title AS t ON t.id = pi.person_id WHERE pi.person_id IN ('9199', '7096', '7497', '4410', '8830') AND aka.md5sum IN ('777e5dd36014a444dcb9fd6b6e79db1b', 'c858ae027357bb0cc527c2bf2cd39730', 'bead886d98c81cafedcdcb186c8d7fc8') GROUP BY it.info;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(at.production_year) AS average_production_year, SUM(mc.company_type_id) AS sum_company_types, MIN(n.name) AS earliest_name_entry FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS at ON ml.movie_id = at.movie_id JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN name AS n ON n.imdb_id = ANY(ARRAY[at.movie_id, ml.linked_movie_id]) WHERE lt.id IN ('14', '15', '17', '12') AND mc.company_type_id BETWEEN 1 AND 10 AND n.gender = 'M' GROUP BY lt.LINK ORDER BY total_links DESC, average_production_year;
SELECT kt.kind AS movie_kind, AVG(mi.info::numeric) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT an.id) AS total_actors, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_production_companies FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'rating' LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN complete_cast an ON cc.id = an.id WHERE kt.kind IN ('video game', 'episode', 'tv series', 'tv mini series') AND t.production_year > 2000 GROUP BY kt.kind HAVING AVG(mi.info::numeric) > 5.0 ORDER BY average_rating DESC;
SELECT AVG(CAST(mii.info AS numeric)) AS average_movie_rating, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT pi.person_id) AS number_of_people, SUM(CASE WHEN lt.link = 'version of' THEN 1 ELSE 0 END) AS version_of_count, SUM(CASE WHEN lt.link = 'edited from' THEN 1 ELSE 0 END) AS edited_from_count FROM movie_info_idx AS mii JOIN movie_keyword AS mk ON mii.movie_id = mk.movie_id JOIN person_info AS pi ON pi.info_type_id = mii.info_type_id AND pi.note IN ('Archie York', 'InVerse PR/Infonet', 'E.A.', 'Bobbie Merritt/THE ENTERTAINMENT GROUP') LEFT JOIN link_type AS lt ON lt.id IN (12, 3) WHERE mii.note IS NOT NULL GROUP BY mii.info_type_id;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT mk.movie_id) AS movies_with_keywords, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM movie_info_idx AS mi_idx JOIN aka_title AS at ON mi_idx.movie_id = at.movie_id JOIN company_type AS ct ON at.kind_id = ct.id JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN name AS n ON at.movie_id = n.id WHERE mi_idx.info_type_id = 101 AND mi_idx.movie_id IN ('18742', '8465', '6663') AND at.production_year BETWEEN 2000 AND 2023 GROUP BY ct.kind ORDER BY average_rating DESC;
SELECT t.title AS original_title, COUNT(ak.id) AS alternate_title_count, COUNT(DISTINCT mk.keyword_id) AS keyword_count, AVG(t.production_year) AS average_production_year FROM title t LEFT JOIN aka_title ak ON t.id = ak.movie_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE t.title LIKE '%Crime%' OR t.title LIKE '%Fashion%' GROUP BY t.title ORDER BY alternate_title_count DESC, keyword_count DESC;
SELECT CT.kind AS company_kind, AVG(CAST(MI.info AS FLOAT)) AS average_rating, COUNT(DISTINCT CI.person_id) AS total_cast_members, COUNT(DISTINCT MC.movie_id) AS number_of_movies FROM movie_companies AS MC JOIN company_type AS CT ON MC.company_type_id = CT.id JOIN movie_info AS MI ON MC.movie_id = MI.movie_id AND MI.info_type_id = 101 JOIN cast_info AS CI ON MC.movie_id = CI.movie_id WHERE (MC.note LIKE '%(TV)' OR MC.note IS NULL) AND CT.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND CI.role_id = 1 GROUP BY CT.kind ORDER BY average_rating DESC;
SELECT CT.kind AS company_type, COUNT(DISTINCT ML.movie_id) AS total_movies_linked, AVG(CAST(MI.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN ML.linked_movie_id IN ('583610', '1639457', '20479', '2056353', '346879') THEN 1 ELSE 0 END) AS specific_links_count FROM movie_link ML JOIN movie_info MI ON ML.movie_id = MI.movie_id AND MI.info_type_id = '4' JOIN company_name CN ON CN.imdb_id = ML.movie_id JOIN company_type CT ON CN.id = CT.id WHERE ML.link_type_id IN ('1', '2') GROUP BY CT.kind HAVING COUNT(DISTINCT ML.movie_id) > 10 ORDER BY average_rating DESC;
SELECT n.name AS actor_name, COUNT(a.id) AS aka_name_count, AVG(n.imdb_id) AS average_imdb_id, SUM(mc.movie_id) AS sum_movie_ids, MAX(mc.note) AS latest_production_note FROM name n LEFT JOIN aka_name a ON n.id = a.person_id INNER JOIN movie_companies mc ON n.id = mc.company_id WHERE n.imdb_index IN ('IX', 'XVI', 'I', 'XI', 'XIX') AND a.name_pcode_nf IN ('N1312', 'A6236', 'W5653', 'A5463', 'K52', 'B5415') AND mc.company_type_id = '1' GROUP BY n.name;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS completed_and_verified_casts, COUNT(DISTINCT rt.id) AS number_of_cinematographer_roles, MIN(aka.name) AS example_aka_name FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id JOIN movie_keyword AS mk ON cn.id = mk.movie_id JOIN movie_info_idx AS mi_idx ON mk.movie_id = mi_idx.movie_id JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id JOIN role_type AS rt ON rt.role = 'cinematographer' LEFT JOIN aka_name AS aka ON aka.name_pcode_cf = 'D1353' AND aka.md5sum IN ('e6b1b0cc9037b00160a143b03dc5524d', '1d440711fb046c932badfdc8121ce380', '88bcce46f057ed51b9026d05fbdb1ac0') WHERE cc.status_id IN ('3', '4') GROUP BY ct.kind
SELECT kt.kind, lt.link, COUNT(DISTINCT mi.movie_id) AS num_movies, AVG(n.imdb_id) AS avg_imdb_id, SUM(CASE WHEN mi.info = 'French' THEN 1 ELSE 0 END) AS num_french_movies, SUM(CASE WHEN mi.note = '(none)' THEN 1 ELSE 0 END) AS num_movies_without_notes, COUNT(DISTINCT c.name) FILTER (WHERE c.surname_pcode = 'M6456') AS count_characters_with_surname_pcode_M6456 FROM movie_info mi JOIN kind_type kt ON mi.movie_id = kt.id JOIN link_type lt ON lt.id = mi.info_type_id LEFT JOIN movie_info_idx mii ON mii.movie_id = mi.movie_id AND mii.info_type_id = mi.info_type_id LEFT JOIN char_name c ON c.id = mii.info_type_id LEFT JOIN name n ON n.id = c.id WHERE lt.id IN ('4', '6', '9', '1', '14') AND mi.info IN ('Albanian', 'Catalan', 'French', 'Danish') GROUP BY kt.kind, lt.link ORDER BY num_movies DESC, avg_imdb_id;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_participants, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_movies, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS verified_movies, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.note IS NOT NULL) AS noted_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_movie_links, COUNT(DISTINCT an.person_id) AS total_aka_persons FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id LEFT JOIN person_info AS pi ON ci.person_id = pi.person_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN aka_name AS an ON ci.person_id = an.person_id WHERE kt.kind IN ('movie', 'tv series') AND t.production_year >= 2000 AND t.production_year <= 2010 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT cn.country_code, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(m_link.link_type_id) AS average_link_type_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_link m_link ON mc.movie_id = m_link.movie_id JOIN name n ON n.name_pcode_nf IN ('A6354', 'D1345') WHERE mc.company_type_id = 1 GROUP BY cn.country_code HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY number_of_movies DESC;
SELECT it.info AS genre, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(mi.info::numeric) AS average_budget, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'budget' JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN person_info pi ON pi.person_id = mi.movie_id JOIN name n ON pi.person_id = n.id WHERE mi.movie_id IN ('19606', '114', '12283', '8086') GROUP BY it.info;
SELECT kt.kind AS movie_genre, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS total_production_companies, COUNT(DISTINCT n.id) AS total_unique_actors FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id WHERE t.production_year > 1990 AND mc.movie_id IN ('9013', '18754', '19628', '12173') AND mc.id IN ('2363', '1293', '1757', '2957') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, SUM(CASE WHEN mi_idx.info_type_id = 26 THEN 1 ELSE 0 END) AS total_movies_with_votes, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT an.person_id) AS number_of_aka_names FROM movie_info mi JOIN kind_type kt ON mi.info_type_id = kt.id LEFT JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi_idx.info_type_id IN (26, 41, 27, 80, 87) LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN aka_name an ON mi.movie_id = an.person_id WHERE mi.info_type_id = 1 AND mi_idx.movie_id = '8945' AND an.md5sum IN ('536004f9d825a8468fbfa85cb0221d0c', '5126b143aa05c2a7a362057c4543038b') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT cct.kind, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_votes, COUNT(DISTINCT pi.person_id) AS number_of_people, SUM(CASE WHEN pi.info LIKE '%1971%' THEN 1 ELSE 0 END) AS count_people_born_1971, SUM(CASE WHEN pi.info LIKE '%O-chan%' THEN 1 ELSE 0 END) AS count_people_with_Ochan_info FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE cct.kind = 'crew' GROUP BY cct.kind;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS avg_production_year, COUNT(DISTINCT aka.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN aka.kind_id = 4 THEN 1 ELSE 0 END) AS total_tv_series FROM aka_title aka JOIN kind_type kt ON aka.kind_id = kt.id LEFT JOIN movie_companies mc ON aka.movie_id = mc.movie_id GROUP BY kt.kind HAVING COUNT(DISTINCT aka.movie_id) > 100 ORDER BY avg_production_year DESC, total_movies;
