SELECT k.keyword, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(CAST(movie_cast.total_cast AS FLOAT)) AS average_cast_members, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, lt.LINK AS link_type FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN cast_info AS ci ON mk.movie_id = ci.movie_id LEFT JOIN ( SELECT movie_id, COUNT(*) AS total_cast FROM cast_info GROUP BY movie_id ) AS movie_cast ON ci.movie_id = movie_cast.movie_id LEFT JOIN movie_link AS ml ON ci.movie_id = ml.movie_id LEFT JOIN link_type AS lt ON ml.link_type_id = lt.id WHERE k.keyword IN ('superhero', 'villain', 'science fiction', 'fantasy', 'action') AND (lt.LINK IS NULL OR lt.LINK IN ('follows', 'followed by', 'featured in')) GROUP BY k.keyword, lt.LINK ORDER BY number_of_movies DESC, average_cast_members DESC;
SELECT t.title AS movie_title, t.production_year AS movie_year, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_related_movies, SUM(CASE WHEN ci.note LIKE '%(plastic surgeon)%' THEN 1 ELSE 0 END) AS plastic_surgeon_roles FROM title AS t LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year > 1990 AND (ml.linked_movie_id IN ('6083', '1392360', '1432949', '672621', '2395841', '604373') OR ml.linked_movie_id IS NULL) AND (ml.link_type_id = '11' OR ml.link_type_id IS NULL) AND (ci.person_role_id IS NOT NULL) GROUP BY t.title, t.production_year HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY total_cast_members DESC, movie_year DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, COUNT(DISTINCT n.id) AS number_of_people_involved, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN name n ON mi.movie_id = n.id WHERE mc.note LIKE '%(TV)%' AND it.info IN ('LD disc size', 'birth date', 'LD video noise', 'nick names', 'plot') AND mc.company_id IN (189, 1031, 498) GROUP BY ct.kind, it.info;
SELECT rt.role, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS total_characters, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS movie_keyword_count, COUNT(DISTINCT pi.person_id) AS total_persons_with_info FROM role_type rt LEFT JOIN aka_title akat ON rt.id = akat.kind_id LEFT JOIN char_name cn ON cn.name = akat.title LEFT JOIN movie_keyword mk ON mk.movie_id = akat.movie_id LEFT JOIN person_info pi ON pi.info_type_id = rt.id WHERE akat.production_year > 2000 GROUP BY rt.role ORDER BY total_movies DESC, average_production_year DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN k.keyword = 'medical-emergency' THEN 1 ELSE 0 END) AS count_medical_emergency, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, COUNT(DISTINCT char_name.name) AS total_character_names FROM title AS t LEFT JOIN keyword AS k ON t.phonetic_code = k.phonetic_code LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN char_name ON char_name.surname_pcode = t.md5sum WHERE t.production_year BETWEEN 1990 AND 2000 AND cc.status_id IN (3, 4) AND (k.keyword = 'audi-rs5' OR k.keyword = 'second-chance' OR k.keyword = 'little-boy') GROUP BY t.production_year ORDER BY total_titles DESC;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_rating, COUNT(DISTINCT ci.movie_id) AS count_movies_with_keywords, COUNT(DISTINCT k.keyword) AS count_distinct_keywords, MIN(cn.name) AS company_name, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_complete_verified_casts, MAX(cn.country_code) AS country_code_with_most_movies FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_link AS ml ON mk.movie_id = ml.movie_id INNER JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id INNER JOIN cast_info AS ci ON ml.movie_id = ci.movie_id INNER JOIN company_name AS cn ON ci.person_id = cn.imdb_id INNER JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id WHERE ml.link_type_id = 19 AND mk.movie_id IN (11231, 16365, 11116) AND cc.status_id IN (3, 4) AND cn.country_code IS NOT NULL GROUP BY cn.name ORDER BY average_movie_rating DESC, count_movies_with_keywords DESC;
SELECT AVG(mi.info::numeric) AS average_movie_length, COUNT(DISTINCT ci.person_id) AS unique_actors_count, COUNT(DISTINCT at.movie_id) AS total_alternate_titles, COUNT(DISTINCT ml.movie_id) AS movies_with_links, MAX(cn.name) AS company_with_latest_movie FROM movie_info mi JOIN aka_title at ON mi.movie_id = at.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN cast_info ci ON ci.movie_id = mi.movie_id JOIN company_name cn ON cn.imdb_id = mi.movie_id WHERE mi.info_type_id = 1 AND ml.link_type_id IN (3, 4, 6, 10) AND ml.linked_movie_id IN (1131872, 5910, 2403234) GROUP BY mi.movie_id;
SELECT kt.kind, AVG(CAST(mi.info AS FLOAT)) AS average_rating, COUNT(DISTINCT cc.movie_id) AS unique_movies, COUNT(DISTINCT rt.id) AS different_roles FROM movie_info mi INNER JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id INNER JOIN kind_type kt ON mi.movie_id = kt.id INNER JOIN complete_cast cc ON mi.movie_id = cc.movie_id INNER JOIN comp_cast_type cct ON cc.status_id = cct.id INNER JOIN role_type rt ON cct.kind = rt.role WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS FLOAT) > 0 AND kt.kind IN ('tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, SUM(CAST(mi_idx.info AS INTEGER)) AS total_votes, COUNT(DISTINCT cn.id) AS number_of_characters, MAX(cn.name) AS longest_character_name FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN char_name cn ON cn.id = mi.id WHERE mi.info_type_id = '4' AND mi_idx.info ~ '^\d+$' AND mi.movie_id IN ('8983', '18800', '19279', '12551') AND cn.name <> 'Clawed Stalker' GROUP BY mi.info_type_id;
SELECT rt.ROLE as role, COUNT(ci.id) as total_cast, AVG(ci.nr_order) as average_order, SUM(case when ci.note LIKE '%(voice:%' THEN 1 ELSE 0 END) as total_voice_roles, cm.name as company_name, cm.country_code as company_country, COUNT(distinct mc.movie_id) as total_movies_produced FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id AND rt.id IN (1, 10, 3, 5, 8, 9) JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_name cm ON mc.company_id = cm.id WHERE mc.company_type_id = 1 AND mc.note LIKE '%(USA)%' AND ci.note NOT LIKE '%(credit only)%' GROUP BY role, company_name, company_country ORDER BY total_movies_produced DESC, total_cast DESC;
SELECT cct.kind AS cast_type_kind, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_numeric_value, COUNT(DISTINCT mi_idx.movie_id) AS unique_movies_count, COUNT(mi_idx.note) AS notes_count FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id WHERE cct.kind IN ('crew', 'cast', 'complete+verified') AND mi_idx.info_type_id = 99 GROUP BY cct.kind ORDER BY average_info_numeric_value DESC;
SELECT ct.kind AS company_type, AVG(CASE WHEN ml.link_type_id = '3' THEN 1 ELSE 0 END) AS avg_movie_references, COUNT(DISTINCT mk.movie_id) AS unique_movies_with_keywords, COUNT(DISTINCT at.id) AS total_aka_titles, SUM(CASE WHEN at.phonetic_code IN ('T54', 'V5231') THEN 1 ELSE 0 END) AS count_phonetic_code_matches, MAX(at.production_year) AS latest_production_year FROM company_type ct LEFT JOIN movie_companies mc ON ct.id = mc.company_type_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_title at ON mc.movie_id = at.movie_id WHERE ct.kind = 'distributors' AND ml.link_type_id IN ('3', '9', '15', '4', '10') GROUP BY ct.kind;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(kw.id) AS average_keyword_id, MAX(n.name) AS most_common_name, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS non_male_count FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN cast_info AS ci ON ml.movie_id = ci.movie_id JOIN keyword AS kw ON ci.id = kw.id JOIN name AS n ON ci.person_id = n.id GROUP BY lt.LINK ORDER BY number_of_movies DESC, number_of_linked_movies DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS number_of_unique_keywords, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT t.id) AS total_movies FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id WHERE t.production_year > 1990 AND mc.company_type_id IN (1, 2, 3) AND cc.status_id = 1 AND k.phonetic_code IN ('W25', 'P4232', 'G4323') GROUP BY t.kind_id HAVING COUNT(DISTINCT mc.company_id) > 5 ORDER BY average_production_year DESC;
SELECT AVG(CAST(pi.info AS numeric)) AS average_rating, COUNT(cc.id) AS total_cast_members, COUNT(DISTINCT at.id) AS total_alternate_titles, SUM(CASE WHEN at.title ILIKE '%love%' THEN 1 ELSE 0 END) AS titles_with_love FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN person_info pi ON cc.movie_id = pi.person_id WHERE at.movie_id IN (52294, 98509, 1635723, 1678623) AND pi.info_type_id = 101 GROUP BY at.movie_id;
SELECT ct.kind AS company_type, COUNT(mc.id) AS total_movies, AVG(mi_idx.info::numeric) AS average_movie_info, SUM(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS total_directors, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS total_editors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN role_type AS rt ON rt.id = mc.company_type_id WHERE mi_idx.info_type_id IN (100, 101, 99) AND ct.id IN (SELECT id FROM comp_cast_type WHERE kind IN ('complete+verified', 'cast', 'crew', 'complete')) AND rt.id IN (9, 3, 10, 8, 11, 6) GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, MIN(at.title) AS alternative_title, AVG(CASE WHEN mi.info_type_id = it.id AND it.info = 'rating' THEN CAST(mi.info AS FLOAT) END) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN mc.company_type_id = ct.id AND ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(at.production_year) AS latest_production_year FROM kind_type AS kt LEFT JOIN aka_title AS at ON kt.id = at.kind_id LEFT JOIN movie_info AS mi ON at.movie_id = mi.movie_id LEFT JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_companies AS mc ON at.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id WHERE at.production_year >= 1990 AND (at.title = 'The 11th Hour' OR at.title = 'Anna and Wulin' OR at.title = 'Arabian Tale') AND (at.imdb_index = 'I' OR at.imdb_index = 'III' OR at.imdb_index = 'IV') GROUP BY kt.kind;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN pi.info LIKE '%Oscar%' THEN 1 ELSE 0 END) AS total_oscars_won FROM cast_info ci INNER JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') WHERE n.imdb_index IN ('XXIII', 'XV', 'IX', 'XI') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.note NOT IN ('carlosprimati@uol.com.br', 'E.A.', 'IMDb Editors') GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY total_oscars_won DESC, average_movie_rating DESC, total_movies DESC, actor_name;
