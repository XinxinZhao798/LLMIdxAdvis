SELECT MIN(t.title) AS movie_title, MIN(at.title) AS alternative_title, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_unique_actors, SUM(CASE WHEN t.production_year BETWEEN 1970 AND 1980 THEN 1 ELSE 0 END) AS movies_produced_1970_to_1980, SUM(CASE WHEN t.production_year BETWEEN 1981 AND 1990 THEN 1 ELSE 0 END) AS movies_produced_1981_to_1990, SUM(CASE WHEN t.production_year BETWEEN 1991 AND 2000 THEN 1 ELSE 0 END) AS movies_produced_1991_to_2000 FROM title AS t INNER JOIN aka_title AS at ON t.id = at.movie_id AND at.kind_id IN (1, 3) INNER JOIN cast_info AS ci ON t.id = ci.movie_id WHERE t.production_year IN (1985, 1975, 1950, 1972) GROUP BY t.kind_id HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY number_of_movies DESC, average_cast_order;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.id) AS average_movie_info_id, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_info_type_1, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS count_of_non_null_notes FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id JOIN company_type ct ON mii.info_type_id = ct.id WHERE mi.movie_id IN (939658, 924408, 929751) AND mi.id IN (7267027, 7270561, 7268356, 7270113) AND mii.id = 949 GROUP BY ct.kind;
SELECT AVG(m.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT n.id) AS number_of_persons FROM title AS m LEFT JOIN movie_companies AS mc ON mc.movie_id = m.id LEFT JOIN movie_info AS mi ON mi.movie_id = m.id AND mi.info_type_id = 6 LEFT JOIN keyword AS k ON k.id = mi.info_type_id LEFT JOIN name AS n ON n.id = mi.movie_id GROUP BY m.kind_id HAVING COUNT(DISTINCT mc.company_id) > 1 ORDER BY average_production_year DESC;
SELECT lt.link AS link_type, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mk.keyword_id = 2603 THEN 1 ELSE 0 END) AS count_keyword_2603, COUNT(DISTINCT mk.movie_id) FILTER (WHERE mk.keyword_id IN (1147, 2693)) AS movies_with_keywords_1147_2693 FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN title AS t ON ml.movie_id = t.id JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE lt.link IN ('similar to', 'spin off', 'alternate language version of', 'featured in', 'spoofs', 'remake of') AND t.production_year BETWEEN 1950 AND 2010 GROUP BY lt.link;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.info::NUMERIC) FILTER (WHERE it.info = 'rating') AS average_rating, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword LIKE '%love%') AS love_keyword_count, rt.ROLE AS role_type, COUNT(DISTINCT ci.id) FILTER (WHERE rt.ROLE = 'actor') AS count_of_actors_roles, SUM(at.episode_nr) AS total_episodes, AVG(at.season_nr) AS average_season_number FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN cast_info ci ON mi.movie_id = ci.movie_id LEFT JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN aka_title at ON mi.movie_id = at.movie_id WHERE at.production_year BETWEEN 2000 AND 2010 AND (at.season_nr IS NOT NULL AND at.episode_nr IS NOT NULL) GROUP BY it.info, rt.ROLE ORDER BY number_of_movies DESC, average_rating DESC, love_keyword_count DESC, count_of_actors_roles DESC;
SELECT cct.kind AS cast_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT an.name) AS unique_aka_names, COUNT(*) AS total_entries, SUM(CASE WHEN an.surname_pcode = 'P1' THEN 1 ELSE 0 END) AS surname_pcode_P1_count FROM name nm JOIN aka_name an ON nm.id = an.person_id JOIN complete_cast cc ON nm.id = cc.subject_id JOIN comp_cast_type cct ON cc.status_id = cct.id WHERE an.name IN ('Aldhaheri, Saeed Ali Mohammed', 'Allen-Turner, Knitted Richard', 'Allen, Clinton Layne', 'Burpee, Luke', 'Algrang, Manfred Anton', 'Alfons√≥') GROUP BY cct.kind
SELECT rt.ROLE, COUNT(ci.id) AS total_roles, AVG(ci.nr_order) AS average_order, SUM(mc.company_id) AS total_company_involvement FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN char_name cn ON ci.person_id = cn.id JOIN link_type lt ON cn.imdb_id = lt.id WHERE cn.surname_pcode IN ('M252', 'E4253', 'S3626', 'D535', 'K6524', 'P3625') AND cn.md5sum IN ('9e82cce9eed474fa357bbbdcdb9e9f99', '808e4e20a938e31d406296247307a377', '314b308705241e3843cfa0f420a3d71d', '161ebf33e0bbb8c7a20bed4ba04289b5') AND lt.link IN ('alternate language version of', 'spin off', 'referenced in', 'remade as', 'references', 'version of') AND lt.id IN ('17', '8', '6') GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT t.title AS movie_title, ct.kind AS company_type, COUNT(DISTINCT cc.id) AS number_of_complete_casts, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS count_completed_casts, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN company_type AS ct ON ct.kind = 'production companies' JOIN comp_cast_type AS cct ON cc.subject_id = cct.id WHERE t.kind_id = 1 AND cct.kind IN ('complete', 'complete+verified') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY t.title, ct.kind ORDER BY number_of_complete_casts DESC, average_production_year DESC;
SELECT k.keyword, ci.person_role_id, COUNT(DISTINCT ci.person_id) AS unique_person_count, COUNT(ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_cast_order FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE k.phonetic_code IN ('V315', 'G2324') GROUP BY k.keyword, ci.person_role_id ORDER BY unique_person_count DESC, movie_count DESC;
SELECT t.production_year, it.info AS genre, COUNT(DISTINCT t.id) AS total_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating FROM title t JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id JOIN cast_info ci ON t.id = ci.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id WHERE mi_idx.info_type_id = 101 AND it.info IN ('Horror', 'Action', 'Comedy', 'Drama', 'Sci-Fi', 'Thriller') GROUP BY t.production_year, it.info ORDER BY t.production_year ASC, average_rating DESC;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT AVG(CAST(mi.info AS NUMERIC)) as average_rating, COUNT(DISTINCT at.id) as total_alternate_titles, COUNT(DISTINCT cn.id) as total_companies_involved, MAX(t.production_year) as latest_production_year, MIN(t.production_year) as earliest_production_year FROM title t LEFT JOIN movie_info_idx miidx ON miidx.movie_id = t.id LEFT JOIN info_type it ON it.id = miidx.info_type_id AND it.info = 'rating' LEFT JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = it.id LEFT JOIN aka_title at ON at.movie_id = t.id LEFT JOIN movie_companies mc ON mc.movie_id = t.id LEFT JOIN company_name cn ON cn.id = mc.company_id LEFT JOIN complete_cast cc ON cc.movie_id = t.id WHERE t.production_year BETWEEN 2000 AND 2023 AND cn.country_code = '[us]' GROUP BY t.id;
SELECT p.info AS person_birthplace, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(sub.link_count) AS average_number_of_links_per_movie, SUM(CASE WHEN mk.keyword_id = 2693 THEN 1 ELSE 0 END) AS count_keyword_2693 FROM person_info p LEFT JOIN movie_keyword mk ON p.person_id = mk.movie_id LEFT JOIN ( SELECT movie_id, COUNT(*) AS link_count FROM movie_link GROUP BY movie_id ) sub ON sub.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mk.movie_id WHERE p.info = 'Miles City, Montana, USA' GROUP BY p.info;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.note LIKE '%(producer)%' THEN 1 ELSE 0 END) AS total_producer_mentions, cct.kind AS cast_type_kind, MIN(cn.name) AS company_name, MAX(ci.nr_order) AS highest_cast_order FROM cast_info AS ci JOIN comp_cast_type AS cct ON ci.person_role_id = cct.id JOIN company_name AS cn ON cn.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN link_type AS lt ON ci.role_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id WHERE cct.kind IN ('complete', 'complete+verified') AND cn.name_pcode_sf IN ('C6532', 'L2653', 'U53', 'D252') AND (ci.note LIKE '%(producer)%' OR ci.note IS NULL) AND lt.id IN ('7', '15') GROUP BY cct.kind ORDER BY average_movie_rating DESC;
SELECT kt.kind AS movie_kind, AVG(mi.info::numeric) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT an.id) AS total_actors, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_production_companies FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'rating' LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN complete_cast an ON cc.id = an.id WHERE kt.kind IN ('video game', 'episode', 'tv series', 'tv mini series') AND t.production_year > 2000 GROUP BY kt.kind HAVING AVG(mi.info::numeric) > 5.0 ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT mk.movie_id) AS num_movies_with_keywords, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, COUNT(DISTINCT ml.movie_id) AS num_movies_with_links, COUNT(DISTINCT cc.movie_id) AS num_movies_with_complete_cast, STRING_AGG(DISTINCT k.keyword, ', ') AS sample_keywords FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info_idx AS mi ON mk.movie_id = mi.movie_id INNER JOIN movie_link AS ml ON mk.movie_id = ml.movie_id INNER JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id WHERE mi.info_type_id = 3 AND ml.link_type_id IN (1, 2, 3) AND cc.status_id IN (1, 2) GROUP BY mi.info_type_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_actors_with_roles, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT ci.person_id) AS number_of_actors FROM kind_type AS kt JOIN movie_info AS mi ON kt.id = mi.info_type_id JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id JOIN cast_info AS ci ON mi.movie_id = ci.movie_id WHERE kt.kind IN ('animation', 'documentary', 'drama') AND mi.movie_id IN ('15385', '12319', '8904', '2482109', '1214055') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT k.id) AS total_keywords FROM name n JOIN person_info pi ON n.id = pi.person_id JOIN movie_info_idx mii ON pi.info_type_id = mii.info_type_id JOIN role_type rt ON pi.info_type_id = rt.id JOIN title t ON mii.movie_id = t.id LEFT JOIN keyword k ON k.phonetic_code = t.phonetic_code WHERE mii.info IN ('856', '1..11...15') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY rt.ROLE;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mc.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_productions, t.production_year, t.kind_id FROM cast_info AS ci JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN title AS t ON ci.movie_id = t.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND t.production_year IS NOT NULL GROUP BY t.production_year, t.kind_id ORDER BY t.production_year DESC, average_rating DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_actors, AVG(nk.keyword_count) AS average_keywords_per_actor, SUM(nk.keyword_count) AS total_keywords FROM name AS n INNER JOIN ( SELECT mk.movie_id, COUNT(*) AS keyword_count FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id WHERE k.phonetic_code IN ('H525', 'C4252', 'P3624', 'A543', 'F6526', 'M1525') GROUP BY mk.movie_id ) AS nk ON nk.movie_id = n.id INNER JOIN role_type AS rt ON rt.id IN ('1', '2', '6', '10', '5', '4') INNER JOIN movie_companies AS mc ON mc.movie_id = nk.movie_id WHERE n.gender IS NOT NULL GROUP BY rt.ROLE ORDER BY total_actors DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(aka.production_year) AS average_production_year, MAX(aka.production_year) AS latest_production_year, MIN(aka.production_year) AS earliest_production_year, COUNT(DISTINCT cn.id) AS number_of_unique_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_cast_members, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_cast_members FROM movie_companies AS mc JOIN aka_title AS aka ON mc.movie_id = aka.movie_id JOIN movie_keyword AS mk ON aka.movie_id = mk.movie_id JOIN complete_cast AS cc ON aka.movie_id = cc.movie_id JOIN char_name AS cn ON cn.name_pcode_nf IN ('E2416', 'R3242', 'W4165') JOIN name AS n ON cn.id = n.id WHERE mc.id IN ('577', '4551', '4702', '4381', '3126', '3864') AND aka.kind_id = 1 GROUP BY aka.kind_id HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY average_production_year DESC;
SELECT AT.production_year, CT.kind AS company_kind, IT.info AS info_type, AVG(CI.nr_order) AS average_cast_order, COUNT(DISTINCT MK.keyword_id) AS number_of_keywords, COUNT(DISTINCT ML.link_type_id) AS number_of_link_types, SUM(CASE WHEN AT.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title AT JOIN movie_keyword MK ON AT.movie_id = MK.movie_id JOIN movie_link ML ON AT.movie_id = ML.movie_id JOIN cast_info CI ON AT.movie_id = CI.movie_id JOIN company_type CT ON AT.kind_id = CT.id JOIN info_type IT ON MK.keyword_id = IT.id WHERE AT.production_year BETWEEN 2000 AND 2020 AND CT.kind = 'production' AND IT.info LIKE '%genre%' GROUP BY AT.production_year, CT.kind, IT.info ORDER BY AT.production_year, number_of_keywords DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT chn.id) AS total_character_names, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info, AVG(mi.info_type_id) AS average_info_type_id FROM title AS t LEFT JOIN char_name AS chn ON chn.id = t.id LEFT JOIN movie_info_idx AS mi ON mi.movie_id = t.id WHERE t.production_year BETWEEN 1990 AND 2020 AND (t.title LIKE '%Roaring Twenties%' OR t.title LIKE '%Nothing Like Experience%') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT pi.person_id) AS total_people_contributed, AVG(pi.info::NUMERIC) FILTER (WHERE pi.info_type_id = 3) AS average_movie_length FROM title AS t LEFT JOIN person_info AS pi ON t.id = pi.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND t.series_years LIKE '%199%' GROUP BY t.kind_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS total_series, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info, COUNT(DISTINCT pi.person_id) AS total_persons_with_info, COUNT(DISTINCT cn.id) AS total_companies, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at LEFT JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_info mi ON at.movie_id = mi.movie_id LEFT JOIN person_info pi ON mi.movie_id = pi.person_id LEFT JOIN company_name cn ON mi.movie_id = cn.imdb_id GROUP BY kt.kind ORDER BY total_alternate_titles DESC;
