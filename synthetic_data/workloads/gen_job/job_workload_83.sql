SELECT AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT aka.title) AS unique_aka_titles, COUNT(DISTINCT ci.person_id) AS number_of_cast_members, MAX(ml.link_type_id) AS highest_link_type_id FROM aka_title aka JOIN cast_info ci ON aka.movie_id = ci.movie_id JOIN movie_companies mc ON aka.movie_id = mc.movie_id JOIN movie_link ml ON aka.movie_id = ml.movie_id WHERE aka.title IS NOT NULL AND aka.production_year IS NOT NULL AND (aka.title LIKE '0....01124%' OR aka.title LIKE '...0012111%' OR aka.title LIKE '%758%') GROUP BY aka.production_year ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(CAST(pi.info AS NUMERIC)) AS average_budget, SUM(CASE WHEN mc.company_type_id = '1' THEN 1 ELSE 0 END) AS number_of_producers, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN person_info AS pi ON mc.movie_id = pi.person_id JOIN keyword AS k ON k.phonetic_code IN ('N3642', 'I', 'N3', 'B6245', 'S5324', 'C6361') WHERE pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget') GROUP BY kt.kind;
SELECT n.gender, COUNT(DISTINCT n.id) AS number_of_people, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN lt.LINK = 'sequel' THEN 1 ELSE 0 END) AS count_sequel_links, COUNT(DISTINCT k.id) AS number_of_keywords, COUNT(DISTINCT an.id) AS number_of_aka_names FROM name AS n LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN movie_link AS ml ON ml.movie_id IN (SELECT movie_id FROM movie_info_idx WHERE id IN (1031, 375, 3321, 4177, 537)) LEFT JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id GROUP BY n.gender HAVING COUNT(DISTINCT k.id) > 5 ORDER BY average_movie_rating DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ct.id IN (3, 4) AND cn.country_code IN ('[mk]', '[ua]', '[kr]', '[ir]', '[ph]') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_top_ranked_movies FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN title AS t ON mc.movie_id = t.id JOIN movie_info AS mi ON t.id = mi.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND t.production_year >= 2000 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT rt.role, AVG(mc.company_type_id) AS average_company_type, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS count_main_subject_movies FROM movie_companies mc INNER JOIN movie_keyword mk ON mc.movie_id = mk.movie_id INNER JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id INNER JOIN complete_cast cc ON mc.movie_id = cc.movie_id INNER JOIN role_type rt ON rt.id = cc.subject_id WHERE rt.role IN ('costume designer', 'writer', 'guest', 'editor') AND mc.note IS NOT NULL AND mi.note IS NOT NULL GROUP BY rt.role;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT pi.person_id) AS number_of_unique_persons, AVG(pi.id) AS average_person_info_id, SUM(CASE WHEN pi.note IN ('Mimi Gold', 'Paul Becker', 'Rory Leahy', 'Archie York', 'Laurel A Adler', 'Chris') THEN 1 ELSE 0 END) AS count_special_notes FROM kind_type kt LEFT JOIN movie_link ml ON ml.link_type_id = kt.id LEFT JOIN company_name cn ON cn.imdb_id = ml.movie_id LEFT JOIN person_info pi ON pi.info_type_id = kt.id WHERE ml.link_type_id = '15' GROUP BY kt.kind;
SELECT lt.LINK AS link_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, MIN(n.name) AS earliest_person_name, MAX(pi.info_type_id) AS max_info_type_id FROM aka_title at JOIN link_type lt ON at.kind_id = lt.id JOIN name n ON at.id = n.id JOIN person_info pi ON n.id = pi.person_id WHERE at.production_year IS NOT NULL AND pi.info_type_id IN (1057, 2456) AND at.title IN ('Doctor Hassan', 'Arjeplog - Lappland zwischen Eis und Hightech') AND at.season_nr IN (1, 14, 4, 20, 11) AND lt.id IN (4, 17, 12, 8, 14, 1) GROUP BY lt.LINK ORDER BY total_movies DESC, average_production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN it.info = 'budget' THEN CAST(mi.info AS MONEY) ELSE 0::MONEY END) AS total_budget, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM movie_info mi JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN aka_title at ON ci.movie_id = at.movie_id JOIN kind_type kt ON kt.id = at.kind_id JOIN info_type it ON it.id = mi.info_type_id WHERE it.info IN ('budget', 'box office gross') AND kt.kind IN ('actor', 'actress') AND mc.company_type_id IN (1, 2) GROUP BY kt.kind;
SELECT lt.LINK, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'budget') AS total_budget FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS it ON mi.info_type_id = it.id WHERE ml.movie_id IN ('11225', '16185', '8060') OR ml.linked_movie_id IN ('438568', '10238', '2451792', '1949408') AND mi.note IN ('(English subtitles)', '(Original Version)', '(a few lines)', '(Original version)') GROUP BY lt.LINK;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_characters, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.surname_pcode = 'T5253' THEN 1 ELSE 0 END) AS count_surname_T5253, SUM(CASE WHEN cn.surname_pcode = 'M5253' THEN 1 ELSE 0 END) AS count_surname_M5253, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, STRING_AGG(DISTINCT rt.ROLE, ', ') AS roles_involved, STRING_AGG(DISTINCT mc.note, '; ') AS production_notes FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN char_name cn ON cn.id = mc.movie_id LEFT JOIN role_type rt ON rt.id = mc.company_type_id WHERE kt.kind IN ('episode', 'tv movie', 'movie', 'video movie', 'tv mini series', 'video game') AND mc.company_type_id = 1 AND (cn.surname_pcode IN ('T5253', 'M5253') OR cn.name IN ('Ish', 'Conti', 'Governor of the town', 'Himself - Grand Questor', 'Miss Travers''s Class')) AND rt.ROLE IN ('costume designer', 'production designer', 'cinematographer', 'director', 'writer', 'miscellaneous crew') AND mc.note LIKE '%(TV)%' GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT ml.movie_id) AS number_of_movie_links, COUNT(DISTINCT mk.movie_id) AS number_of_movie_keywords, AVG(mi.info_type_id) AS average_info_type_id, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS total_production_companies FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id LEFT JOIN movie_link AS ml ON mc.movie_id = ml.movie_id AND ml.link_type_id IN (9, 8, 13) LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id AND mk.keyword_id = 2926 LEFT JOIN movie_info AS mi ON mc.movie_id = mi.movie_id WHERE mc.note SIMILAR TO '%\([0-9]{4}\) \((USA|Canada|Greece|Australia)\) \((DVD|TV)\)%' AND kt.kind IN ('tv mini series', 'tv movie', 'video game', 'video movie', 'movie', 'episode') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT cc.kind AS cast_kind, AVG(cc.id) AS average_cast_id, CN.name AS company_name, COUNT(*) AS number_of_movies, SUM(MI.id) AS sum_movie_info_id, AVG(MI.info_type_id) AS average_info_type_id FROM cast_info CI JOIN comp_cast_type CC ON CI.person_role_id = CC.id JOIN company_name CN ON CN.country_code = CI.note JOIN movie_info_idx MI ON CI.movie_id = MI.movie_id WHERE CI.nr_order IN (56, 62, 2, 74) AND CI.movie_id IN (1884275, 2284142, 1084092) AND CN.country_code IN ('[xyu]', '[suhh]', '[lv]', '[nl]', '[cn]') AND CN.name_pcode_sf IN ('W4216', 'A4526', 'S4163', 'C1616') GROUP BY cc.kind, CN.name ORDER BY number_of_movies DESC, company_name;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT ml.movie_id) AS total_movie_links, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS count_of_series, COUNT(DISTINCT t.id) FILTER (WHERE t.title = 'It Came from the Nightosphere' OR t.title = 'Wes Craven Presents Don''t Look Down') AS specific_titles_count FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN comp_cast_type ct ON mc.company_type_id = ct.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE ct.id IN (2, 3) AND mc.company_type_id = 1 AND (ml.link_type_id IN (12, 1, 13, 15) OR ml.link_type_id IS NULL) GROUP BY ct.kind
SELECT cn.name AS company_name, k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT an.person_id) AS number_of_aka_names, AVG(cn.imdb_id) AS average_imdb_id_for_company FROM movie_keyword mk INNER JOIN keyword k ON mk.keyword_id = k.id INNER JOIN company_name cn ON cn.country_code = 'us' INNER JOIN aka_name an ON an.person_id != 0 WHERE mk.id IN (4493, 3974, 1711, 3754) AND mk.movie_id IN (18717, 12274, 9073) AND k.id IN (1749, 8745, 6590, 5243, 3691) GROUP BY cn.name, k.keyword ORDER BY number_of_movies DESC, number_of_aka_names DESC;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, SUM(CASE WHEN mi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS interview_movie_count, SUM(CASE WHEN mi.note LIKE '%(Original version)%' THEN 1 ELSE 0 END) AS original_version_movie_count, COUNT(DISTINCT k.id) AS distinct_keywords_used, AVG(mi.id) AS average_movie_info_id FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE it.id IN (9, 31) AND k.keyword IN ('cobra', 'dinosaur-egg', 'startled', 'paranoia') GROUP BY it.info ORDER BY movie_count DESC;
SELECT ct.kind AS company_kind, it.info AS info_category, AVG(t.production_year) AS average_production_year, COUNT(t.id) AS total_titles, SUM(CASE WHEN p.info = 'Adams, Terry Wayne' THEN 1 ELSE 0 END) AS count_terry_wayne_adams_mentions, SUM(CASE WHEN p.info = '14 March 1879' THEN 1 ELSE 0 END) AS count_14_march_1879_mentions FROM title AS t JOIN company_type AS ct ON t.kind_id = ct.id JOIN person_info AS p ON p.info_type_id = ct.id JOIN info_type AS it ON p.info_type_id = it.id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY ct.kind, it.info HAVING COUNT(t.id) > 10;
SELECT k.keyword, COUNT(mk.movie_id) AS movie_count FROM keyword AS k JOIN movie_info_idx AS mk ON k.id = mk.info_type_id WHERE k.id IN (6020, 8681, 8319, 3964, 4363, 7683) GROUP BY k.keyword ORDER BY movie_count DESC;
