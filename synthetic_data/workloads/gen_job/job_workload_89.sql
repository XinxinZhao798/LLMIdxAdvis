SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_persons, AVG(ci.nr_order) AS average_order, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT mi.movie_id) AS number_of_movies_with_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id AND mc.company_type_id = 1 JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id JOIN complete_cast cc ON ci.movie_id = cc.movie_id AND cc.subject_id = 1 WHERE ci.person_id IN (3767, 4155) AND ci.person_role_id IS NOT NULL AND mi.info LIKE '..00011111%' AND mi.info_type_id IN (15, 28, 24) GROUP BY rt.ROLE;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'follows' THEN 1 ELSE 0 END) AS number_of_sequels, SUM(CASE WHEN lt.link = 'spoofed in' THEN 1 ELSE 0 END) AS number_of_spoofs FROM title t JOIN cast_info ci ON t.id = ci.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN link_type lt ON lt.id = mc.company_type_id WHERE t.production_year BETWEEN 2000 AND 2010 AND k.phonetic_code IN ('U6523', 'W46', 'S3123', 'L3416', 'A3435', 'P4252') AND ci.role_id = 1 GROUP BY t.production_year ORDER BY t.production_year;
SELECT AVG(CASE WHEN mc.company_type_id = 1 THEN mi_box_office.info::NUMERIC ELSE NULL END) AS avg_box_office_producer, AVG(CASE WHEN mc.company_type_id = 2 THEN mi_box_office.info::NUMERIC ELSE NULL END) AS avg_box_office_distributor, COUNT(DISTINCT mc.movie_id) FILTER (WHERE mc.company_type_id = 1) AS num_movies_produced, COUNT(DISTINCT mc.movie_id) FILTER (WHERE mc.company_type_id = 2) AS num_movies_distributed, COUNT(DISTINCT cn.id) AS num_companies, COUNT(DISTINCT an.person_id) AS num_persons_with_aka FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN movie_info mi_box_office ON mc.movie_id = mi_box_office.movie_id AND mi_box_office.info_type_id = 107 LEFT JOIN aka_name an ON cn.id = an.person_id WHERE cn.country_code = 'US' AND mi_box_office.info ~ '^\d+$' GROUP BY cn.country_code;
SELECT kt.kind AS movie_kind, AVG(CAST(mi.info AS numeric)) AS average_rating, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_count, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t INNER JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM movie_info_idx WHERE info = 'rating') LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE t.production_year BETWEEN 1990 AND 2010 GROUP BY kt.kind HAVING COUNT(DISTINCT t.id) > 10 ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(cc.status_id) AS average_status, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS titles_after_2000, lt.LINK, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN link_type lt ON cc.subject_id = lt.id GROUP BY lt.LINK ORDER BY total_alternate_titles DESC;
SELECT mk.keyword_id, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(ci.person_id) AS total_cast_members, AVG(CAST(ci.nr_order AS DECIMAL)) AS average_cast_order FROM movie_keyword AS mk INNER JOIN cast_info AS ci ON mk.movie_id = ci.movie_id INNER JOIN link_type AS lt ON ci.person_role_id = lt.id WHERE lt.link IN ('followed by', 'edited into', 'similar to') GROUP BY mk.keyword_id ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT cc.kind AS company_cast_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies, AVG(name.length) AS average_name_length FROM movie_companies AS mc JOIN comp_cast_type AS cc ON mc.company_type_id = cc.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN (SELECT id, CHAR_LENGTH(name) AS length FROM name WHERE gender = 'm') AS name ON name.id = mc.movie_id WHERE mc.movie_id IN ('18930', '11158', '28073', '9831', '18529', '30177') AND cc.kind IN ('complete', 'crew', 'cast') GROUP BY cc.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN al.title IS NOT NULL THEN 1 ELSE 0 END) AS number_of_alternate_titles, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM title AS t LEFT JOIN aka_title AS al ON t.id = al.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN keyword AS k ON k.phonetic_code = al.phonetic_code INNER JOIN company_type AS ct ON t.kind_id = ct.id WHERE t.production_year BETWEEN 2000 AND 2023 AND ml.linked_movie_id IN (16385, 2365137, 1412093, 1391187, 16056, 1432843) AND al.title IS NOT NULL AND k.keyword IN ('freezer', 'vengeance', 'undead', 'meat-cleaver') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS number_of_bw_movies, COUNT(DISTINCT mk.keyword_id) FILTER (WHERE mk.keyword_id IN (4048, 2907, 2882)) AS number_of_specific_keywords FROM company_name cn LEFT JOIN movie_info mi ON mi.movie_id = cn.id LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = mi.movie_id LEFT JOIN info_type it ON it.id = mi_idx.info_type_id LEFT JOIN movie_keyword mk ON mk.movie_id = mi.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mi.movie_id AND ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('sequel', 'prequel')) WHERE cn.country_code NOT IN ('US', 'CA') AND it.info = 'rating' AND mi.info IN ('color', 'black and white') GROUP BY cn.name, cn.country_code ORDER BY average_rating DESC, number_of_movies DESC;
SELECT pi.info_type_id, COUNT(DISTINCT pi.person_id) AS total_people, AVG(CAST(pi.info AS FLOAT)) FILTER (WHERE pi.info_type_id = 1) AS average_info_type_1, SUM(CAST(pi.info AS INTEGER)) FILTER (WHERE pi.info_type_id = 2) AS sum_info_type_2, mc.company_type_id, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT cn.id) AS total_characters FROM person_info pi JOIN movie_companies mc ON pi.person_id = mc.company_id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN char_name cn ON cn.imdb_id = ml.linked_movie_id GROUP BY pi.info_type_id, mc.company_type_id HAVING COUNT(DISTINCT pi.person_id) > 1 ORDER BY total_people DESC, total_companies DESC;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT an.id) AS number_of_alternative_names, COUNT(DISTINCT cct.id) AS number_of_cast_types, AVG(LENGTH(n.name)) AS average_actor_name_length FROM name n LEFT JOIN aka_name an ON n.id = an.person_id LEFT JOIN comp_cast_type cct ON an.id = cct.id WHERE n.name LIKE '%Amplify%' OR an.name IN ('Allen, ''Barefoot'' Chris', 'Alsamia, Etienne', 'Altamirano, Lisa Mariea', 'Aller, Gina', 'Smith, Mary Alice') GROUP BY n.gender;
SELECT kt.kind AS movie_kind, AVG(ati.production_year) AS avg_production_year, COUNT(DISTINCT cn.id) AS total_actors, COUNT(DISTINCT compn.id) AS total_companies, SUM(CASE WHEN mi.info = 'Hungarian' THEN 1 ELSE 0 END) AS hungarian_movies_count, SUM(CASE WHEN mi.info = 'Bulgarian' THEN 1 ELSE 0 END) AS bulgarian_movies_count, SUM(CASE WHEN mi.info = 'Korean' THEN 1 ELSE 0 END) AS korean_movies_count FROM aka_title ati JOIN kind_type kt ON ati.kind_id = kt.id JOIN movie_info mi ON ati.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN name n ON n.id = ati.episode_of_id LEFT JOIN company_name compn ON compn.id = ati.movie_id LEFT JOIN char_name cn ON n.id = cn.id WHERE mi.info_type_id = 4 AND kt.id IN (1, 6, 5) AND ati.title IN ('Articolo 99', 'Lippenstift am Kragen', 'Eine Klasse f√ºr sich') GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, AVG(aka_title.production_year) AS average_production_year, COUNT(DISTINCT aka_title.movie_id) AS total_movies, COUNT(DISTINCT movie_companies.company_id) AS total_companies_involved, SUM(case when aka_title.season_nr is not null then 1 else 0 end) AS total_seasons, COUNT(DISTINCT role_type.id) AS total_unique_roles FROM aka_title JOIN kind_type AS kt ON aka_title.kind_id = kt.id JOIN movie_companies ON aka_title.movie_id = movie_companies.movie_id JOIN company_type AS ct ON movie_companies.company_type_id = ct.id JOIN role_type ON role_type.id = movie_companies.company_id WHERE ct.kind = 'production companies' AND role_type.role IN ('guest', 'writer', 'miscellaneous crew', 'cinematographer') AND aka_title.imdb_index IN ('III', 'IV', 'I', 'II') AND aka_title.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(cn.imdb_id) AS average_imdb_id_for_companies, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies FROM kind_type kt JOIN movie_keyword mk ON kt.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN company_name cn ON cn.id = mk.movie_id WHERE kt.kind IN ('movie', 'tv movie', 'tv series') AND k.keyword IN ('boss-is-away', 'musical-performance', 'global-warming') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT cn.country_code, ct.kind AS genre, COUNT(t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequels FROM title AS t JOIN company_name AS cn ON t.id = cn.imdb_id JOIN comp_cast_type AS ct ON t.kind_id = ct.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id AND ml.link_type_id = 1 WHERE t.production_year BETWEEN 2000 AND 2020 AND cn.country_code IN ('US', 'GB', 'CA') GROUP BY cn.country_code, ct.kind ORDER BY cn.country_code, total_movies DESC;
SELECT AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS total_unique_actors, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_complete_status, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS count_incomplete_status, COUNT(DISTINCT an.id) AS total_aka_names FROM cast_info AS ci JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN aka_name AS an ON ci.person_id = an.person_id WHERE ci.role_id = 1 AND cc.id IN (1863, 310, 417, 31, 2902, 329) GROUP BY ci.movie_id;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cl.id) AS number_of_movie_links, AVG(pi.person_id) AS average_person_id, SUM(CASE WHEN pi.note SIMILAR TO '%(Erin Chambers|nazir afzal|woodyanders \(qv''s & corrections by A. Nonymous\)|Woodlene Adeyemo|tina ansah)%' THEN 1 ELSE 0 END) AS count_special_notes FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN movie_link AS cl ON cn.id = cl.movie_id LEFT JOIN char_name AS chn ON chn.name IN ('Lumbard', 'Charlie Graham', 'Der junge Graf', 'Himself - King of Jungle') LEFT JOIN complete_cast AS cc ON cc.movie_id = cl.movie_id LEFT JOIN person_info AS pi ON pi.person_id = chn.id LEFT JOIN name AS n ON n.id = pi.person_id WHERE cn.country_code IN ('[sd]', '[ir]', '[ph]', '[tr]') GROUP BY ct.kind, cn.country_code ORDER BY number_of_companies DESC, average_person_id;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_movie_duration, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, MAX(CAST(mi.info AS INTERVAL)) AS longest_movie_duration, MIN(CAST(mi.info AS INTERVAL)) AS shortest_movie_duration FROM movie_info mi JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN comp_cast_type cct ON ci.person_role_id = cct.id JOIN char_name cn ON ci.person_id = cn.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') AND mc.note LIKE '%(USA)%' AND cct.kind IN ('cast', 'complete') AND cn.surname_pcode IN ('E235', 'A6432', 'E2536', 'A1526') GROUP BY mc.company_id ORDER BY average_movie_duration DESC;
SELECT kt.kind, COUNT(DISTINCT cn.id) as number_of_companies, COUNT(DISTINCT pi.person_id) as number_of_people, AVG(CASE WHEN pi.note SIMILAR TO '%(Coverland|Chris Hendren|maria afsharian|CelebrityLoop.com)%' THEN CAST(pi.info AS NUMERIC) ELSE NULL END) as average_info_rating, SUM(CASE WHEN kt.kind = 'video movie' THEN 1 ELSE 0 END) as video_movie_count, SUM(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) as tv_mini_series_count, SUM(CASE WHEN kt.kind = 'video game' THEN 1 ELSE 0 END) as video_game_count FROM company_name cn JOIN kind_type kt ON cn.id = kt.id JOIN person_info pi ON cn.id = pi.person_id WHERE cn.country_code NOT IN ('US', 'GB') AND pi.info_type_id BETWEEN 1 AND 5 AND kt.id IN ('1', '2', '4', '5', '7') GROUP BY kt.kind ORDER BY number_of_companies DESC;
SELECT ct.kind AS cast_type, AVG(mk.keyword_id) AS average_keyword_id, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN ml.linked_movie_id = 1910055 THEN 1 ELSE 0 END) AS count_linked_to_movie_1910055, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id BETWEEN 2 AND 3) AS count_movie_links_type_2_3, COUNT(DISTINCT cn.id) FILTER (WHERE cn.country_code IN ('[lb]', '[cn]', '[na]', '[in]', '[kr]', '[xyu]')) AS count_movies_non_english_speaking_countries FROM comp_cast_type AS ct LEFT JOIN aka_title AS at ON ct.id = at.kind_id LEFT JOIN movie_keyword AS mk ON at.movie_id = mk.movie_id LEFT JOIN company_name AS cn ON cn.name_pcode_nf = 'A6453' LEFT JOIN movie_link AS ml ON at.movie_id = ml.movie_id WHERE ct.id IN (2, 3) AND mk.movie_id IN (18826, 18728, 18726, 12088, 18819, 15536) AND mk.id IN (886, 4673, 4280, 2228, 1485, 4805) GROUP BY ct.kind;
