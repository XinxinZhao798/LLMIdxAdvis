SELECT COUNT(DISTINCT cn.id) AS total_companies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN lt.id = '12' THEN 1 ELSE 0 END) AS count_type_12_links, COUNT(DISTINCT t.id) AS total_titles, COUNT(DISTINCT mi_idx.info) AS total_unique_info FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN title t ON mc.movie_id = t.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id WHERE cn.country_code = 'US' AND t.production_year BETWEEN 1990 AND 2000 AND mc.note IS NOT NULL AND (lt.id = '15' OR lt.id = '12') GROUP BY cn.country_code, t.production_year ORDER BY average_production_year DESC;
SELECT rt.ROLE, AVG(miidx.info::NUMERIC) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cl.movie_id) AS number_of_movies_linked, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM role_type rt LEFT JOIN char_name cn ON cn.surname_pcode = rt.id::CHARACTER VARYING LEFT JOIN movie_link cl ON cl.link_type_id = rt.id LEFT JOIN movie_keyword mk ON mk.movie_id = cl.movie_id LEFT JOIN movie_info_idx miidx ON miidx.movie_id = cl.movie_id WHERE rt.ROLE IN ('production designer', 'guest', 'editor', 'cinematographer') AND cn.name_pcode_nf IN ('T3452', 'A423', 'D653', 'A5426', 'H5161', 'B3216') AND miidx.info_type_id = 101 /* Assuming 101 is the info_type_id for 'rating' */ GROUP BY rt.ROLE;
SELECT rt.ROLE, COUNT(DISTINCT ml.movie_id) AS num_movies, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT k.id) AS num_keywords FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN char_name cn ON ci.person_role_id = cn.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id GROUP BY rt.ROLE ORDER BY num_movies DESC, avg_imdb_id DESC;
SELECT COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mk_cnt.keyword_count) AS avg_keywords_per_movie, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS count_similar_to_links, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(NULLIF(regexp_replace(mi_idx.info, '\D', '', 'g'), '')::NUMERIC) AS average_info_numeric, SUM(CASE WHEN k.phonetic_code IN ('M342', 'N2165') THEN 1 ELSE 0 END) AS count_specific_phonetic_codes FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id JOIN movie_companies AS mc ON ml.movie_id = mc.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN keyword AS k ON mk.keyword_id = k.id JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS mk_cnt ON mk.movie_id = mk_cnt.movie_id WHERE mi_idx.info_type_id = '100' AND mi_idx.info SIMILAR TO '%[0-9]{6,}%' AND (ml.movie_id IN ('11122', '14650', '11447', '7786', '14516') OR ml.id IN ('3768', '4002', '4548', '963', '430', '4309')) GROUP BY lt.link;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cc.id) AS total_complete_casts, COUNT(DISTINCT ml.id) AS total_movie_links, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS subject_1_cast_count FROM company_type ct LEFT JOIN complete_cast cc ON cc.subject_id = ct.id LEFT JOIN movie_link ml ON ml.movie_id = cc.movie_id GROUP BY ct.kind ORDER BY total_complete_casts DESC;
SELECT kt.kind, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT n.id) AS total_directors, MAX(t.production_year) AS latest_movie_year FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_info AS mi ON t.id = mi.movie_id LEFT JOIN person_info AS pi ON pi.person_id = t.id AND pi.info_type_id = mi.info_type_id JOIN name AS n ON n.id = pi.person_id WHERE mi.info_type_id = 4 AND kt.id IN (4, 5, 1, 6, 3) AND ( mi.note IS NULL OR mi.note IN ('(Original version)', '(none)', '(some dialogue)') ) GROUP BY kt.kind ORDER BY average_rating DESC, total_movies DESC;
SELECT pi.note AS person_note, COUNT(DISTINCT ml.movie_id) AS total_movies, AVG(CAST(pi.info AS INTEGER)) AS average_person_info_number, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_subject_id_1 FROM person_info pi JOIN movie_link ml ON pi.person_id = ml.movie_id JOIN complete_cast cc ON ml.movie_id = cc.movie_id WHERE pi.note IN ('Nick van de Wall', 'Gary Brumburgh / gr-home@pacbell.net') AND ml.link_type_id IN (3, 13, 17, 10, 16, 2) AND pi.info_type_id IN (32, 17, 31, 33, 38, 36) GROUP BY pi.note HAVING COUNT(DISTINCT ml.linked_movie_id) > 5;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, cn.country_code, rt.ROLE, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_short_films, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT ml.link_type_id) AS number_of_unique_link_types FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN role_type AS rt ON mc.company_type_id = rt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 1990 AND 2000 AND rt.id IN ('6', '8') AND mc.note LIKE '%(TV)%' GROUP BY cn.country_code, rt.ROLE ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(title.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT n.id) AS total_cast_members, MIN(title.title) AS earliest_movie_title FROM cast_info ci INNER JOIN name n ON ci.person_id = n.id INNER JOIN title ON ci.movie_id = title.id INNER JOIN movie_info_idx mii ON title.id = mii.movie_id WHERE mii.info LIKE '1000111100' OR mii.info LIKE '....0213.2' OR mii.info LIKE '.....8...2' GROUP BY title.kind_id HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(CAST(pi.info AS NUMERIC)) AS average_budget, SUM(CASE WHEN mc.company_type_id = '1' THEN 1 ELSE 0 END) AS number_of_producers, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN person_info AS pi ON mc.movie_id = pi.person_id JOIN keyword AS k ON k.phonetic_code IN ('N3642', 'I', 'N3', 'B6245', 'S5324', 'C6361') WHERE pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget') GROUP BY kt.kind;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, COUNT(DISTINCT pi.person_id) AS total_unique_actors, SUM(CASE WHEN mi.info_type_id = 37 THEN 1 ELSE 0 END) AS total_horror_movies FROM movie_info AS mi INNER JOIN movie_companies AS mc ON mi.movie_id = mc.movie_id INNER JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id INNER JOIN person_info AS pi ON cc.subject_id = pi.person_id AND pi.info_type_id IN ('26', '20', '31', '37') GROUP BY mc.company_id HAVING COUNT(DISTINCT mc.movie_id) > 5 AND COUNT(DISTINCT pi.person_id) > 10 ORDER BY average_movie_length DESC, total_movies_produced DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, MIN(n.name) AS first_actor_name, MAX(n.name) AS last_actor_name, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_actors, COUNT(DISTINCT cc.id) AS number_of_complete_casts, COUNT(DISTINCT cct.id) AS number_of_different_cast_types FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id LEFT JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id WHERE ci.role_id = (SELECT id FROM comp_cast_type WHERE kind = 'actor') AND (ci.note LIKE '%(voice)%' OR ci.note NOT LIKE '%(archive footage)%') GROUP BY ci.movie_id HAVING COUNT(DISTINCT ci.person_id) > 1;
SELECT cct.kind AS cast_type_kind, it.info AS info_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS count_of_movies, SUM(CASE WHEN ml.linked_movie_id IS NOT NULL THEN 1 ELSE 0 END) AS sum_of_linked_movies FROM title t JOIN comp_cast_type cct ON t.kind_id = cct.id JOIN complete_cast cc ON t.id = cc.movie_id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE cc.status_id IN ('3', '4') GROUP BY cct.kind, it.info ORDER BY count_of_movies DESC, sum_of_linked_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT lt.id) AS number_of_link_types, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, MAX(cn.id) AS max_company_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON cn.id = lt.id WHERE cn.md5sum IN ('98b3290c059fa23b472f7277bba9e6c9', '7ddd8c092b2c8500fe94d9138d2cacd7') AND lt.id IN ('12', '13', '4', '14') GROUP BY ct.kind;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT mk.movie_id) AS movies_with_keywords, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM movie_info_idx AS mi_idx JOIN aka_title AS at ON mi_idx.movie_id = at.movie_id JOIN company_type AS ct ON at.kind_id = ct.id JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN name AS n ON at.movie_id = n.id WHERE mi_idx.info_type_id = 101 AND mi_idx.movie_id IN ('18742', '8465', '6663') AND at.production_year BETWEEN 2000 AND 2023 GROUP BY ct.kind ORDER BY average_rating DESC;
SELECT kt.kind AS movie_kind, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT mk.movie_id) AS num_movies_with_keywords, SUM(CASE WHEN cc.status_id = '3' THEN 1 ELSE 0 END) AS count_complete_cast_status_3, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS count_complete_cast_status_4, COUNT(DISTINCT ml.movie_id) AS num_linked_movies FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_keyword mk ON at.movie_id = mk.movie_id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id GROUP BY kt.kind ORDER BY num_movies_with_keywords DESC, avg_production_year DESC;
SELECT COUNT(DISTINCT ml.movie_id) AS linked_movies_count, AVG(CAST(pi.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN it.info = 'opening weekend' THEN CAST(pi.info AS NUMERIC) ELSE 0 END) AS total_opening_weekend_revenue, lt.LINK AS link_type, cct.kind AS company_type FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_companies AS mc ON ml.movie_id = mc.movie_id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN person_info AS pi ON ml.movie_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE it.info IN ('LD language', 'opening weekend', 'LD digital sound') AND it.id IN ('58', '108', '37', '73', '112') AND pi.info ~ '^[0-9]+(\.[0-9]+)?$' GROUP BY lt.LINK, cct.kind ORDER BY total_opening_weekend_revenue DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ml.movie_id) AS total_movies_linked, AVG(mi_idx.info::integer) AS average_info_index, STRING_AGG(DISTINCT cn.name, ', ') AS involved_companies, COUNT(DISTINCT rt.id) FILTER (WHERE rt.role IN ('production designer', 'costume designer', 'editor')) AS total_special_role_types FROM movie_link AS ml JOIN kind_type AS kt ON kt.id = ml.link_type_id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ml.movie_id JOIN company_name AS cn ON cn.imdb_id = ml.movie_id JOIN role_type AS rt ON rt.id = ANY(ARRAY[8, 10]) WHERE cn.country_code IN ('[us]', '[ba]', '[cu]', '[ni]', '[gb]', '[bh]') AND cn.name_pcode_sf IN ('G5235', 'P4352', 'I53', 'B4262') GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT cc.subject_id) AS total_subjects, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS total_sequels, SUM(CASE WHEN ml.link_type_id = 3 THEN 1 ELSE 0 END) AS total_remakes FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN char_name cn ON cn.id IN (6979, 93733, 25881, 73653) LEFT JOIN complete_cast cc ON cc.movie_id = t.id LEFT JOIN movie_link ml ON ml.movie_id = t.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS cast_type_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(mi.info_type_id) AS average_info_type_id, COUNT(DISTINCT rt.id) AS distinct_role_types, SUM(CASE WHEN ml.linked_movie_id IN ('2506545', '2342579', '147212', '15711', '1448011') THEN 1 ELSE 0 END) AS linked_movies_count, STRING_AGG(DISTINCT mi.info, ', ') AS movie_languages FROM movie_link AS ml JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN comp_cast_type AS ct ON ml.link_type_id = ct.id JOIN role_type AS rt ON ct.id = rt.id WHERE mi.info IN ('Tatar', 'Arabic', 'Slovenian', 'Mandarin', 'Maori', 'Icelandic') AND rt.role IN ('actor', 'writer', 'miscellaneous crew', 'director') AND mi.id IN ('7270303', '7268889', '7270059', '7267623', '7271071', '7268128') AND ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY ct.kind;
SELECT cn.name AS company_name, cn.country_code AS company_country, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS numeric)) FILTER (WHERE it.info = 'rating') AS average_movie_rating, SUM(CAST(mi.info AS numeric)) FILTER (WHERE it.info = 'budget') AS total_budget, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_info mi JOIN company_name cn ON cn.imdb_id = mi.movie_id JOIN keyword k ON k.id = mi.info_type_id JOIN movie_info it ON it.id = mi.info_type_id AND it.info IN ('rating', 'budget') WHERE cn.name IN ('Comedy Central', 'Odd Lot International', '20th Television') AND k.id IN ('7281', '7278', '9681', '1373', '9407', '1515') GROUP BY cn.name, cn.country_code ORDER BY total_movies DESC, average_movie_rating DESC;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies FROM movie_companies AS mc INNER JOIN company_type AS ct ON mc.company_type_id = ct.id INNER JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.note IS DISTINCT FROM '1' GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY average_rating DESC;
SELECT kt.kind AS media_type, rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_people, COUNT(DISTINCT CASE WHEN n.gender = 'M' THEN n.id END) AS total_males, COUNT(DISTINCT CASE WHEN n.gender = 'F' THEN n.id END) AS total_females, AVG(n.imdb_id) AS average_imdb_id FROM name n JOIN role_type rt ON n.id = rt.id JOIN kind_type kt ON n.id = kt.id WHERE kt.kind IN ('tv movie', 'movie', 'episode', 'tv series', 'tv mini series') AND rt.role = 'actress' GROUP BY kt.kind, rt.ROLE ORDER BY total_people DESC, total_males DESC, total_females DESC;
SELECT cct.kind AS cast_type, COUNT(DISTINCT cc.movie_id) AS number_of_movies, rt.ROLE AS role_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, AVG(CAST(mi.info AS numeric)) AS average_info_numeric_value FROM comp_cast_type AS cct JOIN complete_cast AS cc ON cct.id = cc.status_id JOIN role_type AS rt ON cc.subject_id = rt.id JOIN movie_info_idx AS mi ON cc.movie_id = mi.movie_id WHERE cct.id IN (2, 3) AND rt.id IN (11, 9, 1, 3) AND rt.ROLE IN ('producer', 'guest', 'writer') AND mi.id IN (4348, 2817, 476, 2090, 937) GROUP BY cct.kind, rt.ROLE ORDER BY number_of_movies DESC, average_info_numeric_value DESC;
SELECT MIN(t.title) AS movie_title, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_actors, SUM(CASE WHEN pi.info = 'New Kensington, Pennsylvania, USA' THEN 1 ELSE 0 END) AS actors_from_new_kensington, COUNT(DISTINCT k.id) AS total_keywords_used FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id JOIN person_info AS pi ON n.id = pi.person_id JOIN keyword AS k ON k.phonetic_code = t.phonetic_code WHERE t.imdb_index IN ('V', 'I', 'II') AND n.surname_pcode IN ('A434', 'A414') AND pi.info IN ('New Kensington, Pennsylvania, USA', '5'' 6"', 'Czech Republic') AND pi.note IN ('Bobbie Merritt/THE ENTERTAINMENT GROUP', 'Be Free Films', 'isabelleadriani@yahoo.it', 'Autor', 'Quincy Johnson', 'MSC') GROUP BY t.id;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS roles_with_person_role, COUNT(DISTINCT ci.person_id) AS distinct_actors_count FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN company_type ct ON cct.id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT ct.kind AS company_type, AVG(ati.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ati.movie_id) AS number_of_movies, SUM(CASE WHEN ati.note LIKE '%(subtitle)%' THEN 1 ELSE 0 END) AS number_of_subtitled_movies, SUM(CASE WHEN ati.note LIKE '%(series title)%' THEN 1 ELSE 0 END) AS number_of_series_titles, SUM(CASE WHEN ati.note LIKE '%(informal literal title)%' THEN 1 ELSE 0 END) AS number_of_informal_literal_titles FROM aka_title ati JOIN company_type ct ON ati.kind_id = ct.id LEFT JOIN company_name cn ON ati.movie_id = cn.imdb_id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT CT.kind AS company_kind, COUNT(DISTINCT CN.id) AS number_of_companies, COUNT(DISTINCT ML.movie_id) AS number_of_movies_linked, AVG(CAST(PI.info AS INTEGER)) AS average_person_info, SUM(CASE WHEN CN.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies FROM company_type CT JOIN company_name CN ON CT.id = CN.id LEFT JOIN movie_link ML ON CN.id = ML.movie_id LEFT JOIN person_info PI ON CN.id = PI.person_id WHERE CT.kind <> 'Unknown' AND ML.id <> 4420 GROUP BY CT.kind ORDER BY number_of_companies DESC, number_of_movies_linked DESC;
SELECT lt.LINK AS link_type, COUNT(ml.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN p.info = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN p.info = 'director' THEN 1 ELSE 0 END) AS total_directors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 JOIN person_info AS p ON ml.movie_id = p.person_id WHERE lt.id IN (9, 3, 18, 8, 15) AND mi.info_type_id = 3 AND ml.linked_movie_id = 2439274 AND p.info IN ('actor', 'director') GROUP BY lt.LINK ORDER BY total_movies DESC, average_rating DESC;
