SELECT lt.LINK, COUNT(mk.id) AS keyword_count, AVG(n.imdb_id) AS average_imdb_id, SUM(n.imdb_id) AS total_imdb_id FROM movie_keyword AS mk JOIN link_type AS lt ON mk.keyword_id = lt.id JOIN name AS n ON mk.movie_id = n.id WHERE mk.keyword_id IN (3778, 3127, 2497, 782, 3628) AND lt.id IN (3, 18, 11, 1, 6) AND n.gender = 'F' GROUP BY lt.LINK ORDER BY keyword_count DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS number_of_us_companies, MAX(pi.info) AS latest_info_entry FROM title AS t JOIN company_name AS cn ON t.id = cn.imdb_id JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN person_info AS pi ON pi.info LIKE '%USA%' WHERE t.production_year BETWEEN 1980 AND 1990 AND cn.country_code IN ('[us]', '[ca]') GROUP BY ct.kind ORDER BY number_of_titles DESC;
SELECT ct.kind AS company_kind, it.info AS info_category, AVG(t.production_year) AS average_production_year, COUNT(t.id) AS total_titles, SUM(CASE WHEN p.info = 'Adams, Terry Wayne' THEN 1 ELSE 0 END) AS count_terry_wayne_adams_mentions, SUM(CASE WHEN p.info = '14 March 1879' THEN 1 ELSE 0 END) AS count_14_march_1879_mentions FROM title AS t JOIN company_type AS ct ON t.kind_id = ct.id JOIN person_info AS p ON p.info_type_id = ct.id JOIN info_type AS it ON p.info_type_id = it.id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY ct.kind, it.info HAVING COUNT(t.id) > 10;
SELECT n.gender, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS avg_cast_order, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, SUM(CASE WHEN ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_roles, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS total_distributor_roles FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id WHERE n.gender = 'm' AND ci.role_id = 1 AND mc.company_id IN (1057, 946, 317, 31, 1181, 84) AND ci.note NOT LIKE '%(voice)%' GROUP BY n.gender;
SELECT ct.kind AS company_kind, it.info AS info_category, COUNT(*) AS total_companies, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN info_type it ON cn.id = it.id WHERE cn.md5sum IN ('6f5f695d7bd08122f1c8ece2814ae2cd', 'a90eefb65011789cddc830ed101bcd88') AND it.id IN ('74', '51', '63') GROUP BY ct.kind, it.info;
SELECT rt.ROLE, AVG(nk.count_keywords) AS average_keywords, COUNT(DISTINCT at.movie_id) AS number_of_movies, SUM(CASE WHEN at.production_year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS movies_2000_to_2010, COUNT(DISTINCT n.id) AS number_of_names FROM role_type rt LEFT JOIN aka_title at ON rt.id = at.kind_id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS count_keywords FROM movie_keyword mk GROUP BY mk.movie_id ) nk ON nk.movie_id = at.movie_id LEFT JOIN name n ON n.id = at.movie_id WHERE rt.id IN (6, 7, 8) GROUP BY rt.ROLE ORDER BY average_keywords DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mc.company_id AS NUMERIC)) AS average_company_id, SUM(kw.keyword_id) AS total_keyword_usage FROM kind_type kt JOIN movie_companies mc ON kt.id = mc.company_type_id JOIN movie_keyword kw ON mc.movie_id = kw.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies_count FROM role_type rt LEFT JOIN comp_cast_type cct ON rt.id = cct.id LEFT JOIN company_name cn ON cn.name_pcode_nf = 'M5236' OR cn.name_pcode_sf = 'L5612' LEFT JOIN movie_keyword mk ON mk.keyword_id IN (3479, 3152) WHERE cn.id IN (69171, 31595, 57187, 23935, 26659, 14910) AND rt.id IN (6, 5, 1, 7, 2) GROUP BY rt.ROLE ORDER BY number_of_companies DESC, number_of_movies_with_keywords DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, cct.kind AS company_type, MIN(cn.name) AS company_name, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors FROM movie_companies AS mc JOIN title AS t ON mc.movie_id = t.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id LEFT JOIN name AS n ON n.md5sum = mc.note WHERE cn.country_code NOT LIKE '[pl]' AND t.production_year BETWEEN 1950 AND 1999 AND t.phonetic_code = 'D323' AND n.name_pcode_nf IN ('N6454', 'I4364', 'O2464', 'D54', 'M3526', 'G6534') GROUP BY cct.kind;
SELECT rt.role, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS total_characters, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS movie_keyword_count, COUNT(DISTINCT pi.person_id) AS total_persons_with_info FROM role_type rt LEFT JOIN aka_title akat ON rt.id = akat.kind_id LEFT JOIN char_name cn ON cn.name = akat.title LEFT JOIN movie_keyword mk ON mk.movie_id = akat.movie_id LEFT JOIN person_info pi ON pi.info_type_id = rt.id WHERE akat.production_year > 2000 GROUP BY rt.role ORDER BY total_movies DESC, average_production_year DESC;
SELECT mc.company_type_id, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT lt.id) AS num_link_types FROM movie_companies AS mc JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN link_type AS lt ON at.id = lt.id WHERE mc.company_type_id = 1 AND lt.link IN ('alternate language version of', 'featured in', 'edited into', 'edited from', 'spoofs', 'referenced in') GROUP BY mc.company_type_id;
SELECT COUNT(DISTINCT cn.id) AS number_of_characters, AVG(k.id) AS average_keyword_id, SUM(mi.movie_id) AS total_movie_info_movie_ids, mi.info AS movie_info, MAX(cn.name) AS max_character_name FROM char_name cn JOIN movie_info mi ON cn.id = mi.movie_id JOIN keyword k ON k.id = mi.info_type_id GROUP BY mi.info ORDER BY number_of_characters DESC, average_keyword_id;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_productions, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributions FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = 3 WHERE t.kind_id = 1 AND mc.company_type_id IN (1, 2) AND t.production_year BETWEEN 2000 AND 2020 GROUP BY t.production_year ORDER BY t.production_year;
SELECT ct.kind AS company_type, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN akat.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN akat.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT ml.link_type_id) AS distinct_link_types FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS akat ON mc.movie_id = akat.movie_id JOIN movie_keyword AS mk ON akat.movie_id = mk.movie_id JOIN movie_link AS ml ON akat.movie_id = ml.movie_id WHERE mc.note IS NOT NULL AND akat.production_year BETWEEN 2000 AND 2010 AND ml.id IN ('434', '4988', '3490', '3087', '1401', '4759') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT ct.kind AS company_kind, AVG(mi_idx.info::NUMERIC) AS average_movie_length, COUNT(DISTINCT ch_name.id) AS unique_character_count, COUNT(DISTINCT cn_name.id) AS unique_company_count, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS sequel_link_count FROM movie_info_idx AS mi_idx JOIN company_name AS cn_name ON cn_name.imdb_id = mi_idx.movie_id JOIN company_type AS ct ON cn_name.id = ct.id JOIN char_name AS ch_name ON ch_name.imdb_id = mi_idx.movie_id JOIN movie_link AS ml ON ml.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = 1 AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND ch_name.name IN ('Dr. Carlos Ventura', 'John Hartman Jr.', 'Paw Slawson', 'Pera', 'The Jester', 'Guitarist') GROUP BY ct.kind;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS total_persons, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN movie_link AS ml ON ci.movie_id = ml.movie_id WHERE rt.ROLE IN ('cinematographer', 'actress', 'costume designer') AND ml.link_type_id IN (10, 8, 11, 13, 7, 6) AND (mc.note LIKE '%(1993) (UK) (all media)%' OR mc.note LIKE '%(1952-1960) (UK) (TV)%') GROUP BY rt.ROLE ORDER BY total_persons DESC;
SELECT AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT pi.person_id) AS total_persons_involved, SUM(CASE WHEN pi.note LIKE '%Self%' THEN 1 ELSE 0 END) AS count_of_self_mentions FROM movie_companies AS mc JOIN person_info AS pi ON mc.movie_id = pi.person_id JOIN role_type AS rt ON pi.info_type_id = rt.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.note LIKE '%(TV)%' AND pi.note NOT IN ('Nati Adler', 'Anoymous') AND rt.ROLE NOT LIKE '%actor%' GROUP BY mc.company_type_id;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(mi.info AS DECIMAL)) AS average_movie_length, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_movies_with_specific_info, MIN(t.title) AS shortest_movie_title, MAX(t.title) AS longest_movie_title, COUNT(DISTINCT c.id) AS number_of_complete_cast_records FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN title t ON mi.movie_id = t.id LEFT JOIN complete_cast c ON t.id = c.movie_id WHERE ct.id = 3 GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 5;
SELECT rt.ROLE, COUNT(ci.id) AS total_casts, AVG(pi.info::numeric) AS average_salary, SUM(CASE WHEN an.name IS NOT NULL THEN 1 ELSE 0 END) AS aliases_count FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = 6 LEFT JOIN aka_name an ON ci.person_id = an.person_id GROUP BY rt.ROLE ORDER BY total_casts DESC, average_salary DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, AVG(mc.company_id) AS average_company_id, SUM(mc.company_type_id) AS total_company_types FROM kind_type kt JOIN movie_companies mc ON kt.id = mc.company_type_id JOIN movie_keyword mk ON mc.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ct.kind = 'production companies' THEN 1 ELSE 0 END) AS count_production_companies, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS count_distributors, SUM(CASE WHEN ct.kind = 'special effects companies' THEN 1 ELSE 0 END) AS count_special_effects_companies, SUM(CASE WHEN ct.kind = 'miscellaneous companies' THEN 1 ELSE 0 END) AS count_miscellaneous_companies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id WHERE ci.movie_id IN ('1061075', '1326354', '1324782', '1249308', '2383083', '2172643') AND mc.company_id IN ('22', '900', '1231', '886') GROUP BY rt.ROLE;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ct.id IN (3, 4) AND cn.country_code IN ('[mk]', '[ua]', '[kr]', '[ir]', '[ph]') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT AVG(at.note_length) AS avg_note_length, COUNT(DISTINCT kw.id) AS num_unique_keywords, COUNT(DISTINCT at.id) AS num_titles, SUM(CASE WHEN at.episode_nr = 155 THEN 1 ELSE 0 END) AS num_episode_155, STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords_list FROM ( SELECT id, movie_id, episode_nr, LENGTH(note) AS note_length FROM aka_title WHERE note LIKE '%(Australia) (fake working title)%' ) AS at JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN keyword AS kw ON cn.country_code = kw.phonetic_code WHERE kw.keyword IN ('handcuffed-to-someone', 'religious', 'drug-trafficking', 'conservatory', 'scientology', 'horse-riding') AND ct.kind = 'production companies' GROUP BY cn.country_code;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(cn.imdb_id::NUMERIC) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'us' THEN 1 ELSE 0 END) AS num_us_companies, COUNT(DISTINCT cn.id) AS num_companies_involved FROM movie_keyword AS mk JOIN movie_info AS mi ON mk.movie_id = mi.movie_id JOIN kind_type AS kt ON mi.info_type_id = kt.id AND kt.id IN ('2', '3', '4', '5', '6') JOIN company_name AS cn ON mk.movie_id = cn.imdb_id WHERE (mk.keyword_id IN ('3195', '2832', '4019', '2965', '3002') OR mi.info IN ('Albanian', 'Norwegian', 'Ladino', 'Filipino', 'Estonian')) AND cn.name_pcode_nf IN ('R5365', 'C514', 'E5314', 'L532') AND cn.id IN ('23278', '44380', '28077', '6858', '43412', '27250') GROUP BY kt.kind;
SELECT cnt.kind AS company_type, AVG(mc_notes.note_length) AS average_note_length, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mc.movie_id) AS movies_involved, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cnt ON mc.company_type_id = cnt.id LEFT JOIN ( SELECT movie_id, company_id, LENGTH(note) as note_length FROM movie_companies WHERE note IS NOT NULL ) AS mc_notes ON mc.movie_id = mc_notes.movie_id AND mc.company_id = mc_notes.company_id LEFT JOIN ( SELECT name.id, name.gender FROM name WHERE name.gender IN ('F', 'M') ) AS n ON mc.company_id = n.id GROUP BY cnt.kind ORDER BY cnt.kind;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT ak.id) AS total_alternate_titles, SUM(mc.company_type_id) AS total_company_types, COUNT(DISTINCT pi.person_id) AS total_persons_with_info, COUNT(DISTINCT kc.id) AS total_keywords_used, kt.LINK as link_type FROM aka_title ak JOIN movie_companies mc ON ak.movie_id = mc.movie_id JOIN person_info pi ON ak.movie_id = pi.person_id JOIN keyword kc ON ak.movie_id = kc.id JOIN link_type kt ON kt.id = mc.company_type_id WHERE ak.production_year > 2000 AND kt.LINK IN ('spoofs', 'remake of') AND mc.note IS NOT NULL AND pi.info_type_id BETWEEN 1 AND 5 GROUP BY kt.LINK ORDER BY average_production_year DESC;
SELECT mi.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mii.info::numeric) AS average_movie_length, SUM(CASE WHEN lt.LINK = 'followed by' THEN 1 ELSE 0 END) AS sequel_count FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id LEFT JOIN link_type lt ON lt.id = mii.info_type_id WHERE mi.info_type_id = 4 AND mii.movie_id IN ('19615', '11115', '18537', '8949', '8884') AND lt.LINK IN ('similar to', 'features', 'followed by', 'alternate language version of') GROUP BY genre ORDER BY number_of_movies DESC, average_movie_length DESC;
