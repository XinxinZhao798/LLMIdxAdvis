SELECT ct.kind AS cast_type, rt.ROLE AS role, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT n.id) AS number_of_people, AVG(mk.keyword_id) AS average_keyword_id, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS count_movie_sequels FROM comp_cast_type ct JOIN role_type rt ON ct.id = rt.id JOIN company_name cn ON cn.country_code = 'us' JOIN name n ON n.gender = 'f' JOIN movie_keyword mk ON mk.movie_id = n.id JOIN movie_link ml ON ml.movie_id = n.id GROUP BY ct.kind, rt.ROLE HAVING COUNT(DISTINCT mk.keyword_id) > 10;
SELECT cn.country_code, COUNT(DISTINCT mi.movie_id) AS movie_count, AVG(pi.info_type_id::numeric) AS avg_person_info_type, COUNT(DISTINCT cn.name) AS company_count, COUNT(DISTINCT chn.name) AS character_name_count FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id JOIN company_name cn ON mi.movie_id = cn.imdb_id JOIN person_info pi ON mi.movie_id = pi.person_id JOIN char_name chn ON mi.movie_id = chn.imdb_id WHERE cn.country_code IN ('[np]', '[kr]', '[cn]', '[tw]', '[sa]', '[my]') AND pi.note IN ('info@aeberhard.com', 'Chris Hendren', 'Quincy Johnson', 'Ian Adema', 'isabelleadriani@yahoo.it') AND pi.info_type_id IN ('34', '36') AND mi.info IN ('Galician', 'Flemish', 'Persian', 'Czech') GROUP BY cn.country_code ORDER BY movie_count DESC, avg_person_info_type DESC;
SELECT COUNT(DISTINCT akat.movie_id) AS total_movies, AVG(CAST(akat.production_year AS DECIMAL)) AS average_production_year, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS total_movies_with_notes, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN it.info = 'English' THEN 1 ELSE 0 END) AS total_english_language_movies FROM aka_title akat JOIN movie_info mi ON akat.movie_id = mi.movie_id JOIN movie_info_idx miidx ON akat.movie_id = miidx.movie_id JOIN movie_keyword mk ON akat.movie_id = mk.movie_id JOIN movie_companies mc ON akat.movie_id = mc.movie_id JOIN info_type it ON mi.info_type_id = it.id WHERE akat.production_year IN (1979, 1966) AND mc.company_type_id IN (SELECT id FROM link_type WHERE id = 7) AND mk.id IN (3803, 847) GROUP BY akat.kind_id;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT comp.id) AS number_of_companies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS full_cast_movies, COUNT(DISTINCT mk.id) AS number_of_keywords, MAX(pi.id) AS max_person_info_id FROM aka_title AS at JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN company_name AS comp ON mc.company_id = comp.id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN movie_keyword AS mk ON at.movie_id = mk.movie_id LEFT JOIN person_info AS pi ON pi.person_id = at.movie_id WHERE at.kind_id = 1 AND mc.company_type_id IN (1, 2) AND cc.status_id IN (3, 4) AND at.production_year BETWEEN 1990 AND 2000 GROUP BY at.production_year ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.series_years LIKE '1990-1991' THEN 1 ELSE 0 END) AS count_1990_1991_series, COUNT(DISTINCT k.id) AS unique_keywords, lt.LINK AS link_type, AVG(t.episode_nr) AS average_episode_number FROM movie_companies mc JOIN title t ON mc.movie_id = t.id LEFT JOIN keyword k ON t.id = k.id JOIN link_type lt ON lt.id = mc.company_type_id WHERE t.production_year > 1980 AND (t.series_years LIKE '1990-1991' OR t.series_years LIKE '2005-2006') AND mc.company_id IN (SELECT company_id FROM movie_companies WHERE movie_id = 22464) AND lt.id IN (2, 10) GROUP BY lt.LINK ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT c.id) AS number_of_casts, SUM(CASE WHEN mc.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_movie_companies FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 JOIN complete_cast c ON mc.movie_id = c.movie_id WHERE ct.kind IN ('production companies', 'distributors') AND mi_idx.movie_id IN ('30178', '12242', '20540', '27059', '12152', '12149') AND mi_idx.info::numeric >= 1 AND mi_idx.info::numeric <= 10 GROUP BY ct.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, SUM(CASE WHEN k.keyword = 'disco-ball' THEN 1 ELSE 0 END) AS disco_ball_keyword_count, SUM(CASE WHEN k.keyword = 'bandana' THEN 1 ELSE 0 END) AS bandana_keyword_count, STRING_AGG(DISTINCT ct.kind, ', ') AS involved_company_types FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN kind_type kt ON kt.id = mi.info_type_id JOIN movie_info mii ON mii.movie_id = mi.movie_id JOIN link_type lt ON lt.id = mi_idx.id JOIN keyword k ON k.id = mi_idx.id JOIN company_type ct ON ct.id = mi_idx.id WHERE mi.id IN ('7268657', '7271065', '7267731') AND mi.movie_id IN ('924506', '925955', '929745', '938512', '930430') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND mi_idx.info SIMILAR TO '(%...[0-9]*[0-9].[0-9]*[0-9]%)' GROUP BY kt.kind;
SELECT mk.keyword_id, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(ci.person_id) AS total_cast_members, AVG(CAST(ci.nr_order AS DECIMAL)) AS average_cast_order FROM movie_keyword AS mk INNER JOIN cast_info AS ci ON mk.movie_id = ci.movie_id INNER JOIN link_type AS lt ON ci.person_role_id = lt.id WHERE lt.link IN ('followed by', 'edited into', 'similar to') GROUP BY mk.keyword_id ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT p.info AS person_birthplace, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(sub.link_count) AS average_number_of_links_per_movie, SUM(CASE WHEN mk.keyword_id = 2693 THEN 1 ELSE 0 END) AS count_keyword_2693 FROM person_info p LEFT JOIN movie_keyword mk ON p.person_id = mk.movie_id LEFT JOIN ( SELECT movie_id, COUNT(*) AS link_count FROM movie_link GROUP BY movie_id ) sub ON sub.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mk.movie_id WHERE p.info = 'Miles City, Montana, USA' GROUP BY p.info;
SELECT COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT ci.id) AS total_cast_members, AVG(at.production_year) AS average_production_year, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT cc.id) AS total_complete_casts, STRING_AGG(DISTINCT lt.LINK, '; ') AS link_types_used FROM aka_title AS at JOIN cast_info AS ci ON at.movie_id = ci.movie_id JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN link_type AS lt ON cc.status_id = lt.id WHERE at.production_year > 2000 AND ci.note IS NOT NULL AND cc.id IN ('2731', '2678', '7', '3665') AND at.season_nr IN (8, 4, 11, 22) AND at.md5sum IN ('ae1ec4b6524d40f203cb722b6e74c9d6', '51978b45ff1151ec3cc873180401b93c') GROUP BY at.kind_id ORDER BY total_alternate_titles DESC, average_production_year;
SELECT COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_rating, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies_kind_1, COUNT(DISTINCT mc.company_id) AS total_production_companies, COUNT(DISTINCT n.id) AS total_unique_names, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN aka_title at ON mi.movie_id = at.movie_id JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN name n ON n.id = ANY(ARRAY(SELECT movie_id FROM movie_info WHERE info_type_id = (SELECT id FROM info_type WHERE info = 'writers'))) WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS NUMERIC) > 5 AND at.production_year BETWEEN 1990 AND 2000 AND at.kind_id IN (1, 2, 3) GROUP BY at.kind_id ORDER BY total_movies_kind_1 DESC;
