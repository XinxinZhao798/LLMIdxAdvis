SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(COUNT(ci.person_id)) OVER (PARTITION BY ci.movie_id) AS avg_roles_per_movie, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(COUNT(mc.company_id)) OVER (PARTITION BY ci.movie_id) AS avg_companies_per_movie, COUNT(DISTINCT pi.info) AS total_ratings, AVG(CAST(pi.info AS NUMERIC)) AS average_rating FROM cast_info ci JOIN movie_link ml ON ci.movie_id = ml.movie_id OR ci.movie_id = ml.linked_movie_id JOIN person_info pi ON ci.person_id = pi.person_id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id WHERE ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('sequel', 'prequel')) AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY ci.movie_id;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT n.id) AS number_of_cast_members, COUNT(DISTINCT cc.subject_id) AS number_of_cast_types, AVG(cc.status_id) AS average_status_id FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id WHERE cc.status_id = 4 AND t.production_year > 1990 GROUP BY t.kind_id ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT cn.country_code, COUNT(DISTINCT cn.id) AS total_companies, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN lt.id = '11' THEN 1 ELSE 0 END) AS count_link_type_11, COUNT(DISTINCT mi.movie_id) AS total_movies, COUNT(CASE WHEN mi.info_type_id = '4' THEN 1 ELSE NULL END) AS count_info_type_4 FROM company_name cn JOIN movie_info mi ON cn.imdb_id = mi.movie_id LEFT JOIN link_type lt ON cn.id = lt.id GROUP BY cn.country_code ORDER BY total_companies DESC, average_imdb_id;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_status_id_4, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS count_status_id_3, COUNT(DISTINCT pi.person_id) AS distinct_person_count FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id LEFT JOIN name AS n ON cc.subject_id = n.id LEFT JOIN person_info AS pi ON n.id = pi.person_id WHERE lt.id IN (6, 15, 11, 5) AND cc.subject_id = 1 AND cc.status_id IN (4,3) AND ml.id IN (2720, 2119, 4076, 1826, 498) AND ml.linked_movie_id IN (260725, 2349487, 1391927) GROUP BY lt.LINK;
SELECT k.kind AS movie_genre, COUNT(DISTINCT c.person_id) AS number_of_actors, AVG(c.nr_order) AS average_cast_position, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_from_2000_onwards, MAX(t.title) AS latest_movie_title, MAX(t.production_year) AS latest_production_year FROM cast_info AS c JOIN title AS t ON c.movie_id = t.id JOIN kind_type AS k ON t.kind_id = k.id WHERE k.id = 7 GROUP BY k.kind ORDER BY number_of_actors DESC, average_cast_position, movies_from_2000_onwards DESC;
SELECT rt.role, COUNT(DISTINCT cn.id) AS total_characters, AVG(p.id) AS average_person_id, SUM(mc.company_id) AS total_company_id_sum, COUNT(DISTINCT k.id) AS total_unique_keywords FROM role_type rt LEFT JOIN char_name cn ON CAST(cn.id AS VARCHAR) = rt.id::varchar LEFT JOIN person_info p ON p.info_type_id = rt.id LEFT JOIN movie_companies mc ON mc.movie_id = cn.id LEFT JOIN keyword k ON k.id = mc.movie_id LEFT JOIN company_name cnm ON cnm.id = mc.company_id WHERE rt.role IN ('costume designer', 'miscellaneous crew', 'writer', 'actress', 'cinematographer', 'editor') AND mc.movie_id IN (12988, 12661, 11129, 26451, 19305, 12141) AND cnm.id IN (59673, 4533, 60539, 5934, 16779) GROUP BY rt.role ORDER BY total_unique_keywords DESC, total_characters DESC;
SELECT COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE it.info = 'rating') AS average_rating FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id WHERE it.info = 'rating' AND mi.info ~ '^[0-9]+(\.[0-9]+)?$';
SELECT kt.kind, COUNT(DISTINCT mv.movie_id) AS number_of_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords, COUNT(DISTINCT pi.person_id) AS number_of_persons FROM kind_type AS kt JOIN movie_info AS mi ON mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') JOIN movie_keyword AS mk ON mk.movie_id = mi.movie_id JOIN person_info AS pi ON pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') JOIN complete_cast AS mv ON mv.movie_id = mi.movie_id WHERE kt.kind IN ('movie', 'tv mini series') AND mi.info SIMILAR TO '[0-9]+' GROUP BY kt.kind HAVING COUNT(DISTINCT mv.movie_id) > 5;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people, AVG(ci.nr_order) AS avg_cast_order, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS num_keywords, count(DISTINCT cc.id) AS num_complete_cast_records FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN name n ON ci.person_id = n.id LEFT JOIN keyword k ON ci.movie_id = k.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE n.surname_pcode IN ('A415', 'A435') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CASE WHEN mi_numeric.info_type_id = 3 THEN mi_numeric.info::NUMERIC END) AS average_movie_length, COUNT(DISTINCT kw.id) AS number_of_unique_keywords, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count FROM movie_info mi JOIN kind_type kt ON mi.info_type_id = kt.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword kw ON mk.keyword_id = kw.id LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN name n ON ml.movie_id = n.id LEFT JOIN movie_info mi_numeric ON mi.movie_id = mi_numeric.movie_id AND mi_numeric.info_type_id = 3 WHERE kt.kind = 'complete' AND kw.keyword IN ('santiago-de-chile', 'golf-club', 'tripping') AND n.name IN ('Anderson, Othello', 'Ammar, Ali', 'Ameyl, Dzaga') GROUP BY kt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CASE WHEN kt.kind = 'movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_movies, AVG(CASE WHEN kt.kind = 'tv movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_movies, AVG(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_mini_series, AVG(CASE WHEN kt.kind = 'episode' THEN 1 ELSE 0 END) * 100.0 AS percentage_episodes FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN kind_type AS kt ON mc.movie_id = kt.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT mc.company_type_id, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(k.id) AS average_keyword_id, COUNT(DISTINCT n.id) AS total_unique_cast_members, MAX(n.name) AS most_recent_cast_member_name FROM movie_companies mc JOIN keyword k ON mc.movie_id = k.id JOIN name n ON n.id = mc.company_id WHERE mc.company_type_id = '1' AND mc.note LIKE '%(TV)%' AND k.keyword IN ('training', 'mad-scientist', 'war-memorial') AND n.name_pcode_cf IN ('A6136', 'A2353', 'A6515', 'A4564', 'A2352', 'A265') GROUP BY mc.company_type_id;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE mi.info_type_id = 101) AS average_rating, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.linked_movie_id IN (10496, 260662, 2464253, 553702, 58480, 2087155)) AS movies_with_specific_links FROM company_type ct JOIN movie_info mi ON mi.info ~ ct.kind JOIN movie_link ml ON mi.movie_id = ml.movie_id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT kt.kind, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_complete_status_4, COUNT(DISTINCT pi.person_id) AS unique_persons_with_info FROM kind_type kt LEFT JOIN movie_link ml ON kt.id = ml.link_type_id LEFT JOIN complete_cast cc ON ml.movie_id = cc.movie_id LEFT JOIN cast_info ci ON ml.movie_id = ci.movie_id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ml.movie_id IN (50, 8753, 6613, 11172, 11020, 10583) AND ml.link_type_id IN (4, 13, 9) AND cc.subject_id = 1 AND cc.status_id IN (4, 3) AND pi.note IN ('matt-282', 'K-maf', '2Fun', 'Todd Adelman') AND pi.id IN (4001, 3574) AND ci.person_role_id IN (533, 546, 1445) GROUP BY kt.kind;
SELECT cn.name AS company_name, ct.kind AS cast_type, COUNT(ml.id) AS total_movie_links, AVG(ml.linked_movie_id) AS average_linked_movie_imdb_id, COUNT(DISTINCT chn.id) AS total_characters FROM company_name cn JOIN movie_link ml ON cn.id = ml.movie_id JOIN comp_cast_type ct ON ml.link_type_id = ct.id LEFT JOIN char_name chn ON ml.movie_id = chn.id WHERE cn.country_code = 'US' AND cn.name_pcode_sf BETWEEN 'A0000' AND 'Z9999' GROUP BY cn.name, ct.kind ORDER BY total_movie_links DESC, average_linked_movie_imdb_id;
SELECT rt.ROLE, AVG(nk.count_keywords) AS average_keywords, COUNT(DISTINCT at.movie_id) AS number_of_movies, SUM(CASE WHEN at.production_year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS movies_2000_to_2010, COUNT(DISTINCT n.id) AS number_of_names FROM role_type rt LEFT JOIN aka_title at ON rt.id = at.kind_id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS count_keywords FROM movie_keyword mk GROUP BY mk.movie_id ) nk ON nk.movie_id = at.movie_id LEFT JOIN name n ON n.id = at.movie_id WHERE rt.id IN (6, 7, 8) GROUP BY rt.ROLE ORDER BY average_keywords DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cn.imdb_id) AS average_movie_imdb_id, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON mc.company_type_id = kt.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword k ON mi.info = k.keyword WHERE kt.id IN ('5', '2', '4', '1', '7') AND mc.note IN ('(2001-) (USA) (TV)', '(????) (Czech Republic) (TV)') AND mi.movie_id IN ('19232', '19598', '10553', '12245') GROUP BY cn.name, cn.country_code ORDER BY total_movies_produced DESC;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT t.id) AS total_movies, AVG(t.imdb_id) AS average_imdb_id FROM title AS t JOIN movie_link AS ml ON t.id = ml.movie_id JOIN company_name AS cn ON cn.imdb_id = ml.linked_movie_id JOIN company_type AS ct ON cn.id = ct.id WHERE t.production_year BETWEEN 2010 AND 2020 AND cn.country_code IN ('US', 'GB', 'CA') GROUP BY ct.kind, cn.country_code ORDER BY total_movies DESC, average_imdb_id ASC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, MIN(n.name) AS earliest_person_name, MAX(pi.info_type_id) AS max_info_type_id FROM aka_title at JOIN link_type lt ON at.kind_id = lt.id JOIN name n ON at.id = n.id JOIN person_info pi ON n.id = pi.person_id WHERE at.production_year IS NOT NULL AND pi.info_type_id IN (1057, 2456) AND at.title IN ('Doctor Hassan', 'Arjeplog - Lappland zwischen Eis und Hightech') AND at.season_nr IN (1, 14, 4, 20, 11) AND lt.id IN (4, 17, 12, 8, 14, 1) GROUP BY lt.LINK ORDER BY total_movies DESC, average_production_year;
