SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, SUM(CASE WHEN mi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS interview_movie_count, SUM(CASE WHEN mi.note LIKE '%(Original version)%' THEN 1 ELSE 0 END) AS original_version_movie_count, COUNT(DISTINCT k.id) AS distinct_keywords_used, AVG(mi.id) AS average_movie_info_id FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE it.id IN (9, 31) AND k.keyword IN ('cobra', 'dinosaur-egg', 'startled', 'paranoia') GROUP BY it.info ORDER BY movie_count DESC;
SELECT kt.kind AS movie_genre, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS average_rating, MAX(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS highest_rating FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON kt.id = mi_idx.info_type_id WHERE mi_idx.info LIKE '%Genre%' GROUP BY kt.kind;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS total_features_links, c.name AS company_name, c.country_code AS company_country, MIN(m.info) AS movie_info FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN company_name c ON cc.movie_id = c.imdb_id JOIN link_type lt ON cc.subject_id = lt.id JOIN movie_info m ON ci.movie_id = m.movie_id WHERE m.info_type_id = '4' AND ci.note LIKE '%(segment "Laman")%' AND ci.person_id IN ('1523', '1842', '1395', '1462', '1527', '1496') AND cc.id IN ('3566', '4902', '2721') AND cc.movie_id IN ('1683114', '1664432') AND lt.id IN ('9', '16', '1', '7', '6', '18') AND lt.link IN ('features', 'follows') GROUP BY c.name, c.country_code;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT a.movie_id) AS total_movies, COUNT(DISTINCT n.id) AS total_unique_actors, SUM(CASE WHEN c.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified, MAX(a.episode_nr) AS max_episode_number FROM aka_title AS a JOIN comp_cast_type AS c ON a.kind_id = c.id JOIN name AS n ON a.id = n.id WHERE a.production_year BETWEEN 1980 AND 2000 AND a.kind_id = 6 AND c.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY a.kind_id HAVING COUNT(DISTINCT n.id) > 10;
SELECT it.info AS info_type, COUNT(DISTINCT mi.id) AS movie_count, AVG(mc.company_id) AS average_company_id, SUM(mc.company_id) AS sum_company_id, COUNT(DISTINCT ak.id) AS alias_count, rt.ROLE, COUNT(DISTINCT kw.id) AS keyword_count FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_companies AS mc ON mi.movie_id = mc.movie_id JOIN role_type AS rt ON mc.company_type_id = rt.id JOIN aka_name AS ak ON mi.movie_id = ak.person_id JOIN keyword AS kw ON ak.surname_pcode = kw.phonetic_code GROUP BY it.info, rt.ROLE ORDER BY movie_count DESC, average_company_id;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT pi.person_id) AS total_actors FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN movie_info mi ON ci.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'actor') GROUP BY kt.kind HAVING COUNT(DISTINCT ci.movie_id) > 10 ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(ak.production_year) AS average_production_year, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN ci.person_role_id IN (444, 927, 278, 35) THEN 1 ELSE 0 END) AS specific_person_roles FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id JOIN complete_cast AS cc ON cn.id = cc.movie_id JOIN aka_title AS ak ON cc.movie_id = ak.movie_id JOIN cast_info AS ci ON ak.movie_id = ci.movie_id WHERE cn.country_code = 'US' GROUP BY ct.kind HAVING COUNT(*) > 10 ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_actors_with_roles, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT ci.person_id) AS number_of_actors FROM kind_type AS kt JOIN movie_info AS mi ON kt.id = mi.info_type_id JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id JOIN cast_info AS ci ON mi.movie_id = ci.movie_id WHERE kt.kind IN ('animation', 'documentary', 'drama') AND mi.movie_id IN ('15385', '12319', '8904', '2482109', '1214055') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(t.id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN cn.country_code = '[ch]' THEN 1 ELSE 0 END) AS swiss_produced_movies, SUM(CASE WHEN k.keyword = 'video-tape' THEN 1 ELSE 0 END) AS video_tape_keyword_count, COUNT(DISTINCT cn.name) AS unique_companies_involved FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND k.keyword IN ('video-tape', 'delta-airlines') AND cn.country_code IN ('[sa]', '[hk]', '[np]', '[ao]', '[ch]', '[do]') AND cn.name_pcode_sf = 'F4623' AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY cn.country_code, k.keyword;
SELECT ct.kind AS company_kind, COUNT(DISTINCT akn.person_id) AS unique_person_count, AVG(LENGTH(akn.name)) AS average_name_length, SUM(CASE WHEN akn.surname_pcode = 'A262' THEN 1 ELSE 0 END) AS surname_A262_count, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords FROM company_type AS ct LEFT JOIN movie_companies AS mc ON ct.id = mc.company_type_id LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_name AS akn ON mk.movie_id = akn.person_id GROUP BY ct.kind
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, AVG(sub.keyword_count) AS average_keywords, COUNT(DISTINCT mk.movie_id) AS total_movies FROM movie_keyword mk JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) sub ON sub.movie_id = mk.movie_id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM title WHERE id = mk.movie_id LIMIT 1) JOIN movie_companies mc ON mc.movie_id = mk.movie_id JOIN company_type ct ON ct.id = mc.company_type_id WHERE ct.kind = 'production companies' AND kt.kind IN ('movie', 'tv series', 'mini series') AND EXISTS (SELECT 1 FROM title WHERE id = mk.movie_id AND production_year > 2000) GROUP BY ct.kind, kt.kind ORDER BY average_keywords DESC;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN k.keyword IN ('intelligence-agency', 'armed-forces') THEN 1 ELSE 0 END) AS military_related_movies, COUNT(DISTINCT CASE WHEN k.keyword = 'monster-in-the-closet' THEN akat.movie_id END) AS monster_in_the_closet_movies FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id LEFT JOIN keyword AS k ON akat.movie_id = k.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, AVG(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS avg_male_involvement, AVG(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS avg_female_involvement, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS total_titles_after_2000, COUNT(DISTINCT n.id) AS total_unique_persons_involved, COUNT(DISTINCT pi.person_id) AS total_persons_with_extra_info FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN person_info pi ON at.id = pi.person_id LEFT JOIN name n ON pi.person_id = n.id WHERE kt.id IN (5, 7) AND n.imdb_index IN ('VII', 'VI', 'XIII') AND at.production_year IS NOT NULL GROUP BY kt.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 1) AS average_movie_budget, SUM(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 2) AS total_box_office, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword IN ('toy-car', 'personal-stories')) AS count_specific_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN person_info AS pi ON mc.movie_id = pi.person_id AND pi.info_type_id IN (1, 2) LEFT JOIN keyword AS k ON k.id = pi.info_type_id JOIN comp_cast_type AS cct ON mc.company_id = cct.id WHERE mc.company_id IN (1232, 968) AND ct.id IN (2, 1, 4, 3) AND ct.kind = 'miscellaneous companies' AND cct.id IN (1, 2) GROUP BY ct.kind;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN ct.kind = 'production' THEN 1 ELSE 0 END) AS production_companies_count, AVG(t.production_year) AS average_production_year, MIN(t.title) AS oldest_movie_title, MAX(t.title) AS latest_movie_title, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_info mi ON t.id = mi.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_type ct ON mc.company_type_id = ct.id WHERE t.title = 'Vengence' AND t.production_year >= 2000 AND (t.episode_nr IN ('119', '9622', '13530', '255', '26') OR t.episode_nr IS NULL) GROUP BY t.production_year ORDER BY t.production_year ASC;
SELECT ml.movie_id, lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(cn.imdb_id) AS avg_company_imdb_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN company_name AS cn ON ml.movie_id = cn.id GROUP BY ml.movie_id, lt.LINK ORDER BY total_links DESC, avg_company_imdb_id DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_casts, COUNT(DISTINCT cn.id) AS number_of_actors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.status_id = cct.id LEFT JOIN char_name AS cn ON cc.subject_id = cn.id WHERE mc.movie_id IN (27359, 1639517, 1663098) AND mc.company_id IN (SELECT company_id FROM movie_companies WHERE company_type_id IN (1, 2)) GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 1 ORDER BY number_of_movies DESC, average_rating DESC;
SELECT pi.person_id, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS number_of_alias_roles, COUNT(DISTINCT pi.info_type_id) AS distinct_info_types FROM person_info pi JOIN cast_info ci ON pi.person_id = ci.person_id JOIN company_type ct ON ci.role_id = ct.id WHERE ci.person_id IN (1575, 1003, 1034, 1127, 1520, 1048) AND ci.note SIMILAR TO '%(\(pelotari\)|\(as [^)]+\)|\(2011\))%' GROUP BY pi.person_id ORDER BY number_of_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_persons, AVG(ci.nr_order) AS average_order, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT mi.movie_id) AS number_of_movies_with_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id AND mc.company_type_id = 1 JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id JOIN complete_cast cc ON ci.movie_id = cc.movie_id AND cc.subject_id = 1 WHERE ci.person_id IN (3767, 4155) AND ci.person_role_id IS NOT NULL AND mi.info LIKE '..00011111%' AND mi.info_type_id IN (15, 28, 24) GROUP BY rt.ROLE;
SELECT kt.kind AS movie_kind, avg(title.production_year) AS average_production_year, count(DISTINCT title.id) AS number_of_titles, count(DISTINCT cast_info.person_id) AS number_of_participants, count(DISTINCT movie_keyword.keyword_id) AS number_of_unique_keywords, sum(case when role_type.role = 'actor' then 1 else 0 end) AS number_of_actors, sum(case when role_type.role = 'actress' then 1 else 0 end) AS number_of_actresses FROM title JOIN kind_type AS kt ON title.kind_id = kt.id LEFT JOIN cast_info ON title.id = cast_info.movie_id LEFT JOIN role_type ON cast_info.role_id = role_type.id LEFT JOIN movie_keyword ON title.id = movie_keyword.movie_id WHERE kt.kind IN ('video movie', 'video game') AND title.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_production_companies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies_kind_2, SUM(CASE WHEN t.kind_id = 7 THEN 1 ELSE 0 END) AS total_movies_kind_7 FROM title AS t LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) WHERE t.production_year BETWEEN 2000 AND 2010 AND (mc.note LIKE '%(USA) (TV)%' OR mc.note LIKE '%(UK) (TV)%') GROUP BY t.production_year ORDER BY t.production_year;
SELECT t.title AS "Movie Title", t.production_year AS "Production Year", COUNT(ci.id) AS "Total Cast", AVG(ci.nr_order) AS "Average Cast Billing Position", SUM(CASE WHEN lt.id = '13' THEN 1 ELSE 0 END) AS "Total Sequels", SUM(CASE WHEN lt.id = '12' THEN 1 ELSE 0 END) AS "Total Prequels", COUNT(DISTINCT an.id) AS "Total AKA Names" FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_info_idx mii ON t.id = mii.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id LEFT JOIN aka_name an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND lt.id IN ('13', '12') AND an.md5sum IN ('54a7b18f26374fc200ddedde0844f8ec', 'a91c2d9d617691d9ba689d7e46ddc157') GROUP BY t.title, t.production_year ORDER BY "Production Year" DESC, "Total Cast" DESC;
