SELECT kt.kind AS movie_type, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CASE WHEN k.keyword = 'drama' THEN 1.0 ELSE 0 END) AS avg_drama_keyword, SUM(CASE WHEN k.keyword = 'comedy' THEN 1 ELSE 0 END) AS total_comedy_keyword, COUNT(DISTINCT a.person_id) AS unique_actors FROM movie_info mi JOIN kind_type kt ON mi.movie_id = kt.id LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN aka_name a ON mi.movie_id = a.person_id WHERE k.id IN ('7626', '7498') AND kt.id IN ('6', '7', '4', '3', '5') AND mi.id IN ('7266975', '7266320', '7271067', '7270758', '7267432') GROUP BY kt.kind;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(at.production_year) AS average_production_year, SUM(mc.company_type_id) AS sum_company_types, MIN(n.name) AS earliest_name_entry FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS at ON ml.movie_id = at.movie_id JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN name AS n ON n.imdb_id = ANY(ARRAY[at.movie_id, ml.linked_movie_id]) WHERE lt.id IN ('14', '15', '17', '12') AND mc.company_type_id BETWEEN 1 AND 10 AND n.gender = 'M' GROUP BY lt.LINK ORDER BY total_links DESC, average_production_year;
SELECT c.name AS company_name, it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS num_movies, AVG(CAST(mi_idx.info AS numeric)) AS average_info, SUM(CAST((CASE WHEN mi_idx.note = '1' THEN 1 ELSE 0 END) AS integer)) AS sum_notes_flagged_1 FROM company_name c JOIN movie_info mi ON c.id = mi.movie_id JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND mk.keyword_id IN ('4340', '3698', '3610', '2735') AND mi_idx.info IN ('0.0.010105', '1....1..6.', '1......413', '0..0000033') GROUP BY c.name, it.info ORDER BY num_movies DESC, average_info DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.movie_id) AS total_movies, AVG(CASE WHEN mc.note LIKE '%(worldwide) (all media)%' THEN 1 ELSE NULL END) * 100 AS percentage_worldwide_distribution, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link LIKE '%remake of%') AS total_remakes, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ml.linked_movie_id) FILTER (WHERE ml.link_type_id IN ('17', '16')) AS total_sequel_or_prequels, COUNT(DISTINCT n.id) AS total_actors_involved FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id LEFT JOIN movie_companies AS mc ON t.movie_id = mc.movie_id LEFT JOIN link_type AS lt ON lt.id = mc.company_type_id LEFT JOIN movie_link AS ml ON t.movie_id = ml.movie_id LEFT JOIN movie_info AS mi ON t.movie_id = mi.movie_id AND mi.info_type_id = '4' LEFT JOIN name AS n ON n.imdb_id = t.movie_id GROUP BY kt.kind;
SELECT a.title AS alternate_title, m.title AS original_title, COUNT(DISTINCT n.id) AS number_of_actors, AVG(CAST(mi.info AS numeric)) AS average_rating, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors FROM aka_title AS a JOIN movie_info AS mi ON a.movie_id = mi.movie_id JOIN title AS m ON a.movie_id = m.id JOIN cast_info AS ci ON m.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND a.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie') AND m.production_year BETWEEN 2000 AND 2010 AND n.name IN ('Ando, Tadao', 'Amey, Ian') GROUP BY a.title, m.title ORDER BY average_rating DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT name.id) AS number_of_unique_actors FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN name ON ci.person_id = name.id WHERE rt.id IN (1) AND ci.nr_order IS NOT NULL AND name.md5sum IN ('0d93c2f49007eb923f1f3983f0a8cc6b', 'c73602ee6ad37663369ca6e3bd40e7dd', 'db97c7dc12820b568f8351333075a92d', '53ebf953411448090e3e779bf1486727', 'f22535a12044b89484f9cba769cf437a', '6f608ba1bd4dd87eac0e663a877f54bc') GROUP BY rt.ROLE;
SELECT kt.kind AS movie_type, AVG(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS avg_male_involvement, AVG(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS avg_female_involvement, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS total_titles_after_2000, COUNT(DISTINCT n.id) AS total_unique_persons_involved, COUNT(DISTINCT pi.person_id) AS total_persons_with_extra_info FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN person_info pi ON at.id = pi.person_id LEFT JOIN name n ON pi.person_id = n.id WHERE kt.id IN (5, 7) AND n.imdb_index IN ('VII', 'VI', 'XIII') AND at.production_year IS NOT NULL GROUP BY kt.kind;
SELECT cn.country_code, cc.status_id, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(cn.imdb_id) AS average_imdb_id, STRING_AGG(DISTINCT it.info, '; ') AS associated_info_types FROM company_name AS cn JOIN complete_cast AS cc ON cn.id = cc.subject_id JOIN info_type AS it ON cc.status_id = it.id WHERE cc.status_id IN (3, 4) AND it.id IN (14, 61) GROUP BY cn.country_code, cc.status_id ORDER BY number_of_movies DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT cl.movie_id) AS total_linked_movies, COUNT(ci.person_id) AS total_roles_played, AVG(ci.nr_order) AS average_role_order FROM char_name AS cn JOIN cast_info AS ci ON cn.id = ci.person_id JOIN movie_link AS cl ON ci.movie_id = cl.movie_id WHERE cn.name IN ('Boy Negro''s Gang', 'Lazoglu', 'Paco Hernández Gil', 'Tedddy Hart', 'Funcionario prisión', 'Make Up Man') GROUP BY cn.name ORDER BY total_linked_movies DESC, total_roles_played DESC;
SELECT n.gender, COUNT(DISTINCT n.id) AS total_actors, SUM(mc.movie_id) AS total_movie_production_involvements, MIN(aka.title) AS earliest_movie_title FROM name AS n JOIN aka_name AS an ON n.id = an.person_id JOIN aka_title AS aka ON aka.id = an.id JOIN movie_companies AS mc ON mc.movie_id = aka.movie_id GROUP BY n.gender HAVING COUNT(DISTINCT n.id) > 10 ORDER BY total_actors DESC LIMIT 5;
SELECT mi.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mii.info::numeric) AS average_movie_length, SUM(CASE WHEN lt.LINK = 'followed by' THEN 1 ELSE 0 END) AS sequel_count FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id LEFT JOIN link_type lt ON lt.id = mii.info_type_id WHERE mi.info_type_id = 4 AND mii.movie_id IN ('19615', '11115', '18537', '8949', '8884') AND lt.LINK IN ('similar to', 'features', 'followed by', 'alternate language version of') GROUP BY genre ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT it.info AS information_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(n.imdb_id) AS average_imdb_id, MAX(k.keyword) AS most_common_keyword, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_link AS ml JOIN info_type AS it ON ml.link_type_id = it.id JOIN name AS n ON ml.movie_id = n.id JOIN keyword AS k ON k.id = ml.id WHERE ml.link_type_id = 9 AND k.phonetic_code IN ('I4243', 'B43', 'D63', 'B4523', 'T521') AND ml.linked_movie_id IN (2406273, 1737708, 1377064) GROUP BY it.info;
SELECT cct.kind AS cast_type, ct.kind AS company_kind, COUNT(DISTINCT k.id) AS keyword_count, AVG(LENGTH(k.keyword)) AS average_keyword_length, COUNT(DISTINCT lt.id) AS link_type_count FROM comp_cast_type cct JOIN company_type ct ON cct.id = ct.id LEFT JOIN keyword k ON SUBSTRING(k.phonetic_code, 1, 1) = 'A' LEFT JOIN link_type lt ON LENGTH(lt.link) > 10 GROUP BY cct.kind, ct.kind ORDER BY keyword_count DESC, average_keyword_length DESC;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(ak.production_year) AS average_production_year, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN ci.person_role_id IN (444, 927, 278, 35) THEN 1 ELSE 0 END) AS specific_person_roles FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id JOIN complete_cast AS cc ON cn.id = cc.movie_id JOIN aka_title AS ak ON cc.movie_id = ak.movie_id JOIN cast_info AS ci ON ak.movie_id = ci.movie_id WHERE cn.country_code = 'US' GROUP BY ct.kind HAVING COUNT(*) > 10 ORDER BY total_movies DESC;
SELECT rt.role, COUNT(DISTINCT cn.id) AS num_characters, COUNT(DISTINCT cc.movie_id) AS num_movies, AVG(mi.info::numeric) AS average_rating, SUM(CASE WHEN mk.keyword_id = 4215 THEN 1 ELSE 0 END) AS count_keyword_4215, SUM(CASE WHEN mk.keyword_id = 3983 THEN 1 ELSE 0 END) AS count_keyword_3983 FROM role_type rt LEFT JOIN char_name cn ON rt.id = cn.id LEFT JOIN complete_cast cc ON cn.id = cc.subject_id LEFT JOIN movie_info mi ON cc.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM movie_info WHERE info = 'rating') LEFT JOIN movie_keyword mk ON cc.movie_id = mk.movie_id WHERE rt.role IN ('actress', 'producer') AND mi.movie_id IN ('925429', '925019') GROUP BY rt.role;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(t.episode_nr) AS total_episodes, k.keyword, gender FROM name AS n JOIN title AS t ON t.id = n.id JOIN keyword AS k ON k.id = t.id WHERE n.gender = 'm' AND t.production_year BETWEEN 1990 AND 2020 AND k.keyword IN ('string-of-beads', 'atm-card', 'based-on-sketch-comedy', 'skeleton-in-a-closet', 'rugged-terrain', 'reference-to-zorro') GROUP BY k.keyword, n.gender ORDER BY total_actors DESC, average_production_year DESC;
SELECT mk.movie_id, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(LENGTH(pi.note)) AS average_note_length, COUNT(DISTINCT lt.id) AS total_distinct_link_types FROM movie_keyword AS mk LEFT JOIN person_info AS pi ON mk.movie_id = pi.person_id LEFT JOIN link_type AS lt ON mk.movie_id = lt.id WHERE mk.keyword_id IN (820, 3672, 3996, 3616, 1099) GROUP BY mk.movie_id ORDER BY total_keywords DESC, average_note_length DESC;
