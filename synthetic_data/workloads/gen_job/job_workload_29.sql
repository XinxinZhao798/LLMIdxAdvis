SELECT it.info AS info_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT kw.id) AS unique_keywords_count, SUM(mc.company_id) AS total_company_id_sum, rt.ROLE AS role_type, COUNT(DISTINCT cc.movie_id) AS movies_count FROM info_type AS it JOIN movie_companies AS mc ON it.id = mc.company_type_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN keyword AS kw ON mc.movie_id = kw.id LEFT JOIN name AS nm ON cc.subject_id = nm.id JOIN role_type AS rt ON cc.status_id = rt.id WHERE mc.company_type_id = '1' AND (nm.name_pcode_nf = 'B4645' OR nm.name_pcode_nf = 'B1436') AND (rt.ROLE = 'producer' OR rt.ROLE = 'actor') AND mc.movie_id IN ('1646081', '1699392', '1666532', '1678176', '1677967') GROUP BY it.info, rt.ROLE ORDER BY movies_count DESC, average_imdb_id;
SELECT ct.kind AS cast_type, rt.ROLE AS role, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT n.id) AS number_of_people, AVG(mk.keyword_id) AS average_keyword_id, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS count_movie_sequels FROM comp_cast_type ct JOIN role_type rt ON ct.id = rt.id JOIN company_name cn ON cn.country_code = 'us' JOIN name n ON n.gender = 'f' JOIN movie_keyword mk ON mk.movie_id = n.id JOIN movie_link ml ON ml.movie_id = n.id GROUP BY ct.kind, rt.ROLE HAVING COUNT(DISTINCT mk.keyword_id) > 10;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE k.keyword IN ('graffiti', 'goblet') AND n.name LIKE '%a%' GROUP BY cct.kind ORDER BY total_actors DESC;
SELECT kt.kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_titles, SUM(CASE WHEN rt.role = 'cinematographer' THEN 1 ELSE 0 END) AS cinematographer_count, SUM(CASE WHEN rt.role = 'writer' THEN 1 ELSE 0 END) AS writer_count, SUM(CASE WHEN rt.role = 'miscellaneous crew' THEN 1 ELSE 0 END) AS miscellaneous_crew_count FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN role_type rt ON t.id = rt.id WHERE kt.id IN (3, 7, 4, 6, 2) AND rt.id IN (5, 3, 9, 4, 11, 6) AND t.production_year IS NOT NULL GROUP BY kt.kind ORDER BY average_production_year DESC;
SELECT info_type.info AS info_category, COUNT(DISTINCT movie_info.movie_id) AS number_of_movies, AVG(LENGTH(movie_info.info)) AS average_info_length, SUM(CASE WHEN comp_cast_type.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_count, SUM(CASE WHEN comp_cast_type.kind = 'cast' THEN 1 ELSE 0 END) AS cast_count, SUM(CASE WHEN comp_cast_type.kind = 'crew' THEN 1 ELSE 0 END) AS crew_count FROM movie_info JOIN info_type ON movie_info.info_type_id = info_type.id JOIN movie_info_idx ON movie_info.movie_id = movie_info_idx.movie_id JOIN comp_cast_type ON movie_info_idx.info_type_id = comp_cast_type.id WHERE info_type.info IN ('LD original title', 'LD quality of source', 'tech info', 'LD master format', 'salary history', 'LD release country') AND comp_cast_type.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY info_type.info ORDER BY number_of_movies DESC;
SELECT rt.role, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS total_characters, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS movie_keyword_count, COUNT(DISTINCT pi.person_id) AS total_persons_with_info FROM role_type rt LEFT JOIN aka_title akat ON rt.id = akat.kind_id LEFT JOIN char_name cn ON cn.name = akat.title LEFT JOIN movie_keyword mk ON mk.movie_id = akat.movie_id LEFT JOIN person_info pi ON pi.info_type_id = rt.id WHERE akat.production_year > 2000 GROUP BY rt.role ORDER BY total_movies DESC, average_production_year DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_sequels, MAX(pi.info) AS latest_actor_information FROM char_name cn JOIN cast_info ci ON cn.id = ci.person_role_id JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE cn.surname_pcode IN ('A', 'T61', 'E153', 'A13', 'C2', 'B6353') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') GROUP BY cn.name;
SELECT kt.kind, AVG(t.production_year) AS average_production_year, COUNT(*) AS total_titles, COUNT(DISTINCT t.id) AS unique_titles, SUM(CASE WHEN at.name_pcode_nf IN ('E4525', 'K2436', 'T1415', 'R162', 'L6252', 'J1526') THEN 1 ELSE 0 END) AS count_aka_names, COUNT(DISTINCT at.person_id) AS distinct_persons_involved FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_name at ON t.id = at.person_id WHERE kt.kind IN ('video movie', 'episode', 'video game', 'tv series', 'movie') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, MAX(t.production_year) AS latest_production_year FROM title t INNER JOIN aka_title at ON t.id = at.movie_id INNER JOIN movie_info_idx mi ON t.id = mi.movie_id INNER JOIN name n ON n.md5sum = at.md5sum INNER JOIN keyword k ON k.phonetic_code = at.phonetic_code WHERE t.production_year BETWEEN 2000 AND 2010 AND mi.info_type_id IN ('100', '101', '99') AND at.episode_of_id IN ('14284', '16059', '8468', '2167', '20079', '24526') AND n.name_pcode_cf IN ('A4165', 'A3423') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, COUNT(DISTINCT n.id) AS number_of_people_involved, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN name n ON mi.movie_id = n.id WHERE mc.note LIKE '%(TV)%' AND it.info IN ('LD disc size', 'birth date', 'LD video noise', 'nick names', 'plot') AND mc.company_id IN (189, 1031, 498) GROUP BY ct.kind, it.info;
SELECT pi.person_id, COUNT(DISTINCT k.id) AS keyword_count, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT cn.id) AS unique_char_count FROM person_info pi JOIN info_type it ON pi.info_type_id = it.id JOIN keyword k ON it.id = k.id AND k.phonetic_code IN ('S5312', 'M3243', 'W16', 'C26', 'W3616') JOIN char_name cn ON pi.person_id = cn.id AND cn.name_pcode_nf IN ('R2631', 'N', 'D2362') AND cn.surname_pcode IN ('C64', 'C145', 'W43', 'V5365', 'P6536') GROUP BY pi.person_id ORDER BY keyword_count DESC, unique_char_count DESC;
SELECT kt.kind AS movie_type, COUNT(t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title t JOIN (SELECT id, kind FROM comp_cast_type WHERE kind IN ('director', 'actor')) cct ON t.kind_id = cct.id LEFT JOIN (SELECT id, kind FROM kind_type) kt ON t.kind_id = kt.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT mk.movie_id) AS total_movies, COUNT(mk.keyword_id) AS total_keywords_use, AVG(keyword_length) AS avg_keyword_length, SUM(keyword_length) AS total_keyword_length FROM movie_keyword mk JOIN keyword k ON mk.keyword_id = k.id JOIN link_type lt ON mk.id = lt.id CROSS JOIN (SELECT LENGTH(k.keyword) AS keyword_length FROM keyword k) AS subquery GROUP BY lt.LINK ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(mi_idx.info::numeric) AS average_movie_length, SUM(CASE WHEN an.name = 'Alan, Shane' THEN 1 ELSE 0 END) AS count_alan_shane_movies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 3 LEFT JOIN aka_name AS an ON mc.movie_id = an.person_id AND an.name_pcode_nf = 'M2465' WHERE ct.kind IN ('production companies', 'special effects companies') AND mi_idx.note IS NULL GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT it.info AS company_role, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(coalesce(an.name_pcode_cf, '0') AS INTEGER)) AS avg_name_code_cf, SUM(CAST(coalesce(an.name_pcode_nf, '0') AS INTEGER)) AS total_name_code_nf FROM movie_companies mc JOIN role_type rt ON mc.company_type_id = rt.id JOIN info_type it ON rt.id = it.id LEFT JOIN aka_name an ON mc.movie_id = an.person_id WHERE mc.id IN (2557, 2170, 250, 4955, 466) GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT kt.kind AS content_type, COUNT(*) AS total_titles, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT cn.country_code) AS unique_country_codes, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_aka_names FROM kind_type AS kt JOIN company_name AS cn ON cn.id = kt.id LEFT JOIN aka_name AS an ON an.person_id = cn.id WHERE kt.id IN ('4', '3', '5', '6', '1', '2') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT pi.person_id) AS total_persons_involved, SUM(CASE WHEN pi.note LIKE '%Self%' THEN 1 ELSE 0 END) AS count_of_self_mentions FROM movie_companies AS mc JOIN person_info AS pi ON mc.movie_id = pi.person_id JOIN role_type AS rt ON pi.info_type_id = rt.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.note LIKE '%(TV)%' AND pi.note NOT IN ('Nati Adler', 'Anoymous') AND rt.ROLE NOT LIKE '%actor%' GROUP BY mc.company_type_id;
SELECT a.title AS alternate_title, AVG(kt.production_year) AS avg_production_year, COUNT(DISTINCT n.id) AS number_of_contributors, SUM(CASE WHEN kw.keyword = 'ball' THEN 1 ELSE 0 END) AS ball_keyword_count, SUM(CASE WHEN kw.keyword = 'advisor' THEN 1 ELSE 0 END) AS advisor_keyword_count FROM aka_title a INNER JOIN keyword kw ON kw.phonetic_code = a.phonetic_code INNER JOIN aka_title kt ON kt.id = a.movie_id AND kt.kind_id = a.kind_id LEFT JOIN name n ON n.name_pcode_cf = a.phonetic_code WHERE a.movie_id IN ('1644521', '1664207') GROUP BY a.title;
SELECT AVG(ml.link_type_id) AS average_link_type, COUNT(DISTINCT cn.id) AS total_unique_characters, SUM(CASE WHEN mi.info_type_id = 2 THEN 1 ELSE 0 END) AS total_drama_movies, MIN(cn.name) AS first_character_name FROM char_name cn JOIN movie_link ml ON cn.imdb_id = ml.movie_id JOIN movie_info mi ON ml.movie_id = mi.movie_id WHERE cn.imdb_index = 'tt' AND mi.info LIKE '%Drama%' GROUP BY cn.imdb_id HAVING COUNT(DISTINCT ml.id) > 3;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, COUNT(DISTINCT al.id) AS total_links, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = kt.id AND kt.kind = 'movie' THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = kt.id AND kt.kind = 'tv series' THEN 1 ELSE 0 END) AS total_tv_series FROM aka_title AS at JOIN kind_type AS kt ON at.kind_id = kt.id LEFT JOIN movie_link AS al ON at.movie_id = al.movie_id GROUP BY kt.kind ORDER BY total_titles DESC;
