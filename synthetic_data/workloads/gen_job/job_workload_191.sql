SELECT ct.kind AS company_type, AVG(ati.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ati.movie_id) AS number_of_movies, SUM(CASE WHEN ati.note LIKE '%(subtitle)%' THEN 1 ELSE 0 END) AS number_of_subtitled_movies, SUM(CASE WHEN ati.note LIKE '%(series title)%' THEN 1 ELSE 0 END) AS number_of_series_titles, SUM(CASE WHEN ati.note LIKE '%(informal literal title)%' THEN 1 ELSE 0 END) AS number_of_informal_literal_titles FROM aka_title ati JOIN company_type ct ON ati.kind_id = ct.id LEFT JOIN company_name cn ON ati.movie_id = cn.imdb_id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT cn.country_code, kt.kind AS title_kind, t.production_year AS year_of_production, COUNT(DISTINCT t.id) AS total_titles, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_names_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_names_count FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN name n ON t.id = n.imdb_id WHERE t.production_year IS NOT NULL AND (n.gender = 'M' OR n.gender = 'F') GROUP BY cn.country_code, kt.kind, t.production_year ORDER BY cn.country_code, total_titles DESC, t.production_year DESC;
SELECT it.info AS info_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT kw.id) AS unique_keywords_count, SUM(mc.company_id) AS total_company_id_sum, rt.ROLE AS role_type, COUNT(DISTINCT cc.movie_id) AS movies_count FROM info_type AS it JOIN movie_companies AS mc ON it.id = mc.company_type_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN keyword AS kw ON mc.movie_id = kw.id LEFT JOIN name AS nm ON cc.subject_id = nm.id JOIN role_type AS rt ON cc.status_id = rt.id WHERE mc.company_type_id = '1' AND (nm.name_pcode_nf = 'B4645' OR nm.name_pcode_nf = 'B1436') AND (rt.ROLE = 'producer' OR rt.ROLE = 'actor') AND mc.movie_id IN ('1646081', '1699392', '1666532', '1678176', '1677967') GROUP BY it.info, rt.ROLE ORDER BY movies_count DESC, average_imdb_id;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_actors, COUNT(DISTINCT kn.id) AS number_of_keywords, SUM(CASE WHEN cn.name LIKE 'A%' THEN 1 ELSE 0 END) AS actors_starting_with_a, COUNT(DISTINCT cmn.id) AS number_of_companies, MAX(akat.episode_nr) AS max_episode_number FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN complete_cast cc ON akat.movie_id = cc.movie_id LEFT JOIN char_name cn ON cn.id = cc.subject_id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id LEFT JOIN keyword kn ON mk.keyword_id = kn.id AND kn.phonetic_code IN ('D525', 'G6431', 'T2623', 'S1425', 'M4165', 'G5123') LEFT JOIN movie_companies mc ON akat.movie_id = mc.movie_id LEFT JOIN company_name cmn ON mc.company_id = cmn.id WHERE akat.production_year >= 2000 GROUP BY kt.kind
SELECT a.imdb_index AS imdb_index_version, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.person_id) AS number_of_people_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, lt.LINK AS link_type_description FROM aka_title a JOIN cast_info c ON a.movie_id = c.movie_id JOIN movie_keyword mk ON a.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_link ml ON a.movie_id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id WHERE a.imdb_index IN ('I', 'II', 'III', 'IV') AND lt.LINK IN ('remake of', 'version of') GROUP BY a.imdb_index, lt.LINK ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS number_of_movies, COUNT(DISTINCT cc.movie_id) AS number_of_completed_movies, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS count_features_link, MAX(mi.info) AS latest_movie_info FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN complete_cast cc ON akat.movie_id = cc.movie_id AND cc.status_id = 4 LEFT JOIN movie_info mi ON akat.movie_id = mi.movie_id LEFT JOIN link_type lt ON lt.id = mi.info_type_id AND lt.link IN ('features', 'spin off', 'remade as') WHERE akat.production_year IS NOT NULL AND akat.kind_id IN (SELECT id FROM kind_type) GROUP BY kt.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, rt.ROLE AS role_type, AVG(ci.nr_order) AS avg_cast_order, COUNT(DISTINCT mk.keyword_id) AS keyword_count, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, COUNT(DISTINCT at.movie_id) AS aka_titles_count, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS credited_roles_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM aka_title WHERE movie_id = ci.movie_id LIMIT 1) JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN movie_link ml ON ml.movie_id = ci.movie_id LEFT JOIN aka_title at ON at.movie_id = ci.movie_id WHERE ci.nr_order IN (21, 36) AND rt.id IN (7, 12, 10) AND rt.ROLE IN ('director', 'production designer', 'editor', 'costume designer') GROUP BY kt.kind, rt.ROLE;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT pi.person_id) AS total_actors, COUNT(DISTINCT pi2.person_id) AS total_crew_members, COUNT(DISTINCT lt.id) AS total_link_types_used FROM cast_info ci JOIN kind_type kt ON ci.person_role_id = kt.id JOIN person_info pi ON ci.person_id = pi.person_id JOIN person_info pi2 ON ci.person_role_id = pi2.person_id AND pi2.info_type_id = ci.role_id JOIN link_type lt ON ci.role_id = lt.id WHERE ci.person_role_id IN (675, 613) AND pi.note NOT IN ('Jon C. Hopwood', 'CelebrityLoop.com', 'Adler and Associates Entertainment', 'Self.', 'ali aga') AND pi.info NOT IN ('15 August 1966', 'First president to live in the White House.', 'Rejowiec Fabryczny, Lubelskie, Poland') AND lt.id IN (15, 11, 8, 17) AND lt.link IN ('featured in', 'edited from', 'unknown link', 'spin off from', 'followed by') GROUP BY kt.kind;
SELECT ct.kind AS cast_type, AVG(production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT cn.id) AS number_of_characters, SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS number_of_credits_with_order FROM cast_info ci JOIN comp_cast_type ct ON ci.person_role_id = ct.id JOIN aka_title at ON ci.movie_id = at.movie_id JOIN char_name cn ON ci.person_id = cn.id WHERE at.kind_id = 1 AND ci.role_id IN (1,2) GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT t.kind_id, min(k.kind) AS movie_kind, avg(t.production_year) AS average_production_year, count(DISTINCT mc.company_id) AS number_of_companies, count(DISTINCT ml.id) AS number_of_movie_links, count(DISTINCT mc.company_type_id) AS number_of_company_types FROM title AS t LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN comp_cast_type AS k ON mc.company_type_id = k.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id AND ml.link_type_id IN ('16', '10') WHERE t.kind_id IN ('2', '7') GROUP BY t.kind_id;
SELECT SUM(mc.company_id) AS total_company_ids, AVG(CASE WHEN mc.company_type_id = 1 THEN mc.movie_id ELSE NULL END) AS average_movie_id_for_type_1, COUNT(DISTINCT ml.link_type_id) AS unique_link_types, COUNT(DISTINCT pi.person_id) AS unique_person_count, AVG(CASE WHEN pi.info_type_id = 5 THEN LENGTH(pi.info) ELSE NULL END) AS average_info_length_for_type_5 FROM movie_companies mc FULL OUTER JOIN movie_link ml ON mc.movie_id = ml.movie_id FULL OUTER JOIN person_info pi ON mc.company_id = pi.person_id GROUP BY mc.company_type_id;
SELECT AT.production_year, CT.kind AS company_kind, IT.info AS info_type, AVG(CI.nr_order) AS average_cast_order, COUNT(DISTINCT MK.keyword_id) AS number_of_keywords, COUNT(DISTINCT ML.link_type_id) AS number_of_link_types, SUM(CASE WHEN AT.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title AT JOIN movie_keyword MK ON AT.movie_id = MK.movie_id JOIN movie_link ML ON AT.movie_id = ML.movie_id JOIN cast_info CI ON AT.movie_id = CI.movie_id JOIN company_type CT ON AT.kind_id = CT.id JOIN info_type IT ON MK.keyword_id = IT.id WHERE AT.production_year BETWEEN 2000 AND 2020 AND CT.kind = 'production' AND IT.info LIKE '%genre%' GROUP BY AT.production_year, CT.kind, IT.info ORDER BY AT.production_year, number_of_keywords DESC;
SELECT ct.kind AS company_kind, rt.ROLE AS role_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN role_type AS rt ON mc.company_type_id = rt.id JOIN title AS t ON mc.movie_id = t.id GROUP BY ct.kind, rt.ROLE ORDER BY number_of_movies DESC;
SELECT AVG(CAST(mi_idx.info AS decimal)) AS average_rating, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributors, n.gender, ki.keyword FROM cast_info AS ci JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN name AS n ON ci.person_id = n.id JOIN keyword AS ki ON mi_idx.info_type_id = ki.id WHERE ci.role_id = 1 AND n.gender IS NOT NULL AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'distributor') GROUP BY n.gender, ki.keyword HAVING COUNT(DISTINCT ci.movie_id) > 10 ORDER BY average_rating DESC, number_of_movies DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) as total_movies, AVG(mcc.count_companies) as average_companies_per_movie, SUM(cast_members.total_cast) as total_cast_members FROM title t LEFT JOIN ( SELECT movie_id, COUNT(company_id) as count_companies FROM movie_companies GROUP BY movie_id ) mcc ON mcc.movie_id = t.id LEFT JOIN ( SELECT movie_id, COUNT(id) as total_cast FROM complete_cast GROUP BY movie_id ) cast_members ON cast_members.movie_id = t.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year ORDER BY t.production_year;
SELECT c.name AS company_name, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, SUM(CASE WHEN lt.id = 6 THEN 1 ELSE 0 END) AS number_of_features FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN company_name AS c ON c.imdb_id = t.imdb_id JOIN link_type AS lt ON lt.id = t.kind_id WHERE k.keyword IN ('lifting-someone-into-the-air', 'switzerland', 'italian-food') AND c.name IN ('Funvision', 'Tentacle Films', 'Freaks') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY c.name ORDER BY number_of_movies DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN pi.info_type_id = 38 THEN 1 ELSE 0 END) AS total_awards_won, COUNT(DISTINCT at.id) AS number_of_alternative_titles FROM name AS n JOIN person_info AS pi ON n.id = pi.person_id LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN aka_title AS at ON at.movie_id = an.person_id WHERE pi.info_type_id IN (34, 35, 38) AND n.gender = 'M' AND (at.season_nr = 28 OR at.season_nr IS NULL) GROUP BY n.gender;
SELECT n.name AS actor_name, COUNT(ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_cast_position, MAX(a.production_year) AS latest_movie_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_productions, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributions FROM name n JOIN cast_info ci ON n.id = ci.person_id JOIN aka_title a ON ci.movie_id = a.movie_id JOIN movie_companies mc ON a.movie_id = mc.movie_id WHERE n.gender = 'F' AND ci.role_id = 1 AND a.production_year BETWEEN 2000 AND 2020 GROUP BY n.name ORDER BY movie_count DESC, average_cast_position, latest_movie_year DESC LIMIT 10;
SELECT it.info AS info_category, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mn.movie_id) AS total_movies, AVG(CAST(pi.info AS INTEGER)) FILTER (WHERE it.info = 'runtimes') AS average_runtime, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'remade as') AS total_remake_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'features') AS total_feature_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'spoofed in') AS total_spoof_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'edited from') AS total_edit_links, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = 103) AS total_LD_language_entries FROM company_name AS cn JOIN movie_link AS mn ON cn.id = mn.movie_id JOIN link_type AS lt ON mn.link_type_id = lt.id JOIN person_info AS pi ON cn.imdb_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE cn.country_code = 'US' AND it.info IN ('portrayed in', 'runtimes', 'release dates', 'alternate versions', 'LD quality of source') GROUP BY it.info;
SELECT cn.country_code, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT n.id) AS number_of_people, AVG(n.imdb_id) AS average_imdb_id, SUM(cc.movie_id) AS total_movie_associations FROM company_name cn JOIN complete_cast cc ON cn.id = cc.subject_id JOIN name n ON cc.movie_id = n.id JOIN aka_name an ON n.id = an.person_id WHERE cn.country_code IS NOT NULL AND n.surname_pcode IN ('A415', 'A413', 'A431') AND an.imdb_index IS NOT NULL GROUP BY cn.country_code ORDER BY number_of_companies DESC, number_of_people DESC;
SELECT COUNT(DISTINCT a.id) AS total_aka_titles, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT m.company_id) AS total_companies_involved, COUNT(DISTINCT n.id) AS total_unique_names, COUNT(DISTINCT ml.movie_id) AS total_movies_with_links, SUM(CASE WHEN a.production_year BETWEEN 1990 AND 2000 THEN 1 ELSE 0 END) AS titles_from_90s FROM aka_title AS a JOIN movie_companies AS m ON a.movie_id = m.movie_id JOIN name AS n ON n.md5sum = a.md5sum LEFT JOIN movie_link AS ml ON a.movie_id = ml.movie_id WHERE a.production_year IS NOT NULL AND m.note IS NOT NULL AND n.gender IN ('F', 'M') GROUP BY n.gender ORDER BY total_aka_titles DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, COUNT(DISTINCT mc.company_id) AS total_production_companies, AVG(COUNT(mi.id)) OVER (PARTITION BY mc.movie_id) AS average_info_per_movie FROM movie_companies mc INNER JOIN cast_info ci ON mc.movie_id = ci.movie_id AND ci.role_id = (SELECT id FROM comp_cast_type WHERE kind = 'actor') INNER JOIN movie_info mi ON mc.movie_id = mi.movie_id WHERE mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production companies') GROUP BY mc.movie_id;
SELECT rt.role AS role, COUNT(DISTINCT an.id) AS num_people, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN ml.link_type_id = 4 THEN 1 ELSE 0 END) AS num_sequels, COUNT(DISTINCT t.id) AS num_titles FROM role_type rt JOIN aka_name an ON rt.id = an.person_id JOIN title t ON an.person_id = t.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id = 4 WHERE rt.role IN ('composer', 'writer', 'actor', 'costume designer', 'producer', 'actress') AND rt.id IN ('4', '6', '7', '2', '9') AND an.name_pcode_cf IN ('A5314', 'T215', 'W4123', 'A2425', 'C6456') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY rt.role ORDER BY num_people DESC, avg_production_year DESC, num_sequels DESC, num_titles DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT ci.movie_id) AS movies_with_keywords, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors, MIN(cn.name) AS company_name FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE k.keyword IN ('pearl', 'reference-to-john-the-baptist', 'gigantic-breasts', 'mental-abuse', 'hammer-moves-by-itself', 'picket-fence') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.info > '2.0' AND n.gender IN ('m', 'f') AND ci.note IN ('CelebrityLoop.com', 'Les Maykithappen', 'Guy Bellinger', 'Allegra Masters', 'Anonymous') GROUP BY cn.name ORDER BY average_movie_rating DESC, total_actors DESC LIMIT 1;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT cn.id) AS number_of_char_names, AVG(mi_idx.info::numeric) AS average_movie_info, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS indexed_aka_names_count FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = kt.id LEFT JOIN char_name AS cn ON cn.imdb_id = mi_idx.movie_id LEFT JOIN aka_name AS an ON an.person_id = mi_idx.movie_id WHERE kt.id IN (SELECT DISTINCT info_type_id FROM movie_info_idx) AND cn.id IN ('60670', '10694') AND mi_idx.note IS NOT NULL GROUP BY kt.kind;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_unique_characters, SUM(CASE WHEN ct.kind = 'Production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(mc.note) AS longest_note FROM aka_title AS akat JOIN movie_companies AS mc ON akat.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN char_name AS cn ON akat.id = cn.id WHERE akat.production_year BETWEEN 2000 AND 2020 AND ct.kind IN ('Production', 'Distributors', 'Special Effects') GROUP BY ct.kind ORDER BY average_production_year DESC, number_of_movies DESC;
