SELECT t.kind_id, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info = 'Estonian' THEN 1 ELSE 0 END) AS total_estonian_movies, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS total_german_movies, SUM(CASE WHEN mi.info = 'Dutch' THEN 1 ELSE 0 END) AS total_dutch_movies, SUM(CASE WHEN mi.info = 'Vietnamese' THEN 1 ELSE 0 END) AS total_vietnamese_movies, SUM(CASE WHEN mi.info = 'Greek' THEN 1 ELSE 0 END) AS total_greek_movies, SUM(CASE WHEN mi.info = 'Croatian' THEN 1 ELSE 0 END) AS total_croatian_movies, COUNT(DISTINCT an.id) AS total_aka_names, COUNT(DISTINCT cc.id) AS total_complete_casts, COUNT(DISTINCT lt.id) AS total_link_types FROM title AS t LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = '4' LEFT JOIN aka_name AS an ON t.id = an.person_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id AND cc.subject_id = '1' AND cc.status_id IN ('3', '4') LEFT JOIN link_type AS lt ON lt.link IN ('edited into', 'similar to', 'spin off from') GROUP BY t.kind_id;
SELECT COUNT(DISTINCT at.id) AS number_of_titles, AVG(at.production_year) AS average_production_year, rt.role AS role_type, COUNT(DISTINCT mi.id) AS number_of_movie_infos, SUM(CASE WHEN at.kind_id = '1' THEN 1 ELSE 0 END) AS number_of_movies, SUM(CASE WHEN at.kind_id = '2' THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT at.episode_of_id) AS number_of_unique_series, MAX(at.season_nr) AS max_season_number, MAX(at.episode_nr) AS max_episode_number FROM aka_title at JOIN movie_info mi ON at.movie_id = mi.movie_id JOIN role_type rt ON mi.info_type_id = rt.id WHERE at.production_year BETWEEN 1990 AND 2020 AND mi.info LIKE '%color%' GROUP BY rt.role ORDER BY number_of_titles DESC, average_production_year;
SELECT COUNT(DISTINCT an.person_id) AS number_of_persons, COUNT(k.id) AS total_keyword_mentions FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN aka_name AS an ON mk.movie_id = an.person_id WHERE k.keyword IN ('money-tree', 'reference-to-moby-dick', 'camp', 'summons') GROUP BY an.person_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_individuals_involved, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN lt.link = 'references' THEN 1 ELSE 0 END) AS total_references, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id JOIN keyword AS k ON mi_idx.info_type_id = k.id JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN cast_info AS ci ON ml.movie_id = ci.movie_id WHERE ml.link_type_id IN (4, 2, 13, 1, 11, 9) AND lt.link IN ('unknown link', 'references') AND mi_idx.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating') AND kt.id IN (SELECT id FROM kind_type WHERE kind LIKE '%movie%') AND ci.note IN ('(producer)', '(executive producer)') GROUP BY kt.kind;
SELECT kt.kind AS movie_genre, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS average_rating, MAX(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS highest_rating FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON kt.id = mi_idx.info_type_id WHERE mi_idx.info LIKE '%Genre%' GROUP BY kt.kind;
SELECT cct.kind AS cast_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS unique_keywords_count, SUM(CASE WHEN t.kind_id = cct.id AND cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified_titles, COUNT(*) AS total_titles FROM title t LEFT JOIN comp_cast_type cct ON t.kind_id = cct.id LEFT JOIN keyword k ON k.phonetic_code = t.phonetic_code GROUP BY cct.kind ORDER BY total_complete_verified_titles DESC;
SELECT cc.kind AS cast_kind, AVG(cc.id) AS average_cast_id, CN.name AS company_name, COUNT(*) AS number_of_movies, SUM(MI.id) AS sum_movie_info_id, AVG(MI.info_type_id) AS average_info_type_id FROM cast_info CI JOIN comp_cast_type CC ON CI.person_role_id = CC.id JOIN company_name CN ON CN.country_code = CI.note JOIN movie_info_idx MI ON CI.movie_id = MI.movie_id WHERE CI.nr_order IN (56, 62, 2, 74) AND CI.movie_id IN (1884275, 2284142, 1084092) AND CN.country_code IN ('[xyu]', '[suhh]', '[lv]', '[nl]', '[cn]') AND CN.name_pcode_sf IN ('W4216', 'A4526', 'S4163', 'C1616') GROUP BY cc.kind, CN.name ORDER BY number_of_movies DESC, company_name;
SELECT CN.name AS company_name, COUNT(DISTINCT AN.id) AS total_aliases, AVG(AT.production_year) AS average_production_year, SUM(CASE WHEN N.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN N.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name CN JOIN aka_title AT ON CN.id = AT.movie_id JOIN aka_name AN ON AN.person_id = AT.movie_id JOIN name N ON N.id = AN.person_id WHERE CN.country_code = 'US' AND AT.production_year >= 2000 AND N.gender IN ('M', 'F') GROUP BY CN.name;
SELECT c.id AS company_id, c.name AS company_name, COUNT(DISTINCT m.id) AS number_of_movies, AVG(mi_numeric.info::FLOAT) AS average_movie_length, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_actors, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(ci.nr_order) AS max_cast_order, MIN(mc.note) AS earliest_production_note FROM movie_companies mc JOIN company_name c ON mc.company_id = c.id JOIN title m ON mc.movie_id = m.id LEFT JOIN movie_info mi ON m.id = mi.movie_id LEFT JOIN movie_info_idx mi_idx ON m.id = mi_idx.movie_id LEFT JOIN info_type it1 ON mi.info_type_id = it1.id AND it1.info = 'running time' LEFT JOIN cast_info ci ON m.id = ci.movie_id LEFT JOIN movie_keyword mk ON m.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_info mi_numeric ON m.id = mi_numeric.movie_id AND mi_numeric.info_type_id = it1.id WHERE c.country_code = '[us]' AND mi_numeric.info ~ '^[0-9]+(\.[0-9]+)?$' GROUP BY c.id, c.name ORDER BY number_of_movies DESC, average_movie_length DESC LIMIT 10;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, SUM(CASE WHEN k.keyword = 'contest' THEN 1 ELSE 0 END) AS total_contest_keyword, SUM(CASE WHEN k.keyword = 'shield' THEN 1 ELSE 0 END) AS total_shield_keyword FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN cast_info ci ON ci.person_id = cn.id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN keyword k ON k.id = mk.keyword_id WHERE k.phonetic_code IN ('P2353', 'C2535', 'P6215') AND mk.keyword_id IN ('1071', '3527', '3569', '2390');
SELECT t.title, kt.kind, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT comp_n.id) AS total_companies, AVG(t.production_year) AS average_production_year, MAX(it.info) AS most_frequent_info FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_info_idx mii ON t.id = mii.movie_id LEFT JOIN info_type it ON mii.info_type_id = it.id LEFT JOIN char_name cn ON t.id = cn.id LEFT JOIN company_name comp_n ON t.id = comp_n.id GROUP BY t.title, kt.kind ORDER BY total_characters DESC, total_companies DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT ci.movie_id) AS movies_with_keywords, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors, MIN(cn.name) AS company_name FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE k.keyword IN ('pearl', 'reference-to-john-the-baptist', 'gigantic-breasts', 'mental-abuse', 'hammer-moves-by-itself', 'picket-fence') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.info > '2.0' AND n.gender IN ('m', 'f') AND ci.note IN ('CelebrityLoop.com', 'Les Maykithappen', 'Guy Bellinger', 'Allegra Masters', 'Anonymous') GROUP BY cn.name ORDER BY average_movie_rating DESC, total_actors DESC LIMIT 1;
SELECT COUNT(DISTINCT ci.id) AS total_actors, AVG(mc.id) AS avg_company_id, SUM(CASE WHEN rt.id = 6 THEN 1 ELSE 0 END) AS total_directors, MIN(n.name) AS first_actor_name, MAX(t.title) AS last_movie_title, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 3 OR ml.link_type_id = 7) AS total_related_movies FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id JOIN aka_title AS at ON ci.movie_id = at.movie_id JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN title AS t ON at.movie_id = t.id WHERE ci.note NOT LIKE '%uncredited%' AND at.production_year BETWEEN 2000 AND 2010 AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND rt.role IN ('actor', 'actress', 'director') GROUP BY rt.id;
SELECT t.production_year, kt.kind, AVG(LENGTH(t.title)) AS average_title_length, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IS NOT NULL GROUP BY t.production_year, kt.kind ORDER BY t.production_year DESC, kt.kind;
