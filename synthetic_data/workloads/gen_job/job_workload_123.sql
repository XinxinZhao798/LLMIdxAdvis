SELECT kt.kind AS movie_kind, COUNT(*) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS color_movie_count, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS black_and_white_movie_count FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_info AS mi ON t.id = mi.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('color', 'black and white')) GROUP BY kt.kind HAVING COUNT(*) > 100 ORDER BY total_movies DESC, average_production_year;
SELECT it.info AS info_type, COUNT(mi.id) AS total_movie_info_entries, AVG(LENGTH(mi.info)) AS average_info_length, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS count_with_notes FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN keyword k ON k.id = ANY(ARRAY[8402, 763, 4258, 5648]) WHERE it.id IN (16, 97, 31, 104, 71) GROUP BY it.info ORDER BY total_movie_info_entries DESC, average_info_length DESC;
SELECT ct.kind AS company_type, AVG(CASE WHEN ml.link_type_id = '3' THEN 1 ELSE 0 END) AS avg_movie_references, COUNT(DISTINCT mk.movie_id) AS unique_movies_with_keywords, COUNT(DISTINCT at.id) AS total_aka_titles, SUM(CASE WHEN at.phonetic_code IN ('T54', 'V5231') THEN 1 ELSE 0 END) AS count_phonetic_code_matches, MAX(at.production_year) AS latest_production_year FROM company_type ct LEFT JOIN movie_companies mc ON ct.id = mc.company_type_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_title at ON mc.movie_id = at.movie_id WHERE ct.kind = 'distributors' AND ml.link_type_id IN ('3', '9', '15', '4', '10') GROUP BY ct.kind;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, SUM(CASE WHEN k.keyword = 'contest' THEN 1 ELSE 0 END) AS total_contest_keyword, SUM(CASE WHEN k.keyword = 'shield' THEN 1 ELSE 0 END) AS total_shield_keyword FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN cast_info ci ON ci.person_id = cn.id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN keyword k ON k.id = mk.keyword_id WHERE k.phonetic_code IN ('P2353', 'C2535', 'P6215') AND mk.keyword_id IN ('1071', '3527', '3569', '2390');
SELECT cn.name AS company_name, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT rt.id) AS number_of_roles, SUM(CASE WHEN cn.name_pcode_sf = 'Y5214' THEN 1 ELSE 0 END) AS count_Y5214_companies, SUM(CASE WHEN cn.name_pcode_sf = 'F2536' THEN 1 ELSE 0 END) AS count_F2536_companies FROM company_name AS cn JOIN movie_companies AS mc ON mc.company_id = cn.id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = mc.movie_id JOIN cast_info AS ci ON ci.movie_id = mc.movie_id JOIN role_type AS rt ON rt.id = ci.role_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY cn.name HAVING COUNT(DISTINCT rt.id) > 1 ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_with_role, n.gender, n.name_pcode_nf FROM cast_info ci JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN name n ON ci.person_id = n.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND n.name_pcode_nf IN ('T6535', 'E3245', 'T124') AND ci.nr_order IN (2, 21, 10, 117, 42) GROUP BY n.gender, n.name_pcode_nf ORDER BY average_movie_rating DESC;
SELECT kt.kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN mi_idx.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_info_type_1, AVG(CASE WHEN mi_idx.info_type_id = 1 THEN CAST(mi_idx.info AS FLOAT) ELSE NULL END) AS average_info_value_for_type_1 FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
