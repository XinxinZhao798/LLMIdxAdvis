SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.info::NUMERIC) FILTER (WHERE it.info = 'rating') AS average_rating, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword LIKE '%love%') AS love_keyword_count, rt.ROLE AS role_type, COUNT(DISTINCT ci.id) FILTER (WHERE rt.ROLE = 'actor') AS count_of_actors_roles, SUM(at.episode_nr) AS total_episodes, AVG(at.season_nr) AS average_season_number FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN cast_info ci ON mi.movie_id = ci.movie_id LEFT JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN aka_title at ON mi.movie_id = at.movie_id WHERE at.production_year BETWEEN 2000 AND 2010 AND (at.season_nr IS NOT NULL AND at.episode_nr IS NOT NULL) GROUP BY it.info, rt.ROLE ORDER BY number_of_movies DESC, average_rating DESC, love_keyword_count DESC, count_of_actors_roles DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_titles, AVG(CAST(t.production_year AS NUMERIC)) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actor_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actor_count, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, COUNT(DISTINCT cc.id) AS complete_cast_entries FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id LEFT JOIN movie_link AS ml ON t.movie_id = ml.movie_id LEFT JOIN complete_cast AS cc ON t.movie_id = cc.movie_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE kt.kind IN ('movie', 'tv movie', 'episode', 'tv series', 'video movie') AND cc.subject_id = 1 AND (n.gender IS NULL OR n.gender IN ('m', 'f')) GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT ct.kind AS company_kind, AVG(ti.production_year) AS average_production_year, COUNT(*) AS total_movies, SUM(CASE WHEN ml.link_type_id = 10 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT n.id) AS distinct_actors FROM title ti INNER JOIN company_type ct ON ti.kind_id = ct.id LEFT JOIN movie_link ml ON ti.id = ml.movie_id AND ml.link_type_id IN (10, 11, 5, 6, 13) LEFT JOIN cast_info ci ON ti.id = ci.movie_id LEFT JOIN name n ON ci.person_id = n.id WHERE ti.production_year BETWEEN 2000 AND 2020 GROUP BY ct.kind ORDER BY total_movies DESC, average_production_year;
SELECT kt.kind AS movie_kind, AVG(ati.production_year) AS avg_production_year, COUNT(DISTINCT cn.id) AS total_actors, COUNT(DISTINCT compn.id) AS total_companies, SUM(CASE WHEN mi.info = 'Hungarian' THEN 1 ELSE 0 END) AS hungarian_movies_count, SUM(CASE WHEN mi.info = 'Bulgarian' THEN 1 ELSE 0 END) AS bulgarian_movies_count, SUM(CASE WHEN mi.info = 'Korean' THEN 1 ELSE 0 END) AS korean_movies_count FROM aka_title ati JOIN kind_type kt ON ati.kind_id = kt.id JOIN movie_info mi ON ati.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN name n ON n.id = ati.episode_of_id LEFT JOIN company_name compn ON compn.id = ati.movie_id LEFT JOIN char_name cn ON n.id = cn.id WHERE mi.info_type_id = 4 AND kt.id IN (1, 6, 5) AND ati.title IN ('Articolo 99', 'Lippenstift am Kragen', 'Eine Klasse fÃ¼r sich') GROUP BY kt.kind;
SELECT rt.ROLE AS role_type, AVG(name.imdb_id) AS average_imdb_id, SUM(case when name.gender = 'M' then 1 else 0 end) AS number_of_male_actors, SUM(case when name.gender = 'F' then 1 else 0 end) AS number_of_female_actors, COUNT(DISTINCT ci.movie_id) AS number_of_movies, MAX(title.production_year) AS latest_movie_year, MIN(title.production_year) AS earliest_movie_year, AVG(title.production_year) AS average_movie_year FROM cast_info ci JOIN name ON ci.person_id = name.id JOIN role_type rt ON ci.role_id = rt.id JOIN title ON ci.movie_id = title.id WHERE ci.person_role_id IN (541, 657, 1059) AND name.name_pcode_cf IN ('A4545', 'A4135', 'A242') AND name.surname_pcode IN ('A42', 'A456', 'A432', 'A426', 'A461') GROUP BY rt.ROLE ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_actors_with_roles, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT ci.person_id) AS number_of_actors FROM kind_type AS kt JOIN movie_info AS mi ON kt.id = mi.info_type_id JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id JOIN cast_info AS ci ON mi.movie_id = ci.movie_id WHERE kt.kind IN ('animation', 'documentary', 'drama') AND mi.movie_id IN ('15385', '12319', '8904', '2482109', '1214055') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(t.episode_nr) AS total_episodes, k.keyword, gender FROM name AS n JOIN title AS t ON t.id = n.id JOIN keyword AS k ON k.id = t.id WHERE n.gender = 'm' AND t.production_year BETWEEN 1990 AND 2020 AND k.keyword IN ('string-of-beads', 'atm-card', 'based-on-sketch-comedy', 'skeleton-in-a-closet', 'rugged-terrain', 'reference-to-zorro') GROUP BY k.keyword, n.gender ORDER BY total_actors DESC, average_production_year DESC;
SELECT ct.kind AS company_type, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_completed_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT mc.movie_id) AS number_of_movies_with_companies FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN complete_cast cc ON mc.movie_id = cc.movie_id JOIN keyword k ON mi.movie_id = k.id WHERE ct.id IN (3, 4) AND mc.company_id IN (202, 974) AND cc.status_id IN (3, 4) AND cc.subject_id = 1 AND mi.note LIKE '%(only a few lines)%' GROUP BY ct.kind;
SELECT t.production_year, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT an.id) AS total_distinct_actors, COUNT(DISTINCT CASE WHEN an.name_pcode_cf = 'M6353' THEN an.person_id ELSE NULL END) AS actors_with_pcode_M6353 FROM title AS t LEFT JOIN aka_title AS at ON t.id = at.movie_id LEFT JOIN aka_name AS an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2000 GROUP BY t.production_year ORDER BY t.production_year;
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(cn.imdb_id) AS average_imdb_id_for_companies, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies FROM kind_type kt JOIN movie_keyword mk ON kt.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN company_name cn ON cn.id = mk.movie_id WHERE kt.kind IN ('movie', 'tv movie', 'tv series') AND k.keyword IN ('boss-is-away', 'musical-performance', 'global-warming') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT cc.movie_id) AS total_movies, AVG(pi.id) AS average_person_info_id, SUM(ct.id) AS sum_company_type_ids FROM role_type rt JOIN char_name cn ON cn.md5sum IN ('87fb1da22896f8674cfb742fe549ec67', 'bf85b5265ca46bac451dcdce6f3625f7', '74802eebae1a12921215b7402178254c') JOIN person_info pi ON pi.person_id = cn.id JOIN complete_cast cc ON cc.subject_id = cn.id JOIN company_type ct ON ct.id = 2 WHERE rt.ROLE IN ('actress', 'miscellaneous crew', 'editor', 'director', 'composer') AND pi.note IN ('frankfob2@yahoo.com', 'Deception Films', 'CelebrityLoop.com', 'Spook Show Entertainment', 'E Adamson') AND pi.person_id IN ('3716', '1740595') GROUP BY rt.ROLE ORDER BY total_movies DESC;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS US_based_companies, t.production_year, COUNT(DISTINCT t.id) AS number_of_movies FROM title t LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year HAVING COUNT(DISTINCT t.id) > 10 ORDER BY t.production_year DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, COUNT(DISTINCT k.id) AS unique_keywords_count, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM movie_link AS ml JOIN movie_link AS linked_ml ON ml.linked_movie_id = linked_ml.movie_id JOIN keyword AS k ON ml.id = k.id JOIN name AS n ON linked_ml.movie_id = n.id JOIN role_type AS rt ON n.id = rt.id JOIN company_type AS ct ON k.id = ct.id WHERE ct.id = 2 AND n.imdb_index = 'III' AND (n.name_pcode_nf = 'J5234' OR n.name_pcode_nf = 'W6526') GROUP BY ct.kind;
SELECT kt.kind AS movie_type, avg(akat.production_year) AS average_production_year, count(DISTINCT akat.movie_id) AS number_of_movies, count(DISTINCT mc.company_id) AS number_of_companies_involved, sum(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS number_of_directors, sum(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS number_of_actresses, sum(CASE WHEN rt.role = 'cinematographer' THEN 1 ELSE 0 END) AS number_of_cinematographers, sum(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS number_of_composers FROM kind_type kt JOIN aka_title akat ON kt.id = akat.kind_id JOIN movie_companies mc ON akat.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_link mlink ON akat.movie_id = mlink.movie_id JOIN role_type rt ON mlink.link_type_id = rt.id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, AVG(CAST(mi.info AS numeric)) AS average_rating, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_count, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t INNER JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM movie_info_idx WHERE info = 'rating') LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE t.production_year BETWEEN 1990 AND 2010 GROUP BY kt.kind HAVING COUNT(DISTINCT t.id) > 10 ORDER BY average_rating DESC;
SELECT mi.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT k.id) AS keyword_count FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id AND it.info = 'genre' LEFT JOIN movie_info_idx AS mi_idx ON mi.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id GROUP BY mi.info HAVING COUNT(DISTINCT mi.movie_id) > 10 ORDER BY average_rating DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producer_roles, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id LEFT JOIN role_type AS rt ON mi.info_type_id = rt.id AND rt.role IN ('actress', 'producer') GROUP BY kt.kind ORDER BY number_of_companies_involved DESC, avg_production_year;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender != 'm' THEN 1 ELSE 0 END) AS non_male_actors_count, cct.kind AS cast_type, COUNT(DISTINCT t.id) AS number_of_titles, MAX(t.production_year) AS latest_production_year FROM name n JOIN aka_name an ON n.id = an.person_id JOIN complete_cast cc ON n.id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id JOIN title t ON cc.movie_id = t.id WHERE cc.status_id IN (3, 4) AND cct.id IN (4, 3, 1) AND n.name_pcode_cf = 'A43' AND n.gender = 'm' GROUP BY cct.kind ORDER BY number_of_actors DESC, average_production_year DESC;
SELECT at.production_year, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.episode_nr) AS average_episodes_per_season, COUNT(DISTINCT rt.id) AS distinct_roles_count FROM aka_title at JOIN role_type rt ON at.kind_id = rt.id JOIN info_type it ON at.id = it.id WHERE at.production_year IN (1972, 1934, 1943) AND rt.role IN ('production designer', 'composer', 'guest', 'producer', 'actor', 'writer') AND it.info IN ('admissions', 'votes', 'LD master format', 'soundtrack') GROUP BY at.production_year ORDER BY at.production_year;
SELECT rt.ROLE AS role_type, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ci.movie_id) AS movies_count, MIN(t.title) AS earliest_movie_title, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies_count FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN title AS t ON ci.movie_id = t.id JOIN company_name AS cn ON cn.imdb_id = t.imdb_id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY rt.ROLE ORDER BY movies_count DESC, unique_actors DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS completed_and_verified_casts, COUNT(DISTINCT rt.id) AS number_of_cinematographer_roles, MIN(aka.name) AS example_aka_name FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id JOIN movie_keyword AS mk ON cn.id = mk.movie_id JOIN movie_info_idx AS mi_idx ON mk.movie_id = mi_idx.movie_id JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id JOIN role_type AS rt ON rt.role = 'cinematographer' LEFT JOIN aka_name AS aka ON aka.name_pcode_cf = 'D1353' AND aka.md5sum IN ('e6b1b0cc9037b00160a143b03dc5524d', '1d440711fb046c932badfdc8121ce380', '88bcce46f057ed51b9026d05fbdb1ac0') WHERE cc.status_id IN ('3', '4') GROUP BY ct.kind
