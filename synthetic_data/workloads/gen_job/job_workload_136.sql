SELECT COUNT(DISTINCT ml.movie_id) AS num_movies, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies, AVG(sub.num_keywords) AS avg_keywords_per_movie, SUM(CASE WHEN pi.info_type_id = '34' THEN 1 ELSE 0 END) AS count_info_type_34, SUM(CASE WHEN pi.info_type_id = '25' THEN 1 ELSE 0 END) AS count_info_type_25 FROM movie_link AS ml JOIN (SELECT mk.movie_id, COUNT(mk.keyword_id) AS num_keywords FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub ON ml.movie_id = sub.movie_id LEFT JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY ml.link_type_id;
SELECT it.info AS info_category, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(CAST(mi_idx.info AS numeric)) AS average_movie_info, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count FROM info_type it JOIN movie_info_idx mi_idx ON it.id = mi_idx.info_type_id JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN name n ON mi_idx.movie_id = n.id WHERE it.info IN ('crazy credits', 'bottom 10 rank', 'tech info', 'LD quality program', 'production process protocol') GROUP BY it.info;
SELECT kt.kind AS movie_kind, count(DISTINCT ci.movie_id) AS num_movies, avg(ci.nr_order) AS avg_cast_order, count(DISTINCT pi.person_id) AS num_people, sum(case when pi.info LIKE '%tropical fever%' then 1 else 0 end) AS count_tropical_fever_mentions, min(a.name) AS example_actor_name, max(k.keyword) AS example_keyword FROM cast_info AS ci JOIN kind_type AS kt ON ci.movie_id = kt.id JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN aka_name AS a ON ci.person_id = a.person_id JOIN keyword AS k ON pi.info LIKE '%' || k.keyword || '%' WHERE a.name_pcode_nf IN ('L6543', 'E3624', 'F6543', 'F6261', 'A5242', 'F6526') AND ci.person_id IN ('21277', '11977', '18600') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people_involved, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS num_male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS num_female_actors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN cast_info AS ci ON mc.movie_id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE ct.id IN (2, 3, 4) GROUP BY ct.kind
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, COUNT(DISTINCT pi.person_id) AS person_count, AVG(CASE WHEN mi.note NOT LIKE '%(English version)%' THEN CAST(mi.info AS FLOAT) ELSE NULL END) AS average_non_english_info_rating, SUM(CASE WHEN pi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS total_interviews FROM info_type it LEFT JOIN movie_info mi ON it.id = mi.info_type_id LEFT JOIN person_info pi ON it.id = pi.info_type_id WHERE it.id IN (79, 44, 61) GROUP BY it.info;
SELECT kt.kind, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_actors, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS num_tv_related_companies, SUM(CASE WHEN mc.note LIKE '%(worldwide) (all media)%' THEN 1 ELSE 0 END) AS num_worldwide_media_companies FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN cast_info ci ON t.id = ci.movie_id JOIN movie_companies mc ON t.id = mc.movie_id WHERE t.series_years NOT LIKE '%????%' AND t.production_year >= 2000 AND EXISTS (SELECT 1 FROM keyword k WHERE k.id = ci.movie_id AND k.keyword LIKE '%crime%') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT it.info AS info_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT kw.id) AS unique_keywords_count, SUM(mc.company_id) AS total_company_id_sum, rt.ROLE AS role_type, COUNT(DISTINCT cc.movie_id) AS movies_count FROM info_type AS it JOIN movie_companies AS mc ON it.id = mc.company_type_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN keyword AS kw ON mc.movie_id = kw.id LEFT JOIN name AS nm ON cc.subject_id = nm.id JOIN role_type AS rt ON cc.status_id = rt.id WHERE mc.company_type_id = '1' AND (nm.name_pcode_nf = 'B4645' OR nm.name_pcode_nf = 'B1436') AND (rt.ROLE = 'producer' OR rt.ROLE = 'actor') AND mc.movie_id IN ('1646081', '1699392', '1666532', '1678176', '1677967') GROUP BY it.info, rt.ROLE ORDER BY movies_count DESC, average_imdb_id;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movies_played, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN cct.kind = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN cct.kind = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN comp_cast_type cct ON ci.role_id = cct.id WHERE ci.person_role_id IN (1242, 894) AND ci.id IN (15187, 18533) AND n.id IN (8915, 8784, 8411, 7360) AND ci.person_id IN (4062401, 4062465, 1751638, 4062519, 1747068, 24195) GROUP BY n.name;
SELECT ct.kind AS company_kind, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_movie_budget, COUNT(DISTINCT cn.id) AS total_production_companies, COUNT(DISTINCT mi_idx.movie_id) AS total_movies_with_budget, COUNT(DISTINCT rt.id) AS total_distinct_roles FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id AND it.info = 'budget' JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind = 'production companies' JOIN cast_info ci ON mi_idx.movie_id = ci.movie_id JOIN role_type rt ON ci.role_id = rt.id GROUP BY ct.kind HAVING COUNT(DISTINCT mi_idx.movie_id) > 3;
SELECT ct.kind AS company_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS unique_keywords_count, COUNT(DISTINCT at.id) AS alternate_titles_count, SUM(CASE WHEN mic.info_type_id = '100' THEN 1 ELSE 0 END) AS count_info_type_100, SUM(CASE WHEN mic.info_type_id = '101' THEN 1 ELSE 0 END) AS count_info_type_101, SUM(CASE WHEN mic.info_type_id = '99' THEN 1 ELSE 0 END) AS count_info_type_99 FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN movie_info_idx AS mic ON mc.movie_id = mic.movie_id LEFT JOIN keyword AS k ON at.movie_id = k.id WHERE ct.kind = 'miscellaneous companies' AND mc.id IN ('1733', '1292', '472', '1920', '683', '4338') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, SUM(CASE WHEN mi_idx.info_type_id = 26 THEN 1 ELSE 0 END) AS total_movies_with_votes, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT an.person_id) AS number_of_aka_names FROM movie_info mi JOIN kind_type kt ON mi.info_type_id = kt.id LEFT JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi_idx.info_type_id IN (26, 41, 27, 80, 87) LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN aka_name an ON mi.movie_id = an.person_id WHERE mi.info_type_id = 1 AND mi_idx.movie_id = '8945' AND an.md5sum IN ('536004f9d825a8468fbfa85cb0221d0c', '5126b143aa05c2a7a362057c4543038b') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, AVG(pi.info::NUMERIC) AS average_salary, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, COUNT(DISTINCT cn.id) AS total_companies FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN person_info AS pi ON cn.imdb_id = pi.person_id WHERE pi.info_type_id = 2 AND ct.kind = 'Production' GROUP BY ct.kind ORDER BY average_salary DESC;
SELECT COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(sub.avg_keywords_per_movie) AS average_keywords_per_movie, SUM(sub.keyword_count) AS total_keywords, COUNT(DISTINCT pi.person_id) AS number_of_people_with_info FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count, AVG(COUNT(mk.keyword_id)) OVER () AS avg_keywords_per_movie FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub ON mk.movie_id = sub.movie_id LEFT JOIN person_info AS pi ON pi.info = k.keyword WHERE k.phonetic_code IN ('G2532', 'R232');
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT name.id) AS number_of_unique_actors FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN name ON ci.person_id = name.id WHERE rt.id IN (1) AND ci.nr_order IS NOT NULL AND name.md5sum IN ('0d93c2f49007eb923f1f3983f0a8cc6b', 'c73602ee6ad37663369ca6e3bd40e7dd', 'db97c7dc12820b568f8351333075a92d', '53ebf953411448090e3e779bf1486727', 'f22535a12044b89484f9cba769cf437a', '6f608ba1bd4dd87eac0e663a877f54bc') GROUP BY rt.ROLE;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS total_tv_movies, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT an.person_id) AS total_actors_with_aliases FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN char_name cn ON cn.imdb_id = t.imdb_id LEFT JOIN aka_name an ON an.person_id = t.id WHERE t.production_year > 2000 AND t.kind_id IN (2, 3, 6, 7) AND (mc.note LIKE '%(TV)%' OR mc.note IS NULL) AND (cn.surname_pcode = 'B654' OR cn.surname_pcode IS NULL) AND (mc.company_type_id = kt.id OR mc.company_type_id IS NULL) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, AVG(kw.id) AS average_keyword_id, COUNT(DISTINCT mc.movie_id) AS total_movies, SUM(mc.company_id) AS sum_company_id FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN keyword kw ON CAST(ml.link_type_id AS INTEGER) = kw.id JOIN name n ON mc.movie_id = n.id WHERE n.gender = 'm' AND kw.keyword IN ('Black Rick', 'Joel Gonzalez', 'TNI Soldier', 'ESPN', 'Newsroom Martian') GROUP BY ct.kind ORDER BY total_movies DESC, average_keyword_id;
SELECT t.title AS Movie_Title, COUNT(DISTINCT n.id) AS Number_of_Actors, AVG(mi_idx.info::numeric) AS Average_Rating, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS Total_Actors, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS Total_Actresses, t.production_year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND t.production_year BETWEEN 2000 AND 2010 AND rt.role IN ('actor', 'actress') GROUP BY t.title, t.production_year HAVING COUNT(DISTINCT n.id) > 10 ORDER BY Average_Rating DESC, Number_of_Actors DESC LIMIT 10;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT char_name.id) AS number_of_unique_char_names FROM movie_companies mc JOIN aka_title aka ON mc.movie_id = aka.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id JOIN char_name ON cn.id = char_name.id WHERE ct.kind NOT IN ('subsidiary', 'division') AND char_name.id IN ('12861', '46459', '54418', '37871', '75348') AND aka.production_year BETWEEN 2000 AND 2010 GROUP BY ct.kind ORDER BY number_of_movies DESC, average_production_year;
SELECT cnt.kind AS company_type, AVG(mc_notes.note_length) AS average_note_length, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mc.movie_id) AS movies_involved, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cnt ON mc.company_type_id = cnt.id LEFT JOIN ( SELECT movie_id, company_id, LENGTH(note) as note_length FROM movie_companies WHERE note IS NOT NULL ) AS mc_notes ON mc.movie_id = mc_notes.movie_id AND mc.company_id = mc_notes.company_id LEFT JOIN ( SELECT name.id, name.gender FROM name WHERE name.gender IN ('F', 'M') ) AS n ON mc.company_id = n.id GROUP BY cnt.kind ORDER BY cnt.kind;
SELECT k.keyword, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, AVG(sub_person_roles.roles_count) AS avg_roles_per_person, COUNT(DISTINCT an.id) AS unique_pseudonyms_count FROM keyword AS k LEFT JOIN movie_keyword AS mk ON k.id = mk.keyword_id LEFT JOIN movie_link AS ml ON mk.movie_id = ml.movie_id LEFT JOIN person_info AS pi ON pi.info_type_id = k.id LEFT JOIN (SELECT pi.person_id, COUNT(DISTINCT pi.info_type_id) AS roles_count FROM person_info AS pi INNER JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE rt.id IN (1, 8, 7, 5) GROUP BY pi.person_id ) AS sub_person_roles ON pi.person_id = sub_person_roles.person_id LEFT JOIN aka_name AS an ON pi.person_id = an.person_id WHERE k.keyword IN ('murder', 'mystery', 'thriller') AND pi.info_type_id IN (70, 2, 75, 36, 50) GROUP BY k.keyword;
SELECT c.name AS company_name, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT mk.keyword_id) AS total_unique_keywords FROM company_name c JOIN movie_keyword mk ON c.id = mk.keyword_id JOIN title t ON mk.movie_id = t.id WHERE c.country_code IN ('US', 'GB') AND t.production_year BETWEEN 1990 AND 2000 GROUP BY c.name HAVING COUNT(DISTINCT t.id) > 10 ORDER BY total_feature_films DESC, total_tv_shows DESC;
SELECT ct.kind AS company_kind, it.info AS info_category, COUNT(*) AS total_companies, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN info_type it ON cn.id = it.id WHERE cn.md5sum IN ('6f5f695d7bd08122f1c8ece2814ae2cd', 'a90eefb65011789cddc830ed101bcd88') AND it.id IN ('74', '51', '63') GROUP BY ct.kind, it.info;
SELECT kt.kind AS content_type, COUNT(*) AS total_titles, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT cn.country_code) AS unique_country_codes, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_aka_names FROM kind_type AS kt JOIN company_name AS cn ON cn.id = kt.id LEFT JOIN aka_name AS an ON an.person_id = cn.id WHERE kt.id IN ('4', '3', '5', '6', '1', '2') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT AVG(m.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT n.id) AS number_of_persons FROM title AS m LEFT JOIN movie_companies AS mc ON mc.movie_id = m.id LEFT JOIN movie_info AS mi ON mi.movie_id = m.id AND mi.info_type_id = 6 LEFT JOIN keyword AS k ON k.id = mi.info_type_id LEFT JOIN name AS n ON n.id = mi.movie_id GROUP BY m.kind_id HAVING COUNT(DISTINCT mc.company_id) > 1 ORDER BY average_production_year DESC;
SELECT ct.kind AS company_type, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS feature_films, SUM(CASE WHEN at.kind_id = 2 THEN 1 ELSE 0 END) AS short_films, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS tv_movies, COUNT(DISTINCT pi.person_id) AS total_individual_contributors FROM company_type ct JOIN company_name cn ON cn.country_code = 'US' JOIN movie_companies mc ON mc.company_id = cn.id AND mc.company_type_id = ct.id JOIN aka_title at ON at.movie_id = mc.movie_id LEFT JOIN person_info pi ON pi.info LIKE '%@%' WHERE at.kind_id IN (1, 2, 3, 4, 7) AND at.production_year BETWEEN 1990 AND 2020 GROUP BY ct.kind;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(ci.id) AS total_roles_played, AVG(ci.nr_order) AS average_order_of_appearance, AVG(CAST(mi_idx.info AS FLOAT)) AS average_movie_rating FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY n.name ORDER BY number_of_movies DESC, average_movie_rating DESC, average_order_of_appearance ASC LIMIT 10;
