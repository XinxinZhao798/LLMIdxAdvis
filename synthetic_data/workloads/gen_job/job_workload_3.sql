SELECT cn.country_code, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(m_link.link_type_id) AS average_link_type_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_link m_link ON mc.movie_id = m_link.movie_id JOIN name n ON n.name_pcode_nf IN ('A6354', 'D1345') WHERE mc.company_type_id = 1 GROUP BY cn.country_code HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY number_of_movies DESC;
SELECT cn.country_code, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, SUM(cc.subject_id) AS total_subjects, AVG(cc.status_id) AS average_status_id FROM movie_link AS ml JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN company_name AS cn ON ml.movie_id = cn.imdb_id WHERE ml.movie_id IN (16753, 14650) GROUP BY cn.country_code ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 1) AS average_movie_budget, SUM(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 2) AS total_box_office, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword IN ('toy-car', 'personal-stories')) AS count_specific_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN person_info AS pi ON mc.movie_id = pi.person_id AND pi.info_type_id IN (1, 2) LEFT JOIN keyword AS k ON k.id = pi.info_type_id JOIN comp_cast_type AS cct ON mc.company_id = cct.id WHERE mc.company_id IN (1232, 968) AND ct.id IN (2, 1, 4, 3) AND ct.kind = 'miscellaneous companies' AND cct.id IN (1, 2) GROUP BY ct.kind;
SELECT rt.role, COUNT(DISTINCT cn.id) AS total_characters, AVG(p.id) AS average_person_id, SUM(mc.company_id) AS total_company_id_sum, COUNT(DISTINCT k.id) AS total_unique_keywords FROM role_type rt LEFT JOIN char_name cn ON CAST(cn.id AS VARCHAR) = rt.id::varchar LEFT JOIN person_info p ON p.info_type_id = rt.id LEFT JOIN movie_companies mc ON mc.movie_id = cn.id LEFT JOIN keyword k ON k.id = mc.movie_id LEFT JOIN company_name cnm ON cnm.id = mc.company_id WHERE rt.role IN ('costume designer', 'miscellaneous crew', 'writer', 'actress', 'cinematographer', 'editor') AND mc.movie_id IN (12988, 12661, 11129, 26451, 19305, 12141) AND cnm.id IN (59673, 4533, 60539, 5934, 16779) GROUP BY rt.role ORDER BY total_unique_keywords DESC, total_characters DESC;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS movie_count, AVG(cn.imdb_index::numeric) AS avg_imdb_index, COUNT(DISTINCT ml.linked_movie_id) AS unique_linked_movies_count FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN char_name AS cn ON mk.movie_id = cn.id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id WHERE k.id IN (5710) AND cn.name IN ('George Curtis', 'Sheet-metal worker', 'Sam Hall', 'Mr. Wood', 'Basil''s Henchman', 'Harvard Interviewer') AND cn.md5sum = '935983a2b8b5ca56e24c96447e850d60' GROUP BY k.keyword ORDER BY movie_count DESC;
SELECT ct.kind AS company_type, kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS num_lead_roles, COUNT(DISTINCT cn.id) AS num_unique_characters FROM movie_companies AS mc JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id JOIN kind_type AS kt ON kt.kind = 'movie' JOIN cast_info AS ci ON mc.movie_id = ci.movie_id JOIN char_name AS cn ON cn.id = ci.person_id WHERE mc.company_id IN (1227, 1142) AND cn.surname_pcode IN ('B62', 'C534', 'D6354') GROUP BY ct.kind, kt.kind ORDER BY num_movies DESC;
SELECT AVG(CASE WHEN mi.info_type_id = 101 THEN mi.info::NUMERIC END) AS average_rating, COUNT(DISTINCT ci.movie_id) AS total_movies_with_cast, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows FROM title t LEFT JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = 101 LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN aka_title at ON at.movie_id = t.id LEFT JOIN comp_cast_type cct ON cct.id = t.kind_id LEFT JOIN movie_link ml ON ml.movie_id = t.id LEFT JOIN cast_info ci ON ci.movie_id = t.id WHERE t.production_year BETWEEN 1990 AND 2000 AND (cct.kind = 'cast' OR cct.kind IS NULL) AND (mi.info::NUMERIC > 5 OR mi.info IS NULL) AND mc.movie_id IN ('27126', '18504', '29107', '9067', '19664') AND mc.id IN ('2907', '3863', '4319') AND (at.title LIKE 'äÎÅ×ÎÉË ÕÂÉÊÃÙ' OR at.title IS NULL) AND (mi.note LIKE '%(only a few lines)%' OR mi.note IS NULL) GROUP BY t.kind_id;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, MIN(n.name) AS first_actor_name, MAX(n.name) AS last_actor_name, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_actors, COUNT(DISTINCT cc.id) AS number_of_complete_casts, COUNT(DISTINCT cct.id) AS number_of_different_cast_types FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id LEFT JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id WHERE ci.role_id = (SELECT id FROM comp_cast_type WHERE kind = 'actor') AND (ci.note LIKE '%(voice)%' OR ci.note NOT LIKE '%(archive footage)%') GROUP BY ci.movie_id HAVING COUNT(DISTINCT ci.person_id) > 1;
SELECT AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT ci.movie_id) AS count_movies, COUNT(DISTINCT ci.person_id) AS count_actors, SUM(CASE WHEN ct.kind = 'producer' THEN 1 ELSE 0 END) AS count_producer_companies, SUM(CASE WHEN ct.kind = 'distributor' THEN 1 ELSE 0 END) AS count_distributor_companies, COUNT(DISTINCT mk.keyword_id) AS count_unique_keywords FROM movie_info_idx mi_idx JOIN cast_info ci ON mi_idx.movie_id = ci.movie_id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_type ct ON ct.id = ci.role_id WHERE mi_idx.info_type_id = 1 AND ci.person_role_id IS NOT NULL AND ct.id IN (1, 4, 2) GROUP BY ct.kind;
SELECT rt.role AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mi.info::numeric) AS average_movie_rating, SUM(CASE WHEN k.keyword IN ('drug-abuser', 'obesity') THEN 1 ELSE 0 END) AS count_unhealthy_keywords, COUNT(DISTINCT mi.movie_id) AS number_of_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_info mi ON ci.movie_id = mi.movie_id AND mi.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) JOIN keyword k ON mi.movie_id = ANY ( SELECT movie_id FROM movie_info WHERE info = k.keyword ) GROUP BY rt.role HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY average_movie_rating DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS roles_with_person_role, COUNT(DISTINCT ci.person_id) AS distinct_actors_count FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN company_type ct ON cct.id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT an.id) AS number_of_aka_names, AVG(cn.imdb_id) AS average_char_imdb_id, SUM(CASE WHEN lt.id IN (5, 7) THEN 1 ELSE 0 END) AS count_link_type_5_or_7 FROM aka_name an JOIN char_name cn ON an.person_id = cn.id JOIN company_type ct ON ct.kind LIKE '%companies' JOIN link_type lt ON lt.id = an.id % 10 WHERE an.person_id = 2704491 AND an.name IN ('Allaudin', 'McKean, Scott', 'Alles, J.') AND cn.id IN ('99259', '3288', '99679', '23104', '45337') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND lt.id IN (12, 17, 9, 8, 5, 7) GROUP BY ct.kind;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT p.person_id) AS total_persons_involved, COUNT(DISTINCT c.company_id) AS total_companies_involved, SUM(CASE WHEN k.keyword = 'sherlock-holmes' THEN 1 ELSE 0 END) AS sherlock_holmes_keyword_count, MAX(t.production_year) AS latest_movie_year, MIN(t.production_year) AS oldest_movie_year FROM title AS t JOIN movie_companies AS c ON t.id = c.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN keyword AS k ON k.id = ANY(ARRAY[4287, 1968]) JOIN person_info AS p ON p.info_type_id = ANY(ARRAY[34, 28, 32, 33]) JOIN link_type AS lt ON lt.id = ANY(ARRAY[4821, 4781, 1175]) AND lt.link IN ('spoofs', 'featured in', 'edited from') WHERE t.kind_id != 0 GROUP BY t.kind_id;
SELECT kt.kind AS movie_type, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS movie_count, SUM(mi.info::integer) AS total_info_numeric, COUNT(DISTINCT c.person_id) AS unique_actors_count FROM aka_title a JOIN kind_type kt ON a.kind_id = kt.id JOIN movie_info_idx mi ON a.movie_id = mi.movie_id JOIN movie_keyword mk ON a.movie_id = mk.movie_id JOIN cast_info c ON a.movie_id = c.movie_id WHERE a.production_year BETWEEN 1990 AND 2000 AND mk.keyword_id IN (780, 3464, 2349, 1994, 1285, 705) AND mi.movie_id IN (13634, 18372, 13503, 18944, 19411, 8878) AND mi.info SIMILAR TO '[0-9]+' AND c.role_id = 1 GROUP BY kt.kind ORDER BY movie_count DESC;
SELECT COUNT(DISTINCT cn.id) AS total_companies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN lt.id = '12' THEN 1 ELSE 0 END) AS count_type_12_links, COUNT(DISTINCT t.id) AS total_titles, COUNT(DISTINCT mi_idx.info) AS total_unique_info FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN title t ON mc.movie_id = t.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id WHERE cn.country_code = 'US' AND t.production_year BETWEEN 1990 AND 2000 AND mc.note IS NOT NULL AND (lt.id = '15' OR lt.id = '12') GROUP BY cn.country_code, t.production_year ORDER BY average_production_year DESC;
SELECT MIN(n.name) AS actor_name, AVG(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') THEN mi.info::FLOAT ELSE NULL END) AS average_movie_length, COUNT(DISTINCT k.id) AS unique_keywords_count, SUM(CASE WHEN ct.id = '1' THEN 1 ELSE 0 END) AS production_company_movies, SUM(CASE WHEN ct.id = '2' THEN 1 ELSE 0 END) AS distributor_movies, COUNT(DISTINCT a_t.id) AS total_movies_count FROM name AS n JOIN aka_name AS an ON n.id = an.person_id JOIN movie_info AS mi ON mi.movie_id = an.id JOIN movie_keyword AS mk ON mk.movie_id = an.id JOIN keyword AS k ON k.id = mk.keyword_id JOIN aka_title AS a_t ON a_t.movie_id = an.id JOIN movie_companies AS mc ON mc.movie_id = an.id JOIN company_type AS ct ON ct.id = mc.company_type_id WHERE n.name_pcode_nf = 'J4163' AND ct.id IN ('1', '2', '3', '4') GROUP BY n.id;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_order, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels_linked, SUM(CASE WHEN ml.link_type_id = 4 THEN 1 ELSE 0 END) AS total_sequels_linked, cn.name AS company_name, COUNT(DISTINCT cn.country_code) AS number_of_country_codes FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN title t ON ci.movie_id = t.id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN company_name cn ON t.id = cn.imdb_id WHERE rt.id IN (1, 4) AND ci.nr_order <= 20 AND cn.name IN ('RQB Group', 'HKK Film Company', 'Digital Media Production House', 'Film i Jönköpings län') GROUP BY rt.ROLE, cn.name ORDER BY rt.ROLE, cn.name;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies FROM movie_companies AS mc INNER JOIN company_type AS ct ON mc.company_type_id = ct.id INNER JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.note IS DISTINCT FROM '1' GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY average_rating DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS num_movies, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies, AVG(kw.keyword_count) AS avg_keywords_per_movie, SUM(case when ct.kind LIKE '%Ltd%' THEN 1 ELSE 0 END) AS num_ltd_companies, SUM(case when ct.kind LIKE '%Inc%' THEN 1 ELSE 0 END) AS num_inc_companies FROM movie_link AS ml INNER JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id ) AS kw ON ml.movie_id = kw.movie_id LEFT JOIN ( SELECT mc.movie_id, ct.kind FROM movie_companies AS mc INNER JOIN company_type AS ct ON mc.company_type_id = ct.id ) AS ct ON ml.movie_id = ct.movie_id GROUP BY lt.LINK ORDER BY num_movies DESC, avg_keywords_per_movie DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(ml.movie_id) AS average_movie_id, MIN(cn.name) AS character_name_with_min_id, MAX(an.name) AS aka_name_with_max_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN char_name AS cn ON cn.id = ml.movie_id AND cn.surname_pcode = 'E2146' LEFT JOIN aka_name AS an ON an.id = ml.linked_movie_id AND an.md5sum = '7df6a930bde6eff675fae9eecfb9ff7e' GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_movies_with_complete_cast, MAX(pi.note) AS most_recent_person_note FROM aka_title ak JOIN movie_info mi ON ak.movie_id = mi.movie_id JOIN movie_keyword mk ON ak.movie_id = mk.movie_id JOIN company_name cn ON cn.country_code NOT IN ('[pl]') LEFT JOIN complete_cast cc ON ak.movie_id = cc.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id WHERE mi.info_type_id = '4' AND (pi.note IN ('Be Free Films', 'Autor', 'Fan Club President', 'Nick van de Wall', 'hwatson4964@excite.com', 'Anon.') OR pi.note IS NULL) AND ak.title IN ('DR-Dokumentar: 28. maj', 'I Want to Rob Jeff Goldblum') GROUP BY ak.kind_id ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT cn.id) AS number_of_characters, SUM(CASE WHEN mi_idx.info_type_id = '100' THEN 1 ELSE 0 END) AS count_of_type_100_info, SUM(CASE WHEN mi_idx.info_type_id = '101' THEN 1 ELSE 0 END) AS count_of_type_101_info FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN char_name cn ON ci.person_id = cn.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE ci.person_id IN ('1761', '1644', '1317', '1004') AND cn.name_pcode_nf IN ('W4126', 'D563', 'P3632') AND kt.id IN ('7', '3', '5') AND mi_idx.info_type_id IN ('100', '101') GROUP BY kt.kind;
SELECT AVG(title.production_year) AS average_production_year, SUM(CASE WHEN aka_title.production_year >= 2000 THEN 1 ELSE 0 END) AS titles_since_2000, COUNT(DISTINCT aka_name.person_id) AS unique_person_count, info_type.info AS info_type_description, COUNT(aka_title.id) AS aka_title_count FROM title LEFT JOIN aka_title ON title.id = aka_title.movie_id LEFT JOIN aka_name ON aka_name.person_id = title.id INNER JOIN info_type ON info_type.id = aka_title.kind_id WHERE title.production_year IS NOT NULL AND aka_title.md5sum IN ('d83332e937d61be7b06ae03d69ea3b48', 'f94e5c713cf9f2c4161c7ab6131590db') AND aka_name.name_pcode_nf IN ('J5264', 'M5262') AND info_type.info IN ('LD color rendition', 'copyright holder', 'opening weekend', 'LD video quality', 'plot') GROUP BY info_type.info ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT akat.movie_id) AS total_movies FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id LEFT JOIN movie_companies AS mc ON akat.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN movie_keyword AS mk ON akat.movie_id = mk.movie_id WHERE akat.production_year IS NOT NULL AND mk.keyword_id = 2464 GROUP BY kt.kind ORDER BY average_production_year DESC, total_us_companies DESC;
SELECT it.info AS info_type, COUNT(DISTINCT cn.id) AS unique_character_names, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS count_complete_status, SUM(CASE WHEN cc.status_id = '3' THEN 1 ELSE 0 END) AS count_incomplete_status, COUNT(DISTINCT lt.id) AS count_link_types FROM char_name AS cn JOIN complete_cast AS cc ON cn.id = cc.movie_id JOIN info_type AS it ON it.id = cn.imdb_index::integer JOIN link_type AS lt ON lt.id = cn.surname_pcode::integer WHERE cn.imdb_index IN ('10', '21') AND lt.id IN (13, 8, 5, 18) AND cc.status_id IN ('4', '3') GROUP BY it.info;
SELECT rt.role, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.person_count) AS avg_people_per_role FROM ( SELECT c.movie_id, c.role_id, COUNT(c.person_id) AS person_count FROM cast_info AS c INNER JOIN movie_companies AS mc ON c.movie_id = mc.movie_id WHERE (mc.note LIKE '%(USA) (TV)%' OR mc.note LIKE '%(USA) (DVD)%') GROUP BY c.movie_id, c.role_id ) AS ci INNER JOIN role_type AS rt ON ci.role_id = rt.id GROUP BY rt.role ORDER BY total_movies DESC, avg_people_per_role DESC;
SELECT kt.kind as movie_kind, AVG(t.production_year) as average_production_year, COUNT(DISTINCT t.id) as total_movies, SUM(CASE WHEN at.title IS NOT NULL THEN 1 ELSE 0 END) as total_aka_titles, COUNT(DISTINCT mi_idx.movie_id) as movies_with_info, AVG(CASE WHEN mi_idx.info ~ E'^\\d+(\\.\\d+)?$' THEN CAST(mi_idx.info AS FLOAT) ELSE NULL END) as average_numeric_info FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN k.keyword = 'award' THEN 1 ELSE 0 END) AS total_award_keywords, SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_order_info FROM aka_title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_keyword AS mk ON t.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON t.movie_id = ci.movie_id WHERE kt.kind IN ('tv mini series', 'video movie', 'episode', 'tv movie') AND (k.phonetic_code = 'F3654' OR k.phonetic_code = 'E2135') AND t.season_nr IN (36, 9, 28, 2, 16, 3) AND NOT EXISTS ( SELECT 1 FROM movie_companies AS mc WHERE mc.movie_id = t.movie_id AND mc.note LIKE '%(USA)%' ) GROUP BY kt.kind ORDER BY total_titles DESC, average_production_year DESC;
