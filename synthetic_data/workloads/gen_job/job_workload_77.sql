SELECT ct.kind AS company_kind, it.info AS info_category, AVG(t.production_year) AS average_production_year, COUNT(t.id) AS total_titles, SUM(CASE WHEN p.info = 'Adams, Terry Wayne' THEN 1 ELSE 0 END) AS count_terry_wayne_adams_mentions, SUM(CASE WHEN p.info = '14 March 1879' THEN 1 ELSE 0 END) AS count_14_march_1879_mentions FROM title AS t JOIN company_type AS ct ON t.kind_id = ct.id JOIN person_info AS p ON p.info_type_id = ct.id JOIN info_type AS it ON p.info_type_id = it.id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY ct.kind, it.info HAVING COUNT(t.id) > 10;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN t.kind_id = 3 THEN 1 ELSE 0 END) AS number_of_distributors_titles, SUM(CASE WHEN t.kind_id = 4 THEN 1 ELSE 0 END) AS number_of_special_effects_titles FROM title AS t JOIN company_type AS ct ON t.kind_id = ct.id GROUP BY ct.kind HAVING COUNT(DISTINCT t.id) > 0 ORDER BY number_of_titles DESC;
SELECT akn.surname_pcode, COUNT(DISTINCT akn.person_id) AS number_of_people_with_surname, AVG(cast_tbl.status_id) AS average_status_id, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS total_movies_with_keywords, COUNT(DISTINCT mk.movie_id) AS unique_movie_count FROM aka_name akn LEFT JOIN complete_cast cast_tbl ON akn.person_id = cast_tbl.subject_id LEFT JOIN movie_keyword mk ON cast_tbl.movie_id = mk.movie_id WHERE cast_tbl.status_id = 4 AND akn.surname_pcode IN ('P245', 'F25', 'A126', 'F6') GROUP BY akn.surname_pcode ORDER BY number_of_people_with_surname DESC;
SELECT cn.name AS company_name, cn.country_code AS company_country, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS numeric)) FILTER (WHERE it.info = 'rating') AS average_movie_rating, SUM(CAST(mi.info AS numeric)) FILTER (WHERE it.info = 'budget') AS total_budget, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_info mi JOIN company_name cn ON cn.imdb_id = mi.movie_id JOIN keyword k ON k.id = mi.info_type_id JOIN movie_info it ON it.id = mi.info_type_id AND it.info IN ('rating', 'budget') WHERE cn.name IN ('Comedy Central', 'Odd Lot International', '20th Television') AND k.id IN ('7281', '7278', '9681', '1373', '9407', '1515') GROUP BY cn.name, cn.country_code ORDER BY total_movies DESC, average_movie_rating DESC;
SELECT n.gender, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ci.movie_id) AS movies_participated, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN kt.kind = 'movie' THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN kt.kind = 'tv' THEN 1 ELSE 0 END) AS total_tv_shows, MAX(ci.nr_order) AS highest_cast_position, MIN(ci.nr_order) AS lowest_cast_position FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN kind_type kt ON mc.company_type_id = kt.id JOIN name n ON ci.person_id = n.id WHERE ci.note NOT LIKE '%archive footage%' AND n.gender = 'm' GROUP BY n.gender;
SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(COUNT(ci.person_id)) OVER (PARTITION BY ci.movie_id) AS avg_roles_per_movie, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(COUNT(mc.company_id)) OVER (PARTITION BY ci.movie_id) AS avg_companies_per_movie, COUNT(DISTINCT pi.info) AS total_ratings, AVG(CAST(pi.info AS NUMERIC)) AS average_rating FROM cast_info ci JOIN movie_link ml ON ci.movie_id = ml.movie_id OR ci.movie_id = ml.linked_movie_id JOIN person_info pi ON ci.person_id = pi.person_id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id WHERE ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('sequel', 'prequel')) AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY ci.movie_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.person_id) AS total_unique_actors, AVG(CAST(t.production_year AS DECIMAL)) AS average_production_year, AVG(CAST(sub.nr_roles AS DECIMAL)) AS average_roles_per_movie FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN ( SELECT movie_id, COUNT(*) AS nr_roles FROM cast_info GROUP BY movie_id ) sub ON t.id = sub.movie_id LEFT JOIN cast_info ci ON t.id = ci.movie_id WHERE t.production_year IS NOT NULL AND t.id IN ('19580', '17102', '17123', '10072') GROUP BY kt.kind;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies, SUM(CASE WHEN lt.link LIKE '%remake of%' THEN 1 ELSE 0 END) AS total_remake_movies, COUNT(DISTINCT pi.person_id) AS number_of_persons_with_info, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles FROM title AS t LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN person_info AS pi ON pi.info IN ('Sand Springs, Oklahoma, USA', 'Wilmington, Delaware, USA', '29 January 1982') LEFT JOIN role_type AS rt ON rt.role IN ('editor', 'composer', 'actress') LEFT JOIN link_type AS lt ON lt.link IN ('remake of', 'spin off from', 'spoofs') WHERE t.production_year > 2000 AND mc.company_type_id = '1' AND (lt.id IN ('5', '2', '1', '15', '17') OR lt.id IS NULL) GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT ct.kind AS cast_type, lt.LINK AS link_type, avg(at.production_year) AS average_production_year, count(distinct at.movie_id) AS number_of_movies, sum(CASE WHEN co.kind = 'distributors' THEN 1 ELSE 0 END) AS number_of_distributors, sum(CASE WHEN co.kind = 'production companies' THEN 1 ELSE 0 END) AS number_of_production_companies, sum(CASE WHEN co.kind = 'special effects companies' THEN 1 ELSE 0 END) AS number_of_special_effects_companies FROM comp_cast_type AS ct JOIN aka_title AS at ON ct.id = at.kind_id JOIN company_type AS co ON at.kind_id = co.id JOIN link_type AS lt ON at.id = lt.id WHERE ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND lt.id IN ('13', '3', '5', '1', '10', '15') AND at.phonetic_code IN ('K4236', 'P2163', 'B5326') AND at.kind_id IN ('3', '2', '1', '4') GROUP BY ct.kind, lt.LINK;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_individuals_involved, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN lt.link = 'references' THEN 1 ELSE 0 END) AS total_references, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id JOIN keyword AS k ON mi_idx.info_type_id = k.id JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN cast_info AS ci ON ml.movie_id = ci.movie_id WHERE ml.link_type_id IN (4, 2, 13, 1, 11, 9) AND lt.link IN ('unknown link', 'references') AND mi_idx.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating') AND kt.id IN (SELECT id FROM kind_type WHERE kind LIKE '%movie%') AND ci.note IN ('(producer)', '(executive producer)') GROUP BY kt.kind;
SELECT cct.kind AS cast_type, COUNT(DISTINCT mi.movie_id) AS total_movies, COUNT(DISTINCT k.id) AS total_keywords, AVG(COUNT(k.id)) OVER (PARTITION BY cct.kind) AS avg_keywords_per_movie FROM comp_cast_type AS cct JOIN movie_info_idx AS mi ON cct.id = mi.info_type_id JOIN keyword AS k ON mi.movie_id = k.id WHERE cct.kind IN ('complete', 'complete+verified') GROUP BY cct.kind;
SELECT COUNT(DISTINCT an.person_id) AS number_of_persons, COUNT(k.id) AS total_keyword_mentions FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN aka_name AS an ON mk.movie_id = an.person_id WHERE k.keyword IN ('money-tree', 'reference-to-moby-dick', 'camp', 'summons') GROUP BY an.person_id;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT a.movie_id) AS number_of_movies, SUM(CASE WHEN cct.kind = 'actor' THEN 1 ELSE 0 END) AS total_actors, MAX(mic.info) AS max_movie_info FROM aka_title AS a INNER JOIN complete_cast AS cc ON a.movie_id = cc.movie_id INNER JOIN comp_cast_type AS cct ON cc.subject_id = cct.id INNER JOIN movie_companies AS mc ON a.movie_id = mc.movie_id INNER JOIN movie_info_idx AS mic ON a.movie_id = mic.movie_id WHERE a.production_year > 2000 AND mc.company_id IN (910, 1073) AND mic.info_type_id IN (100, 99) AND (a.season_nr IS NULL OR a.season_nr = 27) AND a.kind_id = 1 GROUP BY a.kind_id HAVING COUNT(DISTINCT a.movie_id) > 10;
