SELECT ct.kind AS cast_type, lt.LINK AS link_type, avg(at.production_year) AS average_production_year, count(distinct at.movie_id) AS number_of_movies, sum(CASE WHEN co.kind = 'distributors' THEN 1 ELSE 0 END) AS number_of_distributors, sum(CASE WHEN co.kind = 'production companies' THEN 1 ELSE 0 END) AS number_of_production_companies, sum(CASE WHEN co.kind = 'special effects companies' THEN 1 ELSE 0 END) AS number_of_special_effects_companies FROM comp_cast_type AS ct JOIN aka_title AS at ON ct.id = at.kind_id JOIN company_type AS co ON at.kind_id = co.id JOIN link_type AS lt ON at.id = lt.id WHERE ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND lt.id IN ('13', '3', '5', '1', '10', '15') AND at.phonetic_code IN ('K4236', 'P2163', 'B5326') AND at.kind_id IN ('3', '2', '1', '4') GROUP BY ct.kind, lt.LINK;
SELECT AVG(ak.title_count) AS average_title_count, MAX(ak.max_production_year) AS latest_production_year, MIN(ak.min_production_year) AS earliest_production_year, SUM(ak.title_count) AS total_titles, COUNT(DISTINCT ki.id) AS total_unique_keywords, COUNT(DISTINCT pi.person_id) AS total_unique_persons FROM (SELECT at.movie_id, COUNT(at.id) AS title_count, MAX(at.production_year) AS max_production_year, MIN(at.production_year) AS min_production_year FROM aka_title at GROUP BY at.movie_id ) ak LEFT JOIN movie_keyword mk ON mk.movie_id = ak.movie_id LEFT JOIN keyword ki ON ki.id = mk.keyword_id AND ki.keyword IN ('vampire-hunter', 'training', 'newspaper-editor', 'multiple-views', 'historical-fiction', 'forbidden-love') LEFT JOIN movie_info_idx mi ON mi.movie_id = ak.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id GROUP BY ki.keyword;
SELECT rt.ROLE AS role_type, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ci.movie_id) AS movies_count, MIN(t.title) AS earliest_movie_title, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies_count FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN title AS t ON ci.movie_id = t.id JOIN company_name AS cn ON cn.imdb_id = t.imdb_id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY rt.ROLE ORDER BY movies_count DESC, unique_actors DESC;
SELECT rt.role, COUNT(DISTINCT cn.id) AS num_characters, COUNT(DISTINCT cc.movie_id) AS num_movies, AVG(mi.info::numeric) AS average_rating, SUM(CASE WHEN mk.keyword_id = 4215 THEN 1 ELSE 0 END) AS count_keyword_4215, SUM(CASE WHEN mk.keyword_id = 3983 THEN 1 ELSE 0 END) AS count_keyword_3983 FROM role_type rt LEFT JOIN char_name cn ON rt.id = cn.id LEFT JOIN complete_cast cc ON cn.id = cc.subject_id LEFT JOIN movie_info mi ON cc.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM movie_info WHERE info = 'rating') LEFT JOIN movie_keyword mk ON cc.movie_id = mk.movie_id WHERE rt.role IN ('actress', 'producer') AND mi.movie_id IN ('925429', '925019') GROUP BY rt.role;
SELECT mc.company_id, mc.company_type_id, COUNT(mc.movie_id) AS total_movies, AVG(at.production_year) AS avg_production_year, SUM(k.id) AS total_keyword_id_sum FROM movie_companies mc JOIN aka_title at ON mc.movie_id = at.movie_id LEFT JOIN keyword k ON at.id = k.id WHERE mc.movie_id IN (19080, 25456, 14762, 19670, 32217, 10568) GROUP BY mc.company_id, mc.company_type_id ORDER BY total_movies DESC, avg_production_year DESC;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(ml.movie_id) AS average_movie_id, SUM(CASE WHEN pi.info_type_id = 7 THEN 1 ELSE 0 END) AS count_info_with_type_7, MAX(pi.note) AS latest_note FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.movie_id) AS total_unique_movies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_regular_movies, SUM(CASE WHEN at.kind_id > 1 THEN 1 ELSE 0 END) AS total_special_movies, COUNT(DISTINCT cn.id) AS total_unique_characters, MAX(pi.info) AS most_recent_person_info FROM aka_title AS at JOIN movie_info AS mi ON at.movie_id = mi.movie_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN char_name AS cn ON cn.id = cc.subject_id JOIN person_info AS pi ON pi.person_id = cn.id WHERE at.phonetic_code = 'D35' AND at.imdb_index IN ('III', 'IV', 'I', 'II') AND pi.id IN ('1502', '3072', '4836') AND pi.person_id IN ('2127', '823', '3169', '4061999') AND mi.movie_id IN ('927236', '926899', '924318') AND mi.note IN ('(only a few lines)', '(interviews)') AND EXISTS ( SELECT 1 FROM link_type AS lt WHERE lt.id IN ('14', '10') AND lt.link = 'unknown link' ) GROUP BY at.kind_id;
SELECT at.title AS alternate_title, COUNT(DISTINCT an.id) AS number_of_alternate_names, AVG(CAST(cc.status_id AS DECIMAL)) AS average_status_id, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS female_count, COUNT(DISTINCT cc.id) AS complete_cast_count, MIN(at.production_year) AS earliest_production_year, MAX(at.production_year) AS latest_production_year FROM aka_title at JOIN aka_name an ON at.movie_id = an.person_id JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN name n ON an.person_id = n.id WHERE cc.subject_id = 1 AND cc.status_id IN (3, 4) AND n.gender = 'm' AND n.imdb_index IN ('V', 'VI', 'II') AND an.md5sum = 'f20a817147ce1df99c8e3b5614dbee2f' AND at.season_nr IN (28, 2, 5, 14, 37, 9) AND at.movie_id IN (1701837, 1248358, 1697981, 1674394, 1633043) GROUP BY at.title;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(t.episode_nr) AS total_episodes, k.keyword, gender FROM name AS n JOIN title AS t ON t.id = n.id JOIN keyword AS k ON k.id = t.id WHERE n.gender = 'm' AND t.production_year BETWEEN 1990 AND 2020 AND k.keyword IN ('string-of-beads', 'atm-card', 'based-on-sketch-comedy', 'skeleton-in-a-closet', 'rugged-terrain', 'reference-to-zorro') GROUP BY k.keyword, n.gender ORDER BY total_actors DESC, average_production_year DESC;
SELECT rt.ROLE, COUNT(DISTINCT ml.movie_id) AS num_movies, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT k.id) AS num_keywords FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN char_name cn ON ci.person_role_id = cn.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id GROUP BY rt.ROLE ORDER BY num_movies DESC, avg_imdb_id DESC;
SELECT cn.country_code, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, SUM(cc.subject_id) AS total_subjects, AVG(cc.status_id) AS average_status_id FROM movie_link AS ml JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN company_name AS cn ON ml.movie_id = cn.imdb_id WHERE ml.movie_id IN (16753, 14650) GROUP BY cn.country_code ORDER BY total_movies DESC;
SELECT it.info AS cast_completeness, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(ci.person_count) AS average_roles_per_person FROM (SELECT movie_id, COUNT(DISTINCT person_id) AS person_count FROM cast_info GROUP BY movie_id) ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN info_type it ON cc.status_id = it.id GROUP BY it.info;
SELECT CN.name AS company_name, COUNT(DISTINCT AN.id) AS total_aliases, AVG(AT.production_year) AS average_production_year, SUM(CASE WHEN N.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN N.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name CN JOIN aka_title AT ON CN.id = AT.movie_id JOIN aka_name AN ON AN.person_id = AT.movie_id JOIN name N ON N.id = AN.person_id WHERE CN.country_code = 'US' AND AT.production_year >= 2000 AND N.gender IN ('M', 'F') GROUP BY CN.name;
SELECT rt.ROLE, COUNT(ci.id) AS total_roles, AVG(ci.nr_order) AS average_order, MIN(ci.nr_order) AS min_order, MAX(ci.nr_order) AS max_order, COUNT(DISTINCT ci.person_id) AS unique_actors FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.person_role_id IS NOT NULL AND pi.info_type_id = 3 GROUP BY rt.ROLE ORDER BY total_roles DESC;
