SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, AVG(aka_count.aka_name_count) AS average_aka_names_per_movie_kind FROM kind_type kt JOIN movie_info_idx t ON kt.id = t.info_type_id JOIN movie_companies mc ON t.movie_id = mc.movie_id LEFT JOIN ( SELECT an.person_id, COUNT(*) as aka_name_count FROM aka_name an GROUP BY an.person_id ) aka_count ON mc.movie_id = aka_count.person_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_males, COUNT(DISTINCT ml.movie_id) AS unique_movies_linked FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN name AS n ON ml.linked_movie_id = n.id WHERE lt.LINK IN ('features', 'featured in', 'spin off from', 'follows', 'followed by') AND ml.linked_movie_id IN (2362378, 227254, 1337065, 1230549) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT ct.kind AS company_kind, rt.ROLE AS role_description, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.LINK = 'follows' THEN 1 ELSE 0 END) AS total_follows_links FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN company_name cn ON ci.movie_id = cn.id JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON cn.id = lt.id WHERE ci.person_role_id IS NOT NULL AND cn.country_code = 'US' AND rt.ROLE IN ('actor', 'actress', 'producer', 'director') AND lt.LINK IN ('remade as', 'version of', 'spin off from', 'follows') GROUP BY ct.kind, rt.ROLE ORDER BY number_of_people DESC, average_cast_order;
SELECT cc.kind AS cast_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT cn.id) AS number_of_companies, lt.link AS link_type, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN comp_cast_type cc ON ci.role_id = cc.id JOIN complete_cast c ON ci.movie_id = c.movie_id JOIN company_name cn ON cn.country_code LIKE 'US%' JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id WHERE cc.kind IN ('complete+verified', 'complete', 'cast') AND lt.link IN ('spoofs', 'spoofed in', 'follows', 'edited into', 'referenced in') GROUP BY cc.kind, lt.link ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT cc.movie_id, COUNT(DISTINCT chn.id) AS number_of_characters, COUNT(DISTINCT cn.id) AS number_of_companies_involved, AVG(cn.country_code::int) AS average_country_code_numeric, SUM(CASE WHEN cn.name = 'Circuit Films' THEN 1 ELSE 0 END) AS count_circuit_films, SUM(CASE WHEN cn.name = 'Wild East Productions' THEN 1 ELSE 0 END) AS count_wild_east_productions, SUM(CASE WHEN cn.name = 'LÃ©o & Compagnie' THEN 1 ELSE 0 END) AS count_leo_and_compagnie, SUM(CASE WHEN cn.name = 'C3Studios' THEN 1 ELSE 0 END) AS count_c3studios, SUM(CASE WHEN cn.name = 'M.A. Marcondes' THEN 1 ELSE 0 END) AS count_ma_marcondes FROM complete_cast cc JOIN char_name chn ON cc.subject_id = chn.id JOIN company_name cn ON cc.movie_id = cn.imdb_id GROUP BY cc.movie_id;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE k.keyword IN ('graffiti', 'goblet') AND n.name LIKE '%a%' GROUP BY cct.kind ORDER BY total_actors DESC;
SELECT rt.ROLE, AVG(nk.count_keywords) AS average_keywords, COUNT(DISTINCT at.movie_id) AS number_of_movies, SUM(CASE WHEN at.production_year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS movies_2000_to_2010, COUNT(DISTINCT n.id) AS number_of_names FROM role_type rt LEFT JOIN aka_title at ON rt.id = at.kind_id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS count_keywords FROM movie_keyword mk GROUP BY mk.movie_id ) nk ON nk.movie_id = at.movie_id LEFT JOIN name n ON n.id = at.movie_id WHERE rt.id IN (6, 7, 8) GROUP BY rt.ROLE ORDER BY average_keywords DESC;
SELECT AVG(ml.link_type_id) AS average_link_type, COUNT(DISTINCT cn.id) AS total_unique_characters, SUM(CASE WHEN mi.info_type_id = 2 THEN 1 ELSE 0 END) AS total_drama_movies, MIN(cn.name) AS first_character_name FROM char_name cn JOIN movie_link ml ON cn.imdb_id = ml.movie_id JOIN movie_info mi ON ml.movie_id = mi.movie_id WHERE cn.imdb_index = 'tt' AND mi.info LIKE '%Drama%' GROUP BY cn.imdb_id HAVING COUNT(DISTINCT ml.id) > 3;
SELECT kt.kind AS movie_genre, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS total_production_companies, COUNT(DISTINCT n.id) AS total_unique_actors FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id WHERE t.production_year > 1990 AND mc.movie_id IN ('9013', '18754', '19628', '12173') AND mc.id IN ('2363', '1293', '1757', '2957') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN pi.info LIKE '%Oscar%' THEN 1 ELSE 0 END) AS total_oscars_won FROM cast_info ci INNER JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') WHERE n.imdb_index IN ('XXIII', 'XV', 'IX', 'XI') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.note NOT IN ('carlosprimati@uol.com.br', 'E.A.', 'IMDb Editors') GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY total_oscars_won DESC, average_movie_rating DESC, total_movies DESC, actor_name;
SELECT rt.role AS role_type, COUNT(ml.movie_id) AS number_of_movies, AVG(it.id) AS average_info_type_id, SUM(CASE WHEN ml.link_type_id = 8 THEN 1 ELSE 0 END) AS count_link_type_8, SUM(CASE WHEN ml.link_type_id = 11 THEN 1 ELSE 0 END) AS count_link_type_11, SUM(CASE WHEN ml.link_type_id = 3 THEN 1 ELSE 0 END) AS count_link_type_3 FROM movie_link AS ml JOIN role_type AS rt ON rt.id = ml.link_type_id JOIN info_type AS it ON it.id = ml.link_type_id GROUP BY rt.role ORDER BY number_of_movies DESC, average_info_type_id DESC;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT kt.kind AS movie_kind, AVG(mi_idx.info::numeric) AS average_rank, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cct.id) AS number_of_company_types, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS count_of_editor_roles FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON kt.id = mi_idx.info_type_id JOIN movie_companies AS mc ON mc.movie_id = mi_idx.movie_id JOIN comp_cast_type AS cct ON cct.id = mc.company_type_id JOIN role_type AS rt ON rt.id = cct.id WHERE mi_idx.info_type_id IN ('12', '4', '6', '7', '10') AND mc.company_type_id IN ('2', '1', '4', '3') AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note LIKE '%(co-production)%' GROUP BY kt.kind ORDER BY average_rank DESC;
SELECT kt.kind AS genre, COUNT(DISTINCT t.id) AS total_movies, ROUND(AVG(t.production_year)) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS total_keywords FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CASE WHEN kt.kind = 'movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_movies, AVG(CASE WHEN kt.kind = 'tv movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_movies, AVG(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_mini_series, AVG(CASE WHEN kt.kind = 'episode' THEN 1 ELSE 0 END) * 100.0 AS percentage_episodes FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN kind_type AS kt ON mc.movie_id = kt.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND cn.country_code IS NOT NULL AND ct.kind <> 'production companies' AND t.kind_id NOT IN (SELECT id FROM comp_cast_type WHERE kind = 'tv series') GROUP BY cn.country_code, ct.kind ORDER BY average_rating DESC, total_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT n.id) AS number_of_people, AVG(n.imdb_id) AS average_imdb_id, COUNT(DISTINCT it.id) AS number_of_info_types FROM role_type rt JOIN name n ON n.id = rt.id JOIN info_type it ON it.id = rt.id WHERE n.gender = 'm' AND it.info IN ('LD analog right', 'LD quality of source', 'votes', 'mpaa') GROUP BY rt.ROLE ORDER BY number_of_people DESC, average_imdb_id;
SELECT kt.kind, AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS total_votes, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT p.id) AS number_of_people_involved FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies mc ON t.id = mc.movie_id JOIN person_info p ON p.info_type_id = mi_idx.info_type_id WHERE kt.kind = 'movie' AND t.production_year BETWEEN 2000 AND 2010 AND mi_idx.info_type_id IN (1, 3) GROUP BY kt.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE it.info = 'rating') AS average_rating FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id WHERE it.info = 'rating' AND mi.info ~ '^[0-9]+(\.[0-9]+)?$';
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_unique_characters, SUM(CASE WHEN ct.kind = 'Production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(mc.note) AS longest_note FROM aka_title AS akat JOIN movie_companies AS mc ON akat.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN char_name AS cn ON akat.id = cn.id WHERE akat.production_year BETWEEN 2000 AND 2020 AND ct.kind IN ('Production', 'Distributors', 'Special Effects') GROUP BY ct.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT cct.kind AS cast_type_kind, it.info AS info_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS count_of_movies, SUM(CASE WHEN ml.linked_movie_id IS NOT NULL THEN 1 ELSE 0 END) AS sum_of_linked_movies FROM title t JOIN comp_cast_type cct ON t.kind_id = cct.id JOIN complete_cast cc ON t.id = cc.movie_id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE cc.status_id IN ('3', '4') GROUP BY cct.kind, it.info ORDER BY count_of_movies DESC, sum_of_linked_movies DESC;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(ml.movie_id) AS average_movie_id, SUM(CASE WHEN pi.info_type_id = 7 THEN 1 ELSE 0 END) AS count_info_with_type_7, MAX(pi.note) AS latest_note FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT COUNT(DISTINCT t.id) AS num_movies, AVG(mi_idx.info::numeric) AS avg_movie_info, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS num_movies_imdb_v, SUM(CASE WHEN t.imdb_index = 'I' THEN 1 ELSE 0 END) AS num_movies_imdb_i, SUM(CASE WHEN t.imdb_index = 'II' THEN 1 ELSE 0 END) AS num_movies_imdb_ii, COUNT(DISTINCT ci.person_id) AS num_actors, COUNT(DISTINCT k.id) AS num_keywords FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN keyword AS k ON k.id = ci.role_id WHERE t.production_year >= 2000 AND mi_idx.info_type_id BETWEEN 100 AND 200 GROUP BY t.kind_id ORDER BY num_movies DESC;
SELECT kt.kind, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_complete_status_4, COUNT(DISTINCT pi.person_id) AS unique_persons_with_info FROM kind_type kt LEFT JOIN movie_link ml ON kt.id = ml.link_type_id LEFT JOIN complete_cast cc ON ml.movie_id = cc.movie_id LEFT JOIN cast_info ci ON ml.movie_id = ci.movie_id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ml.movie_id IN (50, 8753, 6613, 11172, 11020, 10583) AND ml.link_type_id IN (4, 13, 9) AND cc.subject_id = 1 AND cc.status_id IN (4, 3) AND pi.note IN ('matt-282', 'K-maf', '2Fun', 'Todd Adelman') AND pi.id IN (4001, 3574) AND ci.person_role_id IN (533, 546, 1445) GROUP BY kt.kind;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT k.id) AS unique_keywords_count, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN title t ON t.production_year IS NOT NULL JOIN movie_keyword mk ON t.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE cn.country_code != 'US' AND k.keyword IN ('high-powered-gun', 'airforce', 'harpoon', 'creek') AND t.kind_id != 1 GROUP BY ct.kind, cn.country_code ORDER BY total_movies DESC;
SELECT cn.country_code, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN mk.id = '4862' THEN 1 ELSE 0 END) AS keyword_4862_count, SUM(CASE WHEN mk.id = '1011' THEN 1 ELSE 0 END) AS keyword_1011_count, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = ci.movie_id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE ci.nr_order IN (2, 58, 40) AND ci.movie_id IN ('2013877', '811916', '1817302', '2485261', '163381') AND ml.movie_id IN ('19640', '12262', '11217', '7766', '14578', '16385') GROUP BY cn.country_code;
SELECT rt.role AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_persons, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mi.info = 'Greek' THEN 1 ELSE 0 END) AS greek_language_movies, SUM(CASE WHEN mi.info = 'Hindi' THEN 1 ELSE 0 END) AS hindi_language_movies, SUM(CASE WHEN mi.info = 'Kyrgyz' THEN 1 ELSE 0 END) AS kyrgyz_language_movies FROM role_type AS rt JOIN cast_info AS ci ON rt.id = ci.role_id JOIN movie_info AS mi ON ci.movie_id = mi.movie_id JOIN movie_info_idx AS mi_idx ON mi.movie_id = mi_idx.movie_id WHERE rt.role = 'writer' AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('languages', 'language')) GROUP BY rt.role;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS distributor_movie_count, COUNT(DISTINCT mk.keyword_id) AS unique_keyword_count, COUNT(DISTINCT ml.linked_movie_id) AS linked_movie_count FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN title AS t ON ci.movie_id = t.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE n.name IN ('Anderson, Abe', 'Anderako, Mark', 'Anagnostopoulos, Ilias') AND mc.company_type_id IN (SELECT id FROM company_type WHERE kind IN ('special effects companies', 'miscellaneous companies', 'distributors')) GROUP BY n.name;
