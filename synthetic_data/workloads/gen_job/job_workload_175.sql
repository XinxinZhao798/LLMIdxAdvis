SELECT cct.kind, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_votes, COUNT(DISTINCT pi.person_id) AS number_of_people, SUM(CASE WHEN pi.info LIKE '%1971%' THEN 1 ELSE 0 END) AS count_people_born_1971, SUM(CASE WHEN pi.info LIKE '%O-chan%' THEN 1 ELSE 0 END) AS count_people_with_Ochan_info FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE cct.kind = 'crew' GROUP BY cct.kind;
SELECT ct.kind as company_type, COUNT(DISTINCT ti.id) as total_titles, AVG(ti.production_year) as average_production_year, SUM(CASE WHEN k.phonetic_code = 'G5641' THEN 1 ELSE 0 END) as count_g5641_keywords, SUM(CASE WHEN k.phonetic_code = 'A61' THEN 1 ELSE 0 END) as count_a61_keywords FROM title ti INNER JOIN movie_info mi ON ti.id = mi.movie_id INNER JOIN info_type it ON mi.info_type_id = it.id INNER JOIN keyword k ON ti.id = k.id INNER JOIN company_type ct ON ct.kind = 'distributors' WHERE it.info IN ('LD quality of source', 'votes distribution', 'LD catalog number', 'locations') AND mi.note IS NOT NULL GROUP BY ct.kind;
SELECT it.info AS info_type, COUNT(*) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.link = 'followed by' THEN 1 ELSE 0 END) AS followed_by_count, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS similar_to_count, SUM(CASE WHEN lt.link = 'unknown link' THEN 1 ELSE 0 END) AS unknown_link_count FROM title t JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN movie_link ml ON t.id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id WHERE t.production_year > 1990 GROUP BY it.info ORDER BY total_titles DESC, average_production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people, AVG(ci.nr_order) AS avg_cast_order, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS num_keywords, count(DISTINCT cc.id) AS num_complete_cast_records FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN name n ON ci.person_id = n.id LEFT JOIN keyword k ON ci.movie_id = k.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE n.surname_pcode IN ('A415', 'A435') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND cn.country_code IS NOT NULL AND ct.kind <> 'production companies' AND t.kind_id NOT IN (SELECT id FROM comp_cast_type WHERE kind = 'tv series') GROUP BY cn.country_code, ct.kind ORDER BY average_rating DESC, total_movies DESC;
SELECT cnt.kind AS company_type, AVG(mc_notes.note_length) AS average_note_length, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mc.movie_id) AS movies_involved, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cnt ON mc.company_type_id = cnt.id LEFT JOIN ( SELECT movie_id, company_id, LENGTH(note) as note_length FROM movie_companies WHERE note IS NOT NULL ) AS mc_notes ON mc.movie_id = mc_notes.movie_id AND mc.company_id = mc_notes.company_id LEFT JOIN ( SELECT name.id, name.gender FROM name WHERE name.gender IN ('F', 'M') ) AS n ON mc.company_id = n.id GROUP BY cnt.kind ORDER BY cnt.kind;
SELECT cn.name AS company_name, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_runtime, SUM(CASE WHEN it.info = 'locations' THEN 1 ELSE 0 END) AS total_locations, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN complete_cast AS cc ON mi_idx.movie_id = cc.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE it.info IN ('runtimes', 'locations') AND cn.name_pcode_nf = 'G2642' GROUP BY cn.name ORDER BY average_runtime DESC, number_of_movies DESC;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified_casts, COUNT(DISTINCT mc.company_id) AS number_of_different_companies_involved FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id JOIN cast_info ci ON akat.movie_id = ci.movie_id JOIN movie_keyword mk ON akat.movie_id = mk.movie_id JOIN comp_cast_type cct ON ci.person_role_id = cct.id JOIN movie_companies mc ON akat.movie_id = mc.movie_id WHERE ci.person_role_id = 1215 AND mk.id = 1952 AND mc.id IN (4224, 2075, 3671, 3125, 1386) GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT at.movie_id) AS num_movies, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT ml.movie_id) AS num_linked_movies, COUNT(DISTINCT cn.id) AS num_companies_involved, SUM(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) AS count_video_movie, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS count_tv_movie FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id LEFT JOIN company_name cn ON cn.id = ANY(ARRAY[68879, 29883]) WHERE kt.id IN (4, 7) AND kt.kind IN ('video movie', 'tv movie') AND ml.linked_movie_id IN (577922, 468657, 898205, 1933962) GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_movies_with_complete_cast, MAX(pi.note) AS most_recent_person_note FROM aka_title ak JOIN movie_info mi ON ak.movie_id = mi.movie_id JOIN movie_keyword mk ON ak.movie_id = mk.movie_id JOIN company_name cn ON cn.country_code NOT IN ('[pl]') LEFT JOIN complete_cast cc ON ak.movie_id = cc.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id WHERE mi.info_type_id = '4' AND (pi.note IN ('Be Free Films', 'Autor', 'Fan Club President', 'Nick van de Wall', 'hwatson4964@excite.com', 'Anon.') OR pi.note IS NULL) AND ak.title IN ('DR-Dokumentar: 28. maj', 'I Want to Rob Jeff Goldblum') GROUP BY ak.kind_id ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_type_1_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN link_type AS lt ON lt.id = cc.status_id WHERE t.production_year BETWEEN 2000 AND 2010 AND mc.company_type_id = 1 AND lt.link = 'similar to' GROUP BY t.kind_id ORDER BY number_of_movies DESC;
