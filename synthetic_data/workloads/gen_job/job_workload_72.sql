SELECT it.info AS info_type, COUNT(DISTINCT pi.person_id) AS total_people, AVG(pi.person_id) AS average_person_id, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN ml.link_type_id = '16' THEN 1 ELSE 0 END) AS count_link_type_16, SUM(CASE WHEN ml.link_type_id = '7' THEN 1 ELSE 0 END) AS count_link_type_7, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, COUNT(DISTINCT aka.id) AS total_aka_names FROM person_info AS pi JOIN info_type AS it ON pi.info_type_id = it.id LEFT JOIN movie_link AS ml ON ml.movie_id = pi.person_id LEFT JOIN movie_keyword AS mk ON mk.movie_id = pi.person_id LEFT JOIN aka_name AS aka ON aka.person_id = pi.person_id LEFT JOIN title AS t ON t.id = pi.person_id WHERE pi.person_id IN ('9199', '7096', '7497', '4410', '8830') AND aka.md5sum IN ('777e5dd36014a444dcb9fd6b6e79db1b', 'c858ae027357bb0cc527c2bf2cd39730', 'bead886d98c81cafedcdcb186c8d7fc8') GROUP BY it.info;
SELECT COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_companies_involved, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS short_films, SUM(CASE WHEN t.kind_id = 3 THEN 1 ELSE 0 END) AS documentaries, MAX(t.production_year) AS most_recent_production_year FROM movie_companies mc JOIN title t ON mc.movie_id = t.id JOIN name n ON mc.company_id = n.id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY mc.company_type_id ORDER BY total_movies DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(ml.movie_id) AS average_movie_id, MIN(cn.name) AS character_name_with_min_id, MAX(an.name) AS aka_name_with_max_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN char_name AS cn ON cn.id = ml.movie_id AND cn.surname_pcode = 'E2146' LEFT JOIN aka_name AS an ON an.id = ml.linked_movie_id AND an.md5sum = '7df6a930bde6eff675fae9eecfb9ff7e' GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies FROM movie_companies AS mc INNER JOIN company_type AS ct ON mc.company_type_id = ct.id INNER JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.note IS DISTINCT FROM '1' GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY average_rating DESC;
SELECT AVG(mi_numeric.info::numeric) AS average_movie_rating, COUNT(DISTINCT an.person_id) AS unique_actors_count, COUNT(DISTINCT cn.id) AS unique_companies_count, COUNT(DISTINCT cc.movie_id) AS movies_with_complete_cast, SUM(CASE WHEN cn.country_code = '[ch]' THEN 1 ELSE 0 END) AS swiss_companies_count, SUM(CASE WHEN cn.country_code = '[tt]' THEN 1 ELSE 0 END) AS trinidad_companies_count, COUNT(DISTINCT CASE WHEN an.surname_pcode = 'D12' THEN an.person_id ELSE NULL END) AS actors_with_surname_D12 FROM movie_info AS mi_numeric JOIN movie_info AS mi ON mi_numeric.movie_id = mi.movie_id LEFT JOIN aka_name AS an ON mi.movie_id = an.person_id LEFT JOIN company_name AS cn ON cn.imdb_id = mi.movie_id LEFT JOIN complete_cast AS cc ON cc.movie_id = mi.movie_id WHERE mi_numeric.info_type_id = 101 AND mi.info_type_id = 102 AND mi_numeric.info::numeric >= 0 AND (cn.country_code = '[ch]' OR cn.country_code = '[tt]') AND (an.surname_pcode IN ('D12', 'Y52', 'D54', 'K25', 'A625')) GROUP BY mi.movie_id;
SELECT kt.kind, COUNT(DISTINCT cn.id) as number_of_companies, COUNT(DISTINCT pi.person_id) as number_of_people, AVG(CASE WHEN pi.note SIMILAR TO '%(Coverland|Chris Hendren|maria afsharian|CelebrityLoop.com)%' THEN CAST(pi.info AS NUMERIC) ELSE NULL END) as average_info_rating, SUM(CASE WHEN kt.kind = 'video movie' THEN 1 ELSE 0 END) as video_movie_count, SUM(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) as tv_mini_series_count, SUM(CASE WHEN kt.kind = 'video game' THEN 1 ELSE 0 END) as video_game_count FROM company_name cn JOIN kind_type kt ON cn.id = kt.id JOIN person_info pi ON cn.id = pi.person_id WHERE cn.country_code NOT IN ('US', 'GB') AND pi.info_type_id BETWEEN 1 AND 5 AND kt.id IN ('1', '2', '4', '5', '7') GROUP BY kt.kind ORDER BY number_of_companies DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mk.movie_id IN ('18308', '18764', '15408', '17206', '12185') THEN 1 ELSE 0 END) AS count_specific_movies, COUNT(DISTINCT cn.surname_pcode) AS unique_character_surnames, MIN(t.title) AS earliest_alphabetical_movie_title FROM title AS t JOIN movie_keyword AS mk ON mk.movie_id = t.id JOIN char_name AS cn ON cn.id = mk.movie_id JOIN name AS n ON n.surname_pcode = cn.surname_pcode WHERE t.series_years = '1990-1991' OR t.phonetic_code IN ('P6523', 'D162', 'R5265', 'D2453', 'F6145') AND cn.surname_pcode IN ('L3414', 'O4353', 'W16', 'I5236') GROUP BY t.kind_id HAVING COUNT(DISTINCT t.id) > 10 ORDER BY total_movies DESC, average_production_year ASC;
SELECT rt.ROLE, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS DOUBLE PRECISION)) AS average_rating, SUM(CASE WHEN mi.note IN ('(some dialogue)', '(only a few lines)', '(Original Version)', '(a few words)', '(a few lines)', '(English version)') THEN 1 ELSE 0 END) AS dialogue_mentions_count FROM movie_info_idx AS mi_idx JOIN movie_info AS mi ON mi_idx.movie_id = mi.movie_id JOIN person_info AS pi ON mi.movie_id = pi.info_type_id JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE mi_idx.info_type_id = 3 AND mi.info_type_id IN (24, 36) AND rt.id IN ('8', '10', '3') AND rt.role IN ('costume designer', 'miscellaneous crew', 'writer', 'composer') GROUP BY rt.ROLE ORDER BY average_rating DESC, number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS roles_with_person_role, COUNT(DISTINCT ci.person_id) AS distinct_actors_count FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN company_type ct ON cct.id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT cn.name AS company_name, kt.kind AS movie_kind, (t.production_year / 10) * 10 AS decade, COUNT(t.id) AS movie_count, AVG(t.imdb_id) AS average_imdb_id FROM company_name cn JOIN title t ON cn.imdb_id = t.imdb_id JOIN kind_type kt ON t.kind_id = kt.id WHERE cn.country_code = 'XX' AND t.production_year IS NOT NULL GROUP BY company_name, movie_kind, decade ORDER BY company_name, movie_kind, decade;
SELECT it.info AS info_type, COUNT(DISTINCT mi.id) AS movie_count, AVG(mc.company_id) AS average_company_id, SUM(mc.company_id) AS sum_company_id, COUNT(DISTINCT ak.id) AS alias_count, rt.ROLE, COUNT(DISTINCT kw.id) AS keyword_count FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_companies AS mc ON mi.movie_id = mc.movie_id JOIN role_type AS rt ON mc.company_type_id = rt.id JOIN aka_name AS ak ON mi.movie_id = ak.person_id JOIN keyword AS kw ON ak.surname_pcode = kw.phonetic_code GROUP BY it.info, rt.ROLE ORDER BY movie_count DESC, average_company_id;
