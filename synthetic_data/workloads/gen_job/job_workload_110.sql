SELECT it.info AS info_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT kw.id) AS unique_keywords_count, SUM(mc.company_id) AS total_company_id_sum, rt.ROLE AS role_type, COUNT(DISTINCT cc.movie_id) AS movies_count FROM info_type AS it JOIN movie_companies AS mc ON it.id = mc.company_type_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN keyword AS kw ON mc.movie_id = kw.id LEFT JOIN name AS nm ON cc.subject_id = nm.id JOIN role_type AS rt ON cc.status_id = rt.id WHERE mc.company_type_id = '1' AND (nm.name_pcode_nf = 'B4645' OR nm.name_pcode_nf = 'B1436') AND (rt.ROLE = 'producer' OR rt.ROLE = 'actor') AND mc.movie_id IN ('1646081', '1699392', '1666532', '1678176', '1677967') GROUP BY it.info, rt.ROLE ORDER BY movies_count DESC, average_imdb_id;
SELECT ct.kind AS cast_type, AVG(mi_idx.info::NUMERIC) AS average_rating, COUNT(DISTINCT cc.movie_id) AS total_movies, COUNT(DISTINCT lt.id) AS link_types_count, SUM(CASE WHEN rt.id IN (10, 5, 3, 8, 11, 6) THEN 1 ELSE 0 END) AS specific_role_count FROM complete_cast cc JOIN comp_cast_type ct ON cc.subject_id = ct.id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 4 JOIN link_type lt ON lt.id IN (3, 8, 10) AND lt.link = 'features' JOIN role_type rt ON rt.id IN (10, 5, 3, 8, 11, 6) JOIN movie_info mi ON mi.movie_id = cc.movie_id WHERE cc.movie_id IN (1642852, 1666892) AND cc.status_id = 1 GROUP BY ct.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT akn.person_id) AS unique_person_count, AVG(LENGTH(akn.name)) AS average_name_length, SUM(CASE WHEN akn.surname_pcode = 'A262' THEN 1 ELSE 0 END) AS surname_A262_count, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords FROM company_type AS ct LEFT JOIN movie_companies AS mc ON ct.id = mc.company_type_id LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_name AS akn ON mk.movie_id = akn.person_id GROUP BY ct.kind
SELECT it.info AS info_category, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(CAST(mi_idx.info AS numeric)) AS average_movie_info, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count FROM info_type it JOIN movie_info_idx mi_idx ON it.id = mi_idx.info_type_id JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN name n ON mi_idx.movie_id = n.id WHERE it.info IN ('crazy credits', 'bottom 10 rank', 'tech info', 'LD quality program', 'production process protocol') GROUP BY it.info;
SELECT kt.kind AS movie_kind, AVG(ti.production_year) AS avg_production_year, COUNT(DISTINCT ti.id) AS number_of_movies, COUNT(DISTINCT ci.movie_id) AS number_of_casts, SUM(CASE WHEN mi.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_genre_info FROM title ti JOIN kind_type kt ON ti.kind_id = kt.id LEFT JOIN complete_cast ci ON ti.id = ci.movie_id LEFT JOIN movie_info mi ON ti.id = mi.movie_id WHERE ti.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, AVG(CAST(mi.info AS numeric)) AS average_rating, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_count, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t INNER JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM movie_info_idx WHERE info = 'rating') LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE t.production_year BETWEEN 1990 AND 2010 GROUP BY kt.kind HAVING COUNT(DISTINCT t.id) > 10 ORDER BY average_rating DESC;
SELECT COUNT(ci.id) AS total_cast_entries, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS total_alias_castings, MIN(t.title) AS earliest_title_alphabetically, MAX(t.production_year) AS latest_production_year, AVG(mi_idx.info::NUMERIC) AS avg_info_numeric_value FROM cast_info AS ci JOIN title AS t ON ci.movie_id = t.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id WHERE ci.person_id IN (1095, 1184, 1812, 1636) AND mi_idx.info LIKE '...%' GROUP BY ci.person_id
SELECT COUNT(DISTINCT t.id) AS total_movies, SUM(mc.company_id) AS total_companies_involved, link_typ.LINK AS link_type, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id JOIN link_type AS link_typ ON link_typ.id = ml.link_type_id WHERE t.production_year BETWEEN 2000 AND 2020 AND mc.company_type_id = 2 AND link_typ.id IN (3, 10, 6, 15, 11) AND mk.movie_id IN (13936, 8886, 13347, 7802, 15519, 18796) GROUP BY link_typ.LINK ORDER BY total_movies DESC;
SELECT kt.kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mi_idx.info::NUMERIC) AS average_info, SUM(mi_idx.info::NUMERIC) AS total_info, COUNT(DISTINCT cn.id) AS total_companies, STRING_AGG(DISTINCT cn.name, ', ') AS company_names FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id JOIN kind_type kt ON mi_idx.movie_id = kt.id JOIN company_name cn ON cn.imdb_id = mi_idx.movie_id WHERE kt.kind IN ('video movie', 'tv mini series', 'tv series', 'tv movie') AND cn.country_code = 'US' AND it.info = 'budget' GROUP BY kt.kind ORDER BY total_movies DESC;
