SELECT t.production_year, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, AVG(mi.info::numeric) AS average_movie_info, SUM(CASE WHEN k.phonetic_code = 'V6413' THEN 1 ELSE 0 END) AS count_of_keyword_V6413, MAX(t.title) AS latest_movie_title FROM title t LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id AND mi.info_type_id = 1 WHERE t.production_year BETWEEN 1990 AND 2000 AND t.kind_id = 1 AND (k.phonetic_code IN ('V6413', 'V632', 'M61', 'F5326', 'U1263', 'L261') OR k.phonetic_code IS NULL) GROUP BY t.production_year ORDER BY t.production_year DESC;
SELECT COUNT(DISTINCT mk.movie_id) AS total_movies, k.keyword, AVG(lt.id) AS average_link_type_id, SUM(CASE WHEN k.phonetic_code = 'T2351' THEN 1 ELSE 0 END) AS count_t2351, SUM(CASE WHEN k.phonetic_code = 'D35' THEN 1 ELSE 0 END) AS count_d35 FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN link_type AS lt ON mk.id = lt.id GROUP BY k.keyword ORDER BY total_movies DESC, k.keyword;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT pi.person_id) AS total_actors, AVG(CAST(pi.info AS numeric)) AS average_rating, SUM(CASE WHEN pi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_main_roles FROM movie_link AS ml JOIN kind_type AS kt ON kt.id = ml.link_type_id JOIN person_info AS pi ON pi.person_id = ml.movie_id WHERE kt.kind IN ('video movie', 'tv movie', 'video game', 'episode') AND ml.linked_movie_id IN (825152, 1846684, 1922177) AND pi.person_id IN (1740363, 732, 286, 1740595, 2742) AND pi.info_type_id IN (1, 7) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_actors, AVG(nk.keyword_count) AS average_keywords_per_actor, SUM(nk.keyword_count) AS total_keywords FROM name AS n INNER JOIN ( SELECT mk.movie_id, COUNT(*) AS keyword_count FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id WHERE k.phonetic_code IN ('H525', 'C4252', 'P3624', 'A543', 'F6526', 'M1525') GROUP BY mk.movie_id ) AS nk ON nk.movie_id = n.id INNER JOIN role_type AS rt ON rt.id IN ('1', '2', '6', '10', '5', '4') INNER JOIN movie_companies AS mc ON mc.movie_id = nk.movie_id WHERE n.gender IS NOT NULL GROUP BY rt.ROLE ORDER BY total_actors DESC;
SELECT kt.kind AS media_type, rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_people, COUNT(DISTINCT CASE WHEN n.gender = 'M' THEN n.id END) AS total_males, COUNT(DISTINCT CASE WHEN n.gender = 'F' THEN n.id END) AS total_females, AVG(n.imdb_id) AS average_imdb_id FROM name n JOIN role_type rt ON n.id = rt.id JOIN kind_type kt ON n.id = kt.id WHERE kt.kind IN ('tv movie', 'movie', 'episode', 'tv series', 'tv mini series') AND rt.role = 'actress' GROUP BY kt.kind, rt.ROLE ORDER BY total_people DESC, total_males DESC, total_females DESC;
SELECT ml.link_type_id, k.keyword AS genre, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT t.id) AS number_of_movies FROM movie_link AS ml JOIN title AS t ON ml.movie_id = t.id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE ml.link_type_id IN (6, 13, 11, 7) AND ci.role_id = 1 AND k.id IN (3152) GROUP BY ml.link_type_id, k.keyword ORDER BY avg_production_year DESC, number_of_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT name.id) AS number_of_unique_actors FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN name ON ci.person_id = name.id WHERE rt.id IN (1) AND ci.nr_order IS NOT NULL AND name.md5sum IN ('0d93c2f49007eb923f1f3983f0a8cc6b', 'c73602ee6ad37663369ca6e3bd40e7dd', 'db97c7dc12820b568f8351333075a92d', '53ebf953411448090e3e779bf1486727', 'f22535a12044b89484f9cba769cf437a', '6f608ba1bd4dd87eac0e663a877f54bc') GROUP BY rt.ROLE;
SELECT t.kind_id, min(k.kind) AS movie_kind, avg(t.production_year) AS average_production_year, count(DISTINCT mc.company_id) AS number_of_companies, count(DISTINCT ml.id) AS number_of_movie_links, count(DISTINCT mc.company_type_id) AS number_of_company_types FROM title AS t LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN comp_cast_type AS k ON mc.company_type_id = k.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id AND ml.link_type_id IN ('16', '10') WHERE t.kind_id IN ('2', '7') GROUP BY t.kind_id;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(LENGTH(note)) AS average_note_length, COUNT(DISTINCT cn.id) AS number_of_companies_involved, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, SUM(CASE WHEN ml.link_type_id = '9' THEN 1 ELSE 0 END) AS count_type_9_links, SUM(CASE WHEN ml.link_type_id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN ml.link_type_id = '5' THEN 1 ELSE 0 END) AS count_type_5_links, SUM(CASE WHEN ml.link_type_id = '13' THEN 1 ELSE 0 END) AS count_type_13_links FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT COUNT(t.id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN cn.country_code = '[ch]' THEN 1 ELSE 0 END) AS swiss_produced_movies, SUM(CASE WHEN k.keyword = 'video-tape' THEN 1 ELSE 0 END) AS video_tape_keyword_count, COUNT(DISTINCT cn.name) AS unique_companies_involved FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND k.keyword IN ('video-tape', 'delta-airlines') AND cn.country_code IN ('[sa]', '[hk]', '[np]', '[ao]', '[ch]', '[do]') AND cn.name_pcode_sf = 'F4623' AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY cn.country_code, k.keyword;
SELECT mc.company_id, COUNT(DISTINCT mc.movie_id) AS number_of_movies, cs.status_id, AVG(CAST(pi.info AS FLOAT)) FILTER (WHERE pi.info_type_id = 10) AS average_rating FROM movie_companies AS mc JOIN complete_cast AS cs ON mc.movie_id = cs.movie_id JOIN person_info AS pi ON cs.subject_id = pi.person_id GROUP BY mc.company_id, cs.status_id ORDER BY number_of_movies DESC, average_rating DESC;
SELECT t.production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'spin off' THEN 1 ELSE 0 END) AS spin_off_count, STRING_AGG(DISTINCT cn.name, ', ') AS character_names FROM title t JOIN cast_info ci ON ci.movie_id = t.id LEFT JOIN char_name cn ON cn.id = ci.person_id LEFT JOIN movie_link ml ON ml.movie_id = t.id LEFT JOIN link_type lt ON lt.id = ml.link_type_id WHERE t.production_year BETWEEN 2000 AND 2010 GROUP BY t.production_year ORDER BY t.production_year;
SELECT k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, COUNT(DISTINCT n.id) AS number_of_actors FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info AS mi ON mk.movie_id = mi.movie_id AND mi.info_type_id = 4 INNER JOIN name AS n ON mi.movie_id = n.imdb_id WHERE mk.keyword_id IN (3881, 2089, 3415, 3648) GROUP BY k.keyword ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mc.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_productions, t.production_year, t.kind_id FROM cast_info AS ci JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN title AS t ON ci.movie_id = t.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND t.production_year IS NOT NULL GROUP BY t.production_year, t.kind_id ORDER BY t.production_year DESC, average_rating DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) FILTER (WHERE it.info = 'budget') AS average_movie_budget, SUM(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_movie_votes, kt.kind AS movie_kind, COUNT(DISTINCT cc.movie_id) FILTER (WHERE cc.status_id = 1) AS number_of_complete_movies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN kind_type AS kt ON kt.id = 1 JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('budget', 'votes')) AND cc.status_id = 1 GROUP BY ct.kind, kt.kind;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(mi_idx.info::NUMERIC) AS average_rating, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT ci.person_id) AS total_actors, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 100 LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE t.production_year BETWEEN 1990 AND 2020 AND (t.imdb_index = 'V' OR t.imdb_index = 'I' OR t.imdb_index = 'II') AND ci.note IS NOT NULL AND mi_idx.note IS NOT NULL GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS number_of_bw_movies, COUNT(DISTINCT mk.keyword_id) FILTER (WHERE mk.keyword_id IN (4048, 2907, 2882)) AS number_of_specific_keywords FROM company_name cn LEFT JOIN movie_info mi ON mi.movie_id = cn.id LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = mi.movie_id LEFT JOIN info_type it ON it.id = mi_idx.info_type_id LEFT JOIN movie_keyword mk ON mk.movie_id = mi.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mi.movie_id AND ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('sequel', 'prequel')) WHERE cn.country_code NOT IN ('US', 'CA') AND it.info = 'rating' AND mi.info IN ('color', 'black and white') GROUP BY cn.name, cn.country_code ORDER BY average_rating DESC, number_of_movies DESC;
SELECT AVG(CAST(pi.info AS numeric)) AS average_rating, COUNT(cc.id) AS total_cast_members, COUNT(DISTINCT at.id) AS total_alternate_titles, SUM(CASE WHEN at.title ILIKE '%love%' THEN 1 ELSE 0 END) AS titles_with_love FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN person_info pi ON cc.movie_id = pi.person_id WHERE at.movie_id IN (52294, 98509, 1635723, 1678623) AND pi.info_type_id = 101 GROUP BY at.movie_id;
