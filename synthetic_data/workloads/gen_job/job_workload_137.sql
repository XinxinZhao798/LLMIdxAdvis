SELECT kt.kind AS movie_type, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN at.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies, COUNT(DISTINCT mi.id) AS total_movie_info_entries, COUNT(DISTINCT cc.id) AS total_complete_cast_entries FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN movie_info_idx mi ON at.movie_id = mi.movie_id GROUP BY kt.kind ORDER BY total_alternate_titles DESC;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(ml.movie_id) AS average_movie_id, SUM(CASE WHEN pi.info_type_id = 7 THEN 1 ELSE 0 END) AS count_info_with_type_7, MAX(pi.note) AS latest_note FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN akat.imdb_index IS NOT NULL THEN 1 ELSE 0 END) AS indexed_movies_count, COUNT(mk.keyword_id) AS total_keywords FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, aka.production_year, mi.info AS movie_genre, AVG(aka.production_year) AS average_alternate_title_year FROM cast_info AS ci JOIN movie_info_idx AS mi ON ci.movie_id = mi.movie_id JOIN aka_title AS aka ON ci.movie_id = aka.movie_id WHERE ci.nr_order IN (200, 43, 31, 92, 117, 48) AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'genre') AND aka.kind_id = 1 AND aka.production_year > 2000 GROUP BY aka.production_year, mi.info ORDER BY aka.production_year DESC, total_actors DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, SUM(pi.id) AS total_person_info_records, COUNT(DISTINCT k.id) AS unique_keywords_count FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN name AS n ON mc.movie_id = n.id JOIN person_info AS pi ON pi.person_id = n.id JOIN keyword AS k ON k.id = pi.id WHERE kt.id IN ('7', '6', '2', '5') AND k.keyword IN ('24-hours', 'compassion') AND n.surname_pcode IN ('A415', 'A4') AND pi.note IN ('Jack Backstreet', 'Zaid Adham', 'David Adler', 'John Dream', 'Trace''s Publicist') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT pi.info_type_id, AVG(LENGTH(an.name)) AS avg_name_length, COUNT(DISTINCT an.name) AS total_distinct_names, COUNT(DISTINCT an.surname_pcode) AS count_unique_surnames, SUM(CASE WHEN mi.note = 'Y' THEN 1 ELSE 0 END) AS count_note_yes FROM aka_name an JOIN person_info pi ON an.person_id = pi.person_id JOIN movie_info_idx mi ON mi.movie_id = an.person_id WHERE pi.info_type_id IN (17, 23, 29, 25, 27, 20) AND an.md5sum IN ('576c973c18ecc2f62ddb0c705a3b7d0f', '9466c784daef2ca04d576060483fa8e3', 'd2db89e5d232e9c60e2d13cf2877f90b') AND an.surname_pcode IN ('F6', 'A134') GROUP BY pi.info_type_id ORDER BY pi.info_type_id;
SELECT t.kind_id AS movie_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS direct_to_video_count, SUM(CASE WHEN t.imdb_index IN ('I', 'II') THEN 1 ELSE 0 END) AS sequel_count, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(pi.info_type_id) AS average_info_type_id FROM title AS t LEFT JOIN person_info AS pi ON t.id = pi.person_id LEFT JOIN char_name AS cn ON cn.id = pi.person_id LEFT JOIN keyword AS k ON k.id = pi.info_type_id GROUP BY t.kind_id HAVING COUNT(DISTINCT cn.surname_pcode) > 1 ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS total_male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS total_female_actors, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year FROM movie_keyword AS mk JOIN title AS t ON mk.movie_id = t.id JOIN name AS n ON t.id = n.id GROUP BY n.gender ORDER BY total_movies_with_keywords DESC, average_production_year;
SELECT cct.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(at.id) AS number_of_titles, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at JOIN comp_cast_type cct ON at.kind_id = cct.id GROUP BY cct.kind ORDER BY average_production_year DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_sequels, MAX(pi.info) AS latest_actor_information FROM char_name cn JOIN cast_info ci ON cn.id = ci.person_role_id JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE cn.surname_pcode IN ('A', 'T61', 'E153', 'A13', 'C2', 'B6353') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') GROUP BY cn.name;
SELECT mk.movie_id, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(LENGTH(pi.note)) AS average_note_length, COUNT(DISTINCT lt.id) AS total_distinct_link_types FROM movie_keyword AS mk LEFT JOIN person_info AS pi ON mk.movie_id = pi.person_id LEFT JOIN link_type AS lt ON mk.movie_id = lt.id WHERE mk.keyword_id IN (820, 3672, 3996, 3616, 1099) GROUP BY mk.movie_id ORDER BY total_keywords DESC, average_note_length DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS avg_rating, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN lt.link = 'spoofed in' THEN 1 ELSE 0 END) AS total_spoofs, SUM(CASE WHEN lt.link = 'remake of' THEN 1 ELSE 0 END) AS total_remakes, cn.name AS company_name, cn.country_code, it.info AS info_type, EXTRACT(YEAR FROM NOW()) - AVG(t.production_year) AS avg_years_since_release FROM movie_info_idx AS mi_idx JOIN title AS t ON t.id = mi_idx.movie_id LEFT JOIN company_name AS cn ON cn.imdb_id = t.id JOIN movie_info_idx AS mi_idx_link ON mi_idx_link.movie_id = t.id JOIN link_type AS lt ON mi_idx_link.info_type_id = lt.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND mi_idx.info > '5.0' AND t.production_year BETWEEN 2000 AND EXTRACT(YEAR FROM NOW()) AND (lt.link = 'spoofed in' OR lt.link = 'remake of') GROUP BY cn.name, cn.country_code, it.info ORDER BY avg_rating DESC, total_movies DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS total_composer_roles FROM name n JOIN aka_name ak ON n.id = ak.person_id JOIN role_type rt ON ak.id = rt.id JOIN title t ON ak.id = t.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_link ml ON t.id = ml.movie_id JOIN keyword k ON mi_idx.id = k.id JOIN company_type ct ON ml.id = ct.id WHERE t.production_year BETWEEN 1990 AND 2020 AND k.phonetic_code IN ('W2365', 'G5235', 'D26') AND ct.kind IN ('distributors', 'miscellaneous companies') AND mi_idx.info LIKE '%...0..0223%' GROUP BY t.kind_id;
SELECT ct.kind AS company_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT cc.subject_id) AS number_of_subjects, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, SUM(CASE WHEN t.kind_id = 4 THEN 1 ELSE 0 END) AS number_of_documentaries FROM title t JOIN complete_cast cc ON t.id = cc.movie_id JOIN company_type ct ON t.kind_id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT ct.kind as company_type, avg(at.production_year) as average_production_year, count(distinct at.id) as total_movies, count(distinct ml.movie_id) as total_linked_movies, sum(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) as total_kind_id_3, sum(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) as total_kind_id_4 FROM aka_title at JOIN movie_link ml ON at.movie_id = ml.movie_id JOIN company_type ct ON ml.link_type_id = ct.id WHERE at.kind_id IN (3, 4) AND ml.linked_movie_id IN (766538, 436, 2392833, 1659295, 2490166) AND at.production_year > 2000 GROUP BY ct.kind;
SELECT it.info AS information_type, COUNT(DISTINCT ml.id) AS total_movie_links, COUNT(DISTINCT pi.person_id) AS total_people_linked, AVG(LENGTH(pi.note)) AS average_note_length, SUM(CASE WHEN pi.info_type_id = 91 THEN 1 ELSE 0 END) AS count_of_tech_info FROM movie_link AS ml JOIN person_info AS pi ON ml.movie_id = pi.person_id OR ml.linked_movie_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE it.info = 'tech info' AND ml.link_type_id IN (SELECT id FROM info_type WHERE id IN (91, 73, 61, 38)) GROUP BY it.info;
SELECT kt.kind AS movie_kind, AVG(ati.production_year) AS avg_production_year, COUNT(DISTINCT cn.id) AS total_actors, COUNT(DISTINCT compn.id) AS total_companies, SUM(CASE WHEN mi.info = 'Hungarian' THEN 1 ELSE 0 END) AS hungarian_movies_count, SUM(CASE WHEN mi.info = 'Bulgarian' THEN 1 ELSE 0 END) AS bulgarian_movies_count, SUM(CASE WHEN mi.info = 'Korean' THEN 1 ELSE 0 END) AS korean_movies_count FROM aka_title ati JOIN kind_type kt ON ati.kind_id = kt.id JOIN movie_info mi ON ati.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN name n ON n.id = ati.episode_of_id LEFT JOIN company_name compn ON compn.id = ati.movie_id LEFT JOIN char_name cn ON n.id = cn.id WHERE mi.info_type_id = 4 AND kt.id IN (1, 6, 5) AND ati.title IN ('Articolo 99', 'Lippenstift am Kragen', 'Eine Klasse für sich') GROUP BY kt.kind;
