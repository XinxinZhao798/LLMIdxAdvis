SELECT ct.kind AS company_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS unique_keywords_count, COUNT(DISTINCT at.id) AS alternate_titles_count, SUM(CASE WHEN mic.info_type_id = '100' THEN 1 ELSE 0 END) AS count_info_type_100, SUM(CASE WHEN mic.info_type_id = '101' THEN 1 ELSE 0 END) AS count_info_type_101, SUM(CASE WHEN mic.info_type_id = '99' THEN 1 ELSE 0 END) AS count_info_type_99 FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN movie_info_idx AS mic ON mc.movie_id = mic.movie_id LEFT JOIN keyword AS k ON at.movie_id = k.id WHERE ct.kind = 'miscellaneous companies' AND mc.id IN ('1733', '1292', '472', '1920', '683', '4338') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.person_id) AS count_distinct_actors FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN cast_info ci ON at.movie_id = ci.movie_id AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') WHERE at.production_year > 2000 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, MIN(at.title) AS example_movie, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.note LIKE '%(imdb display title)%' THEN 1 ELSE 0 END) AS imdb_display_title_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN movie_keyword mk ON at.movie_id = mk.movie_id JOIN movie_info mi ON at.movie_id = mi.movie_id WHERE at.production_year BETWEEN 1990 AND 2020 AND at.note LIKE '%(imdb display title)%' AND mi.movie_id IN ('931220', '926777', '925133') GROUP BY kt.kind HAVING COUNT(DISTINCT at.movie_id) > 10 ORDER BY total_movies_with_keywords DESC;
SELECT kt.kind AS kind_of_production, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, AVG(sub.movie_keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT an.person_id) AS number_of_distinct_persons FROM kind_type kt JOIN movie_keyword mk ON mk.id = ANY(ARRAY[3853, 448, 3514, 4583, 3985]) JOIN (SELECT movie_id, COUNT(keyword_id) AS movie_keyword_count FROM movie_keyword GROUP BY movie_id) AS sub ON sub.movie_id = mk.movie_id LEFT JOIN aka_name an ON an.id = mk.movie_id AND an.name IS NOT NULL WHERE kt.kind IN ('video game', 'tv series', 'tv mini series', 'episode', 'video movie') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.company_id) AS number_of_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS german_movie_count FROM movie_info mi JOIN movie_companies ci ON mi.movie_id = ci.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN title t ON mi.movie_id = t.id WHERE (mi.note LIKE '%(interviews)%' OR mi.note LIKE '%(Original Version)%' OR mi.note LIKE '%(only a few lines)%' OR mi.note LIKE '%(English subtitles)%') GROUP BY mi.movie_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, AVG(CAST(an.id AS NUMERIC)) AS average_aka_name_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_based_companies FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN kind_type AS kt ON kt.id = mc.company_type_id LEFT JOIN aka_name AS an ON an.person_id = mc.id WHERE mc.movie_id IN ('23623', '12089', '22009', '20658', '18570', '31165') GROUP BY kt.kind;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, MAX(t.production_year) AS latest_production_year FROM title t INNER JOIN aka_title at ON t.id = at.movie_id INNER JOIN movie_info_idx mi ON t.id = mi.movie_id INNER JOIN name n ON n.md5sum = at.md5sum INNER JOIN keyword k ON k.phonetic_code = at.phonetic_code WHERE t.production_year BETWEEN 2000 AND 2010 AND mi.info_type_id IN ('100', '101', '99') AND at.episode_of_id IN ('14284', '16059', '8468', '2167', '20079', '24526') AND n.name_pcode_cf IN ('A4165', 'A3423') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT AVG(title.production_year) AS average_production_year, COUNT(DISTINCT name.id) AS number_of_actors, COUNT(DISTINCT title.id) AS number_of_movies, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors, MAX(title.production_year) AS latest_production_year, MIN(title.production_year) AS earliest_production_year FROM title JOIN aka_title ON title.id = aka_title.movie_id JOIN person_info ON aka_title.movie_id = person_info.person_id JOIN name ON person_info.person_id = name.id WHERE title.production_year BETWEEN 2000 AND 2020 AND name.name_pcode_nf IN ('N4532', 'H6341', 'M2164') GROUP BY title.kind_id HAVING COUNT(DISTINCT title.id) > 10 ORDER BY average_production_year DESC, number_of_movies DESC;
