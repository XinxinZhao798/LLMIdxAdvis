SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movies_participated, AVG(mi_idx.info::numeric) AS average_movie_rating, COUNT(DISTINCT cc.subject_id) AS distinct_subjects_involved, SUM(CASE WHEN it.info = 'LD video quality' THEN 1 ELSE 0 END) AS count_LD_video_quality_movies, SUM(CASE WHEN it.info = 'crazy credits' THEN 1 ELSE 0 END) AS count_crazy_credits_movies FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id LEFT JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE ci.person_id IN (1837, 1344) AND (mi_idx.movie_id IN (8431, 19632, 8488) OR mi_idx.movie_id IS NULL) GROUP BY n.name ORDER BY movies_participated DESC, average_movie_rating DESC;
SELECT AVG(pi.info::numeric) AS average_rating, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT k.id) AS number_of_keywords, COUNT(DISTINCT ml.id) AS number_of_movie_links FROM aka_title AS at JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id AND lt.id = 16 JOIN company_name AS cn ON cn.md5sum IN ('578fa287906ab94df0273377f2f64716', 'bdfeccb6a71e0ac0218a8e8c30e858c0', 'c60e88006ef709f7ec524d615f01771b') JOIN keyword AS k ON k.keyword IN ('waking-nightmare', 'air') JOIN person_info AS pi ON pi.info_type_id = 1 WHERE at.title IN ('Nino', 'Fafner', 'Der Freund', 'Fifty Thousand Dollar Reward', 'La guerre de 1812') AND at.production_year >= 2000 AND pi.person_id = ANY (SELECT id FROM company_name WHERE country_code = 'US') GROUP BY at.movie_id;
SELECT cn.name AS company_name, ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(mk.keyword_count) AS average_keywords_per_movie, MAX(mi.info) AS most_common_language FROM company_name cn JOIN movie_companies mc ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind IN ('production companies', 'special effects companies') JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) mk ON mk.movie_id = mc.movie_id JOIN (SELECT movie_id, info FROM movie_info WHERE info_type_id = 4 AND info IN ('Slovak', 'Gujarati', 'Czech') ) mi ON mi.movie_id = mc.movie_id GROUP BY cn.name, ct.kind ORDER BY total_movies_produced DESC, average_keywords_per_movie DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 1) AS average_movie_budget, SUM(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 2) AS total_box_office, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword IN ('toy-car', 'personal-stories')) AS count_specific_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN person_info AS pi ON mc.movie_id = pi.person_id AND pi.info_type_id IN (1, 2) LEFT JOIN keyword AS k ON k.id = pi.info_type_id JOIN comp_cast_type AS cct ON mc.company_id = cct.id WHERE mc.company_id IN (1232, 968) AND ct.id IN (2, 1, 4, 3) AND ct.kind = 'miscellaneous companies' AND cct.id IN (1, 2) GROUP BY ct.kind;
SELECT it.info AS info_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(LENGTH(mi.note)) FILTER (WHERE mi.info_type_id = it.id) AS average_note_length, SUM(CASE WHEN ch.imdb_id IS NOT NULL THEN 1 ELSE 0 END) AS total_characters_with_imdb_id, MAX(t.production_year) AS latest_production_year FROM info_type it JOIN movie_info mi ON mi.info_type_id = it.id JOIN title t ON t.id = mi.movie_id JOIN cast_info ci ON ci.movie_id = t.id JOIN char_name ch ON ch.id = ci.person_id WHERE (ch.name_pcode_nf IN ('P6523', 'C1563', 'S2345') OR ch.surname_pcode IN ('O6', 'L3', 'H616', 'C4162', 'C5')) AND t.season_nr IN (22, 36, 28, 44, 38) AND it.id IN (108, 57, 44, 85, 52) GROUP BY it.info;
SELECT AVG(pi.id) AS average_person_info_id, COUNT(DISTINCT an.person_id) AS unique_aka_person_count, COUNT(DISTINCT lt.id) AS link_type_count, SUM(CASE WHEN an.name IS NOT NULL THEN 1 ELSE 0 END) AS not_null_aka_names, MAX(an.id) AS max_aka_name_id FROM aka_name AS an JOIN person_info AS pi ON an.person_id = pi.person_id JOIN link_type AS lt ON pi.info LIKE '%' || lt.link || '%' GROUP BY an.person_id HAVING COUNT(DISTINCT pi.info_type_id) > 1 ORDER BY unique_aka_person_count DESC, average_person_info_id ASC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS avg_rating, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN lt.link = 'spoofed in' THEN 1 ELSE 0 END) AS total_spoofs, SUM(CASE WHEN lt.link = 'remake of' THEN 1 ELSE 0 END) AS total_remakes, cn.name AS company_name, cn.country_code, it.info AS info_type, EXTRACT(YEAR FROM NOW()) - AVG(t.production_year) AS avg_years_since_release FROM movie_info_idx AS mi_idx JOIN title AS t ON t.id = mi_idx.movie_id LEFT JOIN company_name AS cn ON cn.imdb_id = t.id JOIN movie_info_idx AS mi_idx_link ON mi_idx_link.movie_id = t.id JOIN link_type AS lt ON mi_idx_link.info_type_id = lt.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND mi_idx.info > '5.0' AND t.production_year BETWEEN 2000 AND EXTRACT(YEAR FROM NOW()) AND (lt.link = 'spoofed in' OR lt.link = 'remake of') GROUP BY cn.name, cn.country_code, it.info ORDER BY avg_rating DESC, total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, COUNT(DISTINCT at.movie_id) AS unique_movies, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN lt.link = 'alternate language version of' THEN 1 ELSE 0 END) AS alt_lang_versions, SUM(CASE WHEN lt.link = 'version of' THEN 1 ELSE 0 END) AS versions, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS features_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN movie_info_idx mii ON at.movie_id = mii.movie_id JOIN link_type lt ON mii.id = lt.id WHERE at.imdb_index = 'IV' AND at.episode_of_id IN ('11942', '6153', '1980', '7480', '8274') AND kt.kind IN ('tv series', 'video movie', 'video game', 'tv mini series') AND mii.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%0..11202%' OR info LIKE '.0..002212') GROUP BY kt.kind;
SELECT it.info AS info_category, COUNT(*) AS total_entries, COUNT(DISTINCT mc.movie_id) AS distinct_movies_involved, COUNT(DISTINCT mc.company_id) AS distinct_companies_involved FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_companies mc ON mi.movie_id = mc.movie_id WHERE it.info IN ('crazy credits', 'locations', 'mpaa', 'LD group genre', 'LD number of chapter stops') GROUP BY it.info ORDER BY total_entries DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) FILTER (WHERE it.info = 'budget') AS average_movie_budget, SUM(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_movie_votes, kt.kind AS movie_kind, COUNT(DISTINCT cc.movie_id) FILTER (WHERE cc.status_id = 1) AS number_of_complete_movies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN kind_type AS kt ON kt.id = 1 JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('budget', 'votes')) AND cc.status_id = 1 GROUP BY ct.kind, kt.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.production_year >= 2000 THEN 1 ELSE 0 END) AS titles_since_2000, SUM(CASE WHEN at.production_year < 2000 THEN 1 ELSE 0 END) AS titles_before_2000 FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE k.keyword IN ('graffiti', 'goblet') AND n.name LIKE '%a%' GROUP BY cct.kind ORDER BY total_actors DESC;
