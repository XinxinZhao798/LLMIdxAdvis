SELECT COUNT(DISTINCT at.id) AS num_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN mc.company_type_id = 9 THEN 1 ELSE 0 END) AS num_producer_companies, rt.ROLE AS role_type, COUNT(DISTINCT an.id) AS num_people_with_alternate_names FROM aka_title at JOIN movie_companies mc ON at.movie_id = mc.movie_id JOIN complete_cast compl_cast ON mc.movie_id = compl_cast.movie_id JOIN role_type rt ON compl_cast.subject_id = rt.id LEFT JOIN aka_name an ON an.person_id = compl_cast.subject_id WHERE mc.movie_id IN ('28519', '17394', '23681', '8931') AND an.md5sum IN ('0f9068a7f5499ebd1078fd242aa8d403', 'e4e7deb17d9499fb2031dfcbe39a2884', '19133574cb176a198fc5d24c24352d61', '86ce7e5bfe4997de75b05c21865ca40d', 'c42897449a530ff6921dbfdd466254ca') AND rt.id IN ('9', '2', '12', '6', '10') GROUP BY rt.ROLE ORDER BY num_producer_companies DESC, num_people_with_alternate_names DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS total_features_links, c.name AS company_name, c.country_code AS company_country, MIN(m.info) AS movie_info FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN company_name c ON cc.movie_id = c.imdb_id JOIN link_type lt ON cc.subject_id = lt.id JOIN movie_info m ON ci.movie_id = m.movie_id WHERE m.info_type_id = '4' AND ci.note LIKE '%(segment "Laman")%' AND ci.person_id IN ('1523', '1842', '1395', '1462', '1527', '1496') AND cc.id IN ('3566', '4902', '2721') AND cc.movie_id IN ('1683114', '1664432') AND lt.id IN ('9', '16', '1', '7', '6', '18') AND lt.link IN ('features', 'follows') GROUP BY c.name, c.country_code;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_actors, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, MAX(mi.info) AS longest_movie_duration FROM title t JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') JOIN char_name cn ON cn.id IN (SELECT person_id FROM cast_info WHERE movie_id = t.id) JOIN role_type rt ON rt.id IN (SELECT role_id FROM cast_info WHERE person_id = cn.id) WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY t.kind_id ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, AVG(sub.keyword_count) AS average_keywords, COUNT(DISTINCT mk.movie_id) AS total_movies FROM movie_keyword mk JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) sub ON sub.movie_id = mk.movie_id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM title WHERE id = mk.movie_id LIMIT 1) JOIN movie_companies mc ON mc.movie_id = mk.movie_id JOIN company_type ct ON ct.id = mc.company_type_id WHERE ct.kind = 'production companies' AND kt.kind IN ('movie', 'tv series', 'mini series') AND EXISTS (SELECT 1 FROM title WHERE id = mk.movie_id AND production_year > 2000) GROUP BY ct.kind, kt.kind ORDER BY average_keywords DESC;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT an.id) AS number_of_alternative_names, COUNT(DISTINCT cct.id) AS number_of_cast_types, AVG(LENGTH(n.name)) AS average_actor_name_length FROM name n LEFT JOIN aka_name an ON n.id = an.person_id LEFT JOIN comp_cast_type cct ON an.id = cct.id WHERE n.name LIKE '%Amplify%' OR an.name IN ('Allen, ''Barefoot'' Chris', 'Alsamia, Etienne', 'Altamirano, Lisa Mariea', 'Aller, Gina', 'Smith, Mary Alice') GROUP BY n.gender;
SELECT cn.name AS company_name, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_runtime, SUM(CASE WHEN it.info = 'locations' THEN 1 ELSE 0 END) AS total_locations, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN complete_cast AS cc ON mi_idx.movie_id = cc.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE it.info IN ('runtimes', 'locations') AND cn.name_pcode_nf = 'G2642' GROUP BY cn.name ORDER BY average_runtime DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, COUNT(DISTINCT al.id) AS total_links, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = kt.id AND kt.kind = 'movie' THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = kt.id AND kt.kind = 'tv series' THEN 1 ELSE 0 END) AS total_tv_series FROM aka_title AS at JOIN kind_type AS kt ON at.kind_id = kt.id LEFT JOIN movie_link AS al ON at.movie_id = al.movie_id GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(aka.production_year) AS average_production_year, SUM(CASE WHEN mi.info_type_id = 100 THEN 1 ELSE 0 END) as total_type_100_info, SUM(CASE WHEN mi.info_type_id = 101 THEN 1 ELSE 0 END) as total_type_101_info, COUNT(DISTINCT pi.person_id) AS total_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, rt.ROLE AS role_type, COUNT(DISTINCT CASE WHEN rt.id IN (1, 10, 7) THEN pi.person_id END) AS count_specific_roles FROM movie_info mi JOIN aka_title aka ON mi.movie_id = aka.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN person_info pi ON pi.info IN ('1988', 'Gontkov√°, Olga', 'Wallerstein, Robin', 'Son with Booth: ''Al Adamson'' (qv)', 'Dresden, Germany', 'Adasky, Beryl') AND pi.note = 'woodyanders' LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN role_type rt ON rt.id IN (1, 10, 7) GROUP BY it.info, rt.ROLE ORDER BY total_movies DESC;
SELECT cty.kind AS company_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN pi.info LIKE '%England, UK' THEN 1 ELSE 0 END) AS count_uk_actors FROM cast_info ci JOIN person_info pi ON ci.person_id = pi.person_id JOIN company_type cty ON pi.info_type_id = cty.id WHERE cty.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY cty.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN al.title IS NOT NULL THEN 1 ELSE 0 END) AS number_of_alternate_titles, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM title AS t LEFT JOIN aka_title AS al ON t.id = al.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN keyword AS k ON k.phonetic_code = al.phonetic_code INNER JOIN company_type AS ct ON t.kind_id = ct.id WHERE t.production_year BETWEEN 2000 AND 2023 AND ml.linked_movie_id IN (16385, 2365137, 1412093, 1391187, 16056, 1432843) AND al.title IS NOT NULL AND k.keyword IN ('freezer', 'vengeance', 'undead', 'meat-cleaver') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, COUNT(DISTINCT at.movie_id) AS unique_movies, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN lt.link = 'alternate language version of' THEN 1 ELSE 0 END) AS alt_lang_versions, SUM(CASE WHEN lt.link = 'version of' THEN 1 ELSE 0 END) AS versions, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS features_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN movie_info_idx mii ON at.movie_id = mii.movie_id JOIN link_type lt ON mii.id = lt.id WHERE at.imdb_index = 'IV' AND at.episode_of_id IN ('11942', '6153', '1980', '7480', '8274') AND kt.kind IN ('tv series', 'video movie', 'video game', 'tv mini series') AND mii.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%0..11202%' OR info LIKE '.0..002212') GROUP BY kt.kind;
