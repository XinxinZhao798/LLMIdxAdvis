SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT comp.id) AS number_of_companies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS full_cast_movies, COUNT(DISTINCT mk.id) AS number_of_keywords, MAX(pi.id) AS max_person_info_id FROM aka_title AS at JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN company_name AS comp ON mc.company_id = comp.id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN movie_keyword AS mk ON at.movie_id = mk.movie_id LEFT JOIN person_info AS pi ON pi.person_id = at.movie_id WHERE at.kind_id = 1 AND mc.company_type_id IN (1, 2) AND cc.status_id IN (3, 4) AND at.production_year BETWEEN 1990 AND 2000 GROUP BY at.production_year ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IN (56, 1326) THEN 1 ELSE 0 END) AS count_special_roles, COUNT(DISTINCT cn.id) AS total_unique_characters, COUNT(DISTINCT k.id) AS total_unique_keywords, MAX(mi.info) AS longest_movie_info FROM cast_info ci JOIN char_name cn ON ci.person_id = cn.id JOIN movie_info mi ON ci.movie_id = mi.movie_id JOIN keyword k ON k.phonetic_code = 'O16' WHERE mi.info <> 'None' AND mi.info LIKE '%Czech%' GROUP BY ci.movie_id;
SELECT ct.kind AS company_type, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(k.id) AS keyword_count, SUM(CASE WHEN it.info = 'LD official retail price' THEN CAST(mi.info AS NUMERIC) ELSE 0 END) AS total_official_retail_price FROM company_type ct JOIN movie_info mi ON ct.id = mi.info_type_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN info_type it ON mi.info_type_id = it.id WHERE mk.keyword_id IN (2506, 2862, 589, 3476, 4237) AND k.phonetic_code IN ('D1653', 'H532', 'M6321', 'H4326', 'F2426', 'A3513') AND it.id IN (15, 16, 18, 76, 39, 111) AND mi.movie_id IN (9091, 13237, 927238) AND (mi.note ILIKE '%(English subtitles)%' OR mi.note ILIKE '%(Original version)%') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(distinct t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified, SUM(CASE WHEN cct.kind = 'crew' THEN 1 ELSE 0 END) AS total_crew, SUM(CASE WHEN cct.kind = 'cast' THEN 1 ELSE 0 END) AS total_cast, COUNT(distinct mk.keyword_id) AS number_of_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN comp_cast_type cct ON t.id = cct.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE kt.id IN (2, 6) AND kt.kind = 'video movie' AND cct.kind IN ('complete+verified', 'crew', 'cast') AND cct.id IN (2, 1, 4, 3) GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.note LIKE '%(producer)%' THEN 1 ELSE 0 END) AS total_producer_mentions, cct.kind AS cast_type_kind, MIN(cn.name) AS company_name, MAX(ci.nr_order) AS highest_cast_order FROM cast_info AS ci JOIN comp_cast_type AS cct ON ci.person_role_id = cct.id JOIN company_name AS cn ON cn.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN link_type AS lt ON ci.role_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id WHERE cct.kind IN ('complete', 'complete+verified') AND cn.name_pcode_sf IN ('C6532', 'L2653', 'U53', 'D252') AND (ci.note LIKE '%(producer)%' OR ci.note IS NULL) AND lt.id IN ('7', '15') GROUP BY cct.kind ORDER BY average_movie_rating DESC;
SELECT kt.kind AS movie_type, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS total_tv_movies, SUM(CASE WHEN mc.note LIKE '%(DVD)%' THEN 1 ELSE 0 END) AS total_dvd_movies, SUM(CASE WHEN mc.note LIKE '%(VHS)%' THEN 1 ELSE 0 END) AS total_vhs_movies FROM kind_type kt JOIN aka_title at ON kt.id = at.kind_id JOIN movie_companies mc ON at.movie_id = mc.movie_id JOIN cast_info ci ON at.movie_id = ci.movie_id GROUP BY kt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_casts, COUNT(DISTINCT cn.id) AS number_of_actors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.status_id = cct.id LEFT JOIN char_name AS cn ON cc.subject_id = cn.id WHERE mc.movie_id IN (27359, 1639517, 1663098) AND mc.company_id IN (SELECT company_id FROM movie_companies WHERE company_type_id IN (1, 2)) GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 1 ORDER BY number_of_movies DESC, average_rating DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movies_participated, AVG(mi_idx_nr_order.avg_nr_order) AS average_cast_order, SUM(CASE WHEN mi_info.info LIKE '%budget%' THEN 1 ELSE 0 END) AS budget_movies_count, MAX(CASE WHEN mi_info.info_type_id = (SELECT id FROM movie_info_idx WHERE info = 'release dates') THEN mi_info.info ELSE NULL END) AS latest_release_date FROM name n JOIN cast_info ci ON ci.person_id = n.id LEFT JOIN (SELECT movie_id, AVG(nr_order) AS avg_nr_order FROM cast_info GROUP BY movie_id) mi_idx_nr_order ON mi_idx_nr_order.movie_id = ci.movie_id LEFT JOIN movie_info mi_info ON mi_info.movie_id = ci.movie_id WHERE n.gender = 'm' AND n.surname_pcode IN ('A416', 'A43', 'A413', 'A462') GROUP BY n.name ORDER BY movies_participated DESC, average_cast_order;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS number_of_characters, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, SUM(CASE WHEN mc.note LIKE '%(TV)' THEN 1 ELSE 0 END) AS tv_releases_count, SUM(CASE WHEN mc.note LIKE '%(worldwide)%' THEN 1 ELSE 0 END) AS worldwide_releases_count FROM role_type rt JOIN char_name cn ON cn.id = rt.id JOIN movie_companies mc ON mc.movie_id = cn.id GROUP BY rt.ROLE ORDER BY number_of_characters DESC, number_of_companies_involved DESC;
SELECT AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT c.name) AS number_of_companies_involved, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, COUNT(DISTINCT cc.movie_id) AS movies_with_complete_cast FROM movie_info_idx mi_idx JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN complete_cast cc ON mc.movie_id = cc.movie_id JOIN char_name c ON cc.subject_id = c.id WHERE mi_idx.info_type_id = 101 AND mc.company_type_id = 1 AND mc.movie_id IN ('18480', '19586', '18553', '18572', '20750') AND (cc.movie_id = '1682331' OR cc.movie_id = '1683688') GROUP BY mc.company_type_id;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE mi.info_type_id = 101) AS average_rating, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.linked_movie_id IN (10496, 260662, 2464253, 553702, 58480, 2087155)) AS movies_with_specific_links FROM company_type ct JOIN movie_info mi ON mi.info ~ ct.kind JOIN movie_link ml ON mi.movie_id = ml.movie_id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT n.name AS actor_name, COUNT(ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_cast_position, MAX(a.production_year) AS latest_movie_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_productions, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributions FROM name n JOIN cast_info ci ON n.id = ci.person_id JOIN aka_title a ON ci.movie_id = a.movie_id JOIN movie_companies mc ON a.movie_id = mc.movie_id WHERE n.gender = 'F' AND ci.role_id = 1 AND a.production_year BETWEEN 2000 AND 2020 GROUP BY n.name ORDER BY movie_count DESC, average_cast_position, latest_movie_year DESC LIMIT 10;
SELECT pi.person_id, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS number_of_alias_roles, COUNT(DISTINCT pi.info_type_id) AS distinct_info_types FROM person_info pi JOIN cast_info ci ON pi.person_id = ci.person_id JOIN company_type ct ON ci.role_id = ct.id WHERE ci.person_id IN (1575, 1003, 1034, 1127, 1520, 1048) AND ci.note SIMILAR TO '%(\(pelotari\)|\(as [^)]+\)|\(2011\))%' GROUP BY pi.person_id ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, MIN(at.title) AS alternative_title, AVG(CASE WHEN mi.info_type_id = it.id AND it.info = 'rating' THEN CAST(mi.info AS FLOAT) END) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN mc.company_type_id = ct.id AND ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(at.production_year) AS latest_production_year FROM kind_type AS kt LEFT JOIN aka_title AS at ON kt.id = at.kind_id LEFT JOIN movie_info AS mi ON at.movie_id = mi.movie_id LEFT JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_companies AS mc ON at.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id WHERE at.production_year >= 1990 AND (at.title = 'The 11th Hour' OR at.title = 'Anna and Wulin' OR at.title = 'Arabian Tale') AND (at.imdb_index = 'I' OR at.imdb_index = 'III' OR at.imdb_index = 'IV') GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) FILTER (WHERE ct.kind = 'special effects companies') AS special_effects_companies_involved, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN aka_name AS an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND kt.kind IN ('tv movie', 'video movie', 'tv mini series', 'movie') GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS number_of_us_companies, MAX(pi.info) AS latest_info_entry FROM title AS t JOIN company_name AS cn ON t.id = cn.imdb_id JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN person_info AS pi ON pi.info LIKE '%USA%' WHERE t.production_year BETWEEN 1980 AND 1990 AND cn.country_code IN ('[us]', '[ca]') GROUP BY ct.kind ORDER BY number_of_titles DESC;
SELECT AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(mc.company_id) AS largest_company_id, MIN(t.production_year) AS earliest_production_year, SUM(t.episode_nr) AS total_episodes FROM cast_info AS ci JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN name AS n ON ci.person_id = n.id JOIN title AS t ON ci.movie_id = t.id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE ci.role_id = 1 AND n.imdb_index IN ('XI', 'IV', 'IX', 'XVII') AND k.keyword IN ('elevator-stuck-between-floors', 'pregnancy', 'snake', 'slave-owner') AND t.kind_id = 1 GROUP BY t.kind_id;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(LENGTH(note)) AS average_note_length, COUNT(DISTINCT cn.id) AS number_of_companies_involved, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, SUM(CASE WHEN ml.link_type_id = '9' THEN 1 ELSE 0 END) AS count_type_9_links, SUM(CASE WHEN ml.link_type_id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN ml.link_type_id = '5' THEN 1 ELSE 0 END) AS count_type_5_links, SUM(CASE WHEN ml.link_type_id = '13' THEN 1 ELSE 0 END) AS count_type_13_links FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT ci.id) AS total_cast_members, AVG(at.production_year) AS average_production_year, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT cc.id) AS total_complete_casts, STRING_AGG(DISTINCT lt.LINK, '; ') AS link_types_used FROM aka_title AS at JOIN cast_info AS ci ON at.movie_id = ci.movie_id JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN link_type AS lt ON cc.status_id = lt.id WHERE at.production_year > 2000 AND ci.note IS NOT NULL AND cc.id IN ('2731', '2678', '7', '3665') AND at.season_nr IN (8, 4, 11, 22) AND at.md5sum IN ('ae1ec4b6524d40f203cb722b6e74c9d6', '51978b45ff1151ec3cc873180401b93c') GROUP BY at.kind_id ORDER BY total_alternate_titles DESC, average_production_year;
SELECT COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT ci.movie_id) AS movies_with_keywords, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors, MIN(cn.name) AS company_name FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE k.keyword IN ('pearl', 'reference-to-john-the-baptist', 'gigantic-breasts', 'mental-abuse', 'hammer-moves-by-itself', 'picket-fence') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.info > '2.0' AND n.gender IN ('m', 'f') AND ci.note IN ('CelebrityLoop.com', 'Les Maykithappen', 'Guy Bellinger', 'Allegra Masters', 'Anonymous') GROUP BY cn.name ORDER BY average_movie_rating DESC, total_actors DESC LIMIT 1;
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) AS average_rating, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM kind_type kt JOIN movie_info mi ON mi.info_type_id = 4 JOIN movie_keyword mk ON mk.movie_id = mi.movie_id JOIN name n ON n.surname_pcode IN ('A43', 'A415', 'A451', 'A412') JOIN movie_link ml ON ml.movie_id = mk.movie_id WHERE kt.id IN (SELECT id FROM kind_type WHERE kind IN ('movie', 'tv series', 'video game', 'video movie', 'episode')) AND ml.linked_movie_id = 2405240 GROUP BY kt.kind;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT it.info AS information_type, COUNT(DISTINCT ml.id) AS total_movie_links, COUNT(DISTINCT pi.person_id) AS total_people_linked, AVG(LENGTH(pi.note)) AS average_note_length, SUM(CASE WHEN pi.info_type_id = 91 THEN 1 ELSE 0 END) AS count_of_tech_info FROM movie_link AS ml JOIN person_info AS pi ON ml.movie_id = pi.person_id OR ml.linked_movie_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE it.info = 'tech info' AND ml.link_type_id IN (SELECT id FROM info_type WHERE id IN (91, 73, 61, 38)) GROUP BY it.info;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mc.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_productions, t.production_year, t.kind_id FROM cast_info AS ci JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN title AS t ON ci.movie_id = t.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND t.production_year IS NOT NULL GROUP BY t.production_year, t.kind_id ORDER BY t.production_year DESC, average_rating DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT pi.person_id) AS total_actors, AVG(CAST(pi.info AS numeric)) AS average_rating, SUM(CASE WHEN pi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_main_roles FROM movie_link AS ml JOIN kind_type AS kt ON kt.id = ml.link_type_id JOIN person_info AS pi ON pi.person_id = ml.movie_id WHERE kt.kind IN ('video movie', 'tv movie', 'video game', 'episode') AND ml.linked_movie_id IN (825152, 1846684, 1922177) AND pi.person_id IN (1740363, 732, 286, 1740595, 2742) AND pi.info_type_id IN (1, 7) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(DISTINCT cn.id) AS company_count, COUNT(DISTINCT n.id) AS actor_count FROM movie_info mi JOIN kind_type kt ON mi.movie_id = kt.id JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN company_name cn ON mi.movie_id = cn.imdb_id JOIN cast_info ci ON ci.movie_id = mi.movie_id JOIN name n ON ci.person_id = n.id WHERE kt.id IN ('7', '1', '4') AND cn.name_pcode_sf IN ('F2365', 'Z3132', 'Y6253', 'F4231') AND mk.keyword_id IN ('3887', '4275', '3550', '4202') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') GROUP BY kt.kind;
SELECT mc.company_id, it.info AS keyword, COUNT(DISTINCT mk.movie_id) AS movies_count, AVG(sub.person_count) AS avg_cast_size FROM movie_keyword AS mk JOIN (SELECT id, info FROM info_type WHERE id IN (3708, 323, 4279) ) AS it ON it.id = mk.keyword_id JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id AND mc.company_type_id = 1 LEFT JOIN (SELECT ci.movie_id, COUNT(DISTINCT ci.person_id) AS person_count FROM cast_info AS ci GROUP BY ci.movie_id ) AS sub ON mk.movie_id = sub.movie_id GROUP BY mc.company_id, it.info ORDER BY mc.company_id, movies_count DESC;
SELECT COUNT(DISTINCT a.id) AS total_aka_titles, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT m.company_id) AS total_companies_involved, COUNT(DISTINCT n.id) AS total_unique_names, COUNT(DISTINCT ml.movie_id) AS total_movies_with_links, SUM(CASE WHEN a.production_year BETWEEN 1990 AND 2000 THEN 1 ELSE 0 END) AS titles_from_90s FROM aka_title AS a JOIN movie_companies AS m ON a.movie_id = m.movie_id JOIN name AS n ON n.md5sum = a.md5sum LEFT JOIN movie_link AS ml ON a.movie_id = ml.movie_id WHERE a.production_year IS NOT NULL AND m.note IS NOT NULL AND n.gender IN ('F', 'M') GROUP BY n.gender ORDER BY total_aka_titles DESC;
