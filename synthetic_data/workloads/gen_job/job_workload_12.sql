SELECT cn.name AS company_name, COUNT(DISTINCT pers_info.movie_id) AS number_of_movies, AVG(pers_info.avg_actor_age) AS average_actor_age, SUM(CASE WHEN mi_idx.info = 'color' THEN 1 ELSE 0 END) AS color_movie_count, SUM(CASE WHEN mi_idx.info = 'black and white' THEN 1 ELSE 0 END) AS bw_movie_count FROM company_name cn JOIN movie_info_idx mi_idx ON cn.imdb_id = mi_idx.movie_id JOIN (SELECT ci.movie_id, AVG(CAST(info AS INTEGER)) AS avg_actor_age FROM cast_info ci JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = 1 WHERE ci.role_id = (SELECT id FROM cast_info WHERE note = 'actor' LIMIT 1) GROUP BY ci.movie_id) pers_info ON mi_idx.movie_id = pers_info.movie_id WHERE cn.name_pcode_sf IN ('I5164', 'C3132') GROUP BY cn.name;
SELECT CT.kind AS company_type, COUNT(DISTINCT ML.movie_id) AS total_movies_linked, AVG(CAST(MI.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN ML.linked_movie_id IN ('583610', '1639457', '20479', '2056353', '346879') THEN 1 ELSE 0 END) AS specific_links_count FROM movie_link ML JOIN movie_info MI ON ML.movie_id = MI.movie_id AND MI.info_type_id = '4' JOIN company_name CN ON CN.imdb_id = ML.movie_id JOIN company_type CT ON CN.id = CT.id WHERE ML.link_type_id IN ('1', '2') GROUP BY CT.kind HAVING COUNT(DISTINCT ML.movie_id) > 10 ORDER BY average_rating DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS movie_count, AVG(CAST(mi.info AS DOUBLE PRECISION)) AS average_info_value, SUM(CAST(mi.info AS DOUBLE PRECISION)) AS total_info_value, COUNT(DISTINCT cc.subject_id) AS unique_subject_count, cct.kind AS cast_type_kind FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN kind_type kt ON kt.id = mi.movie_id JOIN complete_cast cc ON cc.movie_id = mi.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id WHERE kt.id IN ('3', '4') AND it.info IN ('LD subtitles', 'LD audio quality') AND cct.id = '3' AND kt.kind IN ('video movie', 'video game', 'tv mini series', 'episode') AND cct.kind IN ('complete+verified', 'complete') GROUP BY kt.kind, cct.kind;
SELECT t.title AS original_title, COUNT(ak.id) AS alternate_title_count, COUNT(DISTINCT mk.keyword_id) AS keyword_count, AVG(t.production_year) AS average_production_year FROM title t LEFT JOIN aka_title ak ON t.id = ak.movie_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE t.title LIKE '%Crime%' OR t.title LIKE '%Fashion%' GROUP BY t.title ORDER BY alternate_title_count DESC, keyword_count DESC;
SELECT rt.role AS role_type, COUNT(*) AS num_roles, AVG(cast(mi_idx.info AS double precision)) AS average_rating, SUM(cast(mi.info AS integer)) AS total_award_count FROM role_type AS rt JOIN char_name AS cn ON cn.id = rt.id JOIN movie_info_idx AS mi_idx ON cn.id = mi_idx.movie_id JOIN movie_info AS mi ON cn.id = mi.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') AND rt.role IN ('actor', 'actress', 'producer', 'director') GROUP BY rt.role ORDER BY num_roles DESC, average_rating DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_contributors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_contributors FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN name AS n ON mc.company_id = n.id GROUP BY kt.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN k.keyword = 'award' THEN 1 ELSE 0 END) AS total_award_keywords, SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_order_info FROM aka_title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_keyword AS mk ON t.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON t.movie_id = ci.movie_id WHERE kt.kind IN ('tv mini series', 'video movie', 'episode', 'tv movie') AND (k.phonetic_code = 'F3654' OR k.phonetic_code = 'E2135') AND t.season_nr IN (36, 9, 28, 2, 16, 3) AND NOT EXISTS ( SELECT 1 FROM movie_companies AS mc WHERE mc.movie_id = t.movie_id AND mc.note LIKE '%(USA)%' ) GROUP BY kt.kind ORDER BY total_titles DESC, average_production_year DESC;
SELECT AVG(cast_count) AS average_cast_per_movie, AVG(link_count) AS average_links_per_movie, COUNT(DISTINCT mi.info_type_id) AS unique_info_types FROM (SELECT movie_id, COUNT(*) AS cast_count FROM cast_info WHERE note LIKE '%(Band)%' GROUP BY movie_id) AS cast_counts JOIN (SELECT movie_id, COUNT(*) AS link_count FROM movie_link WHERE link_type_id IN (6, 5, 11, 15) GROUP BY movie_id) AS link_counts ON cast_counts.movie_id = link_counts.movie_id JOIN movie_info AS mi ON cast_counts.movie_id = mi.movie_id;
SELECT AVG(ak.title_count) AS average_title_count, MAX(ak.max_production_year) AS latest_production_year, MIN(ak.min_production_year) AS earliest_production_year, SUM(ak.title_count) AS total_titles, COUNT(DISTINCT ki.id) AS total_unique_keywords, COUNT(DISTINCT pi.person_id) AS total_unique_persons FROM (SELECT at.movie_id, COUNT(at.id) AS title_count, MAX(at.production_year) AS max_production_year, MIN(at.production_year) AS min_production_year FROM aka_title at GROUP BY at.movie_id ) ak LEFT JOIN movie_keyword mk ON mk.movie_id = ak.movie_id LEFT JOIN keyword ki ON ki.id = mk.keyword_id AND ki.keyword IN ('vampire-hunter', 'training', 'newspaper-editor', 'multiple-views', 'historical-fiction', 'forbidden-love') LEFT JOIN movie_info_idx mi ON mi.movie_id = ak.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id GROUP BY ki.keyword;
SELECT cn.name AS company_name, COUNT(DISTINCT at.title) AS total_titles, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(LENGTH(at.title)) AS average_title_length FROM company_name cn LEFT JOIN aka_title at ON cn.id = at.movie_id LEFT JOIN movie_keyword mk ON at.movie_id = mk.movie_id WHERE cn.country_code = 'US' GROUP BY cn.name ORDER BY total_titles DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(pk.count_per_keyword) AS average_keywords_per_movie, MAX(cast(pi.info as integer)) AS max_budget, MIN(cast(pi.info as integer)) AS min_budget FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN (SELECT movie_id, COUNT(keyword_id) AS count_per_keyword FROM movie_keyword GROUP BY movie_id) AS pk ON t.id = pk.movie_id LEFT JOIN person_info AS pi ON t.id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget') LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY t.production_year ORDER BY t.production_year;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keyword_count, SUM(CASE WHEN an.name_pcode_cf LIKE 'A%' THEN 1 ELSE 0 END) AS names_starting_with_a, COUNT(DISTINCT an.person_id) AS total_actors_with_alternate_names FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN aka_name AS an ON an.person_id = t.id JOIN company_type AS ct ON ct.id = t.kind_id WHERE t.production_year > 2000 AND mk.keyword_id IN (4192, 3543, 917, 3554) AND an.name_pcode_cf IN ('K365', 'J262', 'C4625', 'A1526') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT rt.ROLE, COUNT(mc.movie_id) AS number_of_movies, AVG(alt.production_year) AS average_production_year, SUM(CASE WHEN lt.LINK = 'sequel' THEN 1 ELSE 0 END) AS sequel_count, COUNT(DISTINCT mc.company_id) AS distinct_companies_involved FROM aka_title alt INNER JOIN movie_companies mc ON alt.movie_id = mc.movie_id INNER JOIN link_type lt ON lt.id = alt.kind_id INNER JOIN role_type rt ON rt.id = mc.company_type_id WHERE rt.id IN ('1', '8') GROUP BY rt.ROLE ORDER BY number_of_movies DESC;
SELECT t.title AS Movie_Title, COUNT(DISTINCT akn.id) AS Number_of_Aliases, COUNT(DISTINCT cn.id) AS Number_of_Characters, COUNT(DISTINCT mk.id) AS Number_of_Keywords, AVG(t.production_year) AS Average_Production_Year, SUM(CASE WHEN akn.name_pcode_cf IN ('A2312', 'A4565', 'A2651', 'T4236', 'K526', 'A1216') THEN 1 ELSE 0 END) AS Sum_Aliases_With_Specific_Pcodes, SUM(CASE WHEN akn.surname_pcode IN ('M53', 'Q53', 'L23') THEN 1 ELSE 0 END) AS Sum_Aliases_With_Specific_Surnames FROM title t LEFT JOIN aka_name akn ON t.id = akn.person_id LEFT JOIN char_name cn ON t.id = cn.imdb_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE mk.keyword_id IN ('2968', '2869', '3716', '2906') AND t.id IN ('199103', '150273', '87557') GROUP BY t.title ORDER BY Number_of_Aliases DESC, Number_of_Characters DESC;
SELECT COUNT(DISTINCT an.id) AS number_of_aka_names, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN cc.movie_id = 86434 THEN 1 ELSE 0 END) AS count_movie_86434, SUM(CASE WHEN cc.movie_id = 1676869 THEN 1 ELSE 0 END) AS count_movie_1676869, it.info AS information_type, MAX(an.name) AS most_common_alias FROM aka_name an JOIN complete_cast cc ON an.person_id = cc.subject_id JOIN info_type it ON cc.status_id = it.id GROUP BY it.info ORDER BY number_of_aka_names DESC, average_status_id;
SELECT nt.info AS movie_genre, COUNT(DISTINCT cn.id) AS num_of_actors, AVG((n.gender = 'M')::int) AS avg_male_actors, AVG((n.gender = 'F')::int) AS avg_female_actors, SUM(CASE WHEN cn.id IN ('75924', '37156', '79891', '61423', '79360') THEN 1 ELSE 0 END) AS special_char_count, cname.name AS frequent_production_company, MAX(mi_idx.info) AS longest_movie_description FROM char_name cn JOIN name n ON cn.id = n.id JOIN movie_info_idx mi_idx ON n.id = mi_idx.movie_id JOIN info_type nt ON mi_idx.info_type_id = nt.id JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN company_name cname ON mc.company_id = cname.id WHERE n.md5sum IN ('5867f236efd2a49e525e28170e53884f', 'e30d31437d0cc24a549ebe11e068d91c', '103b12a2a1f067552d1582f217894732', '937aa89fd20c81ec429381d29296632e', 'b19e28f6480e3653f20f36528b67ddfd', 'ee97cefd84759ed4ec46f94d2e8962ed') AND cname.name IN ('Jamtown Films', 'Ovie Entertainment', 'Canibal Friends', 'Rocket Sheep Boom', 'Yarnmaker', 'Toko-Tokuma') AND nt.info IN ('LD dialogue intellegibility', 'book', 'tech info') GROUP BY nt.info, cname.name ORDER BY num_of_actors DESC, avg_male_actors DESC;
SELECT k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, COUNT(DISTINCT n.id) AS number_of_actors FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info AS mi ON mk.movie_id = mi.movie_id AND mi.info_type_id = 4 INNER JOIN name AS n ON mi.movie_id = n.imdb_id WHERE mk.keyword_id IN (3881, 2089, 3415, 3648) GROUP BY k.keyword ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_produced_after_2000 FROM aka_name an INNER JOIN name n ON an.person_id = n.id INNER JOIN aka_title at ON n.id = at.movie_id INNER JOIN title t ON at.movie_id = t.id INNER JOIN kind_type kt ON t.kind_id = kt.id INNER JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN char_name chn ON an.person_id = chn.id WHERE (chn.name = 'Clarkson' OR chn.name = 'Miguelito' OR chn.name = 'Basket coach') GROUP BY kt.kind;
SELECT COUNT(DISTINCT ml.movie_id) AS num_movies, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies, AVG(sub.num_keywords) AS avg_keywords_per_movie, SUM(CASE WHEN pi.info_type_id = '34' THEN 1 ELSE 0 END) AS count_info_type_34, SUM(CASE WHEN pi.info_type_id = '25' THEN 1 ELSE 0 END) AS count_info_type_25 FROM movie_link AS ml JOIN (SELECT mk.movie_id, COUNT(mk.keyword_id) AS num_keywords FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub ON ml.movie_id = sub.movie_id LEFT JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY ml.link_type_id;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, SUM(CASE WHEN k.keyword = 'contest' THEN 1 ELSE 0 END) AS total_contest_keyword, SUM(CASE WHEN k.keyword = 'shield' THEN 1 ELSE 0 END) AS total_shield_keyword FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN cast_info ci ON ci.person_id = cn.id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN keyword k ON k.id = mk.keyword_id WHERE k.phonetic_code IN ('P2353', 'C2535', 'P6215') AND mk.keyword_id IN ('1071', '3527', '3569', '2390');
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(subquery.avg_keyword_count) AS average_keywords_per_movie FROM kind_type kt JOIN movie_keyword mk ON mk.movie_id = kt.id JOIN (SELECT movie_id, AVG(keyword_count) AS avg_keyword_count FROM (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS sub GROUP BY movie_id) AS subquery ON subquery.movie_id = mk.movie_id WHERE kt.id IN (4, 3, 7) AND mk.keyword_id = 1463 GROUP BY kt.kind;
