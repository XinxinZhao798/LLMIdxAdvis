SELECT rt.ROLE AS role_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies_count FROM role_type rt LEFT JOIN comp_cast_type cct ON rt.id = cct.id LEFT JOIN company_name cn ON cn.name_pcode_nf = 'M5236' OR cn.name_pcode_sf = 'L5612' LEFT JOIN movie_keyword mk ON mk.keyword_id IN (3479, 3152) WHERE cn.id IN (69171, 31595, 57187, 23935, 26659, 14910) AND rt.id IN (6, 5, 1, 7, 2) GROUP BY rt.ROLE ORDER BY number_of_companies DESC, number_of_movies_with_keywords DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CASE WHEN mi_idx.info_type_id = 100 THEN CAST(mi_idx.info AS FLOAT) END) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 101 THEN CAST(mi_idx.info AS INTEGER) END) AS total_budget, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved FROM movie_info_idx mi_idx JOIN company_type ct ON mi_idx.info_type_id = ct.id LEFT JOIN person_info pi ON mi_idx.movie_id = pi.person_id WHERE mi_idx.info_type_id IN (100, 101, 99) GROUP BY ct.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(cn.imdb_id::NUMERIC) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'us' THEN 1 ELSE 0 END) AS num_us_companies, COUNT(DISTINCT cn.id) AS num_companies_involved FROM movie_keyword AS mk JOIN movie_info AS mi ON mk.movie_id = mi.movie_id JOIN kind_type AS kt ON mi.info_type_id = kt.id AND kt.id IN ('2', '3', '4', '5', '6') JOIN company_name AS cn ON mk.movie_id = cn.imdb_id WHERE (mk.keyword_id IN ('3195', '2832', '4019', '2965', '3002') OR mi.info IN ('Albanian', 'Norwegian', 'Ladino', 'Filipino', 'Estonian')) AND cn.name_pcode_nf IN ('R5365', 'C514', 'E5314', 'L532') AND cn.id IN ('23278', '44380', '28077', '6858', '43412', '27250') GROUP BY kt.kind;
SELECT c.id AS company_id, c.name AS company_name, COUNT(DISTINCT m.id) AS number_of_movies, AVG(mi_numeric.info::FLOAT) AS average_movie_length, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_actors, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(ci.nr_order) AS max_cast_order, MIN(mc.note) AS earliest_production_note FROM movie_companies mc JOIN company_name c ON mc.company_id = c.id JOIN title m ON mc.movie_id = m.id LEFT JOIN movie_info mi ON m.id = mi.movie_id LEFT JOIN movie_info_idx mi_idx ON m.id = mi_idx.movie_id LEFT JOIN info_type it1 ON mi.info_type_id = it1.id AND it1.info = 'running time' LEFT JOIN cast_info ci ON m.id = ci.movie_id LEFT JOIN movie_keyword mk ON m.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_info mi_numeric ON m.id = mi_numeric.movie_id AND mi_numeric.info_type_id = it1.id WHERE c.country_code = '[us]' AND mi_numeric.info ~ '^[0-9]+(\.[0-9]+)?$' GROUP BY c.id, c.name ORDER BY number_of_movies DESC, average_movie_length DESC LIMIT 10;
SELECT rt.ROLE as role_type, COUNT(DISTINCT ci.person_id) as num_people, AVG(ci.nr_order) as average_order, SUM(CASE WHEN lt.link = 'referenced in' THEN 1 ELSE 0 END) as num_referenced_in, COUNT(DISTINCT cc.subject_id) as num_unique_subjects FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id LEFT JOIN link_type lt ON lt.id = cc.status_id WHERE rt.ROLE IN ('actress', 'writer') AND (lt.link = 'referenced in' OR lt.link = 'edited from') GROUP BY rt.ROLE ORDER BY num_people DESC;
SELECT rt.ROLE, COUNT(*) AS total_roles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_imdb_index_I, SUM(CASE WHEN t.imdb_index = 'II' THEN 1 ELSE 0 END) AS count_imdb_index_II, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS count_imdb_index_V, COUNT(DISTINCT t.id) AS unique_titles, COUNT(DISTINCT k.id) AS unique_keywords FROM role_type rt LEFT JOIN char_name cn ON rt.id = cn.id LEFT JOIN movie_keyword mk ON cn.id = mk.keyword_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN title t ON mk.movie_id = t.id WHERE rt.id IN (3, 9, 8, 1, 11) AND t.production_year IS NOT NULL AND ( cn.name_pcode_nf IN ('R13', 'C6456', 'J326', 'R25', 'A3235', 'L6324') OR cn.surname_pcode = 'G16' ) GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN name n ON mc.company_id = n.id WHERE ct.kind IN ('production companies', 'special effects companies', 'distributors') GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender != 'm' THEN 1 ELSE 0 END) AS non_male_actors_count, cct.kind AS cast_type, COUNT(DISTINCT t.id) AS number_of_titles, MAX(t.production_year) AS latest_production_year FROM name n JOIN aka_name an ON n.id = an.person_id JOIN complete_cast cc ON n.id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id JOIN title t ON cc.movie_id = t.id WHERE cc.status_id IN (3, 4) AND cct.id IN (4, 3, 1) AND n.name_pcode_cf = 'A43' AND n.gender = 'm' GROUP BY cct.kind ORDER BY number_of_actors DESC, average_production_year DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN title t ON ci.movie_id = t.id JOIN movie_companies mc ON t.id = mc.movie_id WHERE rt.ROLE IN ('director', 'production designer', 'costume designer', 'composer') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, SUM(CASE WHEN cn.country_code = '[sd]' THEN 1 ELSE 0 END) AS sudanese_company_movies, SUM(CASE WHEN cn.country_code = '[dz]' THEN 1 ELSE 0 END) AS algerian_company_movies, SUM(CASE WHEN cn.country_code = '[dm]' THEN 1 ELSE 0 END) AS dominican_company_movies, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN movie_info_idx AS mi_votes ON mi_idx.movie_id = mi_votes.movie_id AND mi_votes.info_type_id = 41 JOIN company_name AS cn ON mi_idx.movie_id = cn.imdb_id LEFT JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE mi_idx.info_type_id IN (112, 72) AND kt.id IN (2, 1, 3) GROUP BY kt.kind;
SELECT AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(mc.company_id) AS largest_company_id, MIN(t.production_year) AS earliest_production_year, SUM(t.episode_nr) AS total_episodes FROM cast_info AS ci JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN name AS n ON ci.person_id = n.id JOIN title AS t ON ci.movie_id = t.id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE ci.role_id = 1 AND n.imdb_index IN ('XI', 'IV', 'IX', 'XVII') AND k.keyword IN ('elevator-stuck-between-floors', 'pregnancy', 'snake', 'slave-owner') AND t.kind_id = 1 GROUP BY t.kind_id;
SELECT kt.kind AS movie_kind, COUNT(*) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS color_movie_count, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS black_and_white_movie_count FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_info AS mi ON t.id = mi.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('color', 'black and white')) GROUP BY kt.kind HAVING COUNT(*) > 100 ORDER BY total_movies DESC, average_production_year;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS number_of_movies, cct.kind, k.keyword, SUM(CASE WHEN akat.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, SUM(CASE WHEN akat.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title akat JOIN comp_cast_type cct ON akat.kind_id = cct.id JOIN keyword k ON k.id IN (58, 8642, 3881, 5552, 5846) WHERE akat.production_year > 1990 AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind, k.keyword ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT AVG(CAST(pi.info AS numeric)) AS average_rating, COUNT(cc.id) AS total_cast_members, COUNT(DISTINCT at.id) AS total_alternate_titles, SUM(CASE WHEN at.title ILIKE '%love%' THEN 1 ELSE 0 END) AS titles_with_love FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN person_info pi ON cc.movie_id = pi.person_id WHERE at.movie_id IN (52294, 98509, 1635723, 1678623) AND pi.info_type_id = 101 GROUP BY at.movie_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(ml.link_type_id) AS average_link_type_id, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS producer_roles_count, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS actress_roles_count FROM movie_link AS ml JOIN kind_type AS kt ON ml.movie_id = kt.id JOIN role_type AS rt ON ml.link_type_id = rt.id WHERE kt.kind IN ('movie', 'tv mini series', 'episode') AND rt.role IN ('guest', 'cinematographer', 'producer', 'actress') GROUP BY kt.kind;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_males, COUNT(DISTINCT ml.movie_id) AS unique_movies_linked FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN name AS n ON ml.linked_movie_id = n.id WHERE lt.LINK IN ('features', 'featured in', 'spin off from', 'follows', 'followed by') AND ml.linked_movie_id IN (2362378, 227254, 1337065, 1230549) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT n.name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT ci.role_id) AS total_distinct_roles FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id WHERE mk.keyword_id IN (3583, 3557) GROUP BY n.name ORDER BY total_movies DESC, average_cast_position;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS avg_female_participation, SUM(CASE WHEN it.info = 'article' THEN 1 ELSE 0 END) AS num_articles, SUM(CASE WHEN it.info = 'printed media reviews' THEN 1 ELSE 0 END) AS num_media_reviews FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN name AS n ON mc.company_id = n.id JOIN person_info AS pi ON n.id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY num_movies DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS avg_cast_position, SUM(case when cct.kind = 'cast' then 1 else 0 end) AS total_cast_entries, SUM(case when cct.kind = 'crew' then 1 else 0 end) AS total_crew_entries, MAX(n.name) AS most_recently_added_person, COUNT(DISTINCT mc.company_id) AS num_companies_involved, COUNT(DISTINCT k.id) AS num_keywords_associated FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN name n ON ci.person_id = n.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN keyword k ON k.id = ANY (SELECT mk.keyword_id FROM movie_keyword mk WHERE mk.movie_id = ci.movie_id) WHERE mc.movie_id IN ('10521', '18817') AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN pi.info_type_id = 38 THEN 1 ELSE 0 END) AS total_awards_won, COUNT(DISTINCT at.id) AS number_of_alternative_titles FROM name AS n JOIN person_info AS pi ON n.id = pi.person_id LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN aka_title AS at ON at.movie_id = an.person_id WHERE pi.info_type_id IN (34, 35, 38) AND n.gender = 'M' AND (at.season_nr = 28 OR at.season_nr IS NULL) GROUP BY n.gender;
SELECT COUNT(DISTINCT cn.id) AS number_of_characters, COUNT(DISTINCT kw.id) AS number_of_keywords, COUNT(DISTINCT lt.id) AS number_of_link_types, AVG(mi.movie_id) AS average_movie_id, SUM(CASE WHEN lt.link = 'remake of' THEN 1 ELSE 0 END) AS count_remake_of_links, SUM(CASE WHEN lt.link = 'referenced in' THEN 1 ELSE 0 END) AS count_referenced_in_links, SUM(CASE WHEN lt.link = 'references' THEN 1 ELSE 0 END) AS count_references_links, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS count_features_links, AVG(CASE WHEN kw.id = '1157' THEN mi.movie_id END) AS average_movie_id_with_keyword_1157, AVG(CASE WHEN kw.id = '6848' THEN mi.movie_id END) AS average_movie_id_with_keyword_6848 FROM char_name AS cn FULL OUTER JOIN keyword AS kw ON cn.id = kw.id FULL OUTER JOIN link_type AS lt ON cn.id = lt.id FULL OUTER JOIN movie_info AS mi ON cn.id = mi.id WHERE cn.name LIKE 'A%' AND (kw.keyword LIKE '%love%' OR kw.keyword LIKE '%hate%') AND lt.id IN ('1', '18', '16', '12', '3', '13') AND (lt.link LIKE '%link%' OR lt.link LIKE '%remake%');
SELECT COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cn.id) AS num_companies, AVG(complete_cast.status_id) AS avg_status_id, SUM(CASE WHEN pi.info_type_id = 19 THEN 1 ELSE 0 END) AS count_info_type_19, SUM(CASE WHEN pi.info_type_id = 20 THEN 1 ELSE 0 END) AS count_info_type_20, COUNT(DISTINCT mk.keyword_id) AS num_keywords FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = ci.movie_id JOIN complete_cast ON complete_cast.movie_id = ci.movie_id JOIN person_info pi ON pi.person_id = ci.person_id WHERE ci.note NOT LIKE '%(archive footage)%' AND cn.country_code = 'US' AND complete_cast.subject_id = 1 AND (pi.info LIKE '%Stage:%' OR pi.info LIKE '%AIDS%') GROUP BY cn.country_code;
SELECT AVG(at.note_length) AS avg_note_length, COUNT(DISTINCT kw.id) AS num_unique_keywords, COUNT(DISTINCT at.id) AS num_titles, SUM(CASE WHEN at.episode_nr = 155 THEN 1 ELSE 0 END) AS num_episode_155, STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords_list FROM ( SELECT id, movie_id, episode_nr, LENGTH(note) AS note_length FROM aka_title WHERE note LIKE '%(Australia) (fake working title)%' ) AS at JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN keyword AS kw ON cn.country_code = kw.phonetic_code WHERE kw.keyword IN ('handcuffed-to-someone', 'religious', 'drug-trafficking', 'conservatory', 'scientology', 'horse-riding') AND ct.kind = 'production companies' GROUP BY cn.country_code;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, SUM(pi.id) AS total_person_info_records, COUNT(DISTINCT k.id) AS unique_keywords_count FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN name AS n ON mc.movie_id = n.id JOIN person_info AS pi ON pi.person_id = n.id JOIN keyword AS k ON k.id = pi.id WHERE kt.id IN ('7', '6', '2', '5') AND k.keyword IN ('24-hours', 'compassion') AND n.surname_pcode IN ('A415', 'A4') AND pi.note IN ('Jack Backstreet', 'Zaid Adham', 'David Adler', 'John Dream', 'Trace''s Publicist') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind as Movie_Type, AVG(t.production_year) as Average_Production_Year, COUNT(DISTINCT t.id) as Total_Movies, COUNT(DISTINCT ml.movie_id) as Movies_With_Links, SUM(CASE WHEN t.series_years LIKE '2004-____' THEN 1 ELSE 0 END) as Movies_From_2004_onwards FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id IN ('16', '13', '8') WHERE kt.kind IN ('tv mini series', 'tv movie', 'video game', 'movie') GROUP BY kt.kind;
