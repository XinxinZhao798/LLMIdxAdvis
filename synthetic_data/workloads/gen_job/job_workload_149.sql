SELECT it.info AS info_type, COUNT(mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS DOUBLE PRECISION)) AS average_info_value, SUM(CAST(mi.info AS DOUBLE PRECISION)) AS total_info_value, rt.ROLE AS role, COUNT(n.id) AS number_of_people FROM movie_info_idx mi JOIN info_type it ON mi.info_type_id = it.id JOIN name n ON n.id = mi.movie_id JOIN role_type rt ON n.id = mi.movie_id WHERE mi.movie_id IN (12235, 14532, 17098, 18783) AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('death date', 'pictorial', 'LD laserdisc title')) AND rt.id IN (3, 11) AND n.name_pcode_cf IN ('A616', 'A5136') GROUP BY it.info, rt.ROLE ORDER BY number_of_movies DESC;
SELECT cnt.kind AS company_type, AVG(mc_notes.note_length) AS average_note_length, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mc.movie_id) AS movies_involved, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cnt ON mc.company_type_id = cnt.id LEFT JOIN ( SELECT movie_id, company_id, LENGTH(note) as note_length FROM movie_companies WHERE note IS NOT NULL ) AS mc_notes ON mc.movie_id = mc_notes.movie_id AND mc.company_id = mc_notes.company_id LEFT JOIN ( SELECT name.id, name.gender FROM name WHERE name.gender IN ('F', 'M') ) AS n ON mc.company_id = n.id GROUP BY cnt.kind ORDER BY cnt.kind;
SELECT rt.ROLE AS role, COUNT(DISTINCT ci.person_id) AS unique_person_count, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_produced_movies, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN role_type rt ON ci.role_id = rt.id JOIN company_name cn ON cn.imdb_id = t.imdb_id WHERE t.series_years IN ('1985-1987', '2000-2004', '2010-2011') AND t.episode_of_id IS NULL AND rt.ROLE IN ('producer', 'costume designer', 'director') AND ci.role_id = rt.id AND (cn.country_code IN ('[md]', '[ro]', '[kr]', '[br]', '[sa]') OR cn.country_code = '[us]') GROUP BY rt.ROLE;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS movie_count, AVG(LENGTH(k.phonetic_code)) AS avg_phonetic_code_length, COUNT(DISTINCT rt.id) AS distinct_role_types FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN cast_info AS ci ON mk.movie_id = ci.movie_id JOIN role_type AS rt ON ci.role_id = rt.id WHERE mk.movie_id IN ('12183', '10549', '12251', '15502', '13890', '9703') AND mk.keyword_id IN ('2957', '3334', '3038', '2036') GROUP BY k.keyword ORDER BY movie_count DESC, avg_phonetic_code_length;
SELECT mc.company_type_id, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_series_movies, ROUND(AVG(t.production_year), 2) AS average_production_year, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producer_roles FROM title t JOIN movie_companies mc ON mc.movie_id = t.id LEFT JOIN role_type rt ON rt.id = mc.company_type_id WHERE t.production_year > 2000 GROUP BY mc.company_type_id HAVING COUNT(DISTINCT t.id) > 0 ORDER BY number_of_movies DESC, total_series_movies DESC;
SELECT ct.kind AS company_category, COUNT(DISTINCT ml.movie_id) AS total_movies_linked, COUNT(DISTINCT akn.person_id) AS distinct_person_count, SUM(CASE WHEN ml.id IN ('3629', '2913', '3444', '4653', '4412', '4422') THEN 1 ELSE 0 END) AS special_movie_links_count FROM movie_link AS ml JOIN company_type AS ct ON ct.kind IN ('special effects companies', 'miscellaneous companies') LEFT JOIN aka_name AS akn ON akn.person_id = ml.movie_id GROUP BY ct.kind;
SELECT mk.movie_id, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(LENGTH(pi.note)) AS average_note_length, COUNT(DISTINCT lt.id) AS total_distinct_link_types FROM movie_keyword AS mk LEFT JOIN person_info AS pi ON mk.movie_id = pi.person_id LEFT JOIN link_type AS lt ON mk.movie_id = lt.id WHERE mk.keyword_id IN (820, 3672, 3996, 3616, 1099) GROUP BY mk.movie_id ORDER BY total_keywords DESC, average_note_length DESC;
SELECT AVG(acast.cnt) AS average_cast_per_movie, AVG(alink.link_cnt) AS average_links_per_movie, SUM(kw.keyword_count) AS total_keyword_occurrences, COUNT(DISTINCT atitle.movie_id) AS count_distinct_movies FROM (SELECT movie_id, COUNT(*) AS cnt FROM cast_info GROUP BY movie_id) AS acast JOIN aka_title atitle ON acast.movie_id = atitle.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS link_cnt FROM movie_link GROUP BY movie_id) AS alink ON atitle.movie_id = alink.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS keyword_count FROM keyword INNER JOIN movie_keyword ON keyword.id = movie_keyword.keyword_id GROUP BY movie_id) AS kw ON atitle.movie_id = kw.movie_id WHERE atitle.production_year IS NOT NULL AND atitle.production_year >= 2000 AND atitle.kind_id = 1 AND (atitle.note LIKE '%(International: English title)%' OR atitle.note LIKE '%(Hong Kong: Mandarin title)%') AND EXISTS (SELECT 1 FROM cast_info WHERE cast_info.movie_id = atitle.movie_id AND person_role_id IN (1210, 1072, 1419)) AND EXISTS (SELECT 1 FROM info_type WHERE id IN (68, 61)) AND EXISTS (SELECT 1 FROM keyword WHERE keyword IN ('assumed-identity', 'midnight-snack', 'dyslexia') AND id IN (SELECT keyword_id FROM movie_keyword WHERE movie_id = atitle.movie_id)) GROUP BY atitle.production_year ORDER BY atitle.production_year DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ml.link_type_id = 9 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT k.id) AS distinct_keywords, COUNT(DISTINCT mi_idx.movie_id) AS movies_with_trivia, MAX(t.production_year) AS latest_movie_year, MIN(t.production_year) AS earliest_movie_year FROM title AS t LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN info_type AS it ON mi_idx.info_type_id = it.id AND it.info = 'trivia' LEFT JOIN keyword AS k ON k.keyword = 'sequel' WHERE t.kind_id IN (SELECT id FROM comp_cast_type WHERE kind IN ('feature', 'tv series')) AND (ml.link_type_id IN (9, 5, 11, 16, 12, 15) OR ml.link_type_id IS NULL) AND (ml.linked_movie_id IN (1606280, 1432513, 1440129, 10552, 453927, 2160552) OR ml.linked_movie_id IS NULL) GROUP BY t.kind_id;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.series_years LIKE '1990-1991' THEN 1 ELSE 0 END) AS count_1990_1991_series, COUNT(DISTINCT k.id) AS unique_keywords, lt.LINK AS link_type, AVG(t.episode_nr) AS average_episode_number FROM movie_companies mc JOIN title t ON mc.movie_id = t.id LEFT JOIN keyword k ON t.id = k.id JOIN link_type lt ON lt.id = mc.company_type_id WHERE t.production_year > 1980 AND (t.series_years LIKE '1990-1991' OR t.series_years LIKE '2005-2006') AND mc.company_id IN (SELECT company_id FROM movie_companies WHERE movie_id = 22464) AND lt.id IN (2, 10) GROUP BY lt.LINK ORDER BY number_of_movies DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT cn.id) AS character_count, AVG(mk.keyword_id) AS average_keyword_id, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS direct_movie_links, COUNT(DISTINCT ml.movie_id) AS linked_movies_count FROM name n JOIN aka_name an ON n.id = an.person_id JOIN char_name cn ON an.id = cn.imdb_id JOIN movie_keyword mk ON cn.id = mk.movie_id JOIN movie_link ml ON mk.movie_id = ml.movie_id WHERE n.gender = 'm' GROUP BY n.name;
SELECT kt.kind AS kind_of_movie, AVG(mi_idx.info::NUMERIC) AS average_rating, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS number_of_black_and_white_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE t.production_year IN (1976, 1989, 1952, 1990, 1959, 1967) AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('color', 'black and white')) AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY kt.kind ORDER BY average_rating DESC;
