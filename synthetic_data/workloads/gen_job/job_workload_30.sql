SELECT ct.kind AS company_kind, COUNT(*) AS total_movies, AVG(cc.status_id) AS average_status_id, SUM(case when cc.subject_id = 1 then 1 else 0 end) AS subject_1_movie_count, COUNT(DISTINCT k.id) AS unique_keywords_count FROM complete_cast AS cc JOIN company_name AS cn ON cc.movie_id = cn.imdb_id JOIN company_type AS ct ON cn.id = ct.id JOIN movie_keyword AS mk ON cc.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE cc.status_id = 3 AND cc.subject_id = 1 AND cn.country_code SIMILAR TO '(\[ae\]|\[hu\]|\[tj\]|\[cu\]|\[is\])' AND k.id IN (9868, 4714, 290, 4495, 1113) GROUP BY ct.kind;
SELECT t.title AS Movie_Title, t.production_year AS Production_Year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords, COUNT(DISTINCT mc.company_id) AS Number_of_Companies_Involved, AVG(t.production_year) OVER () AS Average_Production_Year, COUNT(*) OVER () AS Total_Movies_Analyzed FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ml.link_type_id IN ('12', '11', '13', '6') AND t.series_years IN ('1985-????', '2004-????', '2013-????', '1988-????', '2010-2010') AND t.production_year > (SELECT AVG(production_year) FROM title) GROUP BY t.id HAVING COUNT(DISTINCT mk.keyword_id) > 5 ORDER BY Number_of_Keywords DESC, Production_Year DESC;
SELECT kt.kind AS movie_kind, AVG(CAST(mi.info AS INTEGER)) AS average_budget, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT at.id) AS number_of_alternate_titles, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS completed_cast_count FROM movie_info mi JOIN movie_companies mc ON mc.movie_id = mi.movie_id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM aka_title WHERE movie_id = mi.movie_id LIMIT 1) LEFT JOIN aka_title at ON at.movie_id = mi.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = mi.movie_id WHERE mi.info_type_id = 3 AND mc.company_type_id = 2 AND mi.movie_id IN ('929898', '931171', '924369', '925167', '939922') AND kt.kind <> 'tv series' GROUP BY kt.kind ORDER BY average_budget DESC;
SELECT it.info AS information_type, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_value, COUNT(DISTINCT ml.movie_id) AS number_of_related_movies, COUNT(DISTINCT n.id) AS number_of_unique_actors, SUM(CASE WHEN rt.role = 'writer' THEN 1 ELSE 0 END) AS writers_count, SUM(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS composers_count, SUM(CASE WHEN rt.role = 'costume designer' THEN 1 ELSE 0 END) AS costume_designers_count FROM info_type it LEFT JOIN movie_info_idx mi_idx ON it.id = mi_idx.info_type_id LEFT JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id LEFT JOIN complete_cast cc ON mi_idx.movie_id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN role_type rt ON cc.status_id = rt.id WHERE it.info IN ('LD year', 'top 250 rank', 'keywords', 'LD disc format', 'release dates') AND lt.link IN ('spin off from', 'spoofed in', 'featured in') AND rt.role IN ('costume designer', 'composer', 'writer', 'miscellaneous crew') GROUP BY it.info;
SELECT cct.kind AS cast_type, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN at.production_year >= 2000 THEN 1 ELSE 0 END) AS films_since_2000, COUNT(DISTINCT at.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year FROM cast_info ci JOIN aka_title at ON ci.movie_id = at.movie_id JOIN comp_cast_type cct ON ci.role_id = cct.id WHERE ci.person_id IN ('1348', '1765', '1800', '1112', '1381', '1614') AND cct.id IN ('3', '4', '2') GROUP BY cct.kind ORDER BY number_of_actors DESC;
SELECT AVG(mi_idx.info::numeric) AS average_movie_rating, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(cn.name) AS largest_company_name, ct.kind AS company_type, MIN(lt.link) AS link_type_description, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN company_name cn ON cn.country_code = '[lv]' OR cn.country_code = '[by]' JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON lt.id = mi_idx.info_type_id WHERE mi_idx.info_type_id = (SELECT id FROM link_type WHERE link = 'edited from') AND (k.keyword = 'blind-woman' OR k.keyword = 'weather-forecasting') AND cn.name_pcode_sf IN ('O2163', 'G4214', 'A4314') GROUP BY ct.kind ORDER BY average_movie_rating DESC;
SELECT cn.name AS company_name, COUNT(mc.movie_id) AS number_of_movies, AVG(cast(mi_idx.info AS numeric)) AS average_movie_rating, SUM(CASE WHEN lt.LINK = 'distributor' THEN 1 ELSE 0 END) AS distribution_deals_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN link_type AS lt ON mc.company_type_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.company_id IN ('908', '1169', '855') AND mc.company_type_id = '1' AND cn.name IN ('StudioCanal', 'Dollhouse', 'Images Film Library', 'Creative Video Features', 'Afterschool Special', 'Star Creations International') GROUP BY cn.name ORDER BY number_of_movies DESC, average_movie_rating DESC;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN cn.country_code LIKE 'US%' THEN 1 ELSE 0 END) AS total_usa_productions FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id JOIN company_name AS cn ON akat.movie_id = cn.imdb_id WHERE akat.production_year BETWEEN 1990 AND 2000 AND kt.kind IN ('tv movie', 'movie') AND cn.country_code IN ('USA', 'CAN', 'GBR') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_since_2000 FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN company_type AS ct ON t.kind_id = ct.id WHERE ct.kind IN ('special effects companies', 'distributors') AND t.production_year IS NOT NULL GROUP BY ct.kind;
SELECT AVG(pi.id) AS average_person_info_id, COUNT(DISTINCT an.person_id) AS unique_aka_person_count, COUNT(DISTINCT lt.id) AS link_type_count, SUM(CASE WHEN an.name IS NOT NULL THEN 1 ELSE 0 END) AS not_null_aka_names, MAX(an.id) AS max_aka_name_id FROM aka_name AS an JOIN person_info AS pi ON an.person_id = pi.person_id JOIN link_type AS lt ON pi.info LIKE '%' || lt.link || '%' GROUP BY an.person_id HAVING COUNT(DISTINCT pi.info_type_id) > 1 ORDER BY unique_aka_person_count DESC, average_person_info_id ASC;
SELECT kt.kind AS movie_kind, CASE WHEN ml.id IS NOT NULL THEN 'Part of series' ELSE 'Standalone' END AS series_status, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CASE WHEN mi_idx.info_type_id = 1 THEN mi_idx.info::FLOAT END) AS average_rating, AVG(CASE WHEN mi.info_type_id = 2 THEN mi.info::FLOAT END) AS average_budget FROM kind_type AS kt LEFT JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = 1 LEFT JOIN movie_info AS mi ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = 2 LEFT JOIN movie_link AS ml ON ml.movie_id = mi.movie_id LEFT JOIN movie_companies AS mc ON mc.movie_id = mi.movie_id WHERE kt.id IN (7, 2) GROUP BY kt.kind, series_status ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mi.info) AS unique_info_types, SUM(CASE WHEN t.season_nr IN ('8', '20', '12', '24', '33') THEN 1 ELSE 0 END) AS count_specific_seasons, COUNT(DISTINCT pi.person_id) AS total_persons_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info_idx AS mi ON t.id = mi.movie_id LEFT JOIN person_info AS pi ON pi.person_id = t.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(LENGTH(note)) AS average_note_length, COUNT(DISTINCT cn.id) AS number_of_companies_involved, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, SUM(CASE WHEN ml.link_type_id = '9' THEN 1 ELSE 0 END) AS count_type_9_links, SUM(CASE WHEN ml.link_type_id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN ml.link_type_id = '5' THEN 1 ELSE 0 END) AS count_type_5_links, SUM(CASE WHEN ml.link_type_id = '13' THEN 1 ELSE 0 END) AS count_type_13_links FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(ml.movie_id) AS average_movie_id, MIN(cn.name) AS character_name_with_min_id, MAX(an.name) AS aka_name_with_max_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN char_name AS cn ON cn.id = ml.movie_id AND cn.surname_pcode = 'E2146' LEFT JOIN aka_name AS an ON an.id = ml.linked_movie_id AND an.md5sum = '7df6a930bde6eff675fae9eecfb9ff7e' GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT it.info AS info_type, COUNT(DISTINCT cn.id) AS unique_character_names, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS count_complete_status, SUM(CASE WHEN cc.status_id = '3' THEN 1 ELSE 0 END) AS count_incomplete_status, COUNT(DISTINCT lt.id) AS count_link_types FROM char_name AS cn JOIN complete_cast AS cc ON cn.id = cc.movie_id JOIN info_type AS it ON it.id = cn.imdb_index::integer JOIN link_type AS lt ON lt.id = cn.surname_pcode::integer WHERE cn.imdb_index IN ('10', '21') AND lt.id IN (13, 8, 5, 18) AND cc.status_id IN ('4', '3') GROUP BY it.info;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_actors, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, MAX(mi.info) AS longest_movie_duration FROM title t JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') JOIN char_name cn ON cn.id IN (SELECT person_id FROM cast_info WHERE movie_id = t.id) JOIN role_type rt ON rt.id IN (SELECT role_id FROM cast_info WHERE person_id = cn.id) WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY t.kind_id ORDER BY average_production_year DESC, number_of_movies DESC;
