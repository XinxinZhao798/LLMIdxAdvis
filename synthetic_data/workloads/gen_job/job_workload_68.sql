SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(ml.movie_id) AS average_movie_id, MIN(cn.name) AS character_name_with_min_id, MAX(an.name) AS aka_name_with_max_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN char_name AS cn ON cn.id = ml.movie_id AND cn.surname_pcode = 'E2146' LEFT JOIN aka_name AS an ON an.id = ml.linked_movie_id AND an.md5sum = '7df6a930bde6eff675fae9eecfb9ff7e' GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT kt.kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(subquery.keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT n.id) AS unique_actors FROM kind_type kt LEFT JOIN movie_info mi ON mi.info_type_id = kt.id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword mk GROUP BY mk.movie_id ) AS subquery ON mi.movie_id = subquery.movie_id LEFT JOIN name n ON n.imdb_index = mi.info WHERE n.imdb_index IN ('VII', 'IV', 'X', 'XXII', 'VI') AND mi.info_type_id IN (SELECT id FROM info_type WHERE id IN ('40', '7', '30', '74', '34', '76')) GROUP BY kt.kind;
SELECT kt.kind as movie_type, COUNT(DISTINCT mk.movie_id) as number_of_movies, COUNT(DISTINCT k.id) as number_of_unique_keywords, STRING_AGG(DISTINCT k.keyword, ', ') as keywords_list FROM kind_type kt JOIN movie_keyword mk ON kt.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_info mi ON mk.movie_id = mi.movie_id WHERE kt.kind = 'movie' AND mk.id IN ('3186', '2034', '2102', '2766', '2505', '305') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT mc.company_id, it.info AS keyword, COUNT(DISTINCT mk.movie_id) AS movies_count, AVG(sub.person_count) AS avg_cast_size FROM movie_keyword AS mk JOIN (SELECT id, info FROM info_type WHERE id IN (3708, 323, 4279) ) AS it ON it.id = mk.keyword_id JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id AND mc.company_type_id = 1 LEFT JOIN (SELECT ci.movie_id, COUNT(DISTINCT ci.person_id) AS person_count FROM cast_info AS ci GROUP BY ci.movie_id ) AS sub ON mk.movie_id = sub.movie_id GROUP BY mc.company_id, it.info ORDER BY mc.company_id, movies_count DESC;
SELECT lt.LINK AS link_type, COUNT(ml.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN p.info = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN p.info = 'director' THEN 1 ELSE 0 END) AS total_directors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 JOIN person_info AS p ON ml.movie_id = p.person_id WHERE lt.id IN (9, 3, 18, 8, 15) AND mi.info_type_id = 3 AND ml.linked_movie_id = 2439274 AND p.info IN ('actor', 'director') GROUP BY lt.LINK ORDER BY total_movies DESC, average_rating DESC;
SELECT t.title AS movie_title, ct.kind AS company_type, rt.role AS role, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mi.movie_id) AS number_of_movie_info_entries, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS total_director_roles FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON t.id = mi.movie_id JOIN role_type rt ON t.id = rt.id WHERE ct.kind IN ('miscellaneous companies', 'special effects companies', 'distributors') AND rt.role IN ('actor', 'guest', 'writer', 'director') AND t.season_nr IS NULL AND t.production_year BETWEEN 2000 AND 2023 GROUP BY t.title, ct.kind, rt.role ORDER BY average_production_year DESC, number_of_companies DESC, number_of_movie_info_entries DESC;
SELECT a_t.title AS alternate_title, COUNT(c_i.id) AS total_cast_members, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN a_t.production_year > 2000 THEN 1 ELSE 0 END) AS post_2000_titles_count FROM aka_title AS a_t JOIN cast_info AS c_i ON a_t.movie_id = c_i.movie_id JOIN movie_info_idx AS mi_idx ON a_t.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = 100 AND a_t.movie_id IN ('8428', '19659') GROUP BY a_t.title;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_participants, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_movies, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS verified_movies, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.note IS NOT NULL) AS noted_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_movie_links, COUNT(DISTINCT an.person_id) AS total_aka_persons FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id LEFT JOIN person_info AS pi ON ci.person_id = pi.person_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN aka_name AS an ON ci.person_id = an.person_id WHERE kt.kind IN ('movie', 'tv series') AND t.production_year >= 2000 AND t.production_year <= 2010 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN k.keyword = 'award' THEN 1 ELSE 0 END) AS total_award_keywords, SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_order_info FROM aka_title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_keyword AS mk ON t.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON t.movie_id = ci.movie_id WHERE kt.kind IN ('tv mini series', 'video movie', 'episode', 'tv movie') AND (k.phonetic_code = 'F3654' OR k.phonetic_code = 'E2135') AND t.season_nr IN (36, 9, 28, 2, 16, 3) AND NOT EXISTS ( SELECT 1 FROM movie_companies AS mc WHERE mc.movie_id = t.movie_id AND mc.note LIKE '%(USA)%' ) GROUP BY kt.kind ORDER BY total_titles DESC, average_production_year DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx_cnt.count) AS average_keywords_per_movie, SUM(case when n.gender = 'M' then 1 else 0 end) AS male_actors_count, SUM(case when f.gender = 'F' then 1 else 0 end) AS female_actors_count, MIN(n.name) AS most_common_male_actor_name, MIN(f.name) AS most_common_female_actor_name FROM cast_info ci LEFT JOIN name n ON ci.person_id = n.id AND n.gender = 'M' LEFT JOIN name f ON ci.person_id = f.id AND f.gender = 'F' LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS count FROM movie_keyword GROUP BY movie_id ) mi_idx_cnt ON ci.movie_id = mi_idx_cnt.movie_id WHERE ci.nr_order = 1 GROUP BY ci.person_id;
SELECT comp.name AS company_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distribution_companies FROM company_name AS comp JOIN movie_companies AS mc ON comp.id = mc.company_id JOIN cast_info AS ci ON mc.movie_id = ci.movie_id WHERE comp.name_pcode_sf IN ('A4514', 'G5251', 'A3432', 'U5416', 'G6265', 'J3216') GROUP BY comp.name ORDER BY number_of_movies DESC, average_cast_order;
SELECT AVG(title.production_year) AS average_production_year, COUNT(DISTINCT name.id) AS number_of_actors, COUNT(DISTINCT title.id) AS number_of_movies, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors, MAX(title.production_year) AS latest_production_year, MIN(title.production_year) AS earliest_production_year FROM title JOIN aka_title ON title.id = aka_title.movie_id JOIN person_info ON aka_title.movie_id = person_info.person_id JOIN name ON person_info.person_id = name.id WHERE title.production_year BETWEEN 2000 AND 2020 AND name.name_pcode_nf IN ('N4532', 'H6341', 'M2164') GROUP BY title.kind_id HAVING COUNT(DISTINCT title.id) > 10 ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT cn.id) AS number_of_char_names, AVG(mi_idx.info::numeric) AS average_movie_info, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS indexed_aka_names_count FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = kt.id LEFT JOIN char_name AS cn ON cn.imdb_id = mi_idx.movie_id LEFT JOIN aka_name AS an ON an.person_id = mi_idx.movie_id WHERE kt.id IN (SELECT DISTINCT info_type_id FROM movie_info_idx) AND cn.id IN ('60670', '10694') AND mi_idx.note IS NOT NULL GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN at.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies, COUNT(DISTINCT mi.id) AS total_movie_info_entries, COUNT(DISTINCT cc.id) AS total_complete_cast_entries FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN movie_info_idx mi ON at.movie_id = mi.movie_id GROUP BY kt.kind ORDER BY total_alternate_titles DESC;
SELECT kt.kind AS content_type, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT a.person_id) AS total_individuals, SUM(CASE WHEN t.series_years = '1978-????' THEN 1 ELSE 0 END) AS count_series_from_1978 FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN aka_name AS a ON a.id = t.id LEFT JOIN role_type AS rt ON rt.id = a.id WHERE rt.role = 'editor' AND t.production_year IS NOT NULL GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT rt.role, AVG(mc.company_type_id) AS average_company_type, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS count_main_subject_movies FROM movie_companies mc INNER JOIN movie_keyword mk ON mc.movie_id = mk.movie_id INNER JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id INNER JOIN complete_cast cc ON mc.movie_id = cc.movie_id INNER JOIN role_type rt ON rt.id = cc.subject_id WHERE rt.role IN ('costume designer', 'writer', 'guest', 'editor') AND mc.note IS NOT NULL AND mi.note IS NOT NULL GROUP BY rt.role;
SELECT nt.info AS movie_genre, COUNT(DISTINCT cn.id) AS num_of_actors, AVG((n.gender = 'M')::int) AS avg_male_actors, AVG((n.gender = 'F')::int) AS avg_female_actors, SUM(CASE WHEN cn.id IN ('75924', '37156', '79891', '61423', '79360') THEN 1 ELSE 0 END) AS special_char_count, cname.name AS frequent_production_company, MAX(mi_idx.info) AS longest_movie_description FROM char_name cn JOIN name n ON cn.id = n.id JOIN movie_info_idx mi_idx ON n.id = mi_idx.movie_id JOIN info_type nt ON mi_idx.info_type_id = nt.id JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN company_name cname ON mc.company_id = cname.id WHERE n.md5sum IN ('5867f236efd2a49e525e28170e53884f', 'e30d31437d0cc24a549ebe11e068d91c', '103b12a2a1f067552d1582f217894732', '937aa89fd20c81ec429381d29296632e', 'b19e28f6480e3653f20f36528b67ddfd', 'ee97cefd84759ed4ec46f94d2e8962ed') AND cname.name IN ('Jamtown Films', 'Ovie Entertainment', 'Canibal Friends', 'Rocket Sheep Boom', 'Yarnmaker', 'Toko-Tokuma') AND nt.info IN ('LD dialogue intellegibility', 'book', 'tech info') GROUP BY nt.info, cname.name ORDER BY num_of_actors DESC, avg_male_actors DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(mk.keyword_id) AS total_keyword_mentions, AVG(sub_query.avg_keyword_per_movie) AS average_keywords_per_movie FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN info_type AS it ON it.id = ANY(ARRAY[107, 103, 84, 8, 113]) LEFT JOIN (SELECT movie_id, AVG(keyword_count) AS avg_keyword_per_movie FROM (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub_query_1 GROUP BY movie_id) AS sub_query ON mk.movie_id = sub_query.movie_id WHERE mk.id IN (1632, 3030, 4546, 1918, 3771, 1414) AND mk.movie_id IN (15503, 12271, 9141) GROUP BY it.info;
SELECT cn.country_code, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(m_link.link_type_id) AS average_link_type_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_link m_link ON mc.movie_id = m_link.movie_id JOIN name n ON n.name_pcode_nf IN ('A6354', 'D1345') WHERE mc.company_type_id = 1 GROUP BY cn.country_code HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY number_of_movies DESC;
SELECT kt.kind as movie_kind, AVG(t.production_year) as average_production_year, COUNT(DISTINCT t.id) as total_movies, SUM(CASE WHEN at.title IS NOT NULL THEN 1 ELSE 0 END) as total_aka_titles, COUNT(DISTINCT mi_idx.movie_id) as movies_with_info, AVG(CASE WHEN mi_idx.info ~ E'^\\d+(\\.\\d+)?$' THEN CAST(mi_idx.info AS FLOAT) ELSE NULL END) as average_numeric_info FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN akat.imdb_index IS NOT NULL THEN 1 ELSE 0 END) AS indexed_movies_count, COUNT(mk.keyword_id) AS total_keywords FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.role AS role_type, COUNT(DISTINCT n.id) AS number_of_people, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, COUNT(DISTINCT k.id) AS unique_keywords_used, COUNT(DISTINCT mi.movie_id) AS movies_with_notes FROM name n INNER JOIN role_type rt ON n.id = rt.id INNER JOIN keyword k ON k.phonetic_code IN ('S56', 'S12', 'S1535', 'B4535', 'A25', 'O123') INNER JOIN movie_info mi ON mi.info_type_id = k.id WHERE mi.note IN ('(some dialogue)', '(English subtitles)', '(Original version)', '(English version)') AND n.name_pcode_nf IN ('C4145', 'T641', 'Q5354', 'G6342', 'E2541') AND rt.role IN ('editor', 'director', 'production designer', 'cinematographer', 'miscellaneous crew') AND n.name IN ('Amores, Joaquín', 'Amor, Miguel Ángel', 'Anderson, Damion', 'Amokrane, Mustapha', 'Anderlik, Maddie', 'André, Emmanuel') GROUP BY rt.role;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT cc.movie_id) AS total_movies, AVG(pi.id) AS average_person_info_id, SUM(ct.id) AS sum_company_type_ids FROM role_type rt JOIN char_name cn ON cn.md5sum IN ('87fb1da22896f8674cfb742fe549ec67', 'bf85b5265ca46bac451dcdce6f3625f7', '74802eebae1a12921215b7402178254c') JOIN person_info pi ON pi.person_id = cn.id JOIN complete_cast cc ON cc.subject_id = cn.id JOIN company_type ct ON ct.id = 2 WHERE rt.ROLE IN ('actress', 'miscellaneous crew', 'editor', 'director', 'composer') AND pi.note IN ('frankfob2@yahoo.com', 'Deception Films', 'CelebrityLoop.com', 'Spook Show Entertainment', 'E Adamson') AND pi.person_id IN ('3716', '1740595') GROUP BY rt.ROLE ORDER BY total_movies DESC;
SELECT cct.kind AS cast_type_kind, it.info AS info_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS count_of_movies, SUM(CASE WHEN ml.linked_movie_id IS NOT NULL THEN 1 ELSE 0 END) AS sum_of_linked_movies FROM title t JOIN comp_cast_type cct ON t.kind_id = cct.id JOIN complete_cast cc ON t.id = cc.movie_id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE cc.status_id IN ('3', '4') GROUP BY cct.kind, it.info ORDER BY count_of_movies DESC, sum_of_linked_movies DESC;
SELECT CT.kind AS company_kind, AVG(CAST(MI.info AS FLOAT)) AS average_rating, COUNT(DISTINCT CI.person_id) AS total_cast_members, COUNT(DISTINCT MC.movie_id) AS number_of_movies FROM movie_companies AS MC JOIN company_type AS CT ON MC.company_type_id = CT.id JOIN movie_info AS MI ON MC.movie_id = MI.movie_id AND MI.info_type_id = 101 JOIN cast_info AS CI ON MC.movie_id = CI.movie_id WHERE (MC.note LIKE '%(TV)' OR MC.note IS NULL) AND CT.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND CI.role_id = 1 GROUP BY CT.kind ORDER BY average_rating DESC;
SELECT title.kind_id, AVG(cast_info.nr_order) AS average_order, COUNT(DISTINCT cast_info.person_id) AS unique_actors, SUM(CASE WHEN comp_cast_type.kind = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN comp_cast_type.kind = 'actress' THEN 1 ELSE 0 END) AS total_actresses, COUNT(DISTINCT company_name.id) AS involved_companies, MIN(title.production_year) AS earliest_production_year, MAX(title.production_year) AS latest_production_year FROM cast_info INNER JOIN title ON cast_info.movie_id = title.id LEFT JOIN complete_cast ON title.id = complete_cast.movie_id LEFT JOIN company_name ON title.id = company_name.imdb_id LEFT JOIN comp_cast_type ON cast_info.role_id = comp_cast_type.id WHERE complete_cast.subject_id = 1 AND (cast_info.nr_order IN (50, 54, 7, 19, 23, 101) OR cast_info.person_id IN (1494, 1727, 1433, 1693, 1732, 1327)) AND company_name.name_pcode_nf IN ('R2353', 'C6231', 'O4123', 'M3523', 'K2353', 'P6535') GROUP BY title.kind_id ORDER BY unique_actors DESC;
