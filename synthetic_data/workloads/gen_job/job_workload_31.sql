SELECT COUNT(ci.movie_id) AS total_movies_cast, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_lead_roles, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ch.id) AS unique_characters, COUNT(DISTINCT cc.id) AS complete_cast_records, COUNT(DISTINCT mi_idx.movie_id) AS movie_info_records FROM cast_info ci JOIN char_name ch ON ci.person_id = ch.id JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE ci.movie_id IN (40767, 1647276, 1650173, 27474, 8997, 1656118) AND ci.nr_order IN (52, 2) AND ci.role_id = 1;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cn.imdb_id) AS average_movie_imdb_id, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON mc.company_type_id = kt.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword k ON mi.info = k.keyword WHERE kt.id IN ('5', '2', '4', '1', '7') AND mc.note IN ('(2001-) (USA) (TV)', '(????) (Czech Republic) (TV)') AND mi.movie_id IN ('19232', '19598', '10553', '12245') GROUP BY cn.name, cn.country_code ORDER BY total_movies_produced DESC;
SELECT AVG(CAST(mi.info AS NUMERIC)) as average_rating, COUNT(DISTINCT at.id) as total_alternate_titles, COUNT(DISTINCT cn.id) as total_companies_involved, MAX(t.production_year) as latest_production_year, MIN(t.production_year) as earliest_production_year FROM title t LEFT JOIN movie_info_idx miidx ON miidx.movie_id = t.id LEFT JOIN info_type it ON it.id = miidx.info_type_id AND it.info = 'rating' LEFT JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = it.id LEFT JOIN aka_title at ON at.movie_id = t.id LEFT JOIN movie_companies mc ON mc.movie_id = t.id LEFT JOIN company_name cn ON cn.id = mc.company_id LEFT JOIN complete_cast cc ON cc.movie_id = t.id WHERE t.production_year BETWEEN 2000 AND 2023 AND cn.country_code = '[us]' GROUP BY t.id;
SELECT AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT aka.id) AS total_alternate_titles, COUNT(DISTINCT pi.person_id) AS total_persons_involved, SUM(CASE WHEN ct.kind = 'Distributor' THEN 1 ELSE 0 END) AS total_distributors, MAX(mi_idx.info) AS max_rating_info, MIN(mi_idx.info) AS min_rating_info FROM aka_title AS aka JOIN movie_info_idx AS mi_idx ON aka.movie_id = mi_idx.movie_id JOIN person_info AS pi ON pi.info_type_id = mi_idx.info_type_id JOIN company_type AS ct ON ct.id = mi_idx.info_type_id WHERE aka.production_year BETWEEN 1990 AND 2020 AND mi_idx.note IS NOT NULL AND aka.md5sum IN ('8173fbc966e75848163d8bf3766b4497', 'b17609e6b3c789ed4cc36812549fe2b4', 'df5fc0502294c32330a516626ef75c18') GROUP BY mi_idx.info_type_id HAVING COUNT(DISTINCT aka.movie_id) > 10 ORDER BY average_production_year DESC, total_alternate_titles;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, COUNT(DISTINCT n.id) AS number_of_people_involved, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN name n ON mi.movie_id = n.id WHERE mc.note LIKE '%(TV)%' AND it.info IN ('LD disc size', 'birth date', 'LD video noise', 'nick names', 'plot') AND mc.company_id IN (189, 1031, 498) GROUP BY ct.kind, it.info;
SELECT it.info AS information_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN k.phonetic_code = 'H5632' THEN 1 ELSE 0 END) AS count_specific_phonetic_code, COUNT(DISTINCT k.id) AS unique_keywords_used FROM aka_title at JOIN info_type it ON at.kind_id = it.id LEFT JOIN keyword k ON at.movie_id = k.id WHERE at.kind_id IN (7, 3, 4) AND it.info IN ('trade mark', 'production process protocol', 'languages', 'LD catalog number', 'mini biography') AND at.production_year IS NOT NULL GROUP BY it.info ORDER BY total_movies DESC, average_production_year DESC;
SELECT rt.ROLE, COUNT(*) AS total_roles, AVG(pi.person_id) AS average_person_id, SUM(ml.movie_id) AS total_movie_references, MAX(c.name) AS longest_char_name FROM role_type rt JOIN char_name c ON rt.id = c.id JOIN movie_link ml ON ml.id = c.id JOIN person_info pi ON pi.person_id = c.id WHERE ml.link_type_id = '11' AND c.md5sum IN ('88b24c378b8d6d3a9b9b0db5a90d076a', 'c36da3bda4ff32a6c5e348a693b4796b', '66a96a02207eb6d28a41944d55f42d0b') GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(mk.keyword_id) AS total_keyword_mentions, AVG(sub_query.avg_keyword_per_movie) AS average_keywords_per_movie FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN info_type AS it ON it.id = ANY(ARRAY[107, 103, 84, 8, 113]) LEFT JOIN (SELECT movie_id, AVG(keyword_count) AS avg_keyword_per_movie FROM (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub_query_1 GROUP BY movie_id) AS sub_query ON mk.movie_id = sub_query.movie_id WHERE mk.id IN (1632, 3030, 4546, 1918, 3771, 1414) AND mk.movie_id IN (15503, 12271, 9141) GROUP BY it.info;
SELECT cct.kind, COUNT(*) AS count_cast_types, AVG(cn.imdb_id) AS average_imdb_id, SUM(cn.imdb_id) AS sum_imdb_id, cn.country_code, COUNT(DISTINCT cn.name) AS distinct_company_names, COUNT(DISTINCT mi.movie_id) AS distinct_movies FROM comp_cast_type cct JOIN company_name cn ON cct.id = cn.id JOIN movie_info_idx mi ON cn.id = mi.info_type_id WHERE cn.country_code IN ('[cu]', '[se]', '[dk]', '[ar]', '[al]') AND cn.name_pcode_nf IN ('M2531', 'A6254', 'M6341', 'K3256') AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind, cn.country_code ORDER BY count_cast_types DESC;
SELECT kt.kind, COUNT(DISTINCT mi.movie_id) AS movie_count, AVG(CAST(NULLIF(mi.info, '') AS numeric)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CAST(NULLIF(mi.info, '') AS numeric)) FILTER (WHERE it.info = 'budget') AS total_budget FROM movie_info mi JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN kind_type kt ON kt.id = mk.keyword_id JOIN (SELECT id, info FROM movie_info WHERE info_type_id IN (SELECT id FROM info_type WHERE info IN ('rating', 'budget'))) it ON mi.id = it.id WHERE mi.movie_id IN (925861, 925697, 924285) AND kt.id IN (1, 5, 7) GROUP BY kt.kind;
SELECT mi.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mii.info::numeric) AS average_movie_length, SUM(CASE WHEN lt.LINK = 'followed by' THEN 1 ELSE 0 END) AS sequel_count FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id LEFT JOIN link_type lt ON lt.id = mii.info_type_id WHERE mi.info_type_id = 4 AND mii.movie_id IN ('19615', '11115', '18537', '8949', '8884') AND lt.LINK IN ('similar to', 'features', 'followed by', 'alternate language version of') GROUP BY genre ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT kt.kind, it.info AS genre, AVG(LENGTH(mi.info)) AS avg_info_length, COUNT(DISTINCT ml.movie_id) AS movie_count, COUNT(DISTINCT ml.link_type_id) AS link_type_count FROM kind_type kt JOIN movie_info mi ON mi.info IN ('Persian', 'Korean', 'Swedish', 'Kalmyk-Oirat', 'Cantonese', 'Estonian') JOIN info_type it ON it.id = mi.info_type_id AND it.info = 'genres' JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN link_type lt ON lt.id = ml.link_type_id AND lt.id IN ('3', '6', '13', '5', '10') WHERE kt.kind IN ('episode', 'tv series') AND mi.movie_id IN ('924200', '924460', '929898', '929803', '926981') GROUP BY kt.kind, it.info;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS number_of_unique_movies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, COUNT(DISTINCT mi.id) AS total_movie_info_records FROM aka_title at JOIN movie_keyword mk ON at.movie_id = mk.movie_id JOIN movie_info mi ON at.movie_id = mi.movie_id WHERE mi.info_type_id = 4 AND at.production_year IS NOT NULL GROUP BY at.kind_id ORDER BY average_production_year DESC;
SELECT cct.kind AS cast_type, COUNT(DISTINCT cc.movie_id) AS number_of_movies, rt.ROLE AS role_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, AVG(CAST(mi.info AS numeric)) AS average_info_numeric_value FROM comp_cast_type AS cct JOIN complete_cast AS cc ON cct.id = cc.status_id JOIN role_type AS rt ON cc.subject_id = rt.id JOIN movie_info_idx AS mi ON cc.movie_id = mi.movie_id WHERE cct.id IN (2, 3) AND rt.id IN (11, 9, 1, 3) AND rt.ROLE IN ('producer', 'guest', 'writer') AND mi.id IN (4348, 2817, 476, 2090, 937) GROUP BY cct.kind, rt.ROLE ORDER BY number_of_movies DESC, average_info_numeric_value DESC;
SELECT mc.company_id, COUNT(DISTINCT mc.movie_id) AS number_of_movies, cs.status_id, AVG(CAST(pi.info AS FLOAT)) FILTER (WHERE pi.info_type_id = 10) AS average_rating FROM movie_companies AS mc JOIN complete_cast AS cs ON mc.movie_id = cs.movie_id JOIN person_info AS pi ON cs.subject_id = pi.person_id GROUP BY mc.company_id, cs.status_id ORDER BY number_of_movies DESC, average_rating DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(subquery.keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT CASE WHEN mc.company_type_id = 1 THEN mc.company_id ELSE NULL END) AS type_1_company_count FROM kind_type AS kt LEFT JOIN movie_companies AS mc ON kt.id = mc.company_type_id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id ) AS subquery ON mc.movie_id = subquery.movie_id WHERE kt.kind = 'movie' GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT aka.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, SUM(CASE WHEN aka.title = 'Sea of Love' THEN 1 ELSE 0 END) AS count_sea_of_love, SUM(CASE WHEN aka.title = 'Anna of Rhodes' THEN 1 ELSE 0 END) AS count_anna_of_rhodes, SUM(CASE WHEN aka.title = 'The Last Days on Earth' THEN 1 ELSE 0 END) AS count_last_days_on_earth, SUM(CASE WHEN aka.title = 'Hammer Session!' THEN 1 ELSE 0 END) AS count_hammer_session, SUM(CASE WHEN aka.title = 'Bank Vault 713' THEN 1 ELSE 0 END) AS count_bank_vault_713 FROM aka_title AS aka JOIN kind_type AS kt ON aka.kind_id = kt.id LEFT JOIN movie_keyword AS mk ON aka.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT ci.person_id, ci.role_id, COUNT(ci.movie_id) AS total_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies, COUNT(DISTINCT lt.id) AS unique_link_types FROM cast_info ci LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id LEFT JOIN link_type lt ON ci.person_role_id = lt.id GROUP BY ci.person_id, ci.role_id ORDER BY total_movies DESC, avg_cast_position;
SELECT AVG(cast_roles.total_roles) AS average_roles_per_movie, COUNT(DISTINCT prod.movie_id) AS total_production_movies, COUNT(DISTINCT spec_eff.company_id) AS distinct_special_effects_companies FROM title t LEFT JOIN ( SELECT ci.movie_id, COUNT(ci.person_id) AS total_roles FROM cast_info ci GROUP BY ci.movie_id ) cast_roles ON cast_roles.movie_id = t.id LEFT JOIN ( SELECT mc.movie_id, mc.company_id FROM movie_companies mc INNER JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind = 'production companies' ) prod ON prod.movie_id = t.id LEFT JOIN ( SELECT mc.movie_id, mc.company_id FROM movie_companies mc INNER JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind = 'special effects companies' ) spec_eff ON spec_eff.movie_id = t.id WHERE t.production_year >= 2000 GROUP BY t.production_year;
SELECT mi_genre.info AS genre, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(cast_member_count) AS avg_cast_members_per_movie, SUM(company_count) AS total_companies_involved FROM movie_info mi_genre INNER JOIN movie_info mi ON mi.movie_id = mi_genre.movie_id AND mi_genre.info_type_id = 1 LEFT JOIN (SELECT movie_id, COUNT(DISTINCT person_id) AS cast_member_count FROM cast_info GROUP BY movie_id) AS ci_sub ON ci_sub.movie_id = mi.movie_id LEFT JOIN (SELECT movie_id, COUNT(DISTINCT company_id) AS company_count FROM movie_companies GROUP BY movie_id) AS mc_sub ON mc_sub.movie_id = mi.movie_id GROUP BY mi_genre.info ORDER BY total_movies DESC, avg_cast_members_per_movie DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(k.id) AS average_keyword_id, SUM(CASE WHEN k.keyword = 'personal-stories' THEN 1 ELSE 0 END) AS count_personal_stories, SUM(CASE WHEN k.keyword = 'toyota-starlet' THEN 1 ELSE 0 END) AS count_toyota_starlet FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN keyword AS k ON k.phonetic_code = cn.name_pcode_nf GROUP BY ct.kind ORDER BY number_of_companies DESC, number_of_movies DESC;
