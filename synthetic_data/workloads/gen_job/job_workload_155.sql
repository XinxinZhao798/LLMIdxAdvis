SELECT kt.kind, AVG(t.production_year) AS average_production_year, COUNT(*) AS total_titles, COUNT(DISTINCT t.id) AS unique_titles, SUM(CASE WHEN at.name_pcode_nf IN ('E4525', 'K2436', 'T1415', 'R162', 'L6252', 'J1526') THEN 1 ELSE 0 END) AS count_aka_names, COUNT(DISTINCT at.person_id) AS distinct_persons_involved FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_name at ON t.id = at.person_id WHERE kt.kind IN ('video movie', 'episode', 'video game', 'tv series', 'movie') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT rt.ROLE as role, COUNT(*) as number_of_actors, AVG(name.imdb_id) as average_imdb_id, MAX(ci.nr_order) as max_order_appearance, MIN(name.surname_pcode) as min_surname_pcode, COUNT(DISTINCT comp_cast_type.id) as distinct_comp_cast_type_count FROM cast_info ci JOIN name ON ci.person_id = name.id JOIN role_type rt ON ci.role_id = rt.id JOIN comp_cast_type ON ci.person_role_id = comp_cast_type.id JOIN movie_link ON ci.movie_id = movie_link.movie_id WHERE name.gender = 'f' AND comp_cast_type.kind IN ('actor', 'actress') AND movie_link.link_type_id BETWEEN 1 AND 4 GROUP BY rt.ROLE ORDER BY number_of_actors DESC, average_imdb_id;
SELECT AVG(ml_count.count) AS avg_movie_links, COUNT(DISTINCT an.person_id) AS distinct_person_count, SUM(CASE WHEN ml.link_type_id = '5' THEN 1 ELSE 0 END) AS total_sequel_links FROM movie_link AS ml JOIN (SELECT movie_id, COUNT(*) AS count FROM movie_link GROUP BY movie_id) AS ml_count ON ml.movie_id = ml_count.movie_id JOIN aka_name AS an ON ml.movie_id = an.person_id WHERE ml.link_type_id IN ('5', '11', '13', '17', '2', '1') GROUP BY ml.link_type_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.note LIKE '%(working title)%' THEN 1 ELSE 0 END) AS total_working_titles, COUNT(DISTINCT mi_idx.movie_id) AS total_movies_with_additional_info, MAX(at.season_nr) AS max_season_number, MIN(at.episode_nr) AS min_episode_number FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_info_idx mi_idx ON at.movie_id = mi_idx.movie_id WHERE kt.kind IN ('tv series', 'movie', 'tv mini series', 'video game', 'episode') AND at.production_year IS NOT NULL GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT comp.id) AS number_of_companies, AVG(CAST(SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)') AS INTEGER)) AS average_production_year, COUNT(DISTINCT ccast.subject_id) AS number_of_unique_subjects, COUNT(DISTINCT k.id) AS number_of_keywords, SUM(CASE WHEN lt.link ILIKE '%spin off%' THEN 1 ELSE 0 END) AS count_spin_off_links FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS comp ON mc.company_id = comp.id LEFT JOIN complete_cast AS ccast ON mc.movie_id = ccast.movie_id LEFT JOIN movie_info_idx AS mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword AS k ON mi.info = k.keyword LEFT JOIN link_type AS lt ON mi.info_type_id = lt.id WHERE mc.note NOT LIKE '%(TV)%' AND SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)')::INTEGER BETWEEN 1990 AND 2023 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS average_production_year, COUNT(ci.person_id) AS total_cast_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS actor_count, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS actress_count FROM aka_title AS aka JOIN kind_type AS kt ON aka.kind_id = kt.id JOIN cast_info AS ci ON aka.movie_id = ci.movie_id JOIN movie_info AS mi ON aka.movie_id = mi.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id WHERE aka.title LIKE '%The Hobbits%' OR aka.id IN (34831, 39506, 43821, 20330) OR mi.movie_id IN (18783, 19260, 8743, 8393) GROUP BY kt.kind ORDER BY average_production_year DESC;
SELECT t.title, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN cct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN comp_cast_type cct ON mc.company_type_id = cct.id WHERE t.production_year > 2000 AND mc.note LIKE '%(TV)%' GROUP BY t.title ORDER BY total_cast_members DESC, latest_production_year DESC;
SELECT ct.kind as company_type, COUNT(DISTINCT ti.id) as total_titles, AVG(ti.production_year) as average_production_year, SUM(CASE WHEN k.phonetic_code = 'G5641' THEN 1 ELSE 0 END) as count_g5641_keywords, SUM(CASE WHEN k.phonetic_code = 'A61' THEN 1 ELSE 0 END) as count_a61_keywords FROM title ti INNER JOIN movie_info mi ON ti.id = mi.movie_id INNER JOIN info_type it ON mi.info_type_id = it.id INNER JOIN keyword k ON ti.id = k.id INNER JOIN company_type ct ON ct.kind = 'distributors' WHERE it.info IN ('LD quality of source', 'votes distribution', 'LD catalog number', 'locations') AND mi.note IS NOT NULL GROUP BY ct.kind;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT t.id) AS total_movies, AVG(t.imdb_id) AS average_imdb_id FROM title AS t JOIN movie_link AS ml ON t.id = ml.movie_id JOIN company_name AS cn ON cn.imdb_id = ml.linked_movie_id JOIN company_type AS ct ON cn.id = ct.id WHERE t.production_year BETWEEN 2010 AND 2020 AND cn.country_code IN ('US', 'GB', 'CA') GROUP BY ct.kind, cn.country_code ORDER BY total_movies DESC, average_imdb_id ASC;
