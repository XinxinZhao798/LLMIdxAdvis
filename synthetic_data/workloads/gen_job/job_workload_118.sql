SELECT COUNT(t.id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN cn.country_code = '[ch]' THEN 1 ELSE 0 END) AS swiss_produced_movies, SUM(CASE WHEN k.keyword = 'video-tape' THEN 1 ELSE 0 END) AS video_tape_keyword_count, COUNT(DISTINCT cn.name) AS unique_companies_involved FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND k.keyword IN ('video-tape', 'delta-airlines') AND cn.country_code IN ('[sa]', '[hk]', '[np]', '[ao]', '[ch]', '[do]') AND cn.name_pcode_sf = 'F4623' AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY cn.country_code, k.keyword;
SELECT k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, COUNT(DISTINCT n.id) AS number_of_actors FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info AS mi ON mk.movie_id = mi.movie_id AND mi.info_type_id = 4 INNER JOIN name AS n ON mi.movie_id = n.imdb_id WHERE mk.keyword_id IN (3881, 2089, 3415, 3648) GROUP BY k.keyword ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT rt.ROLE, COUNT(mc.movie_id) AS number_of_movies, AVG(alt.production_year) AS average_production_year, SUM(CASE WHEN lt.LINK = 'sequel' THEN 1 ELSE 0 END) AS sequel_count, COUNT(DISTINCT mc.company_id) AS distinct_companies_involved FROM aka_title alt INNER JOIN movie_companies mc ON alt.movie_id = mc.movie_id INNER JOIN link_type lt ON lt.id = alt.kind_id INNER JOIN role_type rt ON rt.id = mc.company_type_id WHERE rt.id IN ('1', '8') GROUP BY rt.ROLE ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE k.keyword IN ('graffiti', 'goblet') AND n.name LIKE '%a%' GROUP BY cct.kind ORDER BY total_actors DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS number_of_bw_movies, COUNT(DISTINCT mk.keyword_id) FILTER (WHERE mk.keyword_id IN (4048, 2907, 2882)) AS number_of_specific_keywords FROM company_name cn LEFT JOIN movie_info mi ON mi.movie_id = cn.id LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = mi.movie_id LEFT JOIN info_type it ON it.id = mi_idx.info_type_id LEFT JOIN movie_keyword mk ON mk.movie_id = mi.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mi.movie_id AND ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('sequel', 'prequel')) WHERE cn.country_code NOT IN ('US', 'CA') AND it.info = 'rating' AND mi.info IN ('color', 'black and white') GROUP BY cn.name, cn.country_code ORDER BY average_rating DESC, number_of_movies DESC;
SELECT kt.kind AS Movie_Type, AVG(t.production_year) AS Average_Production_Year, COUNT(DISTINCT t.id) AS Total_Movies, COUNT(DISTINCT cc.id) AS Total_Complete_Casts, SUM(CASE WHEN t.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS Total_Seasons FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IN ('movie', 'tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY Total_Movies DESC;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_movies_with_complete_cast, MAX(pi.note) AS most_recent_person_note FROM aka_title ak JOIN movie_info mi ON ak.movie_id = mi.movie_id JOIN movie_keyword mk ON ak.movie_id = mk.movie_id JOIN company_name cn ON cn.country_code NOT IN ('[pl]') LEFT JOIN complete_cast cc ON ak.movie_id = cc.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id WHERE mi.info_type_id = '4' AND (pi.note IN ('Be Free Films', 'Autor', 'Fan Club President', 'Nick van de Wall', 'hwatson4964@excite.com', 'Anon.') OR pi.note IS NULL) AND ak.title IN ('DR-Dokumentar: 28. maj', 'I Want to Rob Jeff Goldblum') GROUP BY ak.kind_id ORDER BY average_production_year DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.avg_movie_score) AS average_movie_score, SUM(CASE WHEN mi.info = '(Original Version)' THEN 1 ELSE 0 END) AS original_version_count, SUM(CASE WHEN mi.info = '(English subtitles)' THEN 1 ELSE 0 END) AS english_subtitles_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN (SELECT movie_id, AVG(CAST(info AS DOUBLE PRECISION)) AS avg_movie_score FROM movie_info_idx WHERE info_type_id = 101 GROUP BY movie_id) AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN movie_info AS mi ON mc.movie_id = mi.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, MIN(n.name) AS first_actor_name, MAX(n.name) AS last_actor_name, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_actors, COUNT(DISTINCT cc.id) AS number_of_complete_casts, COUNT(DISTINCT cct.id) AS number_of_different_cast_types FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id LEFT JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id WHERE ci.role_id = (SELECT id FROM comp_cast_type WHERE kind = 'actor') AND (ci.note LIKE '%(voice)%' OR ci.note NOT LIKE '%(archive footage)%') GROUP BY ci.movie_id HAVING COUNT(DISTINCT ci.person_id) > 1;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT an.id) AS number_of_alternative_names, COUNT(DISTINCT cct.id) AS number_of_cast_types, AVG(LENGTH(n.name)) AS average_actor_name_length FROM name n LEFT JOIN aka_name an ON n.id = an.person_id LEFT JOIN comp_cast_type cct ON an.id = cct.id WHERE n.name LIKE '%Amplify%' OR an.name IN ('Allen, ''Barefoot'' Chris', 'Alsamia, Etienne', 'Altamirano, Lisa Mariea', 'Aller, Gina', 'Smith, Mary Alice') GROUP BY n.gender;
SELECT AVG(COALESCE(NULLIF(pi.info::NUMERIC, 0), 0)) AS avg_person_info_numeric, SUM(CASE WHEN mk.keyword_id IN (2717, 2798) THEN 1 ELSE 0 END) AS sum_movie_keyword_special, COUNT(DISTINCT mc.movie_id) AS count_distinct_movies_with_companies, COUNT(DISTINCT an.person_id) AS count_distinct_persons_with_aka, COUNT(DISTINCT ml.linked_movie_id) AS count_linked_movies FROM person_info pi LEFT JOIN aka_name an ON pi.person_id = an.person_id LEFT JOIN movie_keyword mk ON mk.movie_id = an.person_id LEFT JOIN movie_companies mc ON mc.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mc.movie_id WHERE an.name IN ('Alouf, Bernard', 'Almedia-Pederalba, Karen', 'Chanclettes, The', 'Ali, Muhammed', 'Verbrugge, Willy') AND pi.id IN ('3188', '489', '4904') AND mk.id IN ('4094', '2901', '4468') AND ml.id IN ('608', '4874', '3573');
SELECT pi.info_type_id, COUNT(DISTINCT pi.person_id) AS total_people, AVG(CAST(pi.info AS FLOAT)) FILTER (WHERE pi.info_type_id = 1) AS average_info_type_1, SUM(CAST(pi.info AS INTEGER)) FILTER (WHERE pi.info_type_id = 2) AS sum_info_type_2, mc.company_type_id, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT cn.id) AS total_characters FROM person_info pi JOIN movie_companies mc ON pi.person_id = mc.company_id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN char_name cn ON cn.imdb_id = ml.linked_movie_id GROUP BY pi.info_type_id, mc.company_type_id HAVING COUNT(DISTINCT pi.person_id) > 1 ORDER BY total_people DESC, total_companies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, SUM(CASE WHEN cn.country_code = '[sd]' THEN 1 ELSE 0 END) AS sudanese_company_movies, SUM(CASE WHEN cn.country_code = '[dz]' THEN 1 ELSE 0 END) AS algerian_company_movies, SUM(CASE WHEN cn.country_code = '[dm]' THEN 1 ELSE 0 END) AS dominican_company_movies, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN movie_info_idx AS mi_votes ON mi_idx.movie_id = mi_votes.movie_id AND mi_votes.info_type_id = 41 JOIN company_name AS cn ON mi_idx.movie_id = cn.imdb_id LEFT JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE mi_idx.info_type_id IN (112, 72) AND kt.id IN (2, 1, 3) GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_info, SUM(CASE WHEN mi_idx.note = 'Y' THEN 1 ELSE 0 END) AS count_noted_info FROM complete_cast cc JOIN kind_type kt ON cc.subject_id = kt.id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id WHERE cc.status_id IN (1, 2, 3) AND mi_idx.info_type_id BETWEEN 10 AND 20 AND mi_idx.id NOT IN (4072, 3466, 2096, 1652, 1371) AND cc.id NOT IN (3672, 620) GROUP BY kt.kind HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY average_movie_info DESC;
SELECT ct.kind AS cast_type, AVG(mk.keyword_id) AS average_keyword_id, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN ml.linked_movie_id = 1910055 THEN 1 ELSE 0 END) AS count_linked_to_movie_1910055, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id BETWEEN 2 AND 3) AS count_movie_links_type_2_3, COUNT(DISTINCT cn.id) FILTER (WHERE cn.country_code IN ('[lb]', '[cn]', '[na]', '[in]', '[kr]', '[xyu]')) AS count_movies_non_english_speaking_countries FROM comp_cast_type AS ct LEFT JOIN aka_title AS at ON ct.id = at.kind_id LEFT JOIN movie_keyword AS mk ON at.movie_id = mk.movie_id LEFT JOIN company_name AS cn ON cn.name_pcode_nf = 'A6453' LEFT JOIN movie_link AS ml ON at.movie_id = ml.movie_id WHERE ct.id IN (2, 3) AND mk.movie_id IN (18826, 18728, 18726, 12088, 18819, 15536) AND mk.id IN (886, 4673, 4280, 2228, 1485, 4805) GROUP BY ct.kind;
SELECT ct.kind AS cast_type, AVG(movcomp_notes.note_length) AS average_note_length, COUNT(DISTINCT movcomp.movie_id) AS number_of_movies, COUNT(DISTINCT comp.name) AS number_of_companies, SUM(CASE WHEN movcomp.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_producers, MAX(comp_cast.subject_id) AS max_subject_id_for_cast_type FROM complete_cast AS comp_cast JOIN comp_cast_type AS ct ON comp_cast.subject_id = ct.id JOIN movie_companies AS movcomp ON movcomp.movie_id = comp_cast.movie_id JOIN company_name AS comp ON movcomp.company_id = comp.id LEFT JOIN (SELECT movie_id, LENGTH(note) AS note_length FROM movie_companies) AS movcomp_notes ON movcomp.movie_id = movcomp_notes.movie_id WHERE comp_cast.id IN (4264, 2513, 575, 1032) AND comp_cast.subject_id = 1 AND ct.id = 4 GROUP BY ct.kind;
SELECT AVG(ak.title_count) AS average_titles_per_movie, SUM(mc.company_count) AS total_companies_involved, COUNT(DISTINCT n.id) AS unique_actors_count FROM (SELECT movie_id, COUNT(*) AS title_count FROM aka_title GROUP BY movie_id) ak JOIN aka_title at ON ak.movie_id = at.movie_id JOIN (SELECT movie_id, COUNT(*) AS company_count FROM movie_companies GROUP BY movie_id) mc ON at.movie_id = mc.movie_id JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN name n ON cc.movie_id = n.id JOIN movie_companies mcom ON mcom.movie_id = ak.movie_id JOIN company_type ct ON mcom.company_type_id = ct.id JOIN link_type lt ON lt.id = 15 WHERE cct.kind = 'actors' AND ct.kind LIKE '%production%' AND lt.link = 'features' AND at.production_year BETWEEN 2000 AND 2010 GROUP BY ak.movie_id;
SELECT CT.kind AS company_type, COUNT(DISTINCT ML.movie_id) AS total_movies_linked, AVG(CAST(MI.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN ML.linked_movie_id IN ('583610', '1639457', '20479', '2056353', '346879') THEN 1 ELSE 0 END) AS specific_links_count FROM movie_link ML JOIN movie_info MI ON ML.movie_id = MI.movie_id AND MI.info_type_id = '4' JOIN company_name CN ON CN.imdb_id = ML.movie_id JOIN company_type CT ON CN.id = CT.id WHERE ML.link_type_id IN ('1', '2') GROUP BY CT.kind HAVING COUNT(DISTINCT ML.movie_id) > 10 ORDER BY average_rating DESC;
SELECT AVG(mi_numeric.info::numeric) AS average_movie_rating, COUNT(DISTINCT an.person_id) AS unique_actors_count, COUNT(DISTINCT cn.id) AS unique_companies_count, COUNT(DISTINCT cc.movie_id) AS movies_with_complete_cast, SUM(CASE WHEN cn.country_code = '[ch]' THEN 1 ELSE 0 END) AS swiss_companies_count, SUM(CASE WHEN cn.country_code = '[tt]' THEN 1 ELSE 0 END) AS trinidad_companies_count, COUNT(DISTINCT CASE WHEN an.surname_pcode = 'D12' THEN an.person_id ELSE NULL END) AS actors_with_surname_D12 FROM movie_info AS mi_numeric JOIN movie_info AS mi ON mi_numeric.movie_id = mi.movie_id LEFT JOIN aka_name AS an ON mi.movie_id = an.person_id LEFT JOIN company_name AS cn ON cn.imdb_id = mi.movie_id LEFT JOIN complete_cast AS cc ON cc.movie_id = mi.movie_id WHERE mi_numeric.info_type_id = 101 AND mi.info_type_id = 102 AND mi_numeric.info::numeric >= 0 AND (cn.country_code = '[ch]' OR cn.country_code = '[tt]') AND (an.surname_pcode IN ('D12', 'Y52', 'D54', 'K25', 'A625')) GROUP BY mi.movie_id;
SELECT rt.role, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS total_characters, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS movie_keyword_count, COUNT(DISTINCT pi.person_id) AS total_persons_with_info FROM role_type rt LEFT JOIN aka_title akat ON rt.id = akat.kind_id LEFT JOIN char_name cn ON cn.name = akat.title LEFT JOIN movie_keyword mk ON mk.movie_id = akat.movie_id LEFT JOIN person_info pi ON pi.info_type_id = rt.id WHERE akat.production_year > 2000 GROUP BY rt.role ORDER BY total_movies DESC, average_production_year DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CASE WHEN n.gender = 'm' THEN 1.0 ELSE NULL END) AS avg_male_involvement, AVG(CASE WHEN n.gender = 'f' THEN 1.0 ELSE NULL END) AS avg_female_involvement, COUNT(DISTINCT an.person_id) AS unique_aka_names, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS count_info_type_4 FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN aka_name an ON an.person_id = mi.movie_id LEFT JOIN name n ON n.id = mi.movie_id WHERE mi.info LIKE '%Mandarin%' OR mi.info_type_id IN ('47', '5', '7') OR n.surname_pcode IN ('A432', 'A416', 'A414') OR n.imdb_index IN ('VI', 'XVII', 'XIV', 'I') GROUP BY it.info;
SELECT COUNT(DISTINCT ci.id) AS total_actors, AVG(mc.id) AS avg_company_id, SUM(CASE WHEN rt.id = 6 THEN 1 ELSE 0 END) AS total_directors, MIN(n.name) AS first_actor_name, MAX(t.title) AS last_movie_title, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 3 OR ml.link_type_id = 7) AS total_related_movies FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id JOIN aka_title AS at ON ci.movie_id = at.movie_id JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN title AS t ON at.movie_id = t.id WHERE ci.note NOT LIKE '%uncredited%' AND at.production_year BETWEEN 2000 AND 2010 AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND rt.role IN ('actor', 'actress', 'director') GROUP BY rt.id;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT cc.movie_id) AS total_movies, AVG(pi.id) AS average_person_info_id, SUM(ct.id) AS sum_company_type_ids FROM role_type rt JOIN char_name cn ON cn.md5sum IN ('87fb1da22896f8674cfb742fe549ec67', 'bf85b5265ca46bac451dcdce6f3625f7', '74802eebae1a12921215b7402178254c') JOIN person_info pi ON pi.person_id = cn.id JOIN complete_cast cc ON cc.subject_id = cn.id JOIN company_type ct ON ct.id = 2 WHERE rt.ROLE IN ('actress', 'miscellaneous crew', 'editor', 'director', 'composer') AND pi.note IN ('frankfob2@yahoo.com', 'Deception Films', 'CelebrityLoop.com', 'Spook Show Entertainment', 'E Adamson') AND pi.person_id IN ('3716', '1740595') GROUP BY rt.ROLE ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(ci.person_id) AS num_performances, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_keyword_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN aka_title at ON ci.movie_id = at.movie_id LEFT JOIN (SELECT mk.movie_id, k.keyword FROM movie_keyword mk JOIN keyword k ON mk.keyword_id = k.id) AS k ON ci.movie_id = k.movie_id WHERE rt.id IN ('12', '7', '9', '3') AND ci.person_id IN ('1145', '1200', '1289') AND at.movie_id IN ('19436', '18749', '11251', '18754', '17100') GROUP BY rt.ROLE HAVING COUNT(DISTINCT ci.movie_id) > 1 ORDER BY num_movies DESC, num_performances DESC;
SELECT ct.kind AS company_kind, rt.ROLE AS role_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN role_type AS rt ON mc.company_type_id = rt.id JOIN title AS t ON mc.movie_id = t.id GROUP BY ct.kind, rt.ROLE ORDER BY number_of_movies DESC;
SELECT cn.name AS character_name, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT k.keyword) AS unique_keywords, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, SUM(CASE WHEN pi.info_type_id = 3 THEN 1 ELSE 0 END) AS number_of_birthdays_recorded FROM char_name cn LEFT JOIN movie_info_idx mi_idx ON cn.imdb_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_keyword mk ON mk.movie_id = mi_idx.movie_id LEFT JOIN keyword k ON k.id = mk.keyword_id LEFT JOIN movie_link ml ON ml.movie_id = mi_idx.movie_id LEFT JOIN person_info pi ON pi.person_id = cn.id AND pi.info_type_id = 3 WHERE cn.md5sum IN ('ad29d0b30522be696e375c0cf52fad0b', 'ca8d2f6f99875f835be5a698310d23a5', 'e195362a34d97e0c055cd5c7275fb81f', '60817b9dbbd1ec43e9d559147a578e08') AND cn.name_pcode_nf IN ('G5146', 'J2525', 'B5', 'K6252') GROUP BY cn.name;
SELECT it.info AS info_type, COUNT(DISTINCT akn.person_id) AS unique_person_count, COUNT(DISTINCT k.id) AS unique_keyword_count, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN k.phonetic_code IN ('S6252', 'C351', 'F2352') THEN 1 ELSE 0 END) AS specific_phonetic_code_count FROM aka_name akn JOIN info_type it ON akn.surname_pcode = it.info JOIN keyword k ON akn.name_pcode_nf = k.phonetic_code JOIN movie_companies mc ON akn.person_id = mc.company_id GROUP BY it.info ORDER BY unique_person_count DESC, unique_keyword_count DESC;
SELECT t.title AS Movie_Title, t.production_year AS Production_Year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords, COUNT(DISTINCT mc.company_id) AS Number_of_Companies_Involved, AVG(t.production_year) OVER () AS Average_Production_Year, COUNT(*) OVER () AS Total_Movies_Analyzed FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ml.link_type_id IN ('12', '11', '13', '6') AND t.series_years IN ('1985-????', '2004-????', '2013-????', '1988-????', '2010-2010') AND t.production_year > (SELECT AVG(production_year) FROM title) GROUP BY t.id HAVING COUNT(DISTINCT mk.keyword_id) > 5 ORDER BY Number_of_Keywords DESC, Production_Year DESC;
