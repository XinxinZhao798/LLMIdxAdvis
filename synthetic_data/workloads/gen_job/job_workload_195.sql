SELECT cn.country_code, cc.status_id, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(cn.imdb_id) AS average_imdb_id, STRING_AGG(DISTINCT it.info, '; ') AS associated_info_types FROM company_name AS cn JOIN complete_cast AS cc ON cn.id = cc.subject_id JOIN info_type AS it ON cc.status_id = it.id WHERE cc.status_id IN (3, 4) AND it.id IN (14, 61) GROUP BY cn.country_code, cc.status_id ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_movie_links, AVG(pi.person_id) AS average_person_id, SUM(cc.status_id) AS sum_status_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN person_info AS pi ON cc.subject_id = pi.person_id WHERE ml.link_type_id IN (6, 5, 15, 16, 10, 17) AND ml.id IN (3372, 310) AND cc.id = 2124 GROUP BY lt.LINK ORDER BY total_movie_links DESC;
SELECT kt.kind AS movie_type, rt.ROLE AS role, COUNT(ci.movie_id) AS role_count, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS with_role_info, COUNT(DISTINCT ci.person_id) AS distinct_actors, COUNT(DISTINCT mc.company_id) AS distinct_companies, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM cast_info ci INNER JOIN kind_type kt ON ci.movie_id = kt.id INNER JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE kt.kind IN ('video game', 'video movie', 'tv movie', 'episode', 'movie', 'tv mini series') AND rt.role IN ('writer', 'actor', 'miscellaneous crew', 'production designer', 'editor') GROUP BY kt.kind, rt.ROLE ORDER BY movie_type, role_count DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, AVG(mcc.status_id) AS average_status_id, SUM(CASE WHEN mc.note LIKE '%(DVD)%' THEN 1 ELSE 0 END) AS dvd_releases, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS tv_releases, SUM(CASE WHEN mc.note LIKE '%(all media)%' THEN 1 ELSE 0 END) AS all_media_releases, SUM(CASE WHEN mc.note LIKE '%) (UK) %' THEN 1 ELSE 0 END) AS uk_releases, SUM(CASE WHEN mc.note LIKE '%) (USA) %' THEN 1 ELSE 0 END) AS usa_releases FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN complete_cast AS mcc ON mc.movie_id = mcc.movie_id WHERE ct.kind IN ('distributors', 'special effects companies') GROUP BY ct.kind;
SELECT cnt.kind AS company_type, AVG(mc_notes.note_length) AS average_note_length, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mc.movie_id) AS movies_involved, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cnt ON mc.company_type_id = cnt.id LEFT JOIN ( SELECT movie_id, company_id, LENGTH(note) as note_length FROM movie_companies WHERE note IS NOT NULL ) AS mc_notes ON mc.movie_id = mc_notes.movie_id AND mc.company_id = mc_notes.company_id LEFT JOIN ( SELECT name.id, name.gender FROM name WHERE name.gender IN ('F', 'M') ) AS n ON mc.company_id = n.id GROUP BY cnt.kind ORDER BY cnt.kind;
SELECT COUNT(DISTINCT ml.movie_id) AS linked_movies_count, AVG(CAST(pi.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN it.info = 'opening weekend' THEN CAST(pi.info AS NUMERIC) ELSE 0 END) AS total_opening_weekend_revenue, lt.LINK AS link_type, cct.kind AS company_type FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_companies AS mc ON ml.movie_id = mc.movie_id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN person_info AS pi ON ml.movie_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE it.info IN ('LD language', 'opening weekend', 'LD digital sound') AND it.id IN ('58', '108', '37', '73', '112') AND pi.info ~ '^[0-9]+(\.[0-9]+)?$' GROUP BY lt.LINK, cct.kind ORDER BY total_opening_weekend_revenue DESC;
SELECT kt.kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS total_directors, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT k.id) AS total_unique_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN keyword k ON t.id = k.id WHERE t.production_year > 2000 AND kt.id = 5 AND ci.note LIKE '%(20%' AND ci.role_id IN (1, 2) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ci.person_id) AS total_actors, rt.role AS role, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT cc.id) AS total_complete_cast FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN company_name cn ON cn.imdb_id = t.imdb_id LEFT JOIN complete_cast cc ON t.id = cc.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND kt.kind IN ('movie', 'tv series') AND rt.role IN ('producer', 'composer', 'actress', 'writer', 'costume designer', 'cinematographer') AND cc.status_id IN (3, 4) GROUP BY kt.kind, rt.role ORDER BY total_movies DESC, average_production_year DESC, total_actors DESC, total_companies DESC;
SELECT AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.company_id) AS number_of_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS german_movie_count FROM movie_info mi JOIN movie_companies ci ON mi.movie_id = ci.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN title t ON mi.movie_id = t.id WHERE (mi.note LIKE '%(interviews)%' OR mi.note LIKE '%(Original Version)%' OR mi.note LIKE '%(only a few lines)%' OR mi.note LIKE '%(English subtitles)%') GROUP BY mi.movie_id;
SELECT rt.ROLE, COUNT(DISTINCT ml.movie_id) AS num_movies, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT k.id) AS num_keywords FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN char_name cn ON ci.person_role_id = cn.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id GROUP BY rt.ROLE ORDER BY num_movies DESC, avg_imdb_id DESC;
SELECT cn.country_code, kt.kind AS title_kind, t.production_year AS year_of_production, COUNT(DISTINCT t.id) AS total_titles, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_names_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_names_count FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN name n ON t.id = n.imdb_id WHERE t.production_year IS NOT NULL AND (n.gender = 'M' OR n.gender = 'F') GROUP BY cn.country_code, kt.kind, t.production_year ORDER BY cn.country_code, total_titles DESC, t.production_year DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, COUNT(DISTINCT ml.id) AS number_of_related_links, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_contributors, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_contributors FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN name n ON mi.movie_id = n.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') AND ml.link_type_id = (SELECT id FROM link_type WHERE link = 'edited from') AND mi.id IN ('7270548', '7266456', '7269706') GROUP BY ct.kind ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT ml.id) AS total_movie_links, SUM(CASE WHEN at.imdb_index = 'III' THEN 1 ELSE 0 END) AS count_imdb_index_III, SUM(CASE WHEN at.imdb_index = 'II' THEN 1 ELSE 0 END) AS count_imdb_index_II FROM aka_title at JOIN keyword k ON at.id = k.id JOIN movie_companies mc ON at.movie_id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id JOIN (SELECT id, kind FROM comp_cast_type WHERE kind IN ('actor', 'actress')) kt ON at.kind_id = kt.id WHERE at.kind_id IN ('1', '4') AND k.id IN ('5500', '1630', '2267', '1048', '1589') AND cn.md5sum IN ( 'ecf8ff261534cbe4303655e3dc9d91d6', 'b62db3e43522346d25381c78513fb9f0', '558dd734341ba79634e8c1a3eb8cb0b4', '209bfa49f531585f9c54dcc6f84a6263', 'f617c567816ace229f1654cef896d37c', 'a6ab3a7e25fc36179e64a2d2f6d205e8' ) AND ml.linked_movie_id IN ('1089913', '2016615') GROUP BY kt.kind;
SELECT at.production_year, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.episode_nr) AS average_episodes_per_season, COUNT(DISTINCT rt.id) AS distinct_roles_count FROM aka_title at JOIN role_type rt ON at.kind_id = rt.id JOIN info_type it ON at.id = it.id WHERE at.production_year IN (1972, 1934, 1943) AND rt.role IN ('production designer', 'composer', 'guest', 'producer', 'actor', 'writer') AND it.info IN ('admissions', 'votes', 'LD master format', 'soundtrack') GROUP BY at.production_year ORDER BY at.production_year;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) FILTER (WHERE it.info = 'budget') AS average_movie_budget, SUM(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_movie_votes, kt.kind AS movie_kind, COUNT(DISTINCT cc.movie_id) FILTER (WHERE cc.status_id = 1) AS number_of_complete_movies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN kind_type AS kt ON kt.id = 1 JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('budget', 'votes')) AND cc.status_id = 1 GROUP BY ct.kind, kt.kind;
SELECT ct.kind AS company_type, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS number_of_keywords, SUM(CASE WHEN at.episode_of_id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_episodes, COUNT(DISTINCT n.id) AS number_of_names, COUNT(DISTINCT cc.id) AS number_of_complete_cast_records FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN keyword AS k ON at.id = k.id JOIN name AS n ON at.id = n.id WHERE mc.note LIKE '%(TV)%' AND at.production_year > 1990 AND (at.episode_nr IN (37, 566, 13, 606, 41) OR at.episode_of_id IN (12586, 2536, 13063, 16867, 21471)) GROUP BY ct.kind;
SELECT mc.company_id, mc.company_type_id, COUNT(mc.movie_id) AS total_movies, AVG(at.production_year) AS avg_production_year, SUM(k.id) AS total_keyword_id_sum FROM movie_companies mc JOIN aka_title at ON mc.movie_id = at.movie_id LEFT JOIN keyword k ON at.id = k.id WHERE mc.movie_id IN (19080, 25456, 14762, 19670, 32217, 10568) GROUP BY mc.company_id, mc.company_type_id ORDER BY total_movies DESC, avg_production_year DESC;
SELECT k.keyword, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT at.movie_id) AS total_movies, COUNT(DISTINCT at.kind_id) AS different_kinds FROM keyword AS k JOIN movie_info AS mi ON mi.info LIKE '%' || k.keyword || '%' JOIN aka_title AS at ON at.movie_id = mi.movie_id WHERE k.keyword IN ('stewardess', 'lost-film', 'reality', 'honeymoon', 'murder-mystery') AND at.note LIKE '%lost film%' GROUP BY k.keyword;
SELECT ci.person_id, ci.role_id, COUNT(ci.movie_id) AS total_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies, COUNT(DISTINCT lt.id) AS unique_link_types FROM cast_info ci LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id LEFT JOIN link_type lt ON ci.person_role_id = lt.id GROUP BY ci.person_id, ci.role_id ORDER BY total_movies DESC, avg_cast_position;
SELECT kt.kind AS movie_kind, avg(title.production_year) AS average_production_year, count(DISTINCT title.id) AS number_of_titles, count(DISTINCT cast_info.person_id) AS number_of_participants, count(DISTINCT movie_keyword.keyword_id) AS number_of_unique_keywords, sum(case when role_type.role = 'actor' then 1 else 0 end) AS number_of_actors, sum(case when role_type.role = 'actress' then 1 else 0 end) AS number_of_actresses FROM title JOIN kind_type AS kt ON title.kind_id = kt.id LEFT JOIN cast_info ON title.id = cast_info.movie_id LEFT JOIN role_type ON cast_info.role_id = role_type.id LEFT JOIN movie_keyword ON title.id = movie_keyword.movie_id WHERE kt.kind IN ('video movie', 'video game') AND title.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind;
SELECT CT.kind AS company_type, COUNT(DISTINCT ML.movie_id) AS total_movies_linked, AVG(CAST(MI.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN ML.linked_movie_id IN ('583610', '1639457', '20479', '2056353', '346879') THEN 1 ELSE 0 END) AS specific_links_count FROM movie_link ML JOIN movie_info MI ON ML.movie_id = MI.movie_id AND MI.info_type_id = '4' JOIN company_name CN ON CN.imdb_id = ML.movie_id JOIN company_type CT ON CN.id = CT.id WHERE ML.link_type_id IN ('1', '2') GROUP BY CT.kind HAVING COUNT(DISTINCT ML.movie_id) > 10 ORDER BY average_rating DESC;
SELECT kt.kind AS movie_genre, AVG(mi_idx.note::int) AS average_rating, COUNT(DISTINCT k.id) AS unique_keywords, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_cast_movies, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS verified_cast_movies FROM movie_info_idx mi_idx JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id JOIN keyword k ON ml.link_type_id = k.id JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN complete_cast cc ON mi_idx.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id WHERE kt.kind IN ('drama', 'comedy', 'action') AND mi_idx.info LIKE '%rating%' AND k.keyword IN ('epic', 'cult', 'thriller', 'romance') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS total_persons, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN movie_link AS ml ON ci.movie_id = ml.movie_id WHERE rt.ROLE IN ('cinematographer', 'actress', 'costume designer') AND ml.link_type_id IN (10, 8, 11, 13, 7, 6) AND (mc.note LIKE '%(1993) (UK) (all media)%' OR mc.note LIKE '%(1952-1960) (UK) (TV)%') GROUP BY rt.ROLE ORDER BY total_persons DESC;
SELECT AVG(ml.link_type_id) AS average_link_type, COUNT(DISTINCT cn.id) AS total_unique_characters, SUM(CASE WHEN mi.info_type_id = 2 THEN 1 ELSE 0 END) AS total_drama_movies, MIN(cn.name) AS first_character_name FROM char_name cn JOIN movie_link ml ON cn.imdb_id = ml.movie_id JOIN movie_info mi ON ml.movie_id = mi.movie_id WHERE cn.imdb_index = 'tt' AND mi.info LIKE '%Drama%' GROUP BY cn.imdb_id HAVING COUNT(DISTINCT ml.id) > 3;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN mi.info = 'Color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'Black and White' THEN 1 ELSE 0 END) AS number_of_black_and_white_movies, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM movie_info_idx AS mi_idx JOIN movie_info AS mi ON mi_idx.movie_id = mi.movie_id AND mi_idx.info_type_id = mi.info_type_id JOIN title AS t ON t.id = mi.movie_id JOIN comp_cast_type AS cct ON t.kind_id = cct.id WHERE mi_idx.info_type_id IN ('100', '101') AND mi.info_type_id IN ('100', '101') AND cct.kind = 'complete+verified' GROUP BY cct.kind;
SELECT ct.kind AS cast_type_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(mi.info_type_id) AS average_info_type_id, COUNT(DISTINCT rt.id) AS distinct_role_types, SUM(CASE WHEN ml.linked_movie_id IN ('2506545', '2342579', '147212', '15711', '1448011') THEN 1 ELSE 0 END) AS linked_movies_count, STRING_AGG(DISTINCT mi.info, ', ') AS movie_languages FROM movie_link AS ml JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN comp_cast_type AS ct ON ml.link_type_id = ct.id JOIN role_type AS rt ON ct.id = rt.id WHERE mi.info IN ('Tatar', 'Arabic', 'Slovenian', 'Mandarin', 'Maori', 'Icelandic') AND rt.role IN ('actor', 'writer', 'miscellaneous crew', 'director') AND mi.id IN ('7270303', '7268889', '7270059', '7267623', '7271071', '7268128') AND ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people, AVG(ci.nr_order) AS avg_cast_order, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS num_keywords, count(DISTINCT cc.id) AS num_complete_cast_records FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN name n ON ci.person_id = n.id LEFT JOIN keyword k ON ci.movie_id = k.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE n.surname_pcode IN ('A415', 'A435') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 1) AS average_movie_budget, SUM(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 2) AS total_box_office, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword IN ('toy-car', 'personal-stories')) AS count_specific_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN person_info AS pi ON mc.movie_id = pi.person_id AND pi.info_type_id IN (1, 2) LEFT JOIN keyword AS k ON k.id = pi.info_type_id JOIN comp_cast_type AS cct ON mc.company_id = cct.id WHERE mc.company_id IN (1232, 968) AND ct.id IN (2, 1, 4, 3) AND ct.kind = 'miscellaneous companies' AND cct.id IN (1, 2) GROUP BY ct.kind;
SELECT ct.kind AS cast_type, COUNT(ci.id) AS total_cast_entries, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequel_links, COUNT(DISTINCT ci.movie_id) AS unique_movies, COUNT(DISTINCT ci.person_id) AS unique_persons FROM cast_info ci JOIN comp_cast_type ct ON ci.role_id = ct.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id AND ml.linked_movie_id = 9108 WHERE ci.movie_id IN (2348393, 1843055, 2354998, 2143306, 1326354, 1589480) AND ci.nr_order IN (75, 20, 2, 35) GROUP BY ct.kind ORDER BY total_cast_entries DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS number_of_unique_keywords, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT t.id) AS total_movies FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id WHERE t.production_year > 1990 AND mc.company_type_id IN (1, 2, 3) AND cc.status_id = 1 AND k.phonetic_code IN ('W25', 'P4232', 'G4323') GROUP BY t.kind_id HAVING COUNT(DISTINCT mc.company_id) > 5 ORDER BY average_production_year DESC;
