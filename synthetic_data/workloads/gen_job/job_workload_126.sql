SELECT title.kind_id, AVG(cast_info.nr_order) AS average_order, COUNT(DISTINCT cast_info.person_id) AS unique_actors, SUM(CASE WHEN comp_cast_type.kind = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN comp_cast_type.kind = 'actress' THEN 1 ELSE 0 END) AS total_actresses, COUNT(DISTINCT company_name.id) AS involved_companies, MIN(title.production_year) AS earliest_production_year, MAX(title.production_year) AS latest_production_year FROM cast_info INNER JOIN title ON cast_info.movie_id = title.id LEFT JOIN complete_cast ON title.id = complete_cast.movie_id LEFT JOIN company_name ON title.id = company_name.imdb_id LEFT JOIN comp_cast_type ON cast_info.role_id = comp_cast_type.id WHERE complete_cast.subject_id = 1 AND (cast_info.nr_order IN (50, 54, 7, 19, 23, 101) OR cast_info.person_id IN (1494, 1727, 1433, 1693, 1732, 1327)) AND company_name.name_pcode_nf IN ('R2353', 'C6231', 'O4123', 'M3523', 'K2353', 'P6535') GROUP BY title.kind_id ORDER BY unique_actors DESC;
SELECT rt.ROLE, COUNT(ci.id) AS number_of_people, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT ci.movie_id) AS number_of_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id WHERE ci.person_role_id IS NOT NULL AND mk.keyword_id IN (SELECT id FROM movie_keyword WHERE movie_id IN ('10613', '18733')) GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT rt.ROLE, COUNT(ci.id) AS num_cast_entries, AVG(ci.nr_order) AS average_order, SUM(ci.person_id) AS total_person_ids, MAX(pinfo.info) AS latest_info, MIN(pinfo.info) AS earliest_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN person_info pinfo ON ci.person_id = pinfo.person_id WHERE ci.nr_order IS NOT NULL AND pinfo.info_type_id = ( SELECT id FROM info_type WHERE info = 'quotes' ) GROUP BY rt.ROLE ORDER BY num_cast_entries DESC, average_order;
SELECT rt.ROLE AS role_type, AVG(name.imdb_id) AS average_imdb_id, SUM(case when name.gender = 'M' then 1 else 0 end) AS number_of_male_actors, SUM(case when name.gender = 'F' then 1 else 0 end) AS number_of_female_actors, COUNT(DISTINCT ci.movie_id) AS number_of_movies, MAX(title.production_year) AS latest_movie_year, MIN(title.production_year) AS earliest_movie_year, AVG(title.production_year) AS average_movie_year FROM cast_info ci JOIN name ON ci.person_id = name.id JOIN role_type rt ON ci.role_id = rt.id JOIN title ON ci.movie_id = title.id WHERE ci.person_role_id IN (541, 657, 1059) AND name.name_pcode_cf IN ('A4545', 'A4135', 'A242') AND name.surname_pcode IN ('A42', 'A456', 'A432', 'A426', 'A461') GROUP BY rt.ROLE ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT cn.id) AS total_characters, AVG(mii.movie_id) AS average_movie_id, SUM(CASE WHEN kt.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS total_keywords_linked, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, MAX(mii_idx.info) AS max_movie_votes FROM char_name cn LEFT JOIN movie_info_idx mii_idx ON cn.id = mii_idx.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = mii_idx.movie_id LEFT JOIN movie_info_idx mii ON mii.movie_id = cc.movie_id LEFT JOIN keyword k ON k.phonetic_code LIKE 'A%' LEFT JOIN ( SELECT mk.movie_id, mk.keyword_id FROM movie_keyword mk INNER JOIN keyword k ON k.id = mk.keyword_id WHERE k.phonetic_code = 'A323' OR k.phonetic_code = 'B124' ) AS kt ON kt.movie_id = mii.movie_id WHERE cn.name_pcode_nf IN ('C614', 'J525', 'C6346', 'A4152') AND cc.id IN ('2966', '2652', '3214', '2072', '724', '2015') GROUP BY cn.surname_pcode;
SELECT t.production_year, COUNT(DISTINCT t.id) as total_movies, AVG(mcc.count_companies) as average_companies_per_movie, SUM(cast_members.total_cast) as total_cast_members FROM title t LEFT JOIN ( SELECT movie_id, COUNT(company_id) as count_companies FROM movie_companies GROUP BY movie_id ) mcc ON mcc.movie_id = t.id LEFT JOIN ( SELECT movie_id, COUNT(id) as total_cast FROM complete_cast GROUP BY movie_id ) cast_members ON cast_members.movie_id = t.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year ORDER BY t.production_year;
SELECT t.title AS movie_title, ct.kind AS company_type, COUNT(DISTINCT cc.id) AS number_of_complete_casts, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS count_completed_casts, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN company_type AS ct ON ct.kind = 'production companies' JOIN comp_cast_type AS cct ON cc.subject_id = cct.id WHERE t.kind_id = 1 AND cct.kind IN ('complete', 'complete+verified') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY t.title, ct.kind ORDER BY number_of_complete_casts DESC, average_production_year DESC;
SELECT ct.kind AS company_type, AVG(pi.info::NUMERIC) AS average_salary, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, COUNT(DISTINCT cn.id) AS total_companies FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN person_info AS pi ON cn.imdb_id = pi.person_id WHERE pi.info_type_id = 2 AND ct.kind = 'Production' GROUP BY ct.kind ORDER BY average_salary DESC;
SELECT kt.kind, COUNT(DISTINCT cn.id) as number_of_companies, COUNT(DISTINCT pi.person_id) as number_of_people, AVG(CASE WHEN pi.note SIMILAR TO '%(Coverland|Chris Hendren|maria afsharian|CelebrityLoop.com)%' THEN CAST(pi.info AS NUMERIC) ELSE NULL END) as average_info_rating, SUM(CASE WHEN kt.kind = 'video movie' THEN 1 ELSE 0 END) as video_movie_count, SUM(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) as tv_mini_series_count, SUM(CASE WHEN kt.kind = 'video game' THEN 1 ELSE 0 END) as video_game_count FROM company_name cn JOIN kind_type kt ON cn.id = kt.id JOIN person_info pi ON cn.id = pi.person_id WHERE cn.country_code NOT IN ('US', 'GB') AND pi.info_type_id BETWEEN 1 AND 5 AND kt.id IN ('1', '2', '4', '5', '7') GROUP BY kt.kind ORDER BY number_of_companies DESC;
SELECT cc.kind AS cast_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_nr_order, COUNT(DISTINCT cn.id) AS number_of_companies, cn.country_code, SUM(CASE WHEN pi.info_type_id = 31 THEN 1 ELSE 0 END) AS count_of_info_type_31, MIN(pi.info) AS earliest_info FROM cast_info ci JOIN comp_cast_type cc ON ci.person_role_id = cc.id JOIN company_name cn ON cn.imdb_id = ci.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.nr_order IS NOT NULL AND cn.country_code IN ('[xyu]', '[se]', '[my]') AND pi.info_type_id = 31 GROUP BY cc.kind, cn.country_code ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, MIN(n.name) AS earliest_person_name, MAX(pi.info_type_id) AS max_info_type_id FROM aka_title at JOIN link_type lt ON at.kind_id = lt.id JOIN name n ON at.id = n.id JOIN person_info pi ON n.id = pi.person_id WHERE at.production_year IS NOT NULL AND pi.info_type_id IN (1057, 2456) AND at.title IN ('Doctor Hassan', 'Arjeplog - Lappland zwischen Eis und Hightech') AND at.season_nr IN (1, 14, 4, 20, 11) AND lt.id IN (4, 17, 12, 8, 14, 1) GROUP BY lt.LINK ORDER BY total_movies DESC, average_production_year;
SELECT t.title AS movie_title, COUNT(DISTINCT mi.id) AS info_count, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(mc.company_id) FILTER (WHERE mc.company_type_id = 1) AS sum_production_companies, COUNT(DISTINCT cc.id) AS cast_count, MAX(t.production_year) AS latest_production_year FROM title AS t JOIN movie_info AS mi ON t.id = mi.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN info_type AS it ON mi.info_type_id = it.id WHERE t.production_year > 1990 AND (mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating' OR info = 'countries')) AND mc.company_type_id = 1 AND (mc.note NOT LIKE '%(USA)%' OR mc.note IS NULL) AND (cc.status_id = 1 OR cc.status_id = 2) GROUP BY t.title ORDER BY average_rating DESC, sum_production_companies DESC LIMIT 10;
SELECT kt.kind, AVG(at.production_year) AS avg_production_year, COUNT(at.id) AS alt_title_count, COUNT(DISTINCT pi.person_id) AS distinct_person_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN person_info pi ON at.movie_id = pi.person_id WHERE kt.kind IN ('tv series', 'video game', 'movie', 'tv movie') GROUP BY kt.kind ORDER BY kt.kind;
SELECT ct.kind AS company_kind, it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(ti.production_year) AS average_production_year, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'production companies' THEN 1 ELSE 0 END) AS production_companies_count, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'distributors' THEN 1 ELSE 0 END) AS distributors_count, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'special effects companies' THEN 1 ELSE 0 END) AS special_effects_companies_count, SUM(CASE WHEN mi.note LIKE '%(Ukrainian)%' THEN 1 ELSE 0 END) AS ukrainian_notes_count FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id INNER JOIN title ti ON mi.movie_id = ti.id INNER JOIN company_type ct ON ti.kind_id = ct.id GROUP BY ct.kind, it.info ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT rt.ROLE as role_type, AVG(title.production_year) as average_production_year, COUNT(DISTINCT title.id) as total_movies, COUNT(DISTINCT cast_info.person_id) as total_actors, SUM(case when title.production_year BETWEEN 1970 AND 1980 then 1 else 0 end) as movies_1970s, SUM(case when title.production_year BETWEEN 1981 AND 1990 then 1 else 0 end) as movies_1980s FROM title JOIN cast_info ON title.id = cast_info.movie_id JOIN role_type rt ON cast_info.role_id = rt.id WHERE title.phonetic_code = 'C6123' AND title.production_year IN ('1974', '1969', '1987', '1957') GROUP BY rt.ROLE ORDER BY average_production_year DESC;
SELECT ml.movie_id, lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(cn.imdb_id) AS avg_company_imdb_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN company_name AS cn ON ml.movie_id = cn.id GROUP BY ml.movie_id, lt.LINK ORDER BY total_links DESC, avg_company_imdb_id DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(LENGTH(note)) AS average_note_length, COUNT(DISTINCT cn.id) AS number_of_companies_involved, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, SUM(CASE WHEN ml.link_type_id = '9' THEN 1 ELSE 0 END) AS count_type_9_links, SUM(CASE WHEN ml.link_type_id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN ml.link_type_id = '5' THEN 1 ELSE 0 END) AS count_type_5_links, SUM(CASE WHEN ml.link_type_id = '13' THEN 1 ELSE 0 END) AS count_type_13_links FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS unique_keywords_count, COUNT(DISTINCT at.id) AS alternate_titles_count, SUM(CASE WHEN mic.info_type_id = '100' THEN 1 ELSE 0 END) AS count_info_type_100, SUM(CASE WHEN mic.info_type_id = '101' THEN 1 ELSE 0 END) AS count_info_type_101, SUM(CASE WHEN mic.info_type_id = '99' THEN 1 ELSE 0 END) AS count_info_type_99 FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN movie_info_idx AS mic ON mc.movie_id = mic.movie_id LEFT JOIN keyword AS k ON at.movie_id = k.id WHERE ct.kind = 'miscellaneous companies' AND mc.id IN ('1733', '1292', '472', '1920', '683', '4338') GROUP BY ct.kind;
SELECT kt.kind, COUNT(DISTINCT cn.id) AS total_characters, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT mi.info) AS distinct_info_count FROM kind_type AS kt LEFT JOIN movie_info_idx AS mi ON mi.info_type_id = kt.id LEFT JOIN char_name AS cn ON cn.imdb_id = mi.movie_id GROUP BY kt.kind ORDER BY total_characters DESC;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN akat.imdb_index IS NOT NULL THEN 1 ELSE 0 END) AS indexed_movies_count, COUNT(mk.keyword_id) AS total_keywords FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, cn.country_code, rt.ROLE, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_short_films, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT ml.link_type_id) AS number_of_unique_link_types FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN role_type AS rt ON mc.company_type_id = rt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 1990 AND 2000 AND rt.id IN ('6', '8') AND mc.note LIKE '%(TV)%' GROUP BY cn.country_code, rt.ROLE ORDER BY average_production_year DESC, number_of_movies DESC;
