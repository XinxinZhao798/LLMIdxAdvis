SELECT cct.kind AS cast_type_kind, it.info AS info_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS count_of_movies, SUM(CASE WHEN ml.linked_movie_id IS NOT NULL THEN 1 ELSE 0 END) AS sum_of_linked_movies FROM title t JOIN comp_cast_type cct ON t.kind_id = cct.id JOIN complete_cast cc ON t.id = cc.movie_id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE cc.status_id IN ('3', '4') GROUP BY cct.kind, it.info ORDER BY count_of_movies DESC, sum_of_linked_movies DESC;
SELECT T.production_year, COUNT(*) AS total_titles, AVG(KW.count_keywords) AS avg_keywords_per_title, SUM(CASE WHEN T.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN T.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN T.kind_id = 3 THEN 1 ELSE 0 END) AS total_video_games FROM title AS T LEFT JOIN ( SELECT MK.movie_id, COUNT(MK.keyword_id) AS count_keywords FROM movie_keyword AS MK GROUP BY MK.movie_id ) AS KW ON T.id = KW.movie_id WHERE T.production_year BETWEEN 2000 AND 2020 GROUP BY T.production_year ORDER BY T.production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.movie_id) AS total_movies, AVG(CASE WHEN mc.note LIKE '%(worldwide) (all media)%' THEN 1 ELSE NULL END) * 100 AS percentage_worldwide_distribution, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link LIKE '%remake of%') AS total_remakes, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ml.linked_movie_id) FILTER (WHERE ml.link_type_id IN ('17', '16')) AS total_sequel_or_prequels, COUNT(DISTINCT n.id) AS total_actors_involved FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id LEFT JOIN movie_companies AS mc ON t.movie_id = mc.movie_id LEFT JOIN link_type AS lt ON lt.id = mc.company_type_id LEFT JOIN movie_link AS ml ON t.movie_id = ml.movie_id LEFT JOIN movie_info AS mi ON t.movie_id = mi.movie_id AND mi.info_type_id = '4' LEFT JOIN name AS n ON n.imdb_id = t.movie_id GROUP BY kt.kind;
SELECT ct.kind AS cast_type_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(mi.info_type_id) AS average_info_type_id, COUNT(DISTINCT rt.id) AS distinct_role_types, SUM(CASE WHEN ml.linked_movie_id IN ('2506545', '2342579', '147212', '15711', '1448011') THEN 1 ELSE 0 END) AS linked_movies_count, STRING_AGG(DISTINCT mi.info, ', ') AS movie_languages FROM movie_link AS ml JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN comp_cast_type AS ct ON ml.link_type_id = ct.id JOIN role_type AS rt ON ct.id = rt.id WHERE mi.info IN ('Tatar', 'Arabic', 'Slovenian', 'Mandarin', 'Maori', 'Icelandic') AND rt.role IN ('actor', 'writer', 'miscellaneous crew', 'director') AND mi.id IN ('7270303', '7268889', '7270059', '7267623', '7271071', '7268128') AND ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY ct.kind;
SELECT AVG(mi_idx_rating.info::NUMERIC) AS average_rating, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies, MIN(cn.name) AS first_company_name, MAX(cn.name) AS last_company_name FROM movie_info mi_genre JOIN movie_info mi_idx_rating ON mi_genre.movie_id = mi_idx_rating.movie_id JOIN movie_info mi_language ON mi_genre.movie_id = mi_language.movie_id JOIN cast_info ci ON mi_genre.movie_id = ci.movie_id JOIN company_name cn ON ci.movie_id = ci.movie_id WHERE mi_genre.info_type_id = (SELECT id FROM info_type WHERE info = 'genres') AND mi_genre.info IN ('Drama', 'Comedy', 'Action') AND mi_idx_rating.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx_rating.info AS NUMERIC) >= 5.0 AND mi_language.info_type_id = (SELECT id FROM info_type WHERE info = 'languages') AND mi_language.info IN ('English', 'Spanish', 'French') AND ci.nr_order IS NOT NULL AND ci.nr_order BETWEEN 1 AND 10 GROUP BY mi_genre.movie_id HAVING COUNT(DISTINCT ci.person_id) > 3 ORDER BY average_rating DESC;
SELECT AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.company_id) AS number_of_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS german_movie_count FROM movie_info mi JOIN movie_companies ci ON mi.movie_id = ci.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN title t ON mi.movie_id = t.id WHERE (mi.note LIKE '%(interviews)%' OR mi.note LIKE '%(Original Version)%' OR mi.note LIKE '%(only a few lines)%' OR mi.note LIKE '%(English subtitles)%') GROUP BY mi.movie_id;
SELECT t.title AS Movie_Title, t.production_year AS Production_Year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords, COUNT(DISTINCT mc.company_id) AS Number_of_Companies_Involved, AVG(t.production_year) OVER () AS Average_Production_Year, COUNT(*) OVER () AS Total_Movies_Analyzed FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ml.link_type_id IN ('12', '11', '13', '6') AND t.series_years IN ('1985-????', '2004-????', '2013-????', '1988-????', '2010-2010') AND t.production_year > (SELECT AVG(production_year) FROM title) GROUP BY t.id HAVING COUNT(DISTINCT mk.keyword_id) > 5 ORDER BY Number_of_Keywords DESC, Production_Year DESC;
SELECT t.production_year, kt.kind, AVG(LENGTH(t.title)) AS average_title_length, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IS NOT NULL GROUP BY t.production_year, kt.kind ORDER BY t.production_year DESC, kt.kind;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, SUM(CASE WHEN k.keyword = 'poisoning' THEN 1 ELSE 0 END) AS count_poisoning_keyword, SUM(CASE WHEN k.keyword = 'law-student' THEN 1 ELSE 0 END) AS count_law_student_keyword, MAX(t.title) AS latest_movie_title FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN company_type AS ct ON ct.id = mi.info_type_id WHERE t.production_year BETWEEN 2000 AND 2010 AND ct.kind IN ('production companies', 'distributors') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT ct.kind AS company_kind, AVG(ci.nr_order) AS average_cast_number, COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_leading_roles, COUNT(DISTINCT mi.movie_id) AS number_of_movies, MIN(mi.info) AS earliest_release_date FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN movie_info mi ON mi.movie_id = mc.movie_id JOIN cast_info ci ON ci.movie_id = mc.movie_id WHERE ct.kind = 'special effects companies' AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'release dates') GROUP BY ct.kind;
SELECT MIN(t.title) AS movie_title, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_actors, SUM(CASE WHEN pi.info = 'New Kensington, Pennsylvania, USA' THEN 1 ELSE 0 END) AS actors_from_new_kensington, COUNT(DISTINCT k.id) AS total_keywords_used FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id JOIN person_info AS pi ON n.id = pi.person_id JOIN keyword AS k ON k.phonetic_code = t.phonetic_code WHERE t.imdb_index IN ('V', 'I', 'II') AND n.surname_pcode IN ('A434', 'A414') AND pi.info IN ('New Kensington, Pennsylvania, USA', '5'' 6"', 'Czech Republic') AND pi.note IN ('Bobbie Merritt/THE ENTERTAINMENT GROUP', 'Be Free Films', 'isabelleadriani@yahoo.it', 'Autor', 'Quincy Johnson', 'MSC') GROUP BY t.id;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS num_of_people, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS num_complete_verified, cn.country_code, COUNT(DISTINCT mk.keyword_id) AS num_of_keywords, AVG(CASE WHEN mi.info SIMILAR TO '[0-9]+\.[0-9]' THEN CAST(mi.info AS FLOAT) ELSE NULL END) AS average_info_numeric FROM cast_info ci INNER JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN comp_cast_type cct ON ci.person_role_id = cct.id LEFT JOIN company_name cn ON ci.person_id = cn.imdb_id LEFT JOIN movie_keyword mk ON ci.movie_id = mk.movie_id LEFT JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id WHERE mi.movie_id::VARCHAR LIKE '%19410%' AND mi.info SIMILAR TO '(0|84|349|11\.7)%' AND mk.id IN (1932, 3564, 2558, 997, 3482, 1435) GROUP BY rt.ROLE, cn.country_code ORDER BY num_of_people DESC, average_order ASC;
SELECT c.name AS company_name, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.keyword_id) AS distinct_keywords, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, COUNT(DISTINCT n.id) AS number_of_cast_members, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, SUM(CASE WHEN t.kind_id = 3 THEN 1 ELSE 0 END) AS number_of_video_games FROM company_name c LEFT JOIN movie_keyword mk ON mk.movie_id = c.imdb_id LEFT JOIN movie_link ml ON ml.movie_id = c.imdb_id LEFT JOIN complete_cast cc ON cc.movie_id = c.imdb_id LEFT JOIN title t ON t.id = c.imdb_id LEFT JOIN name n ON n.imdb_id = c.imdb_id LEFT JOIN movie_keyword k ON k.movie_id = t.id WHERE c.name IN ('Crown International Pictures', 'Hisa-Film-Vertrieb GmbH', 'Quality Special Products', 'Hem Films', 'H & H Warranted Productions') GROUP BY c.name ORDER BY number_of_movies DESC;
SELECT mc.company_id, COUNT(DISTINCT cast_info_count.movie_id) AS total_movies, AVG(cast_info_count.nr_actors) AS average_actors_per_movie, SUM(kw_count.total_keywords) AS total_keywords, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 2) AS sequel_links, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 4) AS prequel_links FROM movie_companies mc LEFT JOIN (SELECT movie_id, COUNT(*) AS nr_actors FROM cast_info GROUP BY movie_id) cast_info_count ON mc.movie_id = cast_info_count.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS total_keywords FROM movie_keyword GROUP BY movie_id) kw_count ON mc.movie_id = kw_count.movie_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id WHERE mc.company_id IN (753, 1127, 569) GROUP BY mc.company_id ORDER BY mc.company_id;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN at.kind_id <> 1 THEN 1 ELSE 0 END) AS number_of_nonfeature_films FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN aka_title at ON mi.movie_id = at.movie_id WHERE it.info IN ('sound mix', 'LD quality program', 'taglines') GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT a.id) AS total_aka_titles, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT m.company_id) AS total_companies_involved, COUNT(DISTINCT n.id) AS total_unique_names, COUNT(DISTINCT ml.movie_id) AS total_movies_with_links, SUM(CASE WHEN a.production_year BETWEEN 1990 AND 2000 THEN 1 ELSE 0 END) AS titles_from_90s FROM aka_title AS a JOIN movie_companies AS m ON a.movie_id = m.movie_id JOIN name AS n ON n.md5sum = a.md5sum LEFT JOIN movie_link AS ml ON a.movie_id = ml.movie_id WHERE a.production_year IS NOT NULL AND m.note IS NOT NULL AND n.gender IN ('F', 'M') GROUP BY n.gender ORDER BY total_aka_titles DESC;
SELECT kt.kind, AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS total_votes, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT p.id) AS number_of_people_involved FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies mc ON t.id = mc.movie_id JOIN person_info p ON p.info_type_id = mi_idx.info_type_id WHERE kt.kind = 'movie' AND t.production_year BETWEEN 2000 AND 2010 AND mi_idx.info_type_id IN (1, 3) GROUP BY kt.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY average_rating DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cast_count.cast_count) AS average_cast_per_movie, SUM(keyword_count.keyword_count) AS total_keywords FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN (SELECT movie_id, COUNT(*) AS cast_count FROM cast_info GROUP BY movie_id) AS cast_count ON mc.movie_id = cast_count.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS keyword_count ON mc.movie_id = keyword_count.movie_id GROUP BY cn.name ORDER BY total_movies_produced DESC, average_cast_per_movie DESC, total_keywords DESC;
SELECT kt.kind AS content_type, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT a.person_id) AS total_individuals, SUM(CASE WHEN t.series_years = '1978-????' THEN 1 ELSE 0 END) AS count_series_from_1978 FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN aka_name AS a ON a.id = t.id LEFT JOIN role_type AS rt ON rt.id = a.id WHERE rt.role = 'editor' AND t.production_year IS NOT NULL GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT COUNT(DISTINCT mk.movie_id) AS total_movies, k.keyword, AVG(lt.id) AS average_link_type_id, SUM(CASE WHEN k.phonetic_code = 'T2351' THEN 1 ELSE 0 END) AS count_t2351, SUM(CASE WHEN k.phonetic_code = 'D35' THEN 1 ELSE 0 END) AS count_d35 FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN link_type AS lt ON mk.id = lt.id GROUP BY k.keyword ORDER BY total_movies DESC, k.keyword;
SELECT kt.kind as Movie_Type, AVG(t.production_year) as Average_Production_Year, COUNT(DISTINCT t.id) as Total_Movies, COUNT(DISTINCT ml.movie_id) as Movies_With_Links, SUM(CASE WHEN t.series_years LIKE '2004-____' THEN 1 ELSE 0 END) as Movies_From_2004_onwards FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id IN ('16', '13', '8') WHERE kt.kind IN ('tv mini series', 'tv movie', 'video game', 'movie') GROUP BY kt.kind;
SELECT AVG(mc.movie_id) AS average_movie_id, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS info_type_count, cct.kind AS cast_type_kind, COUNT(DISTINCT k.id) AS unique_keywords_used, MAX(cn.name) AS largest_company_name FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN keyword AS k ON mi.info = k.keyword WHERE cn.country_code = '[py]' AND (mi.info = 'Urdu' OR mi.info = 'Turkish' OR mi.info = 'Vietnamese' OR mi.info = 'Estonian') AND (cct.kind = 'complete+verified' OR cct.kind = 'cast' OR cct.kind = 'crew' OR cct.kind = 'complete') AND (k.id IN (2454, 1707, 7050, 8101)) GROUP BY cct.kind;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT cc.movie_id) AS total_movies, AVG(pi.id) AS average_person_info_id, SUM(ct.id) AS sum_company_type_ids FROM role_type rt JOIN char_name cn ON cn.md5sum IN ('87fb1da22896f8674cfb742fe549ec67', 'bf85b5265ca46bac451dcdce6f3625f7', '74802eebae1a12921215b7402178254c') JOIN person_info pi ON pi.person_id = cn.id JOIN complete_cast cc ON cc.subject_id = cn.id JOIN company_type ct ON ct.id = 2 WHERE rt.ROLE IN ('actress', 'miscellaneous crew', 'editor', 'director', 'composer') AND pi.note IN ('frankfob2@yahoo.com', 'Deception Films', 'CelebrityLoop.com', 'Spook Show Entertainment', 'E Adamson') AND pi.person_id IN ('3716', '1740595') GROUP BY rt.ROLE ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mi_idx.movie_id) AS movie_count, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_rating, SUM(CASE WHEN k.keyword IN ('electric-shock', 'hiding-under-covers', 'stabbed-with-a-letter-opener') THEN 1 ELSE 0 END) AS thrill_keyword_count, COUNT(DISTINCT cn.id) AS number_of_companies_involved, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_involved FROM kind_type AS kt LEFT JOIN movie_info_idx AS mi_idx ON kt.id = mi_idx.info_type_id LEFT JOIN keyword AS k ON mi_idx.movie_id = k.id LEFT JOIN company_name AS cn ON mi_idx.movie_id = cn.imdb_id WHERE kt.kind IN ('tv mini series', 'tv series', 'video movie', 'tv movie') AND mi_idx.note IS NOT NULL AND (k.id = '7078' OR k.id = '5806') AND (cn.country_code = 'US' OR cn.country_code IS NULL) GROUP BY kt.kind ORDER BY movie_type;
SELECT t.production_year, ct.kind AS company_type, COUNT(t.id) AS movie_count FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id WHERE cn.country_code IN ('[gb]', '[dk]') AND ct.kind IN ('Distribution', 'Production') GROUP BY t.production_year, ct.kind ORDER BY t.production_year ASC, ct.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS number_of_tv_related_movies, COUNT(DISTINCT ci.person_id) AS number_of_cast_members, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM cast_info ci JOIN kind_type kt ON kt.id = ci.role_id JOIN movie_info_idx mi_idx ON mi_idx.movie_id = ci.movie_id JOIN movie_companies mc ON mc.movie_id = ci.movie_id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id WHERE ci.role_id = 1 AND ci.person_id <> 1331 AND mi_idx.info_type_id = 101 AND ( ci.movie_id IN (929802, 930487) OR mi_idx.id IN (582, 3094, 1805, 510, 2997, 1382) OR mc.movie_id IN (28517, 18627, 13753, 26411, 16217) ) GROUP BY kt.kind ORDER BY number_of_movies DESC, average_movie_rating DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, aka.production_year, mi.info AS movie_genre, AVG(aka.production_year) AS average_alternate_title_year FROM cast_info AS ci JOIN movie_info_idx AS mi ON ci.movie_id = mi.movie_id JOIN aka_title AS aka ON ci.movie_id = aka.movie_id WHERE ci.nr_order IN (200, 43, 31, 92, 117, 48) AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'genre') AND aka.kind_id = 1 AND aka.production_year > 2000 GROUP BY aka.production_year, mi.info ORDER BY aka.production_year DESC, total_actors DESC;
