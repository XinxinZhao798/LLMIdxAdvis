SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, COUNT(DISTINCT mc.company_id) AS total_production_companies_involved, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast FROM cast_info ci LEFT JOIN movie_keyword mk ON ci.movie_id = mk.movie_id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE ci.note NOT LIKE '%(uncredited)%' AND mk.keyword_id IN (3630, 3933, 2868, 3441, 70) AND ci.role_id = 1;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS number_of_movies, COUNT(DISTINCT cc.movie_id) AS number_of_completed_movies, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS count_features_link, MAX(mi.info) AS latest_movie_info FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN complete_cast cc ON akat.movie_id = cc.movie_id AND cc.status_id = 4 LEFT JOIN movie_info mi ON akat.movie_id = mi.movie_id LEFT JOIN link_type lt ON lt.id = mi.info_type_id AND lt.link IN ('features', 'spin off', 'remade as') WHERE akat.production_year IS NOT NULL AND akat.kind_id IN (SELECT id FROM kind_type) GROUP BY kt.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT rt.ROLE as role_type, AVG(title.production_year) as average_production_year, COUNT(DISTINCT title.id) as total_movies, COUNT(DISTINCT cast_info.person_id) as total_actors, SUM(case when title.production_year BETWEEN 1970 AND 1980 then 1 else 0 end) as movies_1970s, SUM(case when title.production_year BETWEEN 1981 AND 1990 then 1 else 0 end) as movies_1980s FROM title JOIN cast_info ON title.id = cast_info.movie_id JOIN role_type rt ON cast_info.role_id = rt.id WHERE title.phonetic_code = 'C6123' AND title.production_year IN ('1974', '1969', '1987', '1957') GROUP BY rt.ROLE ORDER BY average_production_year DESC;
SELECT kt.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, SUM(mc.company_type_id) AS sum_company_type_ids FROM movie_companies mc JOIN kind_type kt ON mc.company_type_id = kt.id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT t.title, kt.kind, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT comp_n.id) AS total_companies, AVG(t.production_year) AS average_production_year, MAX(it.info) AS most_frequent_info FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_info_idx mii ON t.id = mii.movie_id LEFT JOIN info_type it ON mii.info_type_id = it.id LEFT JOIN char_name cn ON t.id = cn.id LEFT JOIN company_name comp_n ON t.id = comp_n.id GROUP BY t.title, kt.kind ORDER BY total_characters DESC, total_companies DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(ci.id) AS total_roles_played, AVG(ci.nr_order) AS average_order_of_appearance, AVG(CAST(mi_idx.info AS FLOAT)) AS average_movie_rating FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY n.name ORDER BY number_of_movies DESC, average_movie_rating DESC, average_order_of_appearance ASC LIMIT 10;
SELECT it.info AS info_category, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_value, SUM(CAST(mi_idx.info AS NUMERIC)) AS total_info_value, COUNT(DISTINCT k.id) AS distinct_keywords_used FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN keyword k ON k.phonetic_code LIKE mi_idx.info WHERE mi_idx.info_type_id IN (100, 101, 99) AND mi_idx.info LIKE '...12...23' AND mc.company_id IN (741, 1095, 343, 1129) AND it.id IN (92, 14, 59) GROUP BY it.info ORDER BY number_of_movies DESC, average_info_value DESC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS num_roles_with_person_role_id, COUNT(DISTINCT ci.person_id) AS num_unique_actors FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN kind_type kt ON kt.id = 1 JOIN cast_info ci ON mc.movie_id = ci.movie_id WHERE mc.company_type_id = 1 AND kt.kind IN ('episode', 'video movie') GROUP BY ct.kind, kt.kind;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, CK.keyword, COUNT(DISTINCT chn.id) AS total_characters, SUM(CASE WHEN akat.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies_kind_1, SUM(CASE WHEN akat.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies_kind_2 FROM aka_title AS akat JOIN char_name AS chn ON akat.movie_id = chn.id JOIN keyword AS CK ON CK.id = akat.id WHERE akat.production_year BETWEEN 1990 AND 2020 AND CK.phonetic_code IN ('L165', 'M4236', 'B61') AND chn.surname_pcode IN ('D6452', 'A6245', 'V5612', 'C4532', 'O6252', 'P635') GROUP BY CK.keyword ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_kind, COUNT(mc.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ti.series_years IS NOT NULL THEN 1 ELSE 0 END) AS total_series, COUNT(DISTINCT t.id) AS unique_titles, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN title AS ti ON t.episode_of_id = ti.id WHERE ct.kind IN ('production companies', 'special effects companies') AND t.production_year BETWEEN 1980 AND 2005 AND (t.series_years = '1985-1987' OR t.series_years = '1987-????' OR t.series_years LIKE '1968-%' OR t.series_years LIKE '1978-1979') AND mc.company_id = 909 GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT ct.kind AS cast_type, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN pi.info_type_id = 17 THEN 1 ELSE 0 END) AS count_info_type_17, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT t.id) FILTER (WHERE t.production_year > 2010) AS titles_after_2010 FROM title AS t JOIN comp_cast_type AS ct ON t.kind_id = ct.id LEFT JOIN company_name AS cn ON cn.md5sum IN ('46757a84e182ecbce2485bbe4f94c35c', '042c3abaa3eee3219096099e572cbd78', '055c9414a7d1b5428c44a7840e634a28') LEFT JOIN person_info AS pi ON pi.info IN ('Elektra', '23 September 1989') LEFT JOIN keyword AS k ON k.keyword LIKE '%' LEFT JOIN link_type AS lt ON lt.link = 'similar to' AND lt.id = 13 WHERE (t.episode_of_id = '86208' OR cn.name_pcode_nf = 'M6421') GROUP BY ct.kind;
SELECT AVG(m.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT n.id) AS number_of_persons FROM title AS m LEFT JOIN movie_companies AS mc ON mc.movie_id = m.id LEFT JOIN movie_info AS mi ON mi.movie_id = m.id AND mi.info_type_id = 6 LEFT JOIN keyword AS k ON k.id = mi.info_type_id LEFT JOIN name AS n ON n.id = mi.movie_id GROUP BY m.kind_id HAVING COUNT(DISTINCT mc.company_id) > 1 ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(CASE WHEN rt.ROLE = 'director' THEN 1 ELSE 0 END) AS avg_director_presence, COUNT(DISTINCT ml.movie_id) AS num_movies_linked, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, SUM(CASE WHEN mi.info_type_id = 2 AND mi.info = 'color' THEN 1 ELSE 0 END) AS total_color_movies, COUNT(DISTINCT t.id) AS total_movies FROM title t LEFT JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN movie_info mi ON t.id = mi.movie_id LEFT JOIN role_type rt ON mi.info_type_id = rt.id WHERE t.production_year BETWEEN 1990 AND 2020 AND kt.kind IN ('movie', 'tv series', 'video game') AND (ml.link_type_id IN (5, 12, 16) OR ml.link_type_id IS NULL) AND (ml.linked_movie_id IN (1639371, 2307098) OR ml.linked_movie_id IS NULL) AND rt.ROLE IN ('director', 'actor', 'producer') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.movie_id) AS total_movies, AVG(CASE WHEN mc.note LIKE '%(worldwide) (all media)%' THEN 1 ELSE NULL END) * 100 AS percentage_worldwide_distribution, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link LIKE '%remake of%') AS total_remakes, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ml.linked_movie_id) FILTER (WHERE ml.link_type_id IN ('17', '16')) AS total_sequel_or_prequels, COUNT(DISTINCT n.id) AS total_actors_involved FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id LEFT JOIN movie_companies AS mc ON t.movie_id = mc.movie_id LEFT JOIN link_type AS lt ON lt.id = mc.company_type_id LEFT JOIN movie_link AS ml ON t.movie_id = ml.movie_id LEFT JOIN movie_info AS mi ON t.movie_id = mi.movie_id AND mi.info_type_id = '4' LEFT JOIN name AS n ON n.imdb_id = t.movie_id GROUP BY kt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT cc.subject_id) AS number_of_subjects, AVG(cc.status_id) AS average_status FROM company_type ct JOIN complete_cast cc ON ct.id = cc.status_id GROUP BY ct.kind HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY number_of_movies DESC, average_status ASC;
SELECT COUNT(*) AS total_movies, AVG(aka_title.production_year) AS average_production_year, SUM(CASE WHEN comp_cast_type.kind = 'complete' THEN 1 ELSE 0 END) AS total_complete_cast_movies, SUM(CASE WHEN comp_cast_type.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_verified_cast_movies, COUNT(DISTINCT char_name.name) AS distinct_character_names, COUNT(DISTINCT keyword.id) AS total_keywords, MAX(movie_companies.company_type_id) AS max_company_type_id FROM aka_title JOIN movie_keyword ON aka_title.movie_id = movie_keyword.movie_id JOIN keyword ON movie_keyword.keyword_id = keyword.id JOIN movie_companies ON aka_title.movie_id = movie_companies.movie_id JOIN comp_cast_type ON movie_companies.company_type_id = comp_cast_type.id JOIN char_name ON char_name.name = aka_title.note WHERE aka_title.production_year BETWEEN 1990 AND 2000 AND movie_companies.company_type_id = 1 AND aka_title.kind_id = 1 AND (char_name.name IN ('Vereshchagin', 'Old Man on Street', 'Hadhod', 'Uncle Carl Åkerblom') OR movie_keyword.movie_id IN ('15386', '18793')) GROUP BY aka_title.kind_id ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(*) AS total_roles, AVG(pi.person_id) AS average_person_id, SUM(ml.movie_id) AS total_movie_references, MAX(c.name) AS longest_char_name FROM role_type rt JOIN char_name c ON rt.id = c.id JOIN movie_link ml ON ml.id = c.id JOIN person_info pi ON pi.person_id = c.id WHERE ml.link_type_id = '11' AND c.md5sum IN ('88b24c378b8d6d3a9b9b0db5a90d076a', 'c36da3bda4ff32a6c5e348a693b4796b', '66a96a02207eb6d28a41944d55f42d0b') GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, COUNT(DISTINCT n.id) AS number_of_people_involved, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN name n ON mi.movie_id = n.id WHERE mc.note LIKE '%(TV)%' AND it.info IN ('LD disc size', 'birth date', 'LD video noise', 'nick names', 'plot') AND mc.company_id IN (189, 1031, 498) GROUP BY ct.kind, it.info;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT cc.id) AS total_complete_cast_records, COUNT(DISTINCT k.id) AS total_unique_keywords FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_companies mc ON at.movie_id = mc.movie_id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN keyword k ON k.id = ANY(ARRAY[6884, 9943]) WHERE at.md5sum IN ('44c0080e0912e3ca5d10075839063f1b', 'a5be4ea19dc2872037b2956fcb845de1', 'ec82f287db52c1fe7be3ed79dfb0a06a', '42824af6235a76885dde510273e9d1a7', 'cd3e9be473ea7275bd1b401dce7d08f9', 'c994ea29391a6ac08145be73f75d09ff') GROUP BY kt.kind;
SELECT cct.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(at.id) AS number_of_titles, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at JOIN comp_cast_type cct ON at.kind_id = cct.id GROUP BY cct.kind ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT t.id) AS num_movies, AVG(mi_idx.info::numeric) AS avg_movie_info, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS num_movies_imdb_v, SUM(CASE WHEN t.imdb_index = 'I' THEN 1 ELSE 0 END) AS num_movies_imdb_i, SUM(CASE WHEN t.imdb_index = 'II' THEN 1 ELSE 0 END) AS num_movies_imdb_ii, COUNT(DISTINCT ci.person_id) AS num_actors, COUNT(DISTINCT k.id) AS num_keywords FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN keyword AS k ON k.id = ci.role_id WHERE t.production_year >= 2000 AND mi_idx.info_type_id BETWEEN 100 AND 200 GROUP BY t.kind_id ORDER BY num_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS total_produced_by_company_type_1, COUNT(DISTINCT n.id) AS total_actors_involved, AVG(CAST(n.gender AS integer)) AS average_gender_code FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = t.id LEFT JOIN name n ON n.id = cc.subject_id AND cc.status_id = 1 GROUP BY kt.kind ORDER BY total_movies DESC;
