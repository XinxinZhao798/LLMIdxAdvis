SELECT CT.kind AS company_kind, AVG(CAST(MI.info AS FLOAT)) AS average_rating, COUNT(DISTINCT CI.person_id) AS total_cast_members, COUNT(DISTINCT MC.movie_id) AS number_of_movies FROM movie_companies AS MC JOIN company_type AS CT ON MC.company_type_id = CT.id JOIN movie_info AS MI ON MC.movie_id = MI.movie_id AND MI.info_type_id = 101 JOIN cast_info AS CI ON MC.movie_id = CI.movie_id WHERE (MC.note LIKE '%(TV)' OR MC.note IS NULL) AND CT.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND CI.role_id = 1 GROUP BY CT.kind ORDER BY average_rating DESC;
SELECT AVG(title.production_year) AS average_production_year, COUNT(DISTINCT name.id) AS number_of_actors, COUNT(DISTINCT title.id) AS number_of_movies, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors, MAX(title.production_year) AS latest_production_year, MIN(title.production_year) AS earliest_production_year FROM title JOIN aka_title ON title.id = aka_title.movie_id JOIN person_info ON aka_title.movie_id = person_info.person_id JOIN name ON person_info.person_id = name.id WHERE title.production_year BETWEEN 2000 AND 2020 AND name.name_pcode_nf IN ('N4532', 'H6341', 'M2164') GROUP BY title.kind_id HAVING COUNT(DISTINCT title.id) > 10 ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT ct.kind AS company_type, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT ci.movie_id) AS num_movies_casted, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, COUNT(DISTINCT k.id) AS unique_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN cast_info AS ci ON ci.movie_id = mc.movie_id LEFT JOIN keyword AS k ON k.id = at.movie_id WHERE mc.note LIKE '%(20%)%' AND ci.nr_order IN (44, 146, 15, 7, 47) AND ci.role_id = 1 AND at.movie_id IN (879100, 610270, 1241825, 1678396, 1699805, 549252) GROUP BY ct.kind;
SELECT COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN at.kind_id = 6 THEN 1 ELSE 0 END) AS total_season_6_titles, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT mi_finnish.movie_id) AS total_finnish_movies FROM cast_info ci JOIN aka_title at ON ci.movie_id = at.movie_id JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN movie_info mi_finnish ON ci.movie_id = mi_finnish.movie_id AND mi_finnish.info = 'Finnish' WHERE ci.note LIKE '%(as %)' AND at.season_nr IN (1, 9) GROUP BY at.production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CASE WHEN mi_numeric.info_type_id = 3 THEN mi_numeric.info::NUMERIC END) AS average_movie_length, COUNT(DISTINCT kw.id) AS number_of_unique_keywords, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count FROM movie_info mi JOIN kind_type kt ON mi.info_type_id = kt.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword kw ON mk.keyword_id = kw.id LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN name n ON ml.movie_id = n.id LEFT JOIN movie_info mi_numeric ON mi.movie_id = mi_numeric.movie_id AND mi_numeric.info_type_id = 3 WHERE kt.kind = 'complete' AND kw.keyword IN ('santiago-de-chile', 'golf-club', 'tripping') AND n.name IN ('Anderson, Othello', 'Ammar, Ali', 'Ameyl, Dzaga') GROUP BY kt.kind;
SELECT mc.company_id, COUNT(DISTINCT cc.movie_id) AS total_movies, AVG(mi_idx_numeric.info::NUMERIC) AS average_numeric_info, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS distribution_companies FROM movie_companies AS mc JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN movie_info_idx AS mi_idx_numeric ON mc.movie_id = mi_idx_numeric.movie_id AND mi_idx_numeric.info ~ '^[0-9\.]+$' WHERE mi_idx.info_type_id = 3 GROUP BY mc.company_id HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY total_movies DESC, average_numeric_info DESC;
SELECT ct.kind AS company_type, AVG(CASE WHEN ml.link_type_id = '3' THEN 1 ELSE 0 END) AS avg_movie_references, COUNT(DISTINCT mk.movie_id) AS unique_movies_with_keywords, COUNT(DISTINCT at.id) AS total_aka_titles, SUM(CASE WHEN at.phonetic_code IN ('T54', 'V5231') THEN 1 ELSE 0 END) AS count_phonetic_code_matches, MAX(at.production_year) AS latest_production_year FROM company_type ct LEFT JOIN movie_companies mc ON ct.id = mc.company_type_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_title at ON mc.movie_id = at.movie_id WHERE ct.kind = 'distributors' AND ml.link_type_id IN ('3', '9', '15', '4', '10') GROUP BY ct.kind;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT pi.person_id) AS actors_with_additional_info, SUM(CASE WHEN rt.ROLE = 'Actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.ROLE = 'Director' THEN 1 ELSE 0 END) AS total_director_roles, COUNT(DISTINCT t.id) AS total_titles FROM title t LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN role_type rt ON cc.status_id = rt.id LEFT JOIN person_info pi ON n.id = pi.person_id WHERE t.production_year IN ('1998', '1971') GROUP BY t.kind_id ORDER BY average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mi_idx.info::NUMERIC) AS average_info, SUM(mi_idx.info::NUMERIC) AS total_info, COUNT(DISTINCT cn.id) AS total_companies, STRING_AGG(DISTINCT cn.name, ', ') AS company_names FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id JOIN kind_type kt ON mi_idx.movie_id = kt.id JOIN company_name cn ON cn.imdb_id = mi_idx.movie_id WHERE kt.kind IN ('video movie', 'tv mini series', 'tv series', 'tv movie') AND cn.country_code = 'US' AND it.info = 'budget' GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE mi.info_type_id = 101) AS average_rating, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.linked_movie_id IN (10496, 260662, 2464253, 553702, 58480, 2087155)) AS movies_with_specific_links FROM company_type ct JOIN movie_info mi ON mi.info ~ ct.kind JOIN movie_link ml ON mi.movie_id = ml.movie_id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, COUNT(DISTINCT mc.company_id) AS total_production_companies_involved, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast FROM cast_info ci LEFT JOIN movie_keyword mk ON ci.movie_id = mk.movie_id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE ci.note NOT LIKE '%(uncredited)%' AND mk.keyword_id IN (3630, 3933, 2868, 3441, 70) AND ci.role_id = 1;
SELECT rt.ROLE, COUNT(*) AS num_roles, AVG(cn.imdb_id) AS avg_imdb_id, SUM(cct.id) AS sum_cast_type_ids FROM aka_name AS an JOIN char_name AS cn ON an.person_id = cn.id JOIN comp_cast_type AS cct ON cn.id = cct.id JOIN role_type AS rt ON cct.id = rt.id GROUP BY rt.ROLE ORDER BY num_roles DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN at.kind_id <> 1 THEN 1 ELSE 0 END) AS number_of_nonfeature_films FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN aka_title at ON mi.movie_id = at.movie_id WHERE it.info IN ('sound mix', 'LD quality program', 'taglines') GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT kt.kind as movie_type, COUNT(DISTINCT mk.movie_id) as number_of_movies, COUNT(DISTINCT k.id) as number_of_unique_keywords, STRING_AGG(DISTINCT k.keyword, ', ') as keywords_list FROM kind_type kt JOIN movie_keyword mk ON kt.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_info mi ON mk.movie_id = mi.movie_id WHERE kt.kind = 'movie' AND mk.id IN ('3186', '2034', '2102', '2766', '2505', '305') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_type, COUNT(t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title t JOIN (SELECT id, kind FROM comp_cast_type WHERE kind IN ('director', 'actor')) cct ON t.kind_id = cct.id LEFT JOIN (SELECT id, kind FROM kind_type) kt ON t.kind_id = kt.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, COUNT(DISTINCT ml.id) AS number_of_related_links, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_contributors, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_contributors FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN name n ON mi.movie_id = n.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') AND ml.link_type_id = (SELECT id FROM link_type WHERE link = 'edited from') AND mi.id IN ('7270548', '7266456', '7269706') GROUP BY ct.kind ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT ct.kind AS company_kind, AVG(ci.nr_order) AS average_cast_number, COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_leading_roles, COUNT(DISTINCT mi.movie_id) AS number_of_movies, MIN(mi.info) AS earliest_release_date FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN movie_info mi ON mi.movie_id = mc.movie_id JOIN cast_info ci ON ci.movie_id = mc.movie_id WHERE ct.kind = 'special effects companies' AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'release dates') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, AVG(ti.production_year) AS avg_production_year, COUNT(DISTINCT ti.id) AS number_of_movies, COUNT(DISTINCT ci.movie_id) AS number_of_casts, SUM(CASE WHEN mi.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_genre_info FROM title ti JOIN kind_type kt ON ti.kind_id = kt.id LEFT JOIN complete_cast ci ON ti.id = ci.movie_id LEFT JOIN movie_info mi ON ti.id = mi.movie_id WHERE ti.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, MIN(n.name) AS earliest_person_name, MAX(pi.info_type_id) AS max_info_type_id FROM aka_title at JOIN link_type lt ON at.kind_id = lt.id JOIN name n ON at.id = n.id JOIN person_info pi ON n.id = pi.person_id WHERE at.production_year IS NOT NULL AND pi.info_type_id IN (1057, 2456) AND at.title IN ('Doctor Hassan', 'Arjeplog - Lappland zwischen Eis und Hightech') AND at.season_nr IN (1, 14, 4, 20, 11) AND lt.id IN (4, 17, 12, 8, 14, 1) GROUP BY lt.LINK ORDER BY total_movies DESC, average_production_year;
SELECT mi.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT k.id) AS keyword_count FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id AND it.info = 'genre' LEFT JOIN movie_info_idx AS mi_idx ON mi.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id GROUP BY mi.info HAVING COUNT(DISTINCT mi.movie_id) > 10 ORDER BY average_rating DESC, number_of_movies DESC;
SELECT COUNT(DISTINCT chn.id) AS total_characters, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_complete_cast, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS total_incomplete_cast FROM char_name AS chn JOIN cast_info AS ci ON ci.person_role_id = chn.id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id JOIN complete_cast AS cc ON cc.movie_id = ci.movie_id WHERE mi_idx.info_type_id = 101 AND (cc.subject_id = 1 AND cc.status_id IN (3, 4)) GROUP BY cc.movie_id;
