SELECT t.title, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN cct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN comp_cast_type cct ON mc.company_type_id = cct.id WHERE t.production_year > 2000 AND mc.note LIKE '%(TV)%' GROUP BY t.title ORDER BY total_cast_members DESC, latest_production_year DESC;
SELECT AVG(m.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT n.id) AS number_of_persons FROM title AS m LEFT JOIN movie_companies AS mc ON mc.movie_id = m.id LEFT JOIN movie_info AS mi ON mi.movie_id = m.id AND mi.info_type_id = 6 LEFT JOIN keyword AS k ON k.id = mi.info_type_id LEFT JOIN name AS n ON n.id = mi.movie_id GROUP BY m.kind_id HAVING COUNT(DISTINCT mc.company_id) > 1 ORDER BY average_production_year DESC;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS number_of_movies, cct.kind, k.keyword, SUM(CASE WHEN akat.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, SUM(CASE WHEN akat.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title akat JOIN comp_cast_type cct ON akat.kind_id = cct.id JOIN keyword k ON k.id IN (58, 8642, 3881, 5552, 5846) WHERE akat.production_year > 1990 AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind, k.keyword ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(ci.status_id) AS average_status_id, SUM(ci.subject_id) AS total_subject_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN complete_cast AS ci ON ml.movie_id = ci.movie_id WHERE lt.id IN (8, 10) AND ci.status_id BETWEEN 1 AND 10 GROUP BY lt.LINK ORDER BY number_of_movies DESC, number_of_linked_movies DESC;
SELECT kt.kind, AVG(at.production_year) AS avg_production_year, COUNT(at.id) AS alt_title_count, COUNT(DISTINCT pi.person_id) AS distinct_person_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN person_info pi ON at.movie_id = pi.person_id WHERE kt.kind IN ('tv series', 'video game', 'movie', 'tv movie') GROUP BY kt.kind ORDER BY kt.kind;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT an.id) AS total_aka_names, COUNT(DISTINCT mi.id) AS total_movie_info, SUM(CASE WHEN lt.LINK = 'remade as' THEN 1 ELSE 0 END) AS total_remake_links FROM title t LEFT JOIN aka_name an ON t.id = an.person_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id LEFT JOIN link_type lt ON mi.info_type_id = lt.id LEFT JOIN company_type ct ON t.kind_id = ct.id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT pi.person_id) AS total_actors FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN movie_info mi ON ci.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'actor') GROUP BY kt.kind HAVING COUNT(DISTINCT ci.movie_id) > 10 ORDER BY total_movies DESC;
SELECT cct.kind, COUNT(*) AS count_cast_types, AVG(cn.imdb_id) AS average_imdb_id, SUM(cn.imdb_id) AS sum_imdb_id, cn.country_code, COUNT(DISTINCT cn.name) AS distinct_company_names, COUNT(DISTINCT mi.movie_id) AS distinct_movies FROM comp_cast_type cct JOIN company_name cn ON cct.id = cn.id JOIN movie_info_idx mi ON cn.id = mi.info_type_id WHERE cn.country_code IN ('[cu]', '[se]', '[dk]', '[ar]', '[al]') AND cn.name_pcode_nf IN ('M2531', 'A6254', 'M6341', 'K3256') AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind, cn.country_code ORDER BY count_cast_types DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(aka.production_year) AS average_production_year, SUM(CASE WHEN mi.info_type_id = 100 THEN 1 ELSE 0 END) as total_type_100_info, SUM(CASE WHEN mi.info_type_id = 101 THEN 1 ELSE 0 END) as total_type_101_info, COUNT(DISTINCT pi.person_id) AS total_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, rt.ROLE AS role_type, COUNT(DISTINCT CASE WHEN rt.id IN (1, 10, 7) THEN pi.person_id END) AS count_specific_roles FROM movie_info mi JOIN aka_title aka ON mi.movie_id = aka.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN person_info pi ON pi.info IN ('1988', 'GontkovÃ¡, Olga', 'Wallerstein, Robin', 'Son with Booth: ''Al Adamson'' (qv)', 'Dresden, Germany', 'Adasky, Beryl') AND pi.note = 'woodyanders' LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN role_type rt ON rt.id IN (1, 10, 7) GROUP BY it.info, rt.ROLE ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, MAX(mii.info) AS max_info_value FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN company_name AS cn ON cn.imdb_id = t.imdb_id JOIN movie_info_idx AS mii ON t.id = mii.movie_id WHERE t.kind_id = 1 AND t.production_year >= 2000 AND cn.name IN ('Action Video', 'Cresa Roma', 'Time Life Films', 'Starlink Asia', 'New Cinema', 'Rok Americas') AND ci.role_id = 1 GROUP BY t.kind_id ORDER BY total_movies DESC, avg_production_year DESC;
SELECT kt.kind, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_complete_status_4, COUNT(DISTINCT pi.person_id) AS unique_persons_with_info FROM kind_type kt LEFT JOIN movie_link ml ON kt.id = ml.link_type_id LEFT JOIN complete_cast cc ON ml.movie_id = cc.movie_id LEFT JOIN cast_info ci ON ml.movie_id = ci.movie_id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ml.movie_id IN (50, 8753, 6613, 11172, 11020, 10583) AND ml.link_type_id IN (4, 13, 9) AND cc.subject_id = 1 AND cc.status_id IN (4, 3) AND pi.note IN ('matt-282', 'K-maf', '2Fun', 'Todd Adelman') AND pi.id IN (4001, 3574) AND ci.person_role_id IN (533, 546, 1445) GROUP BY kt.kind;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(ak.production_year::decimal) AS average_production_year, SUM(CASE WHEN ak.title LIKE '%(imdb display title)%' THEN 1 ELSE 0 END) AS total_imdb_display_titles, COUNT(DISTINCT k.id) AS total_unique_keywords, MAX(pi.info) AS latest_person_info FROM name AS n JOIN aka_title AS ak ON ak.movie_id IN (SELECT DISTINCT cc.movie_id FROM complete_cast AS cc WHERE cc.subject_id = 1) JOIN complete_cast AS cc ON cc.movie_id = ak.movie_id AND cc.subject_id = 1 JOIN keyword AS k ON k.phonetic_code = ak.phonetic_code JOIN person_info AS pi ON pi.person_id = n.id WHERE n.gender = 'F' AND ak.note LIKE '%(imdb display title)%' AND ak.production_year > 2000 GROUP BY n.gender;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS num_movies, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies, AVG(kw.keyword_count) AS avg_keywords_per_movie, SUM(case when ct.kind LIKE '%Ltd%' THEN 1 ELSE 0 END) AS num_ltd_companies, SUM(case when ct.kind LIKE '%Inc%' THEN 1 ELSE 0 END) AS num_inc_companies FROM movie_link AS ml INNER JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id ) AS kw ON ml.movie_id = kw.movie_id LEFT JOIN ( SELECT mc.movie_id, ct.kind FROM movie_companies AS mc INNER JOIN company_type AS ct ON mc.company_type_id = ct.id ) AS ct ON ml.movie_id = ct.movie_id GROUP BY lt.LINK ORDER BY num_movies DESC, avg_keywords_per_movie DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cn.imdb_id) AS average_movie_imdb_id, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON mc.company_type_id = kt.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword k ON mi.info = k.keyword WHERE kt.id IN ('5', '2', '4', '1', '7') AND mc.note IN ('(2001-) (USA) (TV)', '(????) (Czech Republic) (TV)') AND mi.movie_id IN ('19232', '19598', '10553', '12245') GROUP BY cn.name, cn.country_code ORDER BY total_movies_produced DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ml.linked_movie_id IS NOT NULL THEN 1 ELSE 0 END) AS total_linked_movies FROM aka_title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_link AS ml ON t.movie_id = ml.movie_id JOIN movie_companies AS mc ON t.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id WHERE t.production_year IN (1995, 1960, 1928, 1896) AND cn.country_code IN ('[no]', '[ao]', '[th]', '[ae]', '[ve]') AND kt.kind IN ('video movie', 'tv series', 'movie') GROUP BY kt.kind;
SELECT AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(mc.company_id) AS largest_company_id, MIN(t.production_year) AS earliest_production_year, SUM(t.episode_nr) AS total_episodes FROM cast_info AS ci JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN name AS n ON ci.person_id = n.id JOIN title AS t ON ci.movie_id = t.id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE ci.role_id = 1 AND n.imdb_index IN ('XI', 'IV', 'IX', 'XVII') AND k.keyword IN ('elevator-stuck-between-floors', 'pregnancy', 'snake', 'slave-owner') AND t.kind_id = 1 GROUP BY t.kind_id;
SELECT a.production_year, c.name as company_name, COUNT(DISTINCT a.movie_id) as number_of_titles, AVG(m.link_type_id) as average_link_type_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) as female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) as male_count FROM aka_title a JOIN movie_link m ON a.movie_id = m.movie_id JOIN company_name c ON c.country_code = 'US' LEFT JOIN name n ON a.id = n.id WHERE a.production_year BETWEEN 1990 AND 2020 AND a.imdb_index IN ('I', 'IV') AND a.md5sum IN ('36b455987fe6d9fa28aa7bc9c575f2c2', 'c46fadf1cdd2338d8d67bb2b82a1f890') GROUP BY a.production_year, c.name ORDER BY a.production_year, c.name;
