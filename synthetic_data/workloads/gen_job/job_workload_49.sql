SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT comp.id) AS number_of_companies, AVG(CAST(SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)') AS INTEGER)) AS average_production_year, COUNT(DISTINCT ccast.subject_id) AS number_of_unique_subjects, COUNT(DISTINCT k.id) AS number_of_keywords, SUM(CASE WHEN lt.link ILIKE '%spin off%' THEN 1 ELSE 0 END) AS count_spin_off_links FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS comp ON mc.company_id = comp.id LEFT JOIN complete_cast AS ccast ON mc.movie_id = ccast.movie_id LEFT JOIN movie_info_idx AS mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword AS k ON mi.info = k.keyword LEFT JOIN link_type AS lt ON mi.info_type_id = lt.id WHERE mc.note NOT LIKE '%(TV)%' AND SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)')::INTEGER BETWEEN 1990 AND 2023 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT n.name AS actor_name, COUNT(ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_cast_position, MAX(a.production_year) AS latest_movie_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_productions, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributions FROM name n JOIN cast_info ci ON n.id = ci.person_id JOIN aka_title a ON ci.movie_id = a.movie_id JOIN movie_companies mc ON a.movie_id = mc.movie_id WHERE n.gender = 'F' AND ci.role_id = 1 AND a.production_year BETWEEN 2000 AND 2020 GROUP BY n.name ORDER BY movie_count DESC, average_cast_position, latest_movie_year DESC LIMIT 10;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN t.kind_id = 3 THEN 1 ELSE 0 END) AS number_of_distributors_titles, SUM(CASE WHEN t.kind_id = 4 THEN 1 ELSE 0 END) AS number_of_special_effects_titles FROM title AS t JOIN company_type AS ct ON t.kind_id = ct.id GROUP BY ct.kind HAVING COUNT(DISTINCT t.id) > 0 ORDER BY number_of_titles DESC;
SELECT kt.kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT cn.id) AS total_companies, AVG(pi.person_id) AS average_person_id, SUM(cc.subject_id) AS sum_subject_ids FROM movie_link AS ml JOIN kind_type AS kt ON ml.link_type_id = kt.id JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN company_name AS cn ON cn.country_code NOT LIKE '%[pl]%' JOIN person_info AS pi ON pi.person_id = cc.subject_id WHERE kt.kind IN ('episode', 'movie', 'video movie', 'video game') AND cc.subject_id = '1' AND cn.name_pcode_sf IN ('J2316', 'F4131', 'N2314', 'S1526', 'D2346', 'J6123') GROUP BY kt.kind;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN at.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes, kt.kind AS movie_kind, COUNT(DISTINCT k.id) AS distinct_keywords FROM title AS t JOIN aka_title AS at ON t.id = at.movie_id JOIN keyword AS k ON at.id = k.id JOIN company_type AS kt ON t.kind_id = kt.id WHERE t.production_year > 1990 AND at.md5sum IN ('3fbf6cc79b437aac2b533ef93a1a1f72', '3b7d0f2a4c38d29ba47fb2bef6fdc62a', '3029182796f9ac1107d5ec5eba333955', '3f32d0b04dd67b92118e6032b58a8be4', '33e7b8cd483255b73ad813d49d5f4a46') AND at.imdb_index IN ('III', 'IV', 'I', 'II') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT t.kind_id, t.production_year, COUNT(DISTINCT t.id) AS total_movies, AVG(CASE WHEN mi_idx.info_type_id = 3 THEN CAST(mi_idx.info AS NUMERIC) END) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 2 THEN 1 ELSE 0 END) AS count_color_info, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE t.production_year BETWEEN 2000 AND 2020 AND mi_idx.info_type_id IN (2, 3) AND (mi_idx.movie_id IN ('9006', '13848', '9572', '6738', '9636', '8393') OR t.id = '12979') GROUP BY t.kind_id, t.production_year ORDER BY t.production_year DESC, t.kind_id;
SELECT kt.kind AS kind_of_title, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN mi.info_type_id = 2 THEN 1 ELSE 0 END) AS count_of_info_type_2, MAX(t.episode_nr) AS highest_episode_number FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_info mi ON t.id = mi.movie_id WHERE t.kind_id IN (2, 7) AND kt.id IN (4, 7, 6, 1) AND kt.kind IN ('video game', 'movie', 'video movie', 'tv series') GROUP BY kt.kind ORDER BY average_production_year DESC;
SELECT it.info AS info_type, AVG(mi.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT ml.movie_id) AS number_of_movies_linked, SUM(CASE WHEN pi.info_type_id = it.id THEN 1 ELSE 0 END) AS number_of_person_info_entries FROM movie_info_idx AS mii JOIN aka_title AS mi ON mi.movie_id = mii.movie_id JOIN info_type AS it ON mii.info_type_id = it.id JOIN keyword AS k ON k.id = mii.info_type_id JOIN movie_link AS ml ON ml.movie_id = mii.movie_id JOIN person_info AS pi ON pi.info_type_id = it.id GROUP BY it.info ORDER BY number_of_unique_keywords DESC, average_production_year DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_with_role, n.gender, n.name_pcode_nf FROM cast_info ci JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN name n ON ci.person_id = n.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND n.name_pcode_nf IN ('T6535', 'E3245', 'T124') AND ci.nr_order IN (2, 21, 10, 117, 42) GROUP BY n.gender, n.name_pcode_nf ORDER BY average_movie_rating DESC;
SELECT ct.kind AS company_type, AVG(ati.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ati.movie_id) AS number_of_movies, SUM(CASE WHEN ati.note LIKE '%(subtitle)%' THEN 1 ELSE 0 END) AS number_of_subtitled_movies, SUM(CASE WHEN ati.note LIKE '%(series title)%' THEN 1 ELSE 0 END) AS number_of_series_titles, SUM(CASE WHEN ati.note LIKE '%(informal literal title)%' THEN 1 ELSE 0 END) AS number_of_informal_literal_titles FROM aka_title ati JOIN company_type ct ON ati.kind_id = ct.id LEFT JOIN company_name cn ON ati.movie_id = cn.imdb_id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT an.id) AS total_aliases, AVG(pi.info::numeric) FILTER (WHERE pi.info_type_id = 101) AS average_salary, SUM(CASE WHEN pi.info_type_id = 102 THEN pi.info::numeric ELSE 0 END) AS total_bonus, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = 103) AS count_with_awards FROM company_type ct LEFT JOIN movie_companies mc ON mc.company_type_id = ct.id LEFT JOIN aka_name an ON an.person_id = mc.company_id LEFT JOIN person_info pi ON pi.person_id = an.person_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT it.id AS link_type_id, COUNT(DISTINCT ml.movie_id) AS linked_movie_count, AVG(CAST(ml.movie_id AS numeric)) AS average_movie_imdb_id, COUNT(DISTINCT cn.name) AS distinct_character_count FROM movie_link AS ml JOIN char_name AS cn ON cn.imdb_id = ml.movie_id JOIN info_type AS it ON it.id = ml.link_type_id WHERE cn.md5sum IN ( '9c88a1d05f3506772ca5e69f66dc1249', '636fad97342736741e6911a8771502e5', '328bda83d9fc509b059cfde00bcd1636', 'a69ed1d744f3064af88264ac95a13e8f', 'c4f803b9dca9a572c24d55895e9eaf0a' ) AND ml.link_type_id IN ('4', '5', '9', '17') GROUP BY it.id ORDER BY linked_movie_count DESC, average_movie_imdb_id;
SELECT AVG(mc_count.count_movies) AS average_movies_per_company, SUM(mc_count.budget_movies) AS total_budget_movies, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT rt.id) AS total_roles FROM (SELECT mc.company_id, COUNT(mc.movie_id) AS count_movies, SUM(CASE WHEN ct.kind = 'Budget' THEN 1 ELSE 0 END) AS budget_movies FROM movie_companies AS mc JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id GROUP BY mc.company_id ) AS mc_count JOIN movie_companies AS mc ON mc_count.company_id = mc.company_id JOIN role_type AS rt ON rt.id IN ('10', '3', '11', '5') GROUP BY rt.id;
SELECT FLOOR(t.production_year / 10) * 10 AS decade, AVG(CASE WHEN mi.info_type_id = 101 THEN CAST(mi.info AS NUMERIC) END) AS avg_rating, COUNT(DISTINCT t.id) AS movie_count, AVG(sub.company_count) AS avg_company_count FROM title t LEFT JOIN movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = 101 LEFT JOIN ( SELECT mc.movie_id, COUNT(DISTINCT mc.company_id) AS company_count FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id WHERE ct.id IN (2, 1, 4, 3) GROUP BY mc.movie_id ) sub ON t.id = sub.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id WHERE mk.keyword_id IN (3751, 946, 4031) GROUP BY decade ORDER BY decade ASC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx_cnt.count) AS average_keywords_per_movie, SUM(case when n.gender = 'M' then 1 else 0 end) AS male_actors_count, SUM(case when f.gender = 'F' then 1 else 0 end) AS female_actors_count, MIN(n.name) AS most_common_male_actor_name, MIN(f.name) AS most_common_female_actor_name FROM cast_info ci LEFT JOIN name n ON ci.person_id = n.id AND n.gender = 'M' LEFT JOIN name f ON ci.person_id = f.id AND f.gender = 'F' LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS count FROM movie_keyword GROUP BY movie_id ) mi_idx_cnt ON ci.movie_id = mi_idx_cnt.movie_id WHERE ci.nr_order = 1 GROUP BY ci.person_id;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT an.id) AS number_of_alternative_names, COUNT(DISTINCT cct.id) AS number_of_cast_types, AVG(LENGTH(n.name)) AS average_actor_name_length FROM name n LEFT JOIN aka_name an ON n.id = an.person_id LEFT JOIN comp_cast_type cct ON an.id = cct.id WHERE n.name LIKE '%Amplify%' OR an.name IN ('Allen, ''Barefoot'' Chris', 'Alsamia, Etienne', 'Altamirano, Lisa Mariea', 'Aller, Gina', 'Smith, Mary Alice') GROUP BY n.gender;
SELECT t.title, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_type_3_infos FROM title t JOIN movie_info mi ON t.id = mi.movie_id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 AND mi.info_type_id = 101 AND mk.keyword_id IN ('3774', '2749', '3382', '2831', '1138') AND mi_idx.info_type_id IN ('3', '5', '7') GROUP BY t.title ORDER BY average_rating DESC, total_linked_movies DESC;
SELECT COUNT(DISTINCT ci.id) AS total_actors, AVG(mc.id) AS avg_company_id, SUM(CASE WHEN rt.id = 6 THEN 1 ELSE 0 END) AS total_directors, MIN(n.name) AS first_actor_name, MAX(t.title) AS last_movie_title, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 3 OR ml.link_type_id = 7) AS total_related_movies FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id JOIN aka_title AS at ON ci.movie_id = at.movie_id JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN title AS t ON at.movie_id = t.id WHERE ci.note NOT LIKE '%uncredited%' AND at.production_year BETWEEN 2000 AND 2010 AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND rt.role IN ('actor', 'actress', 'director') GROUP BY rt.id;
SELECT t.title, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN cct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN comp_cast_type cct ON mc.company_type_id = cct.id WHERE t.production_year > 2000 AND mc.note LIKE '%(TV)%' GROUP BY t.title ORDER BY total_cast_members DESC, latest_production_year DESC;
SELECT k.keyword, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, AVG(sub_person_roles.roles_count) AS avg_roles_per_person, COUNT(DISTINCT an.id) AS unique_pseudonyms_count FROM keyword AS k LEFT JOIN movie_keyword AS mk ON k.id = mk.keyword_id LEFT JOIN movie_link AS ml ON mk.movie_id = ml.movie_id LEFT JOIN person_info AS pi ON pi.info_type_id = k.id LEFT JOIN (SELECT pi.person_id, COUNT(DISTINCT pi.info_type_id) AS roles_count FROM person_info AS pi INNER JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE rt.id IN (1, 8, 7, 5) GROUP BY pi.person_id ) AS sub_person_roles ON pi.person_id = sub_person_roles.person_id LEFT JOIN aka_name AS an ON pi.person_id = an.person_id WHERE k.keyword IN ('murder', 'mystery', 'thriller') AND pi.info_type_id IN (70, 2, 75, 36, 50) GROUP BY k.keyword;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count FROM movie_info_idx AS mi JOIN kind_type AS kt ON kt.id = mi.info_type_id JOIN complete_cast AS cc ON cc.movie_id = mi.movie_id JOIN name AS n ON n.id = cc.subject_id WHERE kt.kind = 'movie' AND mi.info_type_id = 1 AND n.gender IN ('m', 'f') AND n.md5sum IN ('594acd6658a43cf86de526cf11f2acb5', 'a157e8d3f5f4f0f9e2d7ae2274e39da6', '2f10a51a8697d24b73eb80aa0b19530b', '7b4ea18b87a76a35e2ca4a22b5ce898c') GROUP BY kt.kind;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, aka.production_year, mi.info AS movie_genre, AVG(aka.production_year) AS average_alternate_title_year FROM cast_info AS ci JOIN movie_info_idx AS mi ON ci.movie_id = mi.movie_id JOIN aka_title AS aka ON ci.movie_id = aka.movie_id WHERE ci.nr_order IN (200, 43, 31, 92, 117, 48) AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'genre') AND aka.kind_id = 1 AND aka.production_year > 2000 GROUP BY aka.production_year, mi.info ORDER BY aka.production_year DESC, total_actors DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(*) AS total_links, AVG(ml.link_type_id) AS average_link_type_id, SUM(CASE WHEN ml.link_type_id = 17 THEN 1 ELSE 0 END) AS count_of_link_type_17, SUM(CASE WHEN ml.link_type_id = 16 THEN 1 ELSE 0 END) AS count_of_link_type_16 FROM movie_link AS ml JOIN company_type AS ct ON ml.link_type_id = ct.id WHERE ml.linked_movie_id IN (238671, 754434, 483510, 1404818, 1903725) AND ct.kind IN ('production companies', 'distributors') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT AVG(COALESCE(NULLIF(pi.info::NUMERIC, 0), 0)) AS avg_person_info_numeric, SUM(CASE WHEN mk.keyword_id IN (2717, 2798) THEN 1 ELSE 0 END) AS sum_movie_keyword_special, COUNT(DISTINCT mc.movie_id) AS count_distinct_movies_with_companies, COUNT(DISTINCT an.person_id) AS count_distinct_persons_with_aka, COUNT(DISTINCT ml.linked_movie_id) AS count_linked_movies FROM person_info pi LEFT JOIN aka_name an ON pi.person_id = an.person_id LEFT JOIN movie_keyword mk ON mk.movie_id = an.person_id LEFT JOIN movie_companies mc ON mc.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mc.movie_id WHERE an.name IN ('Alouf, Bernard', 'Almedia-Pederalba, Karen', 'Chanclettes, The', 'Ali, Muhammed', 'Verbrugge, Willy') AND pi.id IN ('3188', '489', '4904') AND mk.id IN ('4094', '2901', '4468') AND ml.id IN ('608', '4874', '3573');
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_characters, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.surname_pcode = 'T5253' THEN 1 ELSE 0 END) AS count_surname_T5253, SUM(CASE WHEN cn.surname_pcode = 'M5253' THEN 1 ELSE 0 END) AS count_surname_M5253, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, STRING_AGG(DISTINCT rt.ROLE, ', ') AS roles_involved, STRING_AGG(DISTINCT mc.note, '; ') AS production_notes FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN char_name cn ON cn.id = mc.movie_id LEFT JOIN role_type rt ON rt.id = mc.company_type_id WHERE kt.kind IN ('episode', 'tv movie', 'movie', 'video movie', 'tv mini series', 'video game') AND mc.company_type_id = 1 AND (cn.surname_pcode IN ('T5253', 'M5253') OR cn.name IN ('Ish', 'Conti', 'Governor of the town', 'Himself - Grand Questor', 'Miss Travers''s Class')) AND rt.ROLE IN ('costume designer', 'production designer', 'cinematographer', 'director', 'writer', 'miscellaneous crew') AND mc.note LIKE '%(TV)%' GROUP BY kt.kind;
SELECT COUNT(DISTINCT n.id) AS total_people, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_rating, SUM(CASE WHEN mi.info_type_id = 45 THEN 1 ELSE 0 END) AS count_of_genre_science_fiction, COUNT(DISTINCT pi.person_id) AS total_people_with_additional_info, MAX(n.name) AS last_person_name FROM name AS n LEFT JOIN movie_info AS mi ON n.id = mi.movie_id AND mi.info_type_id = 7 LEFT JOIN person_info AS pi ON n.id = pi.person_id WHERE n.gender = 'm' AND EXISTS (SELECT 1 FROM movie_info_idx AS mi_idx WHERE mi_idx.movie_id = n.id AND mi_idx.info_type_id IN (45, 71, 75, 30, 7, 84)) GROUP BY n.gender;
SELECT COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mk_cnt.keyword_count) AS avg_keywords_per_movie, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS count_similar_to_links, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(NULLIF(regexp_replace(mi_idx.info, '\D', '', 'g'), '')::NUMERIC) AS average_info_numeric, SUM(CASE WHEN k.phonetic_code IN ('M342', 'N2165') THEN 1 ELSE 0 END) AS count_specific_phonetic_codes FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id JOIN movie_companies AS mc ON ml.movie_id = mc.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN keyword AS k ON mk.keyword_id = k.id JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS mk_cnt ON mk.movie_id = mk_cnt.movie_id WHERE mi_idx.info_type_id = '100' AND mi_idx.info SIMILAR TO '%[0-9]{6,}%' AND (ml.movie_id IN ('11122', '14650', '11447', '7786', '14516') OR ml.id IN ('3768', '4002', '4548', '963', '430', '4309')) GROUP BY lt.link;
SELECT ct.kind AS company_kind, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS distinct_keywords_count FROM company_type AS ct JOIN title AS t ON t.kind_id = ct.id LEFT JOIN keyword AS k ON k.phonetic_code = t.phonetic_code WHERE t.production_year IS NOT NULL AND ct.id IN (SELECT kind_id FROM title WHERE id IN (175843, 103199, 50713, 123396, 75890)) GROUP BY ct.kind ORDER BY total_titles DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, MAX(t.production_year) AS latest_production_year FROM title t INNER JOIN aka_title at ON t.id = at.movie_id INNER JOIN movie_info_idx mi ON t.id = mi.movie_id INNER JOIN name n ON n.md5sum = at.md5sum INNER JOIN keyword k ON k.phonetic_code = at.phonetic_code WHERE t.production_year BETWEEN 2000 AND 2010 AND mi.info_type_id IN ('100', '101', '99') AND at.episode_of_id IN ('14284', '16059', '8468', '2167', '20079', '24526') AND n.name_pcode_cf IN ('A4165', 'A3423') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT at.production_year, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.episode_nr) AS average_episodes_per_season, COUNT(DISTINCT rt.id) AS distinct_roles_count FROM aka_title at JOIN role_type rt ON at.kind_id = rt.id JOIN info_type it ON at.id = it.id WHERE at.production_year IN (1972, 1934, 1943) AND rt.role IN ('production designer', 'composer', 'guest', 'producer', 'actor', 'writer') AND it.info IN ('admissions', 'votes', 'LD master format', 'soundtrack') GROUP BY at.production_year ORDER BY at.production_year;
