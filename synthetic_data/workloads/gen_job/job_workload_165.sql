SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people_involved, AVG(ci.nr_order) AS avg_cast_order, SUM(case when mi_idx.info_type_id = '100' THEN 1 ELSE 0 END) AS count_type_100, SUM(case when mi_idx.info_type_id = '101' THEN 1 ELSE 0 END) AS count_type_101, SUM(case when mi_idx.info_type_id = '99' THEN 1 ELSE 0 END) AS count_type_99 FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND ci.person_role_id = (SELECT id FROM info_type WHERE id = '94') GROUP BY kt.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS films_after_2000, MAX(t.production_year) AS latest_production_year FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN cast_info ci ON ci.movie_id = cn.id JOIN title t ON ci.movie_id = t.id GROUP BY ct.kind ORDER BY number_of_companies DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(aka.production_year) AS average_production_year, SUM(CASE WHEN mi.info_type_id = 100 THEN 1 ELSE 0 END) as total_type_100_info, SUM(CASE WHEN mi.info_type_id = 101 THEN 1 ELSE 0 END) as total_type_101_info, COUNT(DISTINCT pi.person_id) AS total_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, rt.ROLE AS role_type, COUNT(DISTINCT CASE WHEN rt.id IN (1, 10, 7) THEN pi.person_id END) AS count_specific_roles FROM movie_info mi JOIN aka_title aka ON mi.movie_id = aka.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN person_info pi ON pi.info IN ('1988', 'GontkovÃ¡, Olga', 'Wallerstein, Robin', 'Son with Booth: ''Al Adamson'' (qv)', 'Dresden, Germany', 'Adasky, Beryl') AND pi.note = 'woodyanders' LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN role_type rt ON rt.id IN (1, 10, 7) GROUP BY it.info, rt.ROLE ORDER BY total_movies DESC;
SELECT ct.kind AS company_kind, AVG(mc.id) AS average_movie_company_id, COUNT(DISTINCT k.id) AS total_distinct_keywords, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000, COUNT(DISTINCT rt.id) AS total_distinct_roles FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN keyword AS k ON k.id = ml.id JOIN role_type AS rt ON rt.id = ml.link_type_id GROUP BY ct.kind HAVING COUNT(DISTINCT at.id) > 5;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_production_companies, COUNT(DISTINCT pi.person_id) AS number_of_individual_contributors, SUM(CASE WHEN t.md5sum IN ('1f1ce7379075bf949e40cb57616b3f4d', '0d05192e412a817cc87628ae56d58d5b') THEN 1 ELSE 0 END) AS count_of_specific_md5sum FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN person_info pi ON pi.person_id = t.id WHERE ct.kind = 'production' AND t.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_casts, COUNT(DISTINCT cn.id) AS number_of_actors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.status_id = cct.id LEFT JOIN char_name AS cn ON cc.subject_id = cn.id WHERE mc.movie_id IN (27359, 1639517, 1663098) AND mc.company_id IN (SELECT company_id FROM movie_companies WHERE company_type_id IN (1, 2)) GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 1 ORDER BY number_of_movies DESC, average_rating DESC;
SELECT c.name AS company_name, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, SUM(CASE WHEN lt.id = 6 THEN 1 ELSE 0 END) AS number_of_features FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN company_name AS c ON c.imdb_id = t.imdb_id JOIN link_type AS lt ON lt.id = t.kind_id WHERE k.keyword IN ('lifting-someone-into-the-air', 'switzerland', 'italian-food') AND c.name IN ('Funvision', 'Tentacle Films', 'Freaks') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY c.name ORDER BY number_of_movies DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN pi.info LIKE '%Oscar%' THEN 1 ELSE 0 END) AS total_oscars_won FROM cast_info ci INNER JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') WHERE n.imdb_index IN ('XXIII', 'XV', 'IX', 'XI') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.note NOT IN ('carlosprimati@uol.com.br', 'E.A.', 'IMDb Editors') GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY total_oscars_won DESC, average_movie_rating DESC, total_movies DESC, actor_name;
SELECT AVG(cast_count) AS average_cast_per_movie, AVG(link_count) AS average_links_per_movie, COUNT(DISTINCT mi.info_type_id) AS unique_info_types FROM (SELECT movie_id, COUNT(*) AS cast_count FROM cast_info WHERE note LIKE '%(Band)%' GROUP BY movie_id) AS cast_counts JOIN (SELECT movie_id, COUNT(*) AS link_count FROM movie_link WHERE link_type_id IN (6, 5, 11, 15) GROUP BY movie_id) AS link_counts ON cast_counts.movie_id = link_counts.movie_id JOIN movie_info AS mi ON cast_counts.movie_id = mi.movie_id;
SELECT t.title AS movie_title, t.production_year, COUNT(ci.id) AS total_cast, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT a.id) AS total_alternate_titles, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_cast_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_cast_count, COUNT(DISTINCT mi.id) AS total_movie_info_entries FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN aka_title a ON t.id = a.movie_id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info mi ON t.id = mi.movie_id WHERE t.production_year > 2000 AND n.name_pcode_cf IN ('A264', 'A4312') AND ci.nr_order IN (20, 21, 42) AND ci.person_role_id IN (936, 1189, 544) AND a.episode_of_id IN (23907, 8118) GROUP BY t.title, t.production_year ORDER BY t.production_year DESC, total_cast DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN al.title IS NOT NULL THEN 1 ELSE 0 END) AS number_of_alternate_titles, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM title AS t LEFT JOIN aka_title AS al ON t.id = al.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN keyword AS k ON k.phonetic_code = al.phonetic_code INNER JOIN company_type AS ct ON t.kind_id = ct.id WHERE t.production_year BETWEEN 2000 AND 2023 AND ml.linked_movie_id IN (16385, 2365137, 1412093, 1391187, 16056, 1432843) AND al.title IS NOT NULL AND k.keyword IN ('freezer', 'vengeance', 'undead', 'meat-cleaver') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS number_of_unique_movies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, COUNT(DISTINCT mi.id) AS total_movie_info_records FROM aka_title at JOIN movie_keyword mk ON at.movie_id = mk.movie_id JOIN movie_info mi ON at.movie_id = mi.movie_id WHERE mi.info_type_id = 4 AND at.production_year IS NOT NULL GROUP BY at.kind_id ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_type, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(DISTINCT cn.id) AS company_count, COUNT(DISTINCT n.id) AS actor_count FROM movie_info mi JOIN kind_type kt ON mi.movie_id = kt.id JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN company_name cn ON mi.movie_id = cn.imdb_id JOIN cast_info ci ON ci.movie_id = mi.movie_id JOIN name n ON ci.person_id = n.id WHERE kt.id IN ('7', '1', '4') AND cn.name_pcode_sf IN ('F2365', 'Z3132', 'Y6253', 'F4231') AND mk.keyword_id IN ('3887', '4275', '3550', '4202') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') GROUP BY kt.kind;
SELECT pi.info_type_id, COUNT(DISTINCT pi.person_id) AS total_people, AVG(CAST(pi.info AS FLOAT)) FILTER (WHERE pi.info_type_id = 1) AS average_info_type_1, SUM(CAST(pi.info AS INTEGER)) FILTER (WHERE pi.info_type_id = 2) AS sum_info_type_2, mc.company_type_id, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT cn.id) AS total_characters FROM person_info pi JOIN movie_companies mc ON pi.person_id = mc.company_id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN char_name cn ON cn.imdb_id = ml.linked_movie_id GROUP BY pi.info_type_id, mc.company_type_id HAVING COUNT(DISTINCT pi.person_id) > 1 ORDER BY total_people DESC, total_companies DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(pk.count_per_keyword) AS average_keywords_per_movie, MAX(cast(pi.info as integer)) AS max_budget, MIN(cast(pi.info as integer)) AS min_budget FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN (SELECT movie_id, COUNT(keyword_id) AS count_per_keyword FROM movie_keyword GROUP BY movie_id) AS pk ON t.id = pk.movie_id LEFT JOIN person_info AS pi ON t.id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget') LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY t.production_year ORDER BY t.production_year;
SELECT SUM(CASE WHEN ni.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN ni.gender = 'F' THEN 1 ELSE 0 END) AS female_count, COUNT(DISTINCT mi.movie_id) AS movie_count, COUNT(DISTINCT pi.person_id) AS person_count, AVG(pi.info_type_id) AS avg_info_type_id FROM name ni JOIN movie_info mi ON ni.id = mi.movie_id JOIN person_info pi ON ni.id = pi.person_id GROUP BY ni.gender;
SELECT rt.role AS role_type, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies_with_writers, COUNT(DISTINCT ci.person_id) AS total_different_writers, SUM(CASE WHEN at.title ILIKE 'The %' THEN 1 ELSE 0 END) AS movies_beginning_with_the FROM cast_info ci INNER JOIN role_type rt ON ci.role_id = rt.id AND rt.role = 'writer' LEFT JOIN aka_title at ON ci.movie_id = at.movie_id WHERE at.kind_id = 1 AND rt.id = 11 GROUP BY rt.role;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN title t ON ci.movie_id = t.id JOIN movie_companies mc ON t.id = mc.movie_id WHERE rt.ROLE IN ('director', 'production designer', 'costume designer', 'composer') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_num, SUM(CAST(CASE WHEN mi_idx.info LIKE '%1%' THEN 1 ELSE 0 END AS INTEGER)) AS count_info_with_1 FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id JOIN name n ON ml.movie_id = n.id WHERE n.md5sum IN ('801a5d533ecc2c88317db66319d4aad9', 'caa370cb4f3c3b62016775d613ce5575', '4fc8edf0bba0a30ce337c1c452a645f0') AND ml.linked_movie_id IN (1412141, 604005, 716090) AND mi_idx.info SIMILAR TO '%[0-9]%' AND mk.keyword_id IN ( SELECT id FROM keyword WHERE keyword IN ('wind-up-toy', 'money-in-title', 'suicide-pill') ) GROUP BY kt.kind ORDER BY total_movies_with_keywords DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.avg_movie_score) AS average_movie_score, SUM(CASE WHEN mi.info = '(Original Version)' THEN 1 ELSE 0 END) AS original_version_count, SUM(CASE WHEN mi.info = '(English subtitles)' THEN 1 ELSE 0 END) AS english_subtitles_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN (SELECT movie_id, AVG(CAST(info AS DOUBLE PRECISION)) AS avg_movie_score FROM movie_info_idx WHERE info_type_id = 101 GROUP BY movie_id) AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN movie_info AS mi ON mc.movie_id = mi.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people, AVG(ci.nr_order) AS avg_cast_order, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS num_keywords, count(DISTINCT cc.id) AS num_complete_cast_records FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN name n ON ci.person_id = n.id LEFT JOIN keyword k ON ci.movie_id = k.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE n.surname_pcode IN ('A415', 'A435') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT cct.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(at.id) AS number_of_titles, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at JOIN comp_cast_type cct ON at.kind_id = cct.id GROUP BY cct.kind ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_titles, AVG(CAST(t.production_year AS NUMERIC)) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actor_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actor_count, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, COUNT(DISTINCT cc.id) AS complete_cast_entries FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id LEFT JOIN movie_link AS ml ON t.movie_id = ml.movie_id LEFT JOIN complete_cast AS cc ON t.movie_id = cc.movie_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE kt.kind IN ('movie', 'tv movie', 'episode', 'tv series', 'video movie') AND cc.subject_id = 1 AND (n.gender IS NULL OR n.gender IN ('m', 'f')) GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT c.name AS company_name, c.country_code, kt.kind AS movie_type, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_num.info AS DECIMAL)) AS average_rating, SUM(CASE WHEN mk.keyword_id = 3569 THEN 1 ELSE 0 END) AS count_of_keyword_3569, SUM(CASE WHEN mk.keyword_id = 3677 THEN 1 ELSE 0 END) AS count_of_keyword_3677, COUNT(DISTINCT ml.id) AS number_of_movie_links, COUNT(DISTINCT mi.id) AS number_of_movie_infos FROM company_name c JOIN movie_info mi ON c.imdb_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON mi.movie_id = ml.movie_id JOIN kind_type kt ON it.id = kt.id LEFT JOIN movie_info mi_num ON mi.movie_id = mi_num.movie_id AND mi_num.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) WHERE c.country_code = 'US' AND it.info = 'countries' AND kt.kind = 'movie' GROUP BY c.name, c.country_code, kt.kind ORDER BY number_of_movies DESC;
SELECT AVG(keyword_summary.keyword_count) AS average_movie_keywords, SUM(role_summary.total_roles) AS sum_total_roles, COUNT(DISTINCT cct.kind) AS distinct_cast_types, AVG(CAST(mi_idx.info AS integer)) AS average_movie_votes FROM (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id) AS keyword_summary JOIN (SELECT ci.movie_id, ci.person_role_id, COUNT(ci.id) AS total_roles FROM cast_info AS ci GROUP BY ci.movie_id, ci.person_role_id) AS role_summary ON keyword_summary.movie_id = role_summary.movie_id JOIN movie_info_idx AS mi_idx ON keyword_summary.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 1 JOIN comp_cast_type AS cct ON role_summary.person_role_id = cct.id WHERE CAST(mi_idx.info AS integer) > 10000 GROUP BY mi_idx.info_type_id;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(aka.production_year) AS average_production_year, MAX(aka.production_year) AS latest_production_year, MIN(aka.production_year) AS earliest_production_year, COUNT(DISTINCT cn.id) AS number_of_unique_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_cast_members, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_cast_members FROM movie_companies AS mc JOIN aka_title AS aka ON mc.movie_id = aka.movie_id JOIN movie_keyword AS mk ON aka.movie_id = mk.movie_id JOIN complete_cast AS cc ON aka.movie_id = cc.movie_id JOIN char_name AS cn ON cn.name_pcode_nf IN ('E2416', 'R3242', 'W4165') JOIN name AS n ON cn.id = n.id WHERE mc.id IN ('577', '4551', '4702', '4381', '3126', '3864') AND aka.kind_id = 1 GROUP BY aka.kind_id HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY average_production_year DESC;
