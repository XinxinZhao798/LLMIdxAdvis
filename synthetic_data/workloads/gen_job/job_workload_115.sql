SELECT ct.kind AS cast_type, lt.LINK AS link_type, avg(at.production_year) AS average_production_year, count(distinct at.movie_id) AS number_of_movies, sum(CASE WHEN co.kind = 'distributors' THEN 1 ELSE 0 END) AS number_of_distributors, sum(CASE WHEN co.kind = 'production companies' THEN 1 ELSE 0 END) AS number_of_production_companies, sum(CASE WHEN co.kind = 'special effects companies' THEN 1 ELSE 0 END) AS number_of_special_effects_companies FROM comp_cast_type AS ct JOIN aka_title AS at ON ct.id = at.kind_id JOIN company_type AS co ON at.kind_id = co.id JOIN link_type AS lt ON at.id = lt.id WHERE ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND lt.id IN ('13', '3', '5', '1', '10', '15') AND at.phonetic_code IN ('K4236', 'P2163', 'B5326') AND at.kind_id IN ('3', '2', '1', '4') GROUP BY ct.kind, lt.LINK;
SELECT n.gender, COUNT(DISTINCT n.id) AS total_people, AVG(ci.nr_order) AS average_credit_order FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id WHERE n.gender IN ('M', 'F') AND ci.note LIKE '%(2000)%' GROUP BY n.gender;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(cast_info.nr_order) AS average_cast_order, SUM(case when cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON kt.kind IN ('episode', 'video game', 'video movie', 'tv movie', 'tv mini series', 'tv series') JOIN movie_keyword mk ON mk.movie_id = mc.movie_id JOIN cast_info ON cast_info.movie_id = mc.movie_id WHERE mk.movie_id IN ('12147', '11128', '12146') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT a_t.movie_id) AS num_movies, COUNT(DISTINCT c_c.movie_id) AS num_complete_cast_movies, COUNT(DISTINCT p_i.person_id) AS num_persons_info, SUM(CASE WHEN a_t.production_year >= 2000 THEN 1 ELSE 0 END) AS num_movies_since_2000 FROM movie_info_idx mi_idx JOIN aka_title a_t ON mi_idx.movie_id = a_t.movie_id JOIN complete_cast c_c ON a_t.movie_id = c_c.movie_id JOIN person_info p_i ON p_i.person_id = ANY(ARRAY[1739786, 3545, 2362, 3631, 1719, 1739809]) WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND a_t.kind_id = 1 AND a_t.production_year IS NOT NULL GROUP BY a_t.kind_id;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, SUM(CASE WHEN mi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS interview_movie_count, SUM(CASE WHEN mi.note LIKE '%(Original version)%' THEN 1 ELSE 0 END) AS original_version_movie_count, COUNT(DISTINCT k.id) AS distinct_keywords_used, AVG(mi.id) AS average_movie_info_id FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE it.id IN (9, 31) AND k.keyword IN ('cobra', 'dinosaur-egg', 'startled', 'paranoia') GROUP BY it.info ORDER BY movie_count DESC;
SELECT kt.kind, COUNT(DISTINCT cn.id) as number_of_companies, COUNT(DISTINCT pi.person_id) as number_of_people, AVG(CASE WHEN pi.note SIMILAR TO '%(Coverland|Chris Hendren|maria afsharian|CelebrityLoop.com)%' THEN CAST(pi.info AS NUMERIC) ELSE NULL END) as average_info_rating, SUM(CASE WHEN kt.kind = 'video movie' THEN 1 ELSE 0 END) as video_movie_count, SUM(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) as tv_mini_series_count, SUM(CASE WHEN kt.kind = 'video game' THEN 1 ELSE 0 END) as video_game_count FROM company_name cn JOIN kind_type kt ON cn.id = kt.id JOIN person_info pi ON cn.id = pi.person_id WHERE cn.country_code NOT IN ('US', 'GB') AND pi.info_type_id BETWEEN 1 AND 5 AND kt.id IN ('1', '2', '4', '5', '7') GROUP BY kt.kind ORDER BY number_of_companies DESC;
SELECT AVG(at.note_length) AS avg_note_length, COUNT(DISTINCT kw.id) AS num_unique_keywords, COUNT(DISTINCT at.id) AS num_titles, SUM(CASE WHEN at.episode_nr = 155 THEN 1 ELSE 0 END) AS num_episode_155, STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords_list FROM ( SELECT id, movie_id, episode_nr, LENGTH(note) AS note_length FROM aka_title WHERE note LIKE '%(Australia) (fake working title)%' ) AS at JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN keyword AS kw ON cn.country_code = kw.phonetic_code WHERE kw.keyword IN ('handcuffed-to-someone', 'religious', 'drug-trafficking', 'conservatory', 'scientology', 'horse-riding') AND ct.kind = 'production companies' GROUP BY cn.country_code;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, cn.country_code, rt.ROLE, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_short_films, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT ml.link_type_id) AS number_of_unique_link_types FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN role_type AS rt ON mc.company_type_id = rt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 1990 AND 2000 AND rt.id IN ('6', '8') AND mc.note LIKE '%(TV)%' GROUP BY cn.country_code, rt.ROLE ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS alternate_titles_count, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = 'USA' THEN 1 ELSE 0 END) AS usa_production_count, COUNT(DISTINCT ci.person_id) AS distinct_actors_count, COUNT(DISTINCT cn.id) AS distinct_companies_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN cast_info ci ON at.movie_id = ci.movie_id JOIN company_name cn ON cn.id = ci.movie_id WHERE at.production_year > 1990 AND kt.kind IN ('video game', 'tv mini series') AND cn.name IN ('ZETA Productions', 'Trans Atlantic Video', 'Arthur Ziehm', 'Tirrena Film', 'Interfilm', 'Les Films PellÃ©as') GROUP BY kt.kind ORDER BY usa_production_count DESC, alternate_titles_count DESC;
SELECT n.gender, COUNT(DISTINCT n.id) AS number_of_people, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN lt.LINK = 'sequel' THEN 1 ELSE 0 END) AS count_sequel_links, COUNT(DISTINCT k.id) AS number_of_keywords, COUNT(DISTINCT an.id) AS number_of_aka_names FROM name AS n LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN movie_link AS ml ON ml.movie_id IN (SELECT movie_id FROM movie_info_idx WHERE id IN (1031, 375, 3321, 4177, 537)) LEFT JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id GROUP BY n.gender HAVING COUNT(DISTINCT k.id) > 5 ORDER BY average_movie_rating DESC;
SELECT COUNT(DISTINCT akat.id) AS total_alternate_titles, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN mcomp.company_type_id = 1 THEN 1 ELSE 0 END) AS total_producer_companies, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT mlink.movie_id) AS total_linked_movies, COUNT(DISTINCT n.id) AS total_people FROM aka_title AS akat JOIN movie_companies AS mcomp ON akat.movie_id = mcomp.movie_id JOIN movie_link AS mlink ON akat.movie_id = mlink.movie_id JOIN keyword AS k ON akat.movie_id IN (SELECT mk.movie_id FROM movie_keyword AS mk WHERE mk.keyword_id = k.id) JOIN name AS n ON akat.movie_id IN ( SELECT ci.movie_id FROM cast_info AS ci WHERE ci.person_id = n.id ) WHERE akat.kind_id = 1 AND mcomp.company_type_id IN (1, 2, 3) AND mlink.link_type_id IN (13, 15, 12, 2) AND k.id IN ('2959', '4902', '2890') AND n.id IN ('5102', '4144', '5253', '8021', '11905', '4985') GROUP BY mcomp.company_type_id ORDER BY total_producer_companies DESC;
SELECT it.info AS genre, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(mi.info::numeric) AS average_budget, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'budget' JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN person_info pi ON pi.person_id = mi.movie_id JOIN name n ON pi.person_id = n.id WHERE mi.movie_id IN ('19606', '114', '12283', '8086') GROUP BY it.info;
SELECT kt.kind as movie_kind, AVG(akat.production_year) as average_production_year, COUNT(DISTINCT akat.movie_id) as number_of_movies, SUM(CASE WHEN akat.episode_of_id IS NOT NULL THEN 1 ELSE 0 END) as number_of_episodes, COUNT(DISTINCT cn.id) as number_of_characters, COUNT(DISTINCT cct.id) as number_of_cast_types FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id JOIN char_name cn ON akat.movie_id = cn.imdb_id JOIN comp_cast_type cct ON akat.id = cct.id WHERE kt.kind = 'movie' AND akat.production_year BETWEEN 2000 AND 2010 AND akat.season_nr IN (6, 27, 1) AND akat.episode_of_id IN (23513, 23963, 12924, 12200, 8336) GROUP BY kt.kind;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, cct.kind AS company_type, MIN(cn.name) AS company_name, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors FROM movie_companies AS mc JOIN title AS t ON mc.movie_id = t.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id LEFT JOIN name AS n ON n.md5sum = mc.note WHERE cn.country_code NOT LIKE '[pl]' AND t.production_year BETWEEN 1950 AND 1999 AND t.phonetic_code = 'D323' AND n.name_pcode_nf IN ('N6454', 'I4364', 'O2464', 'D54', 'M3526', 'G6534') GROUP BY cct.kind;
SELECT it.info AS info_category, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT cc.id) AS total_complete_cast_records, COUNT(DISTINCT mi_idx.movie_id) AS movies_with_additional_info, AVG(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS average_votes, SUM(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_votes, MIN(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS min_votes, MAX(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS max_votes, COUNT(DISTINCT lt.id) AS number_of_link_types, STRING_AGG(DISTINCT lt.link, ', ') AS link_types_used FROM complete_cast cc JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id JOIN link_type lt ON lt.id = mi_idx.info_type_id WHERE cc.status_id <> 0 AND it.info IN ('height', 'tech info', 'votes', 'mini biography') AND lt.link IN ('remake of', 'remade as', 'featured in', 'spin off') GROUP BY it.info;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(ml.movie_id) AS average_movie_id, MIN(cn.name) AS character_name_with_min_id, MAX(an.name) AS aka_name_with_max_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN char_name AS cn ON cn.id = ml.movie_id AND cn.surname_pcode = 'E2146' LEFT JOIN aka_name AS an ON an.id = ml.linked_movie_id AND an.md5sum = '7df6a930bde6eff675fae9eecfb9ff7e' GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT cn.name AS character_name, COUNT(cn.id) AS character_occurrences, AVG(cn.imdb_id) AS average_imdb_id FROM char_name AS cn JOIN aka_name AS akn ON akn.person_id = cn.id JOIN company_type AS ct ON ct.id = akn.person_id WHERE ct.kind = 'distributors' GROUP BY cn.name ORDER BY character_occurrences DESC, average_imdb_id DESC;
SELECT cct.kind, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_votes, COUNT(DISTINCT pi.person_id) AS number_of_people, SUM(CASE WHEN pi.info LIKE '%1971%' THEN 1 ELSE 0 END) AS count_people_born_1971, SUM(CASE WHEN pi.info LIKE '%O-chan%' THEN 1 ELSE 0 END) AS count_people_with_Ochan_info FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE cct.kind = 'crew' GROUP BY cct.kind;
SELECT rt.ROLE, ct.kind, AVG(cast(chn.imdb_id as numeric)) AS avg_imdb_id, COUNT(chn.id) AS num_characters, SUM(chn.imdb_id) AS sum_imdb_id FROM char_name AS chn JOIN role_type AS rt ON chn.id = rt.id JOIN company_type AS ct ON rt.id = ct.id WHERE rt.ROLE = 'miscellaneous crew' AND ct.kind IN ('miscellaneous companies', 'special effects companies') GROUP BY rt.ROLE, ct.kind;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_info, SUM(CASE WHEN mi_idx.note = 'Y' THEN 1 ELSE 0 END) AS count_noted_info FROM complete_cast cc JOIN kind_type kt ON cc.subject_id = kt.id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id WHERE cc.status_id IN (1, 2, 3) AND mi_idx.info_type_id BETWEEN 10 AND 20 AND mi_idx.id NOT IN (4072, 3466, 2096, 1652, 1371) AND cc.id NOT IN (3672, 620) GROUP BY kt.kind HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY average_movie_info DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT n.id) AS number_of_related_people, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN k.keyword = 'business-deal' THEN 1 ELSE 0 END) AS count_business_deal_keywords, MAX(mi.info) AS latest_movie_info FROM company_name cn JOIN company_type ct ON cn.name_pcode_nf = ct.id::varchar JOIN movie_info mi ON mi.info_type_id = ct.id JOIN keyword k ON k.id = mi.movie_id JOIN name n ON n.imdb_id = mi.movie_id WHERE cn.country_code NOT IN ('[pl]', '[us]') AND k.keyword IN ('lunchbox', 'slipper', 'business-deal', 'child-molester') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY number_of_companies DESC, count_business_deal_keywords DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN pi.info LIKE '%Oscar%' THEN 1 ELSE 0 END) AS total_oscars_won FROM cast_info ci INNER JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') WHERE n.imdb_index IN ('XXIII', 'XV', 'IX', 'XI') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.note NOT IN ('carlosprimati@uol.com.br', 'E.A.', 'IMDb Editors') GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY total_oscars_won DESC, average_movie_rating DESC, total_movies DESC, actor_name;
SELECT kt.kind AS movie_kind, AVG(aka_title.production_year) AS average_production_year, COUNT(DISTINCT aka_title.movie_id) AS total_movies, COUNT(DISTINCT movie_companies.company_id) AS total_companies_involved, SUM(case when aka_title.season_nr is not null then 1 else 0 end) AS total_seasons, COUNT(DISTINCT role_type.id) AS total_unique_roles FROM aka_title JOIN kind_type AS kt ON aka_title.kind_id = kt.id JOIN movie_companies ON aka_title.movie_id = movie_companies.movie_id JOIN company_type AS ct ON movie_companies.company_type_id = ct.id JOIN role_type ON role_type.id = movie_companies.company_id WHERE ct.kind = 'production companies' AND role_type.role IN ('guest', 'writer', 'miscellaneous crew', 'cinematographer') AND aka_title.imdb_index IN ('III', 'IV', 'I', 'II') AND aka_title.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN title t ON ci.movie_id = t.id JOIN movie_companies mc ON t.id = mc.movie_id WHERE rt.ROLE IN ('director', 'production designer', 'costume designer', 'composer') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT ct.kind AS company_kind, it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(ti.production_year) AS average_production_year, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'production companies' THEN 1 ELSE 0 END) AS production_companies_count, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'distributors' THEN 1 ELSE 0 END) AS distributors_count, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'special effects companies' THEN 1 ELSE 0 END) AS special_effects_companies_count, SUM(CASE WHEN mi.note LIKE '%(Ukrainian)%' THEN 1 ELSE 0 END) AS ukrainian_notes_count FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id INNER JOIN title ti ON mi.movie_id = ti.id INNER JOIN company_type ct ON ti.kind_id = ct.id GROUP BY ct.kind, it.info ORDER BY number_of_movies DESC, average_production_year DESC;
