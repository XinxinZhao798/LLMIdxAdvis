SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = ( SELECT id FROM comp_cast_type WHERE kind = 'rating' ) JOIN name n ON mc.movie_id = n.id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'distributors') AND mc.movie_id IN ('19654', '24487', '18671', '31117', '18944') AND mc.company_id IN ('209', '936', '1140') AND n.name_pcode_cf IN ('A6232', 'A5163') GROUP BY ct.kind ORDER BY number_of_movies DESC, average_rating DESC;
SELECT kt.kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, SUM(CASE WHEN mc.note LIKE '%(DVD)%' THEN 1 ELSE 0 END) AS number_of_dvd_releases, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS number_of_tv_releases, COUNT(DISTINCT kw.id) AS number_of_unique_keywords FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id JOIN movie_keyword mk ON akat.movie_id = mk.movie_id JOIN keyword kw ON mk.keyword_id = kw.id JOIN movie_companies mc ON akat.movie_id = mc.movie_id WHERE kt.id IN (3, 4, 5) AND kw.keyword IN ('black-shirt', 'reference-to-nintendo', 'married-couple', 'giving-back', 'oil-tycoon', 'poet') AND akat.production_year = 1998 GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE it.info = 'rating') AS average_rating, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT mi.info) FILTER (WHERE it.info = 'release dates') AS total_release_dates FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE kt.kind IN ('movie', 'tv series', 'video game') AND n.gender = 'm' AND it.id IN ('17', '71', '44', '69', '79', '64') AND mi.id IN ('7266297', '7266302', '7266333', '7267324', '7267795') AND t.production_year BETWEEN 2000 AND 2010 GROUP BY kt.kind;
SELECT kt.kind AS movie_type, avg(akat.production_year) AS average_production_year, count(DISTINCT akat.movie_id) AS number_of_movies, count(DISTINCT mc.company_id) AS number_of_companies_involved, sum(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS number_of_directors, sum(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS number_of_actresses, sum(CASE WHEN rt.role = 'cinematographer' THEN 1 ELSE 0 END) AS number_of_cinematographers, sum(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS number_of_composers FROM kind_type kt JOIN aka_title akat ON kt.id = akat.kind_id JOIN movie_companies mc ON akat.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_link mlink ON akat.movie_id = mlink.movie_id JOIN role_type rt ON mlink.link_type_id = rt.id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT cl.movie_id) AS total_linked_movies, COUNT(ci.person_id) AS total_roles_played, AVG(ci.nr_order) AS average_role_order FROM char_name AS cn JOIN cast_info AS ci ON cn.id = ci.person_id JOIN movie_link AS cl ON ci.movie_id = cl.movie_id WHERE cn.name IN ('Boy Negro''s Gang', 'Lazoglu', 'Paco Hernández Gil', 'Tedddy Hart', 'Funcionario prisión', 'Make Up Man') GROUP BY cn.name ORDER BY total_linked_movies DESC, total_roles_played DESC;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cl.id) AS number_of_movie_links, AVG(pi.person_id) AS average_person_id, SUM(CASE WHEN pi.note SIMILAR TO '%(Erin Chambers|nazir afzal|woodyanders \(qv''s & corrections by A. Nonymous\)|Woodlene Adeyemo|tina ansah)%' THEN 1 ELSE 0 END) AS count_special_notes FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN movie_link AS cl ON cn.id = cl.movie_id LEFT JOIN char_name AS chn ON chn.name IN ('Lumbard', 'Charlie Graham', 'Der junge Graf', 'Himself - King of Jungle') LEFT JOIN complete_cast AS cc ON cc.movie_id = cl.movie_id LEFT JOIN person_info AS pi ON pi.person_id = chn.id LEFT JOIN name AS n ON n.id = pi.person_id WHERE cn.country_code IN ('[sd]', '[ir]', '[ph]', '[tr]') GROUP BY ct.kind, cn.country_code ORDER BY number_of_companies DESC, average_person_id;
SELECT COUNT(DISTINCT cn.id) AS unique_character_count, AVG(mi_idx.info::numeric) AS average_movie_info_numeric, SUM(case when lt.id = '7' then 1 else 0 end) AS total_remake_links, MAX(cn.name) AS last_character_name_alphabetically FROM char_name cn JOIN complete_cast cc ON cn.id = cc.subject_id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id JOIN link_type lt ON lt.id = cc.status_id WHERE cn.surname_pcode IN ('S362', 'S246') AND mi_idx.info SIMILAR TO '%[0-9]+%' AND cc.movie_id IN ('1635482', '1626761', '96348', '52977') AND mi_idx.id IN ('268', '1318', '4406', '2884', '1174') AND lt.link IN ('remake of', 'spin off from', 'similar to', 'featured in') GROUP BY cn.surname_pcode;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN at.episode_of_id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_episodes, it.info AS info_type_description, COUNT(DISTINCT an.person_id) AS number_of_actors, COUNT(DISTINCT at.movie_id) AS number_of_aka_titles FROM title AS t LEFT JOIN aka_title AS at ON t.id = at.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN info_type AS it ON mi_idx.info_type_id = it.id LEFT JOIN aka_name AS an ON an.id = mi_idx.movie_id WHERE t.production_year BETWEEN 1990 AND 2020 AND (mi_idx.info_type_id IN (100, 101, 99) OR mi_idx.info IS NOT NULL) AND (at.episode_of_id IN (24960, 8508, 3016, 7633) OR at.episode_of_id IS NULL) AND an.surname_pcode IN ('T653', 'E164', 'H56', 'A526') GROUP BY it.info;
SELECT c.name AS company_name, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(name.imdb_id) AS average_imdb_id, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS count_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS count_female_actors FROM movie_link AS ml JOIN complete_cast AS cc ON cc.movie_id = ml.movie_id JOIN name ON name.id = cc.subject_id JOIN movie_companies AS mc ON mc.movie_id = ml.movie_id JOIN company_name AS c ON c.id = mc.company_id WHERE name.name_pcode_nf IN ('B534', 'A214', 'N6435', 'M243', 'O5254') GROUP BY c.name ORDER BY number_of_linked_movies DESC, average_imdb_id DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 1) AS average_movie_budget, SUM(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 2) AS total_box_office, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword IN ('toy-car', 'personal-stories')) AS count_specific_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN person_info AS pi ON mc.movie_id = pi.person_id AND pi.info_type_id IN (1, 2) LEFT JOIN keyword AS k ON k.id = pi.info_type_id JOIN comp_cast_type AS cct ON mc.company_id = cct.id WHERE mc.company_id IN (1232, 968) AND ct.id IN (2, 1, 4, 3) AND ct.kind = 'miscellaneous companies' AND cct.id IN (1, 2) GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT cn.id) AS number_of_characters, SUM(CASE WHEN mi_idx.info_type_id = '100' THEN 1 ELSE 0 END) AS count_of_type_100_info, SUM(CASE WHEN mi_idx.info_type_id = '101' THEN 1 ELSE 0 END) AS count_of_type_101_info FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN char_name cn ON ci.person_id = cn.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE ci.person_id IN ('1761', '1644', '1317', '1004') AND cn.name_pcode_nf IN ('W4126', 'D563', 'P3632') AND kt.id IN ('7', '3', '5') AND mi_idx.info_type_id IN ('100', '101') GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS distinct_companies, cn.country_code, AVG(cn.imdb_id) AS avg_imdb_id_of_companies FROM movie_link AS ml INNER JOIN kind_type AS kt ON ml.link_type_id = kt.id INNER JOIN movie_link AS ml2 ON ml.movie_id = ml2.movie_id INNER JOIN company_name AS cn ON ml2.movie_id = cn.id GROUP BY kt.kind, cn.country_code ORDER BY total_movies DESC;
SELECT ct.kind AS cast_type, AVG(movcomp_notes.note_length) AS average_note_length, COUNT(DISTINCT movcomp.movie_id) AS number_of_movies, COUNT(DISTINCT comp.name) AS number_of_companies, SUM(CASE WHEN movcomp.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_producers, MAX(comp_cast.subject_id) AS max_subject_id_for_cast_type FROM complete_cast AS comp_cast JOIN comp_cast_type AS ct ON comp_cast.subject_id = ct.id JOIN movie_companies AS movcomp ON movcomp.movie_id = comp_cast.movie_id JOIN company_name AS comp ON movcomp.company_id = comp.id LEFT JOIN (SELECT movie_id, LENGTH(note) AS note_length FROM movie_companies) AS movcomp_notes ON movcomp.movie_id = movcomp_notes.movie_id WHERE comp_cast.id IN (4264, 2513, 575, 1032) AND comp_cast.subject_id = 1 AND ct.id = 4 GROUP BY ct.kind;
SELECT COUNT(DISTINCT at.id) AS number_of_titles, AVG(at.production_year) AS average_production_year, rt.role AS role_type, COUNT(DISTINCT mi.id) AS number_of_movie_infos, SUM(CASE WHEN at.kind_id = '1' THEN 1 ELSE 0 END) AS number_of_movies, SUM(CASE WHEN at.kind_id = '2' THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT at.episode_of_id) AS number_of_unique_series, MAX(at.season_nr) AS max_season_number, MAX(at.episode_nr) AS max_episode_number FROM aka_title at JOIN movie_info mi ON at.movie_id = mi.movie_id JOIN role_type rt ON mi.info_type_id = rt.id WHERE at.production_year BETWEEN 1990 AND 2020 AND mi.info LIKE '%color%' GROUP BY rt.role ORDER BY number_of_titles DESC, average_production_year;
SELECT kt.kind AS Movie_Type, AVG(t.production_year) AS Average_Production_Year, COUNT(DISTINCT t.id) AS Total_Movies, COUNT(DISTINCT cc.id) AS Total_Complete_Casts, SUM(CASE WHEN t.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS Total_Seasons FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IN ('movie', 'tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY Total_Movies DESC;
SELECT COUNT(DISTINCT cn.id) AS character_count, COUNT(DISTINCT mc.movie_id) AS movie_count, COUNT(DISTINCT mc.company_id) AS company_count, AVG(kw.id) AS average_keyword_id, SUM(mc.company_type_id) AS total_company_types FROM char_name AS cn INNER JOIN movie_companies AS mc ON cn.id = mc.company_id INNER JOIN keyword AS kw ON kw.id = mc.movie_id GROUP BY mc.company_type_id ORDER BY character_count DESC, movie_count DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_movies, COUNT(DISTINCT cn.id) AS number_of_companies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN title AS t ON mc.movie_id = t.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT rt.ROLE AS role, COUNT(DISTINCT ci.person_id) AS unique_person_count, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_produced_movies, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN role_type rt ON ci.role_id = rt.id JOIN company_name cn ON cn.imdb_id = t.imdb_id WHERE t.series_years IN ('1985-1987', '2000-2004', '2010-2011') AND t.episode_of_id IS NULL AND rt.ROLE IN ('producer', 'costume designer', 'director') AND ci.role_id = rt.id AND (cn.country_code IN ('[md]', '[ro]', '[kr]', '[br]', '[sa]') OR cn.country_code = '[us]') GROUP BY rt.ROLE;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_participants, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_movies, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS verified_movies, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.note IS NOT NULL) AS noted_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_movie_links, COUNT(DISTINCT an.person_id) AS total_aka_persons FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id LEFT JOIN person_info AS pi ON ci.person_id = pi.person_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN aka_name AS an ON ci.person_id = an.person_id WHERE kt.kind IN ('movie', 'tv series') AND t.production_year >= 2000 AND t.production_year <= 2010 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN a.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_titles, kt.kind AS title_kind, n.gender AS actor_gender FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN name n ON ci.person_id = n.id JOIN aka_title a ON t.id = a.movie_id JOIN (SELECT id, CASE kind_id WHEN 2 THEN 'Feature' WHEN 7 THEN 'TV Movie' ELSE 'Other' END AS kind FROM title) kt ON t.kind_id = kt.id WHERE t.kind_id IN (2, 7) AND a.kind_id IN (6, 4, 3, 1) AND (ci.note LIKE '%(1988)%' OR a.imdb_index IN ('III', 'IV', 'I', 'II')) AND n.name IN ('Anazald, Mark', 'Anderson, Dean', 'Ancevski, Blagoja') GROUP BY kt.kind, n.gender;
SELECT lt.LINK AS link_type, COUNT(ml.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN p.info = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN p.info = 'director' THEN 1 ELSE 0 END) AS total_directors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 JOIN person_info AS p ON ml.movie_id = p.person_id WHERE lt.id IN (9, 3, 18, 8, 15) AND mi.info_type_id = 3 AND ml.linked_movie_id = 2439274 AND p.info IN ('actor', 'director') GROUP BY lt.LINK ORDER BY total_movies DESC, average_rating DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.movie_id) AS number_of_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS count_completed_status_4, SUM(CASE WHEN cc.status_id = '3' THEN 1 ELSE 0 END) AS count_completed_status_3 FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id GROUP BY kt.kind ORDER BY number_of_titles DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(n.imdb_id) AS average_imdb_id, MIN(n.name) AS first_alphabetical_actor_name, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS total_actresses, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_actors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN name AS n ON n.id = ml.movie_id OR n.id = ml.linked_movie_id WHERE lt.id IN (8, 6, 13, 10, 16, 7) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT info_type.info AS info_category, COUNT(DISTINCT movie_info.movie_id) AS number_of_movies, AVG(LENGTH(movie_info.info)) AS average_info_length, SUM(CASE WHEN comp_cast_type.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_count, SUM(CASE WHEN comp_cast_type.kind = 'cast' THEN 1 ELSE 0 END) AS cast_count, SUM(CASE WHEN comp_cast_type.kind = 'crew' THEN 1 ELSE 0 END) AS crew_count FROM movie_info JOIN info_type ON movie_info.info_type_id = info_type.id JOIN movie_info_idx ON movie_info.movie_id = movie_info_idx.movie_id JOIN comp_cast_type ON movie_info_idx.info_type_id = comp_cast_type.id WHERE info_type.info IN ('LD original title', 'LD quality of source', 'tech info', 'LD master format', 'salary history', 'LD release country') AND comp_cast_type.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY info_type.info ORDER BY number_of_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_roles, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN movie_link ml ON ci.movie_id = ml.movie_id GROUP BY rt.ROLE HAVING COUNT(DISTINCT ci.person_id) > 50;
