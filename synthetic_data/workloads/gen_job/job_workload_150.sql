SELECT ci.person_id, ci.role_id, COUNT(ci.movie_id) AS total_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies, COUNT(DISTINCT lt.id) AS unique_link_types FROM cast_info ci LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id LEFT JOIN link_type lt ON ci.person_role_id = lt.id GROUP BY ci.person_id, ci.role_id ORDER BY total_movies DESC, avg_cast_position;
SELECT cct.kind AS cast_type, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(mk.id) AS keyword_count, AVG(ct.id) AS average_company_type_id FROM comp_cast_type cct JOIN movie_keyword mk ON cct.id = mk.movie_id JOIN company_type ct ON mk.keyword_id = ct.id GROUP BY cct.kind HAVING COUNT(DISTINCT mk.movie_id) > 5 ORDER BY movie_count DESC, keyword_count DESC;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.id) AS total_unique_casts, SUM(CASE WHEN l.id IN (7, 8) THEN 1 ELSE 0 END) AS total_edited_or_spin_off_links, COUNT(DISTINCT cn.id) AS total_unique_characters, COUNT(*) AS total_titles FROM aka_title AS a JOIN complete_cast AS c ON a.movie_id = c.movie_id JOIN char_name AS cn ON cn.id = ANY(ARRAY[54785, 4119, 86783, 28862]) JOIN link_type AS l ON l.id = ANY(ARRAY[7, 8, 6, 3]) WHERE a.production_year IS NOT NULL AND c.status_id IN (3, 4) AND a.episode_of_id IS NOT NULL AND a.episode_of_id IN (15984, 4570, 5164, 247, 20256, 15791) AND l.link IN ('edited from', 'spin off') GROUP BY c.subject_id;
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(subquery.avg_keyword_count) AS average_keywords_per_movie FROM kind_type kt JOIN movie_keyword mk ON mk.movie_id = kt.id JOIN (SELECT movie_id, AVG(keyword_count) AS avg_keyword_count FROM (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS sub GROUP BY movie_id) AS subquery ON subquery.movie_id = mk.movie_id WHERE kt.id IN (4, 3, 7) AND mk.keyword_id = 1463 GROUP BY kt.kind;
SELECT rt.ROLE, AVG(nk.count_keywords) AS average_keywords, COUNT(DISTINCT at.movie_id) AS number_of_movies, SUM(CASE WHEN at.production_year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS movies_2000_to_2010, COUNT(DISTINCT n.id) AS number_of_names FROM role_type rt LEFT JOIN aka_title at ON rt.id = at.kind_id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS count_keywords FROM movie_keyword mk GROUP BY mk.movie_id ) nk ON nk.movie_id = at.movie_id LEFT JOIN name n ON n.id = at.movie_id WHERE rt.id IN (6, 7, 8) GROUP BY rt.ROLE ORDER BY average_keywords DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT cc.subject_id) AS number_of_subjects, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, SUM(CASE WHEN t.kind_id = 4 THEN 1 ELSE 0 END) AS number_of_documentaries FROM title t JOIN complete_cast cc ON t.id = cc.movie_id JOIN company_type ct ON t.kind_id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.episode_of_id) AS number_of_series, SUM(CASE WHEN t.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons_count, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_since_2001 FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN title AS t ON ml.movie_id = t.id WHERE t.production_year BETWEEN 1980 AND 2023 AND lt.link IN ('remade as', 'edited from', 'referenced in') GROUP BY lt.LINK ORDER BY number_of_movies DESC;
SELECT it.info AS genre, COUNT(mi.movie_id) AS number_of_movies, AVG(LENGTH(mi.info)) AS average_info_length, SUM(CASE WHEN an.name_pcode_cf IN ('A5143', 'F2162', 'B362', 'M2462') THEN 1 ELSE 0 END) AS count_actors_with_pcode FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN aka_name an ON an.person_id = mi.movie_id WHERE it.id = 40 AND mi.info IN ('Tagalog', 'Persian') GROUP BY it.info;
SELECT ct.kind AS company_kind, cn.country_code, COUNT(DISTINCT cn.id) AS total_companies, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT k.phonetic_code) AS unique_keyword_phonetic_codes FROM company_name cn JOIN company_type ct ON cn.id = ct.id LEFT JOIN keyword k ON cn.id = k.id GROUP BY ct.kind, cn.country_code ORDER BY total_companies DESC, unique_keyword_phonetic_codes DESC;
SELECT it.info AS cast_completeness, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(ci.person_count) AS average_roles_per_person FROM (SELECT movie_id, COUNT(DISTINCT person_id) AS person_count FROM cast_info GROUP BY movie_id) ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN info_type it ON cc.status_id = it.id GROUP BY it.info;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.person_id) AS total_unique_actors, AVG(CAST(t.production_year AS DECIMAL)) AS average_production_year, AVG(CAST(sub.nr_roles AS DECIMAL)) AS average_roles_per_movie FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN ( SELECT movie_id, COUNT(*) AS nr_roles FROM cast_info GROUP BY movie_id ) sub ON t.id = sub.movie_id LEFT JOIN cast_info ci ON t.id = ci.movie_id WHERE t.production_year IS NOT NULL AND t.id IN ('19580', '17102', '17123', '10072') GROUP BY kt.kind;
SELECT cct.kind AS cast_type, COUNT(DISTINCT cc.movie_id) AS number_of_movies, rt.ROLE AS role_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, AVG(CAST(mi.info AS numeric)) AS average_info_numeric_value FROM comp_cast_type AS cct JOIN complete_cast AS cc ON cct.id = cc.status_id JOIN role_type AS rt ON cc.subject_id = rt.id JOIN movie_info_idx AS mi ON cc.movie_id = mi.movie_id WHERE cct.id IN (2, 3) AND rt.id IN (11, 9, 1, 3) AND rt.ROLE IN ('producer', 'guest', 'writer') AND mi.id IN (4348, 2817, 476, 2090, 937) GROUP BY cct.kind, rt.ROLE ORDER BY number_of_movies DESC, average_info_numeric_value DESC;
SELECT pi.note AS person_note, COUNT(DISTINCT ml.movie_id) AS total_movies, AVG(CAST(pi.info AS INTEGER)) AS average_person_info_number, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_subject_id_1 FROM person_info pi JOIN movie_link ml ON pi.person_id = ml.movie_id JOIN complete_cast cc ON ml.movie_id = cc.movie_id WHERE pi.note IN ('Nick van de Wall', 'Gary Brumburgh / gr-home@pacbell.net') AND ml.link_type_id IN (3, 13, 17, 10, 16, 2) AND pi.info_type_id IN (32, 17, 31, 33, 38, 36) GROUP BY pi.note HAVING COUNT(DISTINCT ml.linked_movie_id) > 5;
SELECT cct.kind AS cast_type, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT mk.movie_id) AS number_of_keywords_used, AVG(CAST(pi.info AS INTEGER)) AS average_person_info, SUM(CASE WHEN k.keyword = 'massachusetts' THEN 1 ELSE 0 END) AS count_massachusetts_keyword, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_status_4_casts FROM comp_cast_type cct JOIN complete_cast cc ON cct.id = cc.subject_id JOIN movie_keyword mk ON cc.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN person_info pi ON pi.person_id = cc.id WHERE cc.status_id IN (3, 4) AND pi.info_type_id = cc.status_id AND k.keyword IN ('massachusetts', 'scavenging-for-food', 'acquitted-of-murder', 'airforce-one', 'archeologist', 'collecting') GROUP BY cct.kind;
SELECT p.info AS person_birthplace, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(sub.link_count) AS average_number_of_links_per_movie, SUM(CASE WHEN mk.keyword_id = 2693 THEN 1 ELSE 0 END) AS count_keyword_2693 FROM person_info p LEFT JOIN movie_keyword mk ON p.person_id = mk.movie_id LEFT JOIN ( SELECT movie_id, COUNT(*) AS link_count FROM movie_link GROUP BY movie_id ) sub ON sub.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mk.movie_id WHERE p.info = 'Miles City, Montana, USA' GROUP BY p.info;
SELECT c.id AS company_id, c.name AS company_name, COUNT(DISTINCT m.id) AS number_of_movies, AVG(mi_numeric.info::FLOAT) AS average_movie_length, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_actors, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(ci.nr_order) AS max_cast_order, MIN(mc.note) AS earliest_production_note FROM movie_companies mc JOIN company_name c ON mc.company_id = c.id JOIN title m ON mc.movie_id = m.id LEFT JOIN movie_info mi ON m.id = mi.movie_id LEFT JOIN movie_info_idx mi_idx ON m.id = mi_idx.movie_id LEFT JOIN info_type it1 ON mi.info_type_id = it1.id AND it1.info = 'running time' LEFT JOIN cast_info ci ON m.id = ci.movie_id LEFT JOIN movie_keyword mk ON m.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_info mi_numeric ON m.id = mi_numeric.movie_id AND mi_numeric.info_type_id = it1.id WHERE c.country_code = '[us]' AND mi_numeric.info ~ '^[0-9]+(\.[0-9]+)?$' GROUP BY c.id, c.name ORDER BY number_of_movies DESC, average_movie_length DESC LIMIT 10;
SELECT cct.kind AS cast_type_kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(kt.id) AS average_kind_type_id, SUM(mk.keyword_id) AS total_keyword_id_sum FROM comp_cast_type cct JOIN movie_keyword mk ON cct.id = mk.movie_id JOIN kind_type kt ON mk.movie_id = kt.id WHERE cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND mk.movie_id IN (13927, 7318, 9248, 15407) GROUP BY cct.kind ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(n.imdb_id) AS avg_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM movie_companies AS mc JOIN link_type AS lt ON mc.company_type_id = lt.id JOIN name AS n ON mc.movie_id = n.id WHERE mc.company_type_id = 1 AND lt.link IN ('featured in', 'alternate language version of') AND mc.movie_id = 18491 GROUP BY lt.LINK;
SELECT mc.company_type_id, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(k.id) AS average_keyword_id, COUNT(DISTINCT n.id) AS total_unique_cast_members, MAX(n.name) AS most_recent_cast_member_name FROM movie_companies mc JOIN keyword k ON mc.movie_id = k.id JOIN name n ON n.id = mc.company_id WHERE mc.company_type_id = '1' AND mc.note LIKE '%(TV)%' AND k.keyword IN ('training', 'mad-scientist', 'war-memorial') AND n.name_pcode_cf IN ('A6136', 'A2353', 'A6515', 'A4564', 'A2352', 'A265') GROUP BY mc.company_type_id;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS number_of_movies_produced, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_movie_count, SUM(CASE WHEN k.keyword = 'comedy' THEN 1 ELSE 0 END) AS comedy_movie_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_keyword mk ON mc.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.company_type_id = 1 AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND cn.country_code = 'US' GROUP BY cn.name ORDER BY average_movie_rating DESC, number_of_movies_produced DESC;
SELECT kt.kind AS movie_kind, avg(title.production_year) AS average_production_year, count(DISTINCT title.id) AS number_of_titles, count(DISTINCT cast_info.person_id) AS number_of_participants, count(DISTINCT movie_keyword.keyword_id) AS number_of_unique_keywords, sum(case when role_type.role = 'actor' then 1 else 0 end) AS number_of_actors, sum(case when role_type.role = 'actress' then 1 else 0 end) AS number_of_actresses FROM title JOIN kind_type AS kt ON title.kind_id = kt.id LEFT JOIN cast_info ON title.id = cast_info.movie_id LEFT JOIN role_type ON cast_info.role_id = role_type.id LEFT JOIN movie_keyword ON title.id = movie_keyword.movie_id WHERE kt.kind IN ('video movie', 'video game') AND title.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind;
SELECT it.info AS information_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(n.imdb_id) AS average_imdb_id, MAX(k.keyword) AS most_common_keyword, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_link AS ml JOIN info_type AS it ON ml.link_type_id = it.id JOIN name AS n ON ml.movie_id = n.id JOIN keyword AS k ON k.id = ml.id WHERE ml.link_type_id = 9 AND k.phonetic_code IN ('I4243', 'B43', 'D63', 'B4523', 'T521') AND ml.linked_movie_id IN (2406273, 1737708, 1377064) GROUP BY it.info;
SELECT rt.ROLE AS role_type, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT ci.person_id) AS distinct_actors_count, SUM(CASE WHEN k.phonetic_code = 'D56' THEN 1 ELSE 0 END) AS keyword_D56_count, MIN(t.title) AS earliest_movie_title, MAX(t.production_year) AS latest_production_year, COUNT(DISTINCT k.id) AS distinct_keyword_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN title t ON ci.movie_id = t.id LEFT JOIN keyword k ON k.id = ANY(ARRAY[2148, 118, 3933, 2925]) WHERE rt.ROLE IN ('actor', 'actress', 'producer', 'director') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY rt.ROLE ORDER BY distinct_actors_count DESC;
SELECT ct.kind AS cast_type, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN pi.info_type_id = 17 THEN 1 ELSE 0 END) AS count_info_type_17, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT t.id) FILTER (WHERE t.production_year > 2010) AS titles_after_2010 FROM title AS t JOIN comp_cast_type AS ct ON t.kind_id = ct.id LEFT JOIN company_name AS cn ON cn.md5sum IN ('46757a84e182ecbce2485bbe4f94c35c', '042c3abaa3eee3219096099e572cbd78', '055c9414a7d1b5428c44a7840e634a28') LEFT JOIN person_info AS pi ON pi.info IN ('Elektra', '23 September 1989') LEFT JOIN keyword AS k ON k.keyword LIKE '%' LEFT JOIN link_type AS lt ON lt.link = 'similar to' AND lt.id = 13 WHERE (t.episode_of_id = '86208' OR cn.name_pcode_nf = 'M6421') GROUP BY ct.kind;
SELECT t.title, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_type_3_infos FROM title t JOIN movie_info mi ON t.id = mi.movie_id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 AND mi.info_type_id = 101 AND mk.keyword_id IN ('3774', '2749', '3382', '2831', '1138') AND mi_idx.info_type_id IN ('3', '5', '7') GROUP BY t.title ORDER BY average_rating DESC, total_linked_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.production_year > 1990 THEN 1 ELSE 0 END) AS movies_after_1990, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE kt.id IN (2, 4, 6, 3) AND kt.kind IN ('tv mini series', 'video movie') GROUP BY kt.kind ORDER BY total_movies DESC;
