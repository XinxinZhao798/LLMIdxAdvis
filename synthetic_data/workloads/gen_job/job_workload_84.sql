SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT a.id) AS total_aka_titles, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT n.id) AS total_names, COUNT(DISTINCT c.id) AS total_complete_cast_entries FROM title t LEFT JOIN aka_title a ON t.id = a.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN keyword k ON k.phonetic_code = a.phonetic_code LEFT JOIN name n ON n.gender = 'm' AND (n.imdb_index = 'XVII' OR n.imdb_index = 'XXII') LEFT JOIN complete_cast c ON t.id = c.movie_id WHERE t.kind_id IN (SELECT id FROM role_type WHERE role IN ('miscellaneous crew', 'director')) AND (k.keyword IN ('fbi', 'fencing-lesson', 'repairing-a-tv-set', 'leaving-home') OR k.phonetic_code IN ('L2153', 'G56', 'C6326', 'A3436', 'P212', 'W262')) AND ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('references', 'referenced in')) GROUP BY t.kind_id;
SELECT kt.kind AS content_type, COUNT(*) AS total_titles, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT cn.country_code) AS unique_country_codes, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_aka_names FROM kind_type AS kt JOIN company_name AS cn ON cn.id = kt.id LEFT JOIN aka_name AS an ON an.person_id = cn.id WHERE kt.id IN ('4', '3', '5', '6', '1', '2') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT rt.ROLE, COUNT(*) AS total_roles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_imdb_index_I, SUM(CASE WHEN t.imdb_index = 'II' THEN 1 ELSE 0 END) AS count_imdb_index_II, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS count_imdb_index_V, COUNT(DISTINCT t.id) AS unique_titles, COUNT(DISTINCT k.id) AS unique_keywords FROM role_type rt LEFT JOIN char_name cn ON rt.id = cn.id LEFT JOIN movie_keyword mk ON cn.id = mk.keyword_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN title t ON mk.movie_id = t.id WHERE rt.id IN (3, 9, 8, 1, 11) AND t.production_year IS NOT NULL AND ( cn.name_pcode_nf IN ('R13', 'C6456', 'J326', 'R25', 'A3235', 'L6324') OR cn.surname_pcode = 'G16' ) GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT kt.kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN mi_idx.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_info_type_1, AVG(CASE WHEN mi_idx.info_type_id = 1 THEN CAST(mi_idx.info AS FLOAT) ELSE NULL END) AS average_info_value_for_type_1 FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT k.keyword, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS number_of_persons, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, COUNT(DISTINCT at.title) AS number_of_alternate_titles FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN title AS t ON mk.movie_id = t.id LEFT JOIN aka_title AS at ON t.id = at.movie_id LEFT JOIN aka_name AS an ON t.id = an.person_id LEFT JOIN name AS n ON an.person_id = n.id WHERE k.phonetic_code IN ('F4235', 'I626') AND t.production_year > 2000 GROUP BY k.keyword ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(ak.production_year::decimal) AS average_production_year, SUM(CASE WHEN ak.title LIKE '%(imdb display title)%' THEN 1 ELSE 0 END) AS total_imdb_display_titles, COUNT(DISTINCT k.id) AS total_unique_keywords, MAX(pi.info) AS latest_person_info FROM name AS n JOIN aka_title AS ak ON ak.movie_id IN (SELECT DISTINCT cc.movie_id FROM complete_cast AS cc WHERE cc.subject_id = 1) JOIN complete_cast AS cc ON cc.movie_id = ak.movie_id AND cc.subject_id = 1 JOIN keyword AS k ON k.phonetic_code = ak.phonetic_code JOIN person_info AS pi ON pi.person_id = n.id WHERE n.gender = 'F' AND ak.note LIKE '%(imdb display title)%' AND ak.production_year > 2000 GROUP BY n.gender;
SELECT rt.role, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, COUNT(DISTINCT pi.person_id) AS number_of_people, COUNT(DISTINCT cn.id) AS number_of_char_names, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM role_type rt JOIN name n ON n.id = CAST(rt.id AS INTEGER) LEFT JOIN char_name cn ON cn.md5sum = n.md5sum LEFT JOIN person_info pi ON pi.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = pi.person_id WHERE rt.role IN ('director', 'producer', 'composer') AND pi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('trivia', 'quotes', 'birth notes')) AND (pi.note IS NULL OR pi.note <> 'Jacqeline Buono') GROUP BY rt.role;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS movie_count, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords, AVG(CAST(mi.info AS NUMERIC)) AS average_info_numeric_value, SUM(CASE WHEN mi.info LIKE '%...26...2.%' THEN 1 ELSE 0 END) AS pattern_26_info_count, MAX(n.name) AS max_actor_name FROM movie_info_idx mi JOIN kind_type kt ON mi.info_type_id = kt.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON mi.movie_id = ml.movie_id JOIN name n ON ml.movie_id = n.id WHERE kt.kind = 'episode' AND mi.info_type_id IN (100, 101, 99) AND mi.info SIMILAR TO '%(4.2|....001322|0....01313|...26...2.|2.......24|2..2..2.4.)%' AND mk.keyword_id IN (2474, 3652) AND ml.linked_movie_id IN (254369, 1452436, 446227, 989565) AND ml.movie_id IN (20573, 12164, 2661) GROUP BY kt.kind;
SELECT t.title AS Movie_Title, COUNT(DISTINCT n.id) AS Number_of_Actors, AVG(mi_idx.info::numeric) AS Average_Rating, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS Total_Actors, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS Total_Actresses, t.production_year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND t.production_year BETWEEN 2000 AND 2010 AND rt.role IN ('actor', 'actress') GROUP BY t.title, t.production_year HAVING COUNT(DISTINCT n.id) > 10 ORDER BY Average_Rating DESC, Number_of_Actors DESC LIMIT 10;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.name) AS distinct_company_names, COUNT(DISTINCT cn.country_code) AS distinct_country_codes, AVG(cc.movie_id) AS average_movie_id, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producers, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS total_editors, COUNT(DISTINCT cc.movie_id) AS distinct_movies_with_complete_cast, MAX(cc.status_id) AS max_status_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN complete_cast cc ON cc.movie_id = cn.imdb_id JOIN role_type rt ON rt.id = cc.subject_id WHERE cn.country_code != 'US' AND rt.role IN ('guest', 'actress', 'editor', 'producer') GROUP BY ct.kind ORDER BY total_producers DESC;
SELECT COUNT(DISTINCT ci.id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_male_cast, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT ml.id) AS total_movie_links, AVG(mi_idx.info::NUMERIC) AS average_movie_info_numeric_value FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id JOIN company_name AS cn ON cn.country_code = 'US' JOIN movie_link AS ml ON ml.movie_id = ci.movie_id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id WHERE n.name_pcode_nf IN ('I3542', 'I1425', 'A1346', 'A4152', 'E2415', 'A214') AND cn.name_pcode_sf IN ('T3612', 'A4135') AND ml.linked_movie_id IN ('566232', '327844', '2386590', '2368302', '1823148', '1881905') AND mi_idx.id IN ('3312', '4204') GROUP BY n.gender;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(cn.imdb_id::NUMERIC) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'us' THEN 1 ELSE 0 END) AS num_us_companies, COUNT(DISTINCT cn.id) AS num_companies_involved FROM movie_keyword AS mk JOIN movie_info AS mi ON mk.movie_id = mi.movie_id JOIN kind_type AS kt ON mi.info_type_id = kt.id AND kt.id IN ('2', '3', '4', '5', '6') JOIN company_name AS cn ON mk.movie_id = cn.imdb_id WHERE (mk.keyword_id IN ('3195', '2832', '4019', '2965', '3002') OR mi.info IN ('Albanian', 'Norwegian', 'Ladino', 'Filipino', 'Estonian')) AND cn.name_pcode_nf IN ('R5365', 'C514', 'E5314', 'L532') AND cn.id IN ('23278', '44380', '28077', '6858', '43412', '27250') GROUP BY kt.kind;
SELECT AVG(CAST(mi.info AS DOUBLE PRECISION)) AS average_budget, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, COUNT(DISTINCT n.id) AS total_people_with_surname_code, SUM(CASE WHEN mi_idx.info LIKE '0.0%' THEN 1 ELSE 0 END) AS count_prefix_info FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN name n ON n.surname_pcode = 'A465' WHERE mi.info_type_id = 3 AND mi_idx.info_type_id = 2 AND ml.link_type_id = 1 AND mi.note IS NOT NULL GROUP BY n.surname_pcode;
SELECT n.gender, COUNT(DISTINCT n.id) AS total_actors, AVG(pi.info::numeric) AS average_salary, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_since_2000, COUNT(DISTINCT an.id) AS alias_count FROM name AS n LEFT JOIN person_info AS pi ON n.id = pi.person_id AND pi.info_type_id = 5 LEFT JOIN aka_name AS an ON n.id = an.person_id JOIN title AS t ON t.production_year IS NOT NULL WHERE n.gender = 'm' AND an.surname_pcode IN ('A314', 'M625', 'A623') AND ( t.md5sum = 'e12660c2276e1be7ab2cedff19318a06' OR t.md5sum = 'ed4e8da1cad9d62090810472bc647ccb' ) GROUP BY n.gender;
SELECT ct.kind AS company_kind, rt.ROLE AS role_type, COUNT(DISTINCT ci.id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN mi_idx.info LIKE '....33.1.1' THEN 1 ELSE 0 END) AS count_specific_info_pattern, kind.kind AS movie_kind FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN kind_type AS kind ON kind.id = (SELECT movie_id FROM complete_cast WHERE movie_id = ci.movie_id LIMIT 1) JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id WHERE ci.movie_id = 305396 AND ct.id IN (1, 2, 3, 4) AND rt.ROLE IN ('actor', 'actress', 'producer', 'director') AND (mi_idx.info LIKE '00.0011111' OR mi_idx.info LIKE '1.....21.4') GROUP BY ct.kind, rt.ROLE, kind.kind;
SELECT it.info AS information_type, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_value, COUNT(DISTINCT ml.movie_id) AS number_of_related_movies, COUNT(DISTINCT n.id) AS number_of_unique_actors, SUM(CASE WHEN rt.role = 'writer' THEN 1 ELSE 0 END) AS writers_count, SUM(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS composers_count, SUM(CASE WHEN rt.role = 'costume designer' THEN 1 ELSE 0 END) AS costume_designers_count FROM info_type it LEFT JOIN movie_info_idx mi_idx ON it.id = mi_idx.info_type_id LEFT JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id LEFT JOIN complete_cast cc ON mi_idx.movie_id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN role_type rt ON cc.status_id = rt.id WHERE it.info IN ('LD year', 'top 250 rank', 'keywords', 'LD disc format', 'release dates') AND lt.link IN ('spin off from', 'spoofed in', 'featured in') AND rt.role IN ('costume designer', 'composer', 'writer', 'miscellaneous crew') GROUP BY it.info;
SELECT COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cn.id) AS num_companies, AVG(complete_cast.status_id) AS avg_status_id, SUM(CASE WHEN pi.info_type_id = 19 THEN 1 ELSE 0 END) AS count_info_type_19, SUM(CASE WHEN pi.info_type_id = 20 THEN 1 ELSE 0 END) AS count_info_type_20, COUNT(DISTINCT mk.keyword_id) AS num_keywords FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = ci.movie_id JOIN complete_cast ON complete_cast.movie_id = ci.movie_id JOIN person_info pi ON pi.person_id = ci.person_id WHERE ci.note NOT LIKE '%(archive footage)%' AND cn.country_code = 'US' AND complete_cast.subject_id = 1 AND (pi.info LIKE '%Stage:%' OR pi.info LIKE '%AIDS%') GROUP BY cn.country_code;
SELECT kt.kind AS movie_type, COUNT(t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) FILTER (WHERE ct.kind = 'special effects companies') AS special_effects_companies_involved, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN aka_name AS an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND kt.kind IN ('tv movie', 'video movie', 'tv mini series', 'movie') GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CASE WHEN kt.kind = 'movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_movies, AVG(CASE WHEN kt.kind = 'tv movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_movies, AVG(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_mini_series, AVG(CASE WHEN kt.kind = 'episode' THEN 1 ELSE 0 END) * 100.0 AS percentage_episodes FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN kind_type AS kt ON mc.movie_id = kt.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT a.title AS alternate_title, AVG(kt.production_year) AS avg_production_year, COUNT(DISTINCT n.id) AS number_of_contributors, SUM(CASE WHEN kw.keyword = 'ball' THEN 1 ELSE 0 END) AS ball_keyword_count, SUM(CASE WHEN kw.keyword = 'advisor' THEN 1 ELSE 0 END) AS advisor_keyword_count FROM aka_title a INNER JOIN keyword kw ON kw.phonetic_code = a.phonetic_code INNER JOIN aka_title kt ON kt.id = a.movie_id AND kt.kind_id = a.kind_id LEFT JOIN name n ON n.name_pcode_cf = a.phonetic_code WHERE a.movie_id IN ('1644521', '1664207') GROUP BY a.title;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, AVG(mcc.status_id) AS average_status_id, SUM(CASE WHEN mc.note LIKE '%(DVD)%' THEN 1 ELSE 0 END) AS dvd_releases, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS tv_releases, SUM(CASE WHEN mc.note LIKE '%(all media)%' THEN 1 ELSE 0 END) AS all_media_releases, SUM(CASE WHEN mc.note LIKE '%) (UK) %' THEN 1 ELSE 0 END) AS uk_releases, SUM(CASE WHEN mc.note LIKE '%) (USA) %' THEN 1 ELSE 0 END) AS usa_releases FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN complete_cast AS mcc ON mc.movie_id = mcc.movie_id WHERE ct.kind IN ('distributors', 'special effects companies') GROUP BY ct.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS avg_female_participation, SUM(CASE WHEN it.info = 'article' THEN 1 ELSE 0 END) AS num_articles, SUM(CASE WHEN it.info = 'printed media reviews' THEN 1 ELSE 0 END) AS num_media_reviews FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN name AS n ON mc.company_id = n.id JOIN person_info AS pi ON n.id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY num_movies DESC;
SELECT AVG(CAST(mi.info AS FLOAT)) AS average_rating, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, COUNT(DISTINCT cn.id) AS number_of_companies, cn.country_code FROM movie_info mi JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = mi.movie_id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND cn.country_code = 'US' GROUP BY cn.country_code;
SELECT COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS avg_cast_position, SUM(case when cct.kind = 'cast' then 1 else 0 end) AS total_cast_entries, SUM(case when cct.kind = 'crew' then 1 else 0 end) AS total_crew_entries, MAX(n.name) AS most_recently_added_person, COUNT(DISTINCT mc.company_id) AS num_companies_involved, COUNT(DISTINCT k.id) AS num_keywords_associated FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN name n ON ci.person_id = n.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN keyword k ON k.id = ANY (SELECT mk.keyword_id FROM movie_keyword mk WHERE mk.movie_id = ci.movie_id) WHERE mc.movie_id IN ('10521', '18817') AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT at.id) AS total_titles, AVG(cc.status_id) AS average_cast_status, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM company_name AS cn JOIN aka_title AS at ON cn.id = at.kind_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN person_info AS pi ON cc.subject_id = pi.person_id JOIN keyword AS k ON at.id = k.id WHERE cn.name IN ('Sunset Productions (II)', 'Coming Soon TV', 'Tucker Film', 'Windfall Films', 'NMK') AND k.keyword IN ('lavatory', 'society') AND at.production_year BETWEEN 2000 AND 2023 GROUP BY cn.country_code ORDER BY total_us_companies DESC, latest_production_year DESC;
SELECT kt.kind AS movie_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_individuals_involved, SUM(CASE WHEN k.keyword = 'cashing-check' THEN 1 ELSE 0 END) AS cashing_check_keyword_count, SUM(CASE WHEN k.keyword = 'burglar' THEN 1 ELSE 0 END) AS burglar_keyword_count, SUM(CASE WHEN k.keyword = 'found-unconscious' THEN 1 ELSE 0 END) AS found_unconscious_keyword_count FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id WHERE kt.kind IN ('tv movie', 'episode', 'video movie', 'tv mini series') AND t.production_year IS NOT NULL GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind as Movie_Type, AVG(t.production_year) as Average_Production_Year, COUNT(DISTINCT t.id) as Total_Movies, COUNT(DISTINCT ml.movie_id) as Movies_With_Links, SUM(CASE WHEN t.series_years LIKE '2004-____' THEN 1 ELSE 0 END) as Movies_From_2004_onwards FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id IN ('16', '13', '8') WHERE kt.kind IN ('tv mini series', 'tv movie', 'video game', 'movie') GROUP BY kt.kind;
SELECT rt.ROLE, COUNT(distinct ci.movie_id) AS total_movies, COUNT(distinct ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, COUNT(distinct kw.id) AS total_keyword_occurrences, COUNT(distinct cn.id) AS total_companies_involved, AVG(length(pi.info)) AS average_person_info_length FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN keyword kw ON kw.id = ANY(ARRAY[9828, 3338, 5730, 2511]) JOIN company_name cn ON cn.imdb_id = mi_idx.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE rt.id IN (11, 10, 7, 2) AND rt.ROLE = 'actor' AND ci.movie_id IN (1610581, 1098561, 1413295, 2451586, 1851477, 2419871) AND ci.role_id = 1 GROUP BY rt.ROLE
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_num, SUM(CAST(CASE WHEN mi_idx.info LIKE '%1%' THEN 1 ELSE 0 END AS INTEGER)) AS count_info_with_1 FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id JOIN name n ON ml.movie_id = n.id WHERE n.md5sum IN ('801a5d533ecc2c88317db66319d4aad9', 'caa370cb4f3c3b62016775d613ce5575', '4fc8edf0bba0a30ce337c1c452a645f0') AND ml.linked_movie_id IN (1412141, 604005, 716090) AND mi_idx.info SIMILAR TO '%[0-9]%' AND mk.keyword_id IN ( SELECT id FROM keyword WHERE keyword IN ('wind-up-toy', 'money-in-title', 'suicide-pill') ) GROUP BY kt.kind ORDER BY total_movies_with_keywords DESC;
