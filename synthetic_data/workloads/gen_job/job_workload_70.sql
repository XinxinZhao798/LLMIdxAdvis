SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, SUM(CASE WHEN mi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS interview_movie_count, SUM(CASE WHEN mi.note LIKE '%(Original version)%' THEN 1 ELSE 0 END) AS original_version_movie_count, COUNT(DISTINCT k.id) AS distinct_keywords_used, AVG(mi.id) AS average_movie_info_id FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE it.id IN (9, 31) AND k.keyword IN ('cobra', 'dinosaur-egg', 'startled', 'paranoia') GROUP BY it.info ORDER BY movie_count DESC;
SELECT it.id AS link_type_id, COUNT(DISTINCT ml.movie_id) AS linked_movie_count, AVG(CAST(ml.movie_id AS numeric)) AS average_movie_imdb_id, COUNT(DISTINCT cn.name) AS distinct_character_count FROM movie_link AS ml JOIN char_name AS cn ON cn.imdb_id = ml.movie_id JOIN info_type AS it ON it.id = ml.link_type_id WHERE cn.md5sum IN ( '9c88a1d05f3506772ca5e69f66dc1249', '636fad97342736741e6911a8771502e5', '328bda83d9fc509b059cfde00bcd1636', 'a69ed1d744f3064af88264ac95a13e8f', 'c4f803b9dca9a572c24d55895e9eaf0a' ) AND ml.link_type_id IN ('4', '5', '9', '17') GROUP BY it.id ORDER BY linked_movie_count DESC, average_movie_imdb_id;
SELECT rt.ROLE, COUNT(ci.id) AS num_roles, AVG(ci.nr_order) AS avg_order, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT cn.id) AS character_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN char_name cn ON ci.person_role_id = cn.id GROUP BY rt.ROLE ORDER BY num_roles DESC;
SELECT kt.kind AS movie_kind, AVG(alt.production_year) AS average_production_year, COUNT(DISTINCT alt.movie_id) AS number_of_movies, COUNT(DISTINCT mi.movie_id) AS number_of_movies_with_info, SUM(CASE WHEN rt.id = 1 THEN 1 ELSE 0 END) AS number_of_directors, COUNT(DISTINCT lt.id) AS number_of_link_types FROM aka_title alt JOIN kind_type kt ON alt.kind_id = kt.id JOIN movie_info mi ON alt.movie_id = mi.movie_id LEFT JOIN role_type rt ON mi.info_type_id = rt.id LEFT JOIN link_type lt ON mi.info_type_id = lt.id WHERE alt.phonetic_code IN ('W6', 'R2323', 'M6362', 'H4236', 'L4', 'G5214') AND rt.id IN ('10', '1', '2', '8', '3', '12') AND lt.link IN ('spin off from', 'similar to', 'spin off', 'remake of', 'edited from', 'features') AND lt.id IN ('7', '16', '5', '8', '13') AND alt.production_year IS NOT NULL GROUP BY kt.kind;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS total_features_link, MAX(an.name) AS latest_aka_name FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN complete_cast AS cc ON mi_idx.movie_id = cc.movie_id JOIN movie_link AS ml ON mi_idx.movie_id = ml.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN aka_name AS an ON an.person_id = mi_idx.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND k.phonetic_code IN ('B3241', 'C23', 'A165', 'L5212', 'P45', 'N23') AND lt.link IN ('spin off', 'similar to', 'edited from', 'remade as', 'features') AND cc.movie_id = 1619 AND an.id = 2748 GROUP BY cc.movie_id;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT n.id) AS number_of_cast_members, COUNT(DISTINCT cc.subject_id) AS number_of_cast_types, AVG(cc.status_id) AS average_status_id FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id WHERE cc.status_id = 4 AND t.production_year > 1990 GROUP BY t.kind_id ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT it.info AS info_type, COUNT(DISTINCT akn.person_id) AS unique_person_count, COUNT(DISTINCT k.id) AS unique_keyword_count, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN k.phonetic_code IN ('S6252', 'C351', 'F2352') THEN 1 ELSE 0 END) AS specific_phonetic_code_count FROM aka_name akn JOIN info_type it ON akn.surname_pcode = it.info JOIN keyword k ON akn.name_pcode_nf = k.phonetic_code JOIN movie_companies mc ON akn.person_id = mc.company_id GROUP BY it.info ORDER BY unique_person_count DESC, unique_keyword_count DESC;
SELECT c.name AS company_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(k.id) AS average_keyword_id, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS count_of_info_type_4, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords, STRING_AGG(DISTINCT mi.info, ', ') FILTER (WHERE mi.info_type_id = 4) AS movie_info_languages FROM company_name AS c JOIN movie_companies AS mc ON c.id = mc.company_id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON mc.movie_id = ci.movie_id WHERE c.country_code = '[us]' AND mi.info IN ('Czech', 'Ladino', 'Ukrainian') GROUP BY c.name ORDER BY number_of_movies DESC, average_keyword_id;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_order_of_appearance, COUNT(DISTINCT pi.person_id) AS distinct_actors_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_lead_roles FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.person_role_id IN (1344, 1214) GROUP BY kt.kind ORDER BY movie_count DESC;
SELECT AVG(CAST(pi.info AS numeric)) AS average_rating, COUNT(cc.id) AS total_cast_members, COUNT(DISTINCT at.id) AS total_alternate_titles, SUM(CASE WHEN at.title ILIKE '%love%' THEN 1 ELSE 0 END) AS titles_with_love FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN person_info pi ON cc.movie_id = pi.person_id WHERE at.movie_id IN (52294, 98509, 1635723, 1678623) AND pi.info_type_id = 101 GROUP BY at.movie_id;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(kw.id) AS average_keyword_id, MAX(n.name) AS most_common_name, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS non_male_count FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN cast_info AS ci ON ml.movie_id = ci.movie_id JOIN keyword AS kw ON ci.id = kw.id JOIN name AS n ON ci.person_id = n.id GROUP BY lt.LINK ORDER BY number_of_movies DESC, number_of_linked_movies DESC;
SELECT MIN(t.title) AS movie_title, MIN(at.title) AS alternative_title, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_unique_actors, SUM(CASE WHEN t.production_year BETWEEN 1970 AND 1980 THEN 1 ELSE 0 END) AS movies_produced_1970_to_1980, SUM(CASE WHEN t.production_year BETWEEN 1981 AND 1990 THEN 1 ELSE 0 END) AS movies_produced_1981_to_1990, SUM(CASE WHEN t.production_year BETWEEN 1991 AND 2000 THEN 1 ELSE 0 END) AS movies_produced_1991_to_2000 FROM title AS t INNER JOIN aka_title AS at ON t.id = at.movie_id AND at.kind_id IN (1, 3) INNER JOIN cast_info AS ci ON t.id = ci.movie_id WHERE t.production_year IN (1985, 1975, 1950, 1972) GROUP BY t.kind_id HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY number_of_movies DESC, average_cast_order;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT ci.person_id) AS total_actors, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM cast_info ci JOIN kind_type kt ON ci.movie_id = kt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE kt.kind IN ('episode', 'tv movie') AND ml.link_type_id IN (4, 13, 11, 6, 8, 3) AND mi_idx.movie_id IN (8354, 8579) GROUP BY kt.kind;
