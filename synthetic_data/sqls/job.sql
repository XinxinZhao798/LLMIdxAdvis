SELECT k.keyword, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, AVG(sub_person_roles.roles_count) AS avg_roles_per_person, COUNT(DISTINCT an.id) AS unique_pseudonyms_count FROM keyword AS k LEFT JOIN movie_keyword AS mk ON k.id = mk.keyword_id LEFT JOIN movie_link AS ml ON mk.movie_id = ml.movie_id LEFT JOIN person_info AS pi ON pi.info_type_id = k.id LEFT JOIN (SELECT pi.person_id, COUNT(DISTINCT pi.info_type_id) AS roles_count FROM person_info AS pi INNER JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE rt.id IN (1, 8, 7, 5) GROUP BY pi.person_id ) AS sub_person_roles ON pi.person_id = sub_person_roles.person_id LEFT JOIN aka_name AS an ON pi.person_id = an.person_id WHERE k.keyword IN ('murder', 'mystery', 'thriller') AND pi.info_type_id IN (70, 2, 75, 36, 50) GROUP BY k.keyword;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.movie_id) AS number_of_movies, rt.ROLE, MAX(p.info) AS latest_person_info, COUNT(DISTINCT cn.id) AS number_of_people_with_role FROM aka_title AS a JOIN movie_companies AS c ON a.movie_id = c.movie_id JOIN role_type AS rt ON rt.ROLE IN ('writer', 'miscellaneous crew', 'production designer', 'actress') JOIN person_info AS p ON p.info_type_id = rt.id JOIN char_name AS cn ON cn.name_pcode_nf IN ('N6361', 'F6326', 'W6356') WHERE a.note IN ('(UK) (reissue title)', '(Hong Kong: English title) (video title)', '(West Germany) (Berlin film festival title)') AND c.company_id IN ('1064', '133') AND c.company_type_id = '1' AND a.production_year >= 2000 GROUP BY rt.ROLE ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT ci.movie_id) AS count_movies, COUNT(DISTINCT ci.person_id) AS count_actors, SUM(CASE WHEN ct.kind = 'producer' THEN 1 ELSE 0 END) AS count_producer_companies, SUM(CASE WHEN ct.kind = 'distributor' THEN 1 ELSE 0 END) AS count_distributor_companies, COUNT(DISTINCT mk.keyword_id) AS count_unique_keywords FROM movie_info_idx mi_idx JOIN cast_info ci ON mi_idx.movie_id = ci.movie_id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_type ct ON ct.id = ci.role_id WHERE mi_idx.info_type_id = 1 AND ci.person_role_id IS NOT NULL AND ct.id IN (1, 4, 2) GROUP BY ct.kind;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN k.keyword = 'medical-emergency' THEN 1 ELSE 0 END) AS count_medical_emergency, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, COUNT(DISTINCT char_name.name) AS total_character_names FROM title AS t LEFT JOIN keyword AS k ON t.phonetic_code = k.phonetic_code LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN char_name ON char_name.surname_pcode = t.md5sum WHERE t.production_year BETWEEN 1990 AND 2000 AND cc.status_id IN (3, 4) AND (k.keyword = 'audi-rs5' OR k.keyword = 'second-chance' OR k.keyword = 'little-boy') GROUP BY t.production_year ORDER BY total_titles DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mk.movie_id IN ('18308', '18764', '15408', '17206', '12185') THEN 1 ELSE 0 END) AS count_specific_movies, COUNT(DISTINCT cn.surname_pcode) AS unique_character_surnames, MIN(t.title) AS earliest_alphabetical_movie_title FROM title AS t JOIN movie_keyword AS mk ON mk.movie_id = t.id JOIN char_name AS cn ON cn.id = mk.movie_id JOIN name AS n ON n.surname_pcode = cn.surname_pcode WHERE t.series_years = '1990-1991' OR t.phonetic_code IN ('P6523', 'D162', 'R5265', 'D2453', 'F6145') AND cn.surname_pcode IN ('L3414', 'O4353', 'W16', 'I5236') GROUP BY t.kind_id HAVING COUNT(DISTINCT t.id) > 10 ORDER BY total_movies DESC, average_production_year ASC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS num_people, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN mc.company_id IN (1160, 1112, 1110, 814, 903, 165) THEN 1 ELSE 0 END) AS num_company_specific_movies, COUNT(DISTINCT k.id) AS num_keywords FROM cast_info ci INNER JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN keyword k ON k.id = ci.person_id LEFT JOIN char_name cn ON cn.id = ci.person_id WHERE mc.company_type_id = 1 AND ci.person_role_id IS NOT NULL AND cn.name_pcode_nf IN ('L6521', 'C1456', 'O5423', 'I4253') AND (mc.company_id IN (1160, 1112, 1110, 814, 903, 165) OR mc.company_id IS NULL) GROUP BY rt.ROLE ORDER BY num_people DESC, num_movies DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.info::NUMERIC) AS average_movie_length, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM movie_companies AS mc JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 1 JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN name AS n ON n.id = ANY (ARRAY [9129, 3874, 7033, 7761, 6454]) WHERE mc.company_type_id IN (1, 2) AND mi.note LIKE '%(a few words)%' GROUP BY mc.company_id ORDER BY number_of_movies DESC, average_movie_length;
SELECT t.kind_id, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ci.person_id) AS total_actors_involved, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequels_linked, MAX(ci.nr_order) AS highest_cast_order FROM title t JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id GROUP BY t.kind_id HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY total_movies DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(cast_info.nr_order) AS average_order, SUM(CASE WHEN cn.surname_pcode IS NOT NULL THEN 1 ELSE 0 END) AS total_with_surname_code, MAX(cast_info.nr_order) AS max_order_in_cast, MIN(cast_info.nr_order) AS min_order_in_cast FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN char_name AS cn ON cn.imdb_id = mi_idx.movie_id JOIN cast_info ON cast_info.movie_id = mi_idx.movie_id WHERE it.info IN ('LD sound encoding', 'spouse', 'copyright holder') AND cn.name_pcode_nf = 'R1513' AND mi_idx.movie_id = 8488 GROUP BY it.info;
SELECT kt.kind AS kind_of_movie, AVG(mi_idx.info::NUMERIC) AS average_rating, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS number_of_black_and_white_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE t.production_year IN (1976, 1989, 1952, 1990, 1959, 1967) AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('color', 'black and white')) AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT pi.person_id) AS total_actors, COUNT(DISTINCT pi2.person_id) AS total_crew_members, COUNT(DISTINCT lt.id) AS total_link_types_used FROM cast_info ci JOIN kind_type kt ON ci.person_role_id = kt.id JOIN person_info pi ON ci.person_id = pi.person_id JOIN person_info pi2 ON ci.person_role_id = pi2.person_id AND pi2.info_type_id = ci.role_id JOIN link_type lt ON ci.role_id = lt.id WHERE ci.person_role_id IN (675, 613) AND pi.note NOT IN ('Jon C. Hopwood', 'CelebrityLoop.com', 'Adler and Associates Entertainment', 'Self.', 'ali aga') AND pi.info NOT IN ('15 August 1966', 'First president to live in the White House.', 'Rejowiec Fabryczny, Lubelskie, Poland') AND lt.id IN (15, 11, 8, 17) AND lt.link IN ('featured in', 'edited from', 'unknown link', 'spin off from', 'followed by') GROUP BY kt.kind;
SELECT it.info AS info_type, COUNT(mi.id) AS total_movie_info_entries, AVG(LENGTH(mi.info)) AS average_info_length, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS count_with_notes FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN keyword k ON k.id = ANY(ARRAY[8402, 763, 4258, 5648]) WHERE it.id IN (16, 97, 31, 104, 71) GROUP BY it.info ORDER BY total_movie_info_entries DESC, average_info_length DESC;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.id) AS total_unique_casts, SUM(CASE WHEN l.id IN (7, 8) THEN 1 ELSE 0 END) AS total_edited_or_spin_off_links, COUNT(DISTINCT cn.id) AS total_unique_characters, COUNT(*) AS total_titles FROM aka_title AS a JOIN complete_cast AS c ON a.movie_id = c.movie_id JOIN char_name AS cn ON cn.id = ANY(ARRAY[54785, 4119, 86783, 28862]) JOIN link_type AS l ON l.id = ANY(ARRAY[7, 8, 6, 3]) WHERE a.production_year IS NOT NULL AND c.status_id IN (3, 4) AND a.episode_of_id IS NOT NULL AND a.episode_of_id IN (15984, 4570, 5164, 247, 20256, 15791) AND l.link IN ('edited from', 'spin off') GROUP BY c.subject_id;
SELECT t.production_year, it.info AS genre, COUNT(DISTINCT t.id) AS total_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating FROM title t JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id JOIN cast_info ci ON t.id = ci.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id WHERE mi_idx.info_type_id = 101 AND it.info IN ('Horror', 'Action', 'Comedy', 'Drama', 'Sci-Fi', 'Thriller') GROUP BY t.production_year, it.info ORDER BY t.production_year ASC, average_rating DESC;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, SUM(CASE WHEN k.keyword = 'contest' THEN 1 ELSE 0 END) AS total_contest_keyword, SUM(CASE WHEN k.keyword = 'shield' THEN 1 ELSE 0 END) AS total_shield_keyword FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN cast_info ci ON ci.person_id = cn.id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN keyword k ON k.id = mk.keyword_id WHERE k.phonetic_code IN ('P2353', 'C2535', 'P6215') AND mk.keyword_id IN ('1071', '3527', '3569', '2390');
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT akn.person_id) AS unique_actors_with_alternate_names, SUM(CASE WHEN cn.name LIKE 'John %' THEN 1 ELSE 0 END) AS count_char_john FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN aka_name akn ON mk.movie_id = akn.person_id JOIN char_name cn ON akn.person_id = cn.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.note IS NULL AND cn.md5sum IN ('8d27c5ba7c1446502255ecfe6fec5a75', 'b314ed1fd1802d098b87fb46fbba3d62', 'b7658b3c5efeaba483fa8fb61d460be3') GROUP BY mi_idx.info_type_id;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_participants_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_participants_count, MAX(t.production_year) AS latest_movie_year, MIN(t.production_year) AS oldest_movie_year FROM movie_companies AS mc JOIN title AS t ON mc.movie_id = t.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN name AS n ON t.id = n.id WHERE mc.company_type_id = 1 GROUP BY mc.company_id ORDER BY number_of_movies DESC, average_rating DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS movie_count, AVG(CAST(mi.info AS DOUBLE PRECISION)) AS average_info_value, SUM(CAST(mi.info AS DOUBLE PRECISION)) AS total_info_value, COUNT(DISTINCT cc.subject_id) AS unique_subject_count, cct.kind AS cast_type_kind FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN kind_type kt ON kt.id = mi.movie_id JOIN complete_cast cc ON cc.movie_id = mi.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id WHERE kt.id IN ('3', '4') AND it.info IN ('LD subtitles', 'LD audio quality') AND cct.id = '3' AND kt.kind IN ('video movie', 'video game', 'tv mini series', 'episode') AND cct.kind IN ('complete+verified', 'complete') GROUP BY kt.kind, cct.kind;
SELECT kt.kind AS movie_type, MIN(at.title) AS example_movie, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.note LIKE '%(imdb display title)%' THEN 1 ELSE 0 END) AS imdb_display_title_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN movie_keyword mk ON at.movie_id = mk.movie_id JOIN movie_info mi ON at.movie_id = mi.movie_id WHERE at.production_year BETWEEN 1990 AND 2020 AND at.note LIKE '%(imdb display title)%' AND mi.movie_id IN ('931220', '926777', '925133') GROUP BY kt.kind HAVING COUNT(DISTINCT at.movie_id) > 10 ORDER BY total_movies_with_keywords DESC;
SELECT ct.kind AS cast_type, AVG(mi_idx.info::numeric) AS average_info_numeric, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT k.id) AS number_of_keywords, MAX(cn.name) AS largest_company_name FROM comp_cast_type AS ct JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = ct.id JOIN company_name AS cn ON cn.id = mi_idx.movie_id JOIN keyword AS k ON k.id = mi_idx.info_type_id JOIN movie_link AS ml ON ml.movie_id = mi_idx.movie_id JOIN role_type AS rt ON rt.id = ml.link_type_id WHERE cn.name_pcode_nf IN ('C252', 'T5252', 'D5213', 'B4242', 'K1253', 'E4261') AND rt.ROLE LIKE '%producer%' GROUP BY ct.kind ORDER BY average_info_numeric DESC;
SELECT ct.kind AS company_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ci.movie_id) AS number_of_movies, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_actors FROM company_type ct JOIN company_name cn ON ct.id = cn.id JOIN aka_title at ON cn.id = at.movie_id JOIN cast_info ci ON at.movie_id = ci.movie_id WHERE ct.kind IN ('production companies', 'distributors') AND ci.nr_order IN (11, 62, 22) AND cn.name_pcode_nf IN ('N6214', 'B4263') AND cn.md5sum IN ('ec9d8d7a9004a112bae37eeaa713f720', 'e3b51733585b9ffda062455d1c1d931a', '889e39831602fcefe7e09958d99eccf4', '38b6724efdb892c18b995c2eacc91c81', '3eb507f50c90ec123e409938f571725d') GROUP BY ct.kind;
SELECT cn.country_code, COUNT(DISTINCT cn.id) AS total_companies, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN lt.id = '11' THEN 1 ELSE 0 END) AS count_link_type_11, COUNT(DISTINCT mi.movie_id) AS total_movies, COUNT(CASE WHEN mi.info_type_id = '4' THEN 1 ELSE NULL END) AS count_info_type_4 FROM company_name cn JOIN movie_info mi ON cn.imdb_id = mi.movie_id LEFT JOIN link_type lt ON cn.id = lt.id GROUP BY cn.country_code ORDER BY total_companies DESC, average_imdb_id;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT cc.subject_id) AS total_subjects, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS total_sequels, SUM(CASE WHEN ml.link_type_id = 3 THEN 1 ELSE 0 END) AS total_remakes FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN char_name cn ON cn.id IN (6979, 93733, 25881, 73653) LEFT JOIN complete_cast cc ON cc.movie_id = t.id LEFT JOIN movie_link ml ON ml.movie_id = t.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT t.id) AS total_titles, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, COUNT(DISTINCT k.id) AS total_keywords, t.series_years, n.surname_pcode FROM name AS n INNER JOIN title AS t ON n.id = t.id LEFT JOIN keyword AS k ON k.id = t.id WHERE n.surname_pcode IN ('A424', 'A414') AND t.series_years LIKE '1993-____' AND (k.id = '74' OR k.id = '8451') GROUP BY t.series_years, n.surname_pcode ORDER BY total_actors DESC, average_production_year DESC;
SELECT t.production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS female_and_other_actors_count, it.info AS info_type, COUNT(DISTINCT t.id) FILTER (WHERE it.info = 'budget') AS number_of_movies_with_budget, COUNT(DISTINCT t.id) FILTER (WHERE it.info = 'LD digital sound') AS number_of_movies_with_ld_digital_sound FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN title t ON ci.movie_id = t.id JOIN info_type it ON ci.role_id = it.id GROUP BY t.production_year, it.info ORDER BY t.production_year DESC, it.info;
SELECT rt.ROLE, ct.kind, AVG(cast(chn.imdb_id as numeric)) AS avg_imdb_id, COUNT(chn.id) AS num_characters, SUM(chn.imdb_id) AS sum_imdb_id FROM char_name AS chn JOIN role_type AS rt ON chn.id = rt.id JOIN company_type AS ct ON rt.id = ct.id WHERE rt.ROLE = 'miscellaneous crew' AND ct.kind IN ('miscellaneous companies', 'special effects companies') GROUP BY rt.ROLE, ct.kind;
SELECT c.name AS company_name, c.country_code, rt.ROLE, COUNT(DISTINCT t.id) AS number_of_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_genres_assigned, COUNT(DISTINCT mi.info) AS unique_movie_info_entries FROM company_name AS c JOIN title AS t ON c.imdb_id = t.imdb_id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN role_type AS rt ON rt.id = mi.info_type_id WHERE rt.ROLE IN ('composer', 'guest', 'production designer') AND t.production_year BETWEEN 2000 AND 2023 AND c.country_code = 'US' GROUP BY c.name, c.country_code, rt.ROLE ORDER BY number_of_titles DESC, average_production_year DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT ci.person_id) AS total_actors, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM cast_info ci JOIN kind_type kt ON ci.movie_id = kt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE kt.kind IN ('episode', 'tv movie') AND ml.link_type_id IN (4, 13, 11, 6, 8, 3) AND mi_idx.movie_id IN (8354, 8579) GROUP BY kt.kind;
SELECT n.name AS actor_name, COUNT(ci.person_id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS total_distributions, COUNT(DISTINCT k.id) AS unique_keywords_used FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN title AS t ON ci.movie_id = t.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN keyword AS k ON t.id = k.id WHERE n.name IN ('Anderson, Adisa', 'Amer, Hammomi', 'Anderson, Franklyn J.') GROUP BY n.name ORDER BY total_movies DESC, average_production_year DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(n.imdb_id) AS average_imdb_id, SUM(ci.nr_order) AS total_order_sum, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT mi.movie_id) AS movies_with_info, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count FROM role_type rt JOIN cast_info ci ON rt.id = ci.role_id JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info mi ON ci.movie_id = mi.movie_id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE ci.nr_order IS NOT NULL AND mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating') AND ci.movie_id IN ('929798', '929796', '924886', '927401', '924550', '927661') AND ci.person_id IN ('1575', '1023', '1432', '1713') AND ml.linked_movie_id IN ('1915722', '1526520') AND n.gender IN ('M', 'F') GROUP BY rt.ROLE ORDER BY number_of_movies DESC;
SELECT cct.kind AS cast_type, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT t.id) AS movies_count, COUNT(DISTINCT k.id) AS unique_keywords, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN title t ON ci.movie_id = t.id JOIN keyword k ON t.id = k.id WHERE cct.kind IN ('cast', 'crew') AND ci.person_id IN (1316, 1630, 1608, 1595) AND k.id IN (2472, 5355, 7118) GROUP BY cct.kind;
SELECT COUNT(DISTINCT cn.id) AS num_companies, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN rt.ROLE = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.ROLE = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles, COUNT(DISTINCT n.id) AS num_actors, COUNT(DISTINCT t.id) AS num_titles FROM name AS n JOIN char_name AS chn ON n.name_pcode_nf = chn.name_pcode_nf JOIN role_type AS rt ON n.id = chn.id JOIN title AS t ON t.phonetic_code IN ('A1265', 'M3151', 'R5434') JOIN movie_companies AS mc ON mc.movie_id = t.id JOIN company_name AS cn ON cn.id = mc.company_id WHERE t.production_year BETWEEN 1990 AND 2000 AND chn.md5sum IN ('c8d3a477c4092e8d35d54ee4e2a854a7', '7887e4403fb219782fde01f150e22f05', 'b90077cfb2486002f9581b5cd2a1a04b', 'b6658816fc7029718e649600b2cc328e') GROUP BY t.production_year;
SELECT COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mk_cnt.keyword_count) AS avg_keywords_per_movie, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS count_similar_to_links, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(NULLIF(regexp_replace(mi_idx.info, '\D', '', 'g'), '')::NUMERIC) AS average_info_numeric, SUM(CASE WHEN k.phonetic_code IN ('M342', 'N2165') THEN 1 ELSE 0 END) AS count_specific_phonetic_codes FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id JOIN movie_companies AS mc ON ml.movie_id = mc.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN keyword AS k ON mk.keyword_id = k.id JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS mk_cnt ON mk.movie_id = mk_cnt.movie_id WHERE mi_idx.info_type_id = '100' AND mi_idx.info SIMILAR TO '%[0-9]{6,}%' AND (ml.movie_id IN ('11122', '14650', '11447', '7786', '14516') OR ml.id IN ('3768', '4002', '4548', '963', '430', '4309')) GROUP BY lt.link;
SELECT kt.kind, COUNT(DISTINCT at.movie_id) AS number_of_movies, COUNT(at.id) AS number_of_alt_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.episode_of_id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_episodes FROM aka_title at INNER JOIN comp_cast_type kt ON at.kind_id = kt.id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(mi.info AS DECIMAL)) AS average_movie_length, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_movies_with_specific_info, MIN(t.title) AS shortest_movie_title, MAX(t.title) AS longest_movie_title, COUNT(DISTINCT c.id) AS number_of_complete_cast_records FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN title t ON mi.movie_id = t.id LEFT JOIN complete_cast c ON t.id = c.movie_id WHERE ct.id = 3 GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 5;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(title.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT n.id) AS total_cast_members, MIN(title.title) AS earliest_movie_title FROM cast_info ci INNER JOIN name n ON ci.person_id = n.id INNER JOIN title ON ci.movie_id = title.id INNER JOIN movie_info_idx mii ON title.id = mii.movie_id WHERE mii.info LIKE '1000111100' OR mii.info LIKE '....0213.2' OR mii.info LIKE '.....8...2' GROUP BY title.kind_id HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY average_production_year DESC;
SELECT ct.kind AS company_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_since_2000 FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN company_type AS ct ON t.kind_id = ct.id WHERE ct.kind IN ('special effects companies', 'distributors') AND t.production_year IS NOT NULL GROUP BY ct.kind;
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) AS average_rating, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM kind_type kt JOIN movie_info mi ON mi.info_type_id = 4 JOIN movie_keyword mk ON mk.movie_id = mi.movie_id JOIN name n ON n.surname_pcode IN ('A43', 'A415', 'A451', 'A412') JOIN movie_link ml ON ml.movie_id = mk.movie_id WHERE kt.id IN (SELECT id FROM kind_type WHERE kind IN ('movie', 'tv series', 'video game', 'video movie', 'episode')) AND ml.linked_movie_id = 2405240 GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_num, SUM(CAST(CASE WHEN mi_idx.info LIKE '%1%' THEN 1 ELSE 0 END AS INTEGER)) AS count_info_with_1 FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id JOIN name n ON ml.movie_id = n.id WHERE n.md5sum IN ('801a5d533ecc2c88317db66319d4aad9', 'caa370cb4f3c3b62016775d613ce5575', '4fc8edf0bba0a30ce337c1c452a645f0') AND ml.linked_movie_id IN (1412141, 604005, 716090) AND mi_idx.info SIMILAR TO '%[0-9]%' AND mk.keyword_id IN ( SELECT id FROM keyword WHERE keyword IN ('wind-up-toy', 'money-in-title', 'suicide-pill') ) GROUP BY kt.kind ORDER BY total_movies_with_keywords DESC;
SELECT it.info AS info_type, COUNT(DISTINCT cn.id) AS unique_character_names, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS count_complete_status, SUM(CASE WHEN cc.status_id = '3' THEN 1 ELSE 0 END) AS count_incomplete_status, COUNT(DISTINCT lt.id) AS count_link_types FROM char_name AS cn JOIN complete_cast AS cc ON cn.id = cc.movie_id JOIN info_type AS it ON it.id = cn.imdb_index::integer JOIN link_type AS lt ON lt.id = cn.surname_pcode::integer WHERE cn.imdb_index IN ('10', '21') AND lt.id IN (13, 8, 5, 18) AND cc.status_id IN ('4', '3') GROUP BY it.info;
SELECT rt.ROLE AS role_type, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT ci.person_id) AS distinct_actors_count, SUM(CASE WHEN k.phonetic_code = 'D56' THEN 1 ELSE 0 END) AS keyword_D56_count, MIN(t.title) AS earliest_movie_title, MAX(t.production_year) AS latest_production_year, COUNT(DISTINCT k.id) AS distinct_keyword_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN title t ON ci.movie_id = t.id LEFT JOIN keyword k ON k.id = ANY(ARRAY[2148, 118, 3933, 2925]) WHERE rt.ROLE IN ('actor', 'actress', 'producer', 'director') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY rt.ROLE ORDER BY distinct_actors_count DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_order, SUM(case when pi.info_type_id = 27 then 1 else 0 end) AS num_actors_with_biography, MIN(mi.info) AS earliest_movie_date, MAX(mi.info) AS latest_movie_date, COUNT(DISTINCT mi.movie_id) AS movie_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = 27 JOIN movie_info mi ON ci.movie_id = mi.movie_id WHERE ci.role_id IN (SELECT id FROM role_type WHERE ROLE IN ('actor', 'actress')) AND mi.info_type_id = 3 GROUP BY rt.ROLE ORDER BY total_actors DESC, average_order;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT a_n.person_id) AS unique_actors, COUNT(DISTINCT m_c.movie_id) AS movies_produced, SUM(CASE WHEN m_c.company_id IN (379, 594, 23, 1262, 1213, 38) THEN 1 ELSE 0 END) AS movies_by_selected_companies FROM movie_info_idx AS mi_idx JOIN movie_companies AS m_c ON mi_idx.movie_id = m_c.movie_id JOIN aka_name AS a_n ON a_n.person_id = m_c.company_id WHERE mi_idx.info_type_id IN (100, 101, 99) AND m_c.id IN (4668, 2403) AND a_n.surname_pcode = 'C34' AND mi_idx.info SIMILAR TO '%(0|1|2|3|4|5|6|7|8|9)%' GROUP BY mi_idx.info_type_id;
SELECT AVG(ml_count.count) AS avg_movie_links, COUNT(DISTINCT an.person_id) AS distinct_person_count, SUM(CASE WHEN ml.link_type_id = '5' THEN 1 ELSE 0 END) AS total_sequel_links FROM movie_link AS ml JOIN (SELECT movie_id, COUNT(*) AS count FROM movie_link GROUP BY movie_id) AS ml_count ON ml.movie_id = ml_count.movie_id JOIN aka_name AS an ON ml.movie_id = an.person_id WHERE ml.link_type_id IN ('5', '11', '13', '17', '2', '1') GROUP BY ml.link_type_id;
SELECT kt.kind AS movie_kind, CASE WHEN ml.id IS NOT NULL THEN 'Part of series' ELSE 'Standalone' END AS series_status, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CASE WHEN mi_idx.info_type_id = 1 THEN mi_idx.info::FLOAT END) AS average_rating, AVG(CASE WHEN mi.info_type_id = 2 THEN mi.info::FLOAT END) AS average_budget FROM kind_type AS kt LEFT JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = 1 LEFT JOIN movie_info AS mi ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = 2 LEFT JOIN movie_link AS ml ON ml.movie_id = mi.movie_id LEFT JOIN movie_companies AS mc ON mc.movie_id = mi.movie_id WHERE kt.id IN (7, 2) GROUP BY kt.kind, series_status ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.movie_id) AS number_of_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS count_completed_status_4, SUM(CASE WHEN cc.status_id = '3' THEN 1 ELSE 0 END) AS count_completed_status_3 FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id GROUP BY kt.kind ORDER BY number_of_titles DESC;
SELECT cn.name AS company_name, k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT an.person_id) AS number_of_aka_names, AVG(cn.imdb_id) AS average_imdb_id_for_company FROM movie_keyword mk INNER JOIN keyword k ON mk.keyword_id = k.id INNER JOIN company_name cn ON cn.country_code = 'us' INNER JOIN aka_name an ON an.person_id != 0 WHERE mk.id IN (4493, 3974, 1711, 3754) AND mk.movie_id IN (18717, 12274, 9073) AND k.id IN (1749, 8745, 6590, 5243, 3691) GROUP BY cn.name, k.keyword ORDER BY number_of_movies DESC, number_of_aka_names DESC;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code IN ('[cshh]', '[jp]') THEN 1 ELSE 0 END) AS total_japanese_czech_movies, COUNT(DISTINCT t.title) AS unique_movie_titles, COUNT(DISTINCT cn.name) AS unique_company_names, MAX(t.episode_nr) AS highest_episode_number FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id LEFT JOIN company_name AS cn ON cn.name_pcode_nf IN ('Z1625', 'R431', 'V4535', 'L2353') WHERE kt.kind IN ('video movie', 'episode', 'movie', 'tv movie', 'video game') AND (t.episode_of_id = 34110 OR t.episode_nr IN (432, 50)) AND mi.id IN (7267112, 7268729, 7266379, 7269917, 7267091) GROUP BY kt.kind;
SELECT rt.ROLE, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS DOUBLE PRECISION)) AS average_rating, SUM(CASE WHEN mi.note IN ('(some dialogue)', '(only a few lines)', '(Original Version)', '(a few words)', '(a few lines)', '(English version)') THEN 1 ELSE 0 END) AS dialogue_mentions_count FROM movie_info_idx AS mi_idx JOIN movie_info AS mi ON mi_idx.movie_id = mi.movie_id JOIN person_info AS pi ON mi.movie_id = pi.info_type_id JOIN role_type AS rt ON pi.info_type_id = rt.id WHERE mi_idx.info_type_id = 3 AND mi.info_type_id IN (24, 36) AND rt.id IN ('8', '10', '3') AND rt.role IN ('costume designer', 'miscellaneous crew', 'writer', 'composer') GROUP BY rt.ROLE ORDER BY average_rating DESC, number_of_movies DESC;
SELECT ct.kind AS company_kind, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mk.movie_id) AS num_movies_with_keywords, COUNT(DISTINCT mc.movie_id) AS num_movies_by_company_type, COUNT(DISTINCT aka.name) AS unique_aka_names FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id AND it.info = 'rating' JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN movie_companies mc ON mk.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id LEFT JOIN aka_name aka ON aka.person_id = mc.company_id WHERE mk.keyword_id IN (2900, 3761, 2634) AND mc.company_type_id IN (SELECT id FROM company_type WHERE kind LIKE '%production%') AND aka.name_pcode_cf IN ('M65', 'S352', 'C64') GROUP BY ct.kind ORDER BY average_rating DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cc.movie_id) AS total_movies, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'budget') AS average_movie_budget, SUM(CAST(mi.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_movie_votes FROM company_type ct JOIN movie_companies mc ON mc.company_type_id = ct.id JOIN complete_cast cc ON cc.movie_id = mc.movie_id JOIN movie_link ml ON ml.movie_id = mc.movie_id JOIN movie_info mi ON mi.movie_id = mc.movie_id JOIN info_type it ON it.id = mi.info_type_id WHERE ct.kind IN ('distributors', 'special effects companies', 'production companies') AND cc.status_id IN (3, 4) AND mi.movie_id IN ('932270', '939910') AND mi.info IN ('Gujarati', 'Tagalog', 'French', 'Portuguese') GROUP BY ct.kind ORDER BY total_movies DESC, average_movie_budget DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(CAST(ci.nr_order AS DECIMAL)) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS total_actors, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, COUNT(DISTINCT n.id) AS total_directors FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN kind_type kt ON t.kind_id = kt.id JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN name n ON ci.person_id = n.id AND rt.role = 'director' WHERE kt.id IN (6, 7) AND rt.role IN ('actor', 'actress', 'director') AND t.series_years LIKE '____-____' GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT cn.id) AS total_actors, AVG(mi.info::NUMERIC) AS average_rating, SUM(CASE WHEN cn.name LIKE 'A%' THEN 1 ELSE 0 END) AS actors_with_A, COUNT(DISTINCT comp.id) AS total_companies_involved, COUNT(DISTINCT kw.id) AS total_keywords_used FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN kind_type kt ON it.id = kt.id JOIN char_name cn ON cn.id = mi.movie_id JOIN company_name comp ON comp.imdb_id = mi.movie_id JOIN keyword kw ON kw.id = mi.movie_id WHERE it.id IN (107, 78, 62, 5, 113, 20) AND comp.name IN ('Alex Wolf & Eugen Illés', 'Total Film Home Entertainment', 'Pablo Distribuzione') AND comp.md5sum IN ('e4f3cb7948efaa2189b8433a5d0c2e5c', '7ca5629b21d0a13cc0a01264df7fa8e5') AND mi.info_type_id = it.id AND mi.info ~ '^\d+(\.\d+)?$' GROUP BY kt.kind;
SELECT AVG(mc_count.count_movies) AS average_movies_per_company, SUM(mc_count.budget_movies) AS total_budget_movies, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT rt.id) AS total_roles FROM (SELECT mc.company_id, COUNT(mc.movie_id) AS count_movies, SUM(CASE WHEN ct.kind = 'Budget' THEN 1 ELSE 0 END) AS budget_movies FROM movie_companies AS mc JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id GROUP BY mc.company_id ) AS mc_count JOIN movie_companies AS mc ON mc_count.company_id = mc.company_id JOIN role_type AS rt ON rt.id IN ('10', '3', '11', '5') GROUP BY rt.id;
SELECT pi.person_id, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS number_of_alias_roles, COUNT(DISTINCT pi.info_type_id) AS distinct_info_types FROM person_info pi JOIN cast_info ci ON pi.person_id = ci.person_id JOIN company_type ct ON ci.role_id = ct.id WHERE ci.person_id IN (1575, 1003, 1034, 1127, 1520, 1048) AND ci.note SIMILAR TO '%(\(pelotari\)|\(as [^)]+\)|\(2011\))%' GROUP BY pi.person_id ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT p.person_id) AS total_persons_involved, COUNT(DISTINCT c.company_id) AS total_companies_involved, SUM(CASE WHEN k.keyword = 'sherlock-holmes' THEN 1 ELSE 0 END) AS sherlock_holmes_keyword_count, MAX(t.production_year) AS latest_movie_year, MIN(t.production_year) AS oldest_movie_year FROM title AS t JOIN movie_companies AS c ON t.id = c.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN keyword AS k ON k.id = ANY(ARRAY[4287, 1968]) JOIN person_info AS p ON p.info_type_id = ANY(ARRAY[34, 28, 32, 33]) JOIN link_type AS lt ON lt.id = ANY(ARRAY[4821, 4781, 1175]) AND lt.link IN ('spoofs', 'featured in', 'edited from') WHERE t.kind_id != 0 GROUP BY t.kind_id;
SELECT cn.name AS character_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_sequels, MAX(pi.info) AS latest_actor_information FROM char_name cn JOIN cast_info ci ON cn.id = ci.person_role_id JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE cn.surname_pcode IN ('A', 'T61', 'E153', 'A13', 'C2', 'B6353') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') GROUP BY cn.name;
SELECT kt.kind AS movie_type, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS movie_count, SUM(mi.info::integer) AS total_info_numeric, COUNT(DISTINCT c.person_id) AS unique_actors_count FROM aka_title a JOIN kind_type kt ON a.kind_id = kt.id JOIN movie_info_idx mi ON a.movie_id = mi.movie_id JOIN movie_keyword mk ON a.movie_id = mk.movie_id JOIN cast_info c ON a.movie_id = c.movie_id WHERE a.production_year BETWEEN 1990 AND 2000 AND mk.keyword_id IN (780, 3464, 2349, 1994, 1285, 705) AND mi.movie_id IN (13634, 18372, 13503, 18944, 19411, 8878) AND mi.info SIMILAR TO '[0-9]+' AND c.role_id = 1 GROUP BY kt.kind ORDER BY movie_count DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE k.keyword IN ('graffiti', 'goblet') AND n.name LIKE '%a%' GROUP BY cct.kind ORDER BY total_actors DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS total_composer_roles FROM name n JOIN aka_name ak ON n.id = ak.person_id JOIN role_type rt ON ak.id = rt.id JOIN title t ON ak.id = t.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_link ml ON t.id = ml.movie_id JOIN keyword k ON mi_idx.id = k.id JOIN company_type ct ON ml.id = ct.id WHERE t.production_year BETWEEN 1990 AND 2020 AND k.phonetic_code IN ('W2365', 'G5235', 'D26') AND ct.kind IN ('distributors', 'miscellaneous companies') AND mi_idx.info LIKE '%...0..0223%' GROUP BY t.kind_id;
SELECT ct.kind AS company_type, kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS num_lead_roles, COUNT(DISTINCT cn.id) AS num_unique_characters FROM movie_companies AS mc JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id JOIN kind_type AS kt ON kt.kind = 'movie' JOIN cast_info AS ci ON mc.movie_id = ci.movie_id JOIN char_name AS cn ON cn.id = ci.person_id WHERE mc.company_id IN (1227, 1142) AND cn.surname_pcode IN ('B62', 'C534', 'D6354') GROUP BY ct.kind, kt.kind ORDER BY num_movies DESC;
SELECT COUNT(DISTINCT cn.id) AS character_count, COUNT(DISTINCT mc.movie_id) AS movie_count, COUNT(DISTINCT mc.company_id) AS company_count, AVG(kw.id) AS average_keyword_id, SUM(mc.company_type_id) AS total_company_types FROM char_name AS cn INNER JOIN movie_companies AS mc ON cn.id = mc.company_id INNER JOIN keyword AS kw ON kw.id = mc.movie_id GROUP BY mc.company_type_id ORDER BY character_count DESC, movie_count DESC;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(t.episode_nr) AS total_episodes, k.keyword, gender FROM name AS n JOIN title AS t ON t.id = n.id JOIN keyword AS k ON k.id = t.id WHERE n.gender = 'm' AND t.production_year BETWEEN 1990 AND 2020 AND k.keyword IN ('string-of-beads', 'atm-card', 'based-on-sketch-comedy', 'skeleton-in-a-closet', 'rugged-terrain', 'reference-to-zorro') GROUP BY k.keyword, n.gender ORDER BY total_actors DESC, average_production_year DESC;
SELECT c.name AS company_name, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, SUM(CASE WHEN lt.id = 6 THEN 1 ELSE 0 END) AS number_of_features FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN company_name AS c ON c.imdb_id = t.imdb_id JOIN link_type AS lt ON lt.id = t.kind_id WHERE k.keyword IN ('lifting-someone-into-the-air', 'switzerland', 'italian-food') AND c.name IN ('Funvision', 'Tentacle Films', 'Freaks') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY c.name ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS total_movies, AVG(ak.production_year) AS average_production_year, SUM(CASE WHEN ak.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_us_titles, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT n.id) AS number_of_contributors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS ak ON ml.movie_id = ak.movie_id JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id JOIN name AS n ON ak.id = n.id WHERE ak.title IS NOT NULL AND n.gender IN ('m', 'f') AND lt.id IN (3, 6) GROUP BY lt.LINK ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT an.person_id) AS number_of_persons, COUNT(k.id) AS total_keyword_mentions FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN aka_name AS an ON mk.movie_id = an.person_id WHERE k.keyword IN ('money-tree', 'reference-to-moby-dick', 'camp', 'summons') GROUP BY an.person_id;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_casts, COUNT(DISTINCT cn.id) AS number_of_actors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.status_id = cct.id LEFT JOIN char_name AS cn ON cc.subject_id = cn.id WHERE mc.movie_id IN (27359, 1639517, 1663098) AND mc.company_id IN (SELECT company_id FROM movie_companies WHERE company_type_id IN (1, 2)) GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 1 ORDER BY number_of_movies DESC, average_rating DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT cc.movie_id) AS num_movies, AVG(mi.info_type_id) AS avg_info_type_id, SUM(CASE WHEN mi.info = 'Spanish' THEN 1 ELSE 0 END) AS num_spanish_movies, SUM(CASE WHEN mi.info = 'Kazakh' THEN 1 ELSE 0 END) AS num_kazakh_movies, SUM(CASE WHEN mi.info = 'Hebrew' THEN 1 ELSE 0 END) AS num_hebrew_movies, COUNT(DISTINCT pi.person_id) AS num_people, AVG(pi.info_type_id) AS avg_person_info_type_id FROM link_type lt LEFT JOIN complete_cast cc ON lt.id = cc.status_id LEFT JOIN movie_info mi ON cc.movie_id = mi.movie_id LEFT JOIN person_info pi ON cc.subject_id = pi.person_id WHERE cc.status_id IN (3, 4) AND mi.id IN (7269695, 7270501) GROUP BY lt.LINK;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT a.movie_id) AS total_movies, COUNT(DISTINCT n.id) AS total_unique_actors, SUM(CASE WHEN c.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified, MAX(a.episode_nr) AS max_episode_number FROM aka_title AS a JOIN comp_cast_type AS c ON a.kind_id = c.id JOIN name AS n ON a.id = n.id WHERE a.production_year BETWEEN 1980 AND 2000 AND a.kind_id = 6 AND c.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY a.kind_id HAVING COUNT(DISTINCT n.id) > 10;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, COUNT(DISTINCT ml.id) AS number_of_related_links, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_contributors, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_contributors FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN name n ON mi.movie_id = n.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') AND ml.link_type_id = (SELECT id FROM link_type WHERE link = 'edited from') AND mi.id IN ('7270548', '7266456', '7269706') GROUP BY ct.kind ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT rt.ROLE AS role_type, AVG(name.imdb_id) AS average_imdb_id, SUM(case when name.gender = 'M' then 1 else 0 end) AS number_of_male_actors, SUM(case when name.gender = 'F' then 1 else 0 end) AS number_of_female_actors, COUNT(DISTINCT ci.movie_id) AS number_of_movies, MAX(title.production_year) AS latest_movie_year, MIN(title.production_year) AS earliest_movie_year, AVG(title.production_year) AS average_movie_year FROM cast_info ci JOIN name ON ci.person_id = name.id JOIN role_type rt ON ci.role_id = rt.id JOIN title ON ci.movie_id = title.id WHERE ci.person_role_id IN (541, 657, 1059) AND name.name_pcode_cf IN ('A4545', 'A4135', 'A242') AND name.surname_pcode IN ('A42', 'A456', 'A432', 'A426', 'A461') GROUP BY rt.ROLE ORDER BY number_of_movies DESC;
SELECT rt.role, COUNT(DISTINCT n.id) AS number_of_people, AVG(t.production_year) AS average_production_year, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN mi.info = 'Cantonese' THEN 1 ELSE 0 END) AS cantonese_movies, SUM(CASE WHEN mi.info = 'Polish' THEN 1 ELSE 0 END) AS polish_movies, SUM(CASE WHEN mi.info = 'Russian' THEN 1 ELSE 0 END) AS russian_movies, SUM(CASE WHEN mi.info = 'Vietnamese' THEN 1 ELSE 0 END) AS vietnamese_movies, SUM(CASE WHEN mi.info = 'Faroese' THEN 1 ELSE 0 END) AS faroese_movies, SUM(CASE WHEN mi.info = 'Catalan' THEN 1 ELSE 0 END) AS catalan_movies FROM role_type rt JOIN movie_companies mc ON mc.company_type_id = rt.id JOIN title t ON mc.movie_id = t.id JOIN name n ON n.id = mc.company_id JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = '4' WHERE rt.id = '8' AND rt.role = 'miscellaneous crew' GROUP BY rt.role;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, SUM(CASE WHEN cn.country_code = '[sd]' THEN 1 ELSE 0 END) AS sudanese_company_movies, SUM(CASE WHEN cn.country_code = '[dz]' THEN 1 ELSE 0 END) AS algerian_company_movies, SUM(CASE WHEN cn.country_code = '[dm]' THEN 1 ELSE 0 END) AS dominican_company_movies, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN movie_info_idx AS mi_votes ON mi_idx.movie_id = mi_votes.movie_id AND mi_votes.info_type_id = 41 JOIN company_name AS cn ON mi_idx.movie_id = cn.imdb_id LEFT JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE mi_idx.info_type_id IN (112, 72) AND kt.id IN (2, 1, 3) GROUP BY kt.kind;
SELECT cty.kind AS company_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN pi.info LIKE '%England, UK' THEN 1 ELSE 0 END) AS count_uk_actors FROM cast_info ci JOIN person_info pi ON ci.person_id = pi.person_id JOIN company_type cty ON pi.info_type_id = cty.id WHERE cty.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY cty.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ci.person_id) AS total_actors, rt.role AS role, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT cc.id) AS total_complete_cast FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN company_name cn ON cn.imdb_id = t.imdb_id LEFT JOIN complete_cast cc ON t.id = cc.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND kt.kind IN ('movie', 'tv series') AND rt.role IN ('producer', 'composer', 'actress', 'writer', 'costume designer', 'cinematographer') AND cc.status_id IN (3, 4) GROUP BY kt.kind, rt.role ORDER BY total_movies DESC, average_production_year DESC, total_actors DESC, total_companies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, SUM(CASE WHEN k.keyword = 'disco-ball' THEN 1 ELSE 0 END) AS disco_ball_keyword_count, SUM(CASE WHEN k.keyword = 'bandana' THEN 1 ELSE 0 END) AS bandana_keyword_count, STRING_AGG(DISTINCT ct.kind, ', ') AS involved_company_types FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN kind_type kt ON kt.id = mi.info_type_id JOIN movie_info mii ON mii.movie_id = mi.movie_id JOIN link_type lt ON lt.id = mi_idx.id JOIN keyword k ON k.id = mi_idx.id JOIN company_type ct ON ct.id = mi_idx.id WHERE mi.id IN ('7268657', '7271065', '7267731') AND mi.movie_id IN ('924506', '925955', '929745', '938512', '930430') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND mi_idx.info SIMILAR TO '(%...[0-9]*[0-9].[0-9]*[0-9]%)' GROUP BY kt.kind;
SELECT CT.kind AS company_type, COUNT(DISTINCT ML.movie_id) AS total_movies_linked, AVG(CAST(MI.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN ML.linked_movie_id IN ('583610', '1639457', '20479', '2056353', '346879') THEN 1 ELSE 0 END) AS specific_links_count FROM movie_link ML JOIN movie_info MI ON ML.movie_id = MI.movie_id AND MI.info_type_id = '4' JOIN company_name CN ON CN.imdb_id = ML.movie_id JOIN company_type CT ON CN.id = CT.id WHERE ML.link_type_id IN ('1', '2') GROUP BY CT.kind HAVING COUNT(DISTINCT ML.movie_id) > 10 ORDER BY average_rating DESC;
SELECT avg(CAST(mi_idx.info AS FLOAT)) AS average_rating, count(DISTINCT mk.keyword_id) AS number_of_keywords, count(DISTINCT an.id) AS number_of_aka_names FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN aka_name AS an ON an.person_id = mk.movie_id WHERE mi_idx.info_type_id IN (100, 101, 99) AND mk.movie_id IN (18864, 8952, 12152) AND an.surname_pcode IN ('M635', 'P14', 'A15', 'A263', 'D1', 'A261') GROUP BY mi_idx.movie_id;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT char_name.id) AS number_of_unique_char_names FROM movie_companies mc JOIN aka_title aka ON mc.movie_id = aka.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id JOIN char_name ON cn.id = char_name.id WHERE ct.kind NOT IN ('subsidiary', 'division') AND char_name.id IN ('12861', '46459', '54418', '37871', '75348') AND aka.production_year BETWEEN 2000 AND 2010 GROUP BY ct.kind ORDER BY number_of_movies DESC, average_production_year;
SELECT kt.kind, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_complete_status_4, COUNT(DISTINCT pi.person_id) AS unique_persons_with_info FROM kind_type kt LEFT JOIN movie_link ml ON kt.id = ml.link_type_id LEFT JOIN complete_cast cc ON ml.movie_id = cc.movie_id LEFT JOIN cast_info ci ON ml.movie_id = ci.movie_id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ml.movie_id IN (50, 8753, 6613, 11172, 11020, 10583) AND ml.link_type_id IN (4, 13, 9) AND cc.subject_id = 1 AND cc.status_id IN (4, 3) AND pi.note IN ('matt-282', 'K-maf', '2Fun', 'Todd Adelman') AND pi.id IN (4001, 3574) AND ci.person_role_id IN (533, 546, 1445) GROUP BY kt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS avg_female_participation, SUM(CASE WHEN it.info = 'article' THEN 1 ELSE 0 END) AS num_articles, SUM(CASE WHEN it.info = 'printed media reviews' THEN 1 ELSE 0 END) AS num_media_reviews FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN name AS n ON mc.company_id = n.id JOIN person_info AS pi ON n.id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY num_movies DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS avg_rating, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN lt.link = 'spoofed in' THEN 1 ELSE 0 END) AS total_spoofs, SUM(CASE WHEN lt.link = 'remake of' THEN 1 ELSE 0 END) AS total_remakes, cn.name AS company_name, cn.country_code, it.info AS info_type, EXTRACT(YEAR FROM NOW()) - AVG(t.production_year) AS avg_years_since_release FROM movie_info_idx AS mi_idx JOIN title AS t ON t.id = mi_idx.movie_id LEFT JOIN company_name AS cn ON cn.imdb_id = t.id JOIN movie_info_idx AS mi_idx_link ON mi_idx_link.movie_id = t.id JOIN link_type AS lt ON mi_idx_link.info_type_id = lt.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND mi_idx.info > '5.0' AND t.production_year BETWEEN 2000 AND EXTRACT(YEAR FROM NOW()) AND (lt.link = 'spoofed in' OR lt.link = 'remake of') GROUP BY cn.name, cn.country_code, it.info ORDER BY avg_rating DESC, total_movies DESC;
SELECT kt.kind AS movie_kind, AVG(alt.production_year) AS average_production_year, COUNT(DISTINCT alt.movie_id) AS number_of_movies, COUNT(DISTINCT mi.movie_id) AS number_of_movies_with_info, SUM(CASE WHEN rt.id = 1 THEN 1 ELSE 0 END) AS number_of_directors, COUNT(DISTINCT lt.id) AS number_of_link_types FROM aka_title alt JOIN kind_type kt ON alt.kind_id = kt.id JOIN movie_info mi ON alt.movie_id = mi.movie_id LEFT JOIN role_type rt ON mi.info_type_id = rt.id LEFT JOIN link_type lt ON mi.info_type_id = lt.id WHERE alt.phonetic_code IN ('W6', 'R2323', 'M6362', 'H4236', 'L4', 'G5214') AND rt.id IN ('10', '1', '2', '8', '3', '12') AND lt.link IN ('spin off from', 'similar to', 'spin off', 'remake of', 'edited from', 'features') AND lt.id IN ('7', '16', '5', '8', '13') AND alt.production_year IS NOT NULL GROUP BY kt.kind;
SELECT ct.kind AS company_type, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.id) AS average_movie_info_id, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS count_of_notes FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN company_type ct ON ct.id::text = mi.info WHERE mi.info_type_id IN (80, 15, 107, 26, 82) AND it.info LIKE 'crazy credits' AND mi_idx.id IN (2000, 184) AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind, it.info ORDER BY number_of_movies DESC, average_movie_info_id;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT pi.person_id) AS total_actors FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN movie_info mi ON ci.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'actor') GROUP BY kt.kind HAVING COUNT(DISTINCT ci.movie_id) > 10 ORDER BY total_movies DESC;
SELECT CN.name AS company_name, COUNT(DISTINCT AN.id) AS total_aliases, AVG(AT.production_year) AS average_production_year, SUM(CASE WHEN N.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN N.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name CN JOIN aka_title AT ON CN.id = AT.movie_id JOIN aka_name AN ON AN.person_id = AT.movie_id JOIN name N ON N.id = AN.person_id WHERE CN.country_code = 'US' AND AT.production_year >= 2000 AND N.gender IN ('M', 'F') GROUP BY CN.name;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, SUM(CASE WHEN k.keyword = 'poisoning' THEN 1 ELSE 0 END) AS count_poisoning_keyword, SUM(CASE WHEN k.keyword = 'law-student' THEN 1 ELSE 0 END) AS count_law_student_keyword, MAX(t.title) AS latest_movie_title FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN company_type AS ct ON ct.id = mi.info_type_id WHERE t.production_year BETWEEN 2000 AND 2010 AND ct.kind IN ('production companies', 'distributors') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT AVG(ml.link_type_id) AS average_link_type, COUNT(DISTINCT cn.id) AS total_unique_characters, SUM(CASE WHEN mi.info_type_id = 2 THEN 1 ELSE 0 END) AS total_drama_movies, MIN(cn.name) AS first_character_name FROM char_name cn JOIN movie_link ml ON cn.imdb_id = ml.movie_id JOIN movie_info mi ON ml.movie_id = mi.movie_id WHERE cn.imdb_index = 'tt' AND mi.info LIKE '%Drama%' GROUP BY cn.imdb_id HAVING COUNT(DISTINCT ml.id) > 3;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS number_of_movies, cct.kind, k.keyword, SUM(CASE WHEN akat.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, SUM(CASE WHEN akat.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title akat JOIN comp_cast_type cct ON akat.kind_id = cct.id JOIN keyword k ON k.id IN (58, 8642, 3881, 5552, 5846) WHERE akat.production_year > 1990 AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind, k.keyword ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT rt.role, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS movie_count FROM role_type rt JOIN movie_info_idx mii ON rt.id = mii.info_type_id JOIN title t ON mii.movie_id = t.id JOIN info_type it ON mii.info_type_id = it.id WHERE it.info = 'LD contrast' AND it.id IN ('74', '69') GROUP BY rt.role ORDER BY movie_count DESC, average_production_year DESC;
SELECT mi.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mii.info::numeric) AS average_movie_length, SUM(CASE WHEN lt.LINK = 'followed by' THEN 1 ELSE 0 END) AS sequel_count FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id LEFT JOIN link_type lt ON lt.id = mii.info_type_id WHERE mi.info_type_id = 4 AND mii.movie_id IN ('19615', '11115', '18537', '8949', '8884') AND lt.LINK IN ('similar to', 'features', 'followed by', 'alternate language version of') GROUP BY genre ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT cn.country_code, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN mk.id = '4862' THEN 1 ELSE 0 END) AS keyword_4862_count, SUM(CASE WHEN mk.id = '1011' THEN 1 ELSE 0 END) AS keyword_1011_count, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = ci.movie_id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE ci.nr_order IN (2, 58, 40) AND ci.movie_id IN ('2013877', '811916', '1817302', '2485261', '163381') AND ml.movie_id IN ('19640', '12262', '11217', '7766', '14578', '16385') GROUP BY cn.country_code;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS num_movies, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies, AVG(kw.keyword_count) AS avg_keywords_per_movie, SUM(case when ct.kind LIKE '%Ltd%' THEN 1 ELSE 0 END) AS num_ltd_companies, SUM(case when ct.kind LIKE '%Inc%' THEN 1 ELSE 0 END) AS num_inc_companies FROM movie_link AS ml INNER JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id ) AS kw ON ml.movie_id = kw.movie_id LEFT JOIN ( SELECT mc.movie_id, ct.kind FROM movie_companies AS mc INNER JOIN company_type AS ct ON mc.company_type_id = ct.id ) AS ct ON ml.movie_id = ct.movie_id GROUP BY lt.LINK ORDER BY num_movies DESC, avg_keywords_per_movie DESC;
SELECT ct.kind AS company_kind, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT c.id) AS number_of_casts, SUM(CASE WHEN mc.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_movie_companies FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 JOIN complete_cast c ON mc.movie_id = c.movie_id WHERE ct.kind IN ('production companies', 'distributors') AND mi_idx.movie_id IN ('30178', '12242', '20540', '27059', '12152', '12149') AND mi_idx.info::numeric >= 1 AND mi_idx.info::numeric <= 10 GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_numeric.info::NUMERIC) AS average_budget, SUM(CASE WHEN mc.company_id = '1187' THEN 1 ELSE 0 END) AS movies_with_company_1187, SUM(CASE WHEN mc.company_id = '1024' THEN 1 ELSE 0 END) AS movies_with_company_1024, COUNT(DISTINCT ml.link_type_id) AS distinct_link_types FROM movie_companies AS mc JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN kind_type AS kt ON mi.info_type_id = kt.id LEFT JOIN movie_link AS ml ON mc.movie_id = ml.movie_id LEFT JOIN movie_info AS mi_numeric ON mc.movie_id = mi_numeric.movie_id AND mi_numeric.info_type_id = ( SELECT id FROM info_type WHERE info = 'budget' ) WHERE mc.company_id IN ('1187', '1024', '1009', '1239', '1034') AND mi.info_type_id IN ( SELECT id FROM info_type WHERE info = 'budget' ) AND mc.movie_id IN ('18864', '18945') GROUP BY kt.kind;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, SUM(p.info_type_id) AS total_info_types, COUNT(DISTINCT ch.id) AS total_characters, MAX(ci.nr_order) AS max_cast_order FROM aka_title AS a JOIN cast_info AS ci ON a.movie_id = ci.movie_id JOIN char_name AS ch ON ci.person_id = ch.id JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id JOIN person_info AS p ON ci.person_id = p.person_id WHERE a.production_year > 1899 GROUP BY a.movie_id ORDER BY total_movies DESC, average_production_year;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS num_companies, COUNT(DISTINCT ci.person_id) AS num_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN mk.keyword_id = '5000' THEN 1 ELSE 0 END) AS count_keyword_5000, SUM(CASE WHEN mk.keyword_id = '7107' THEN 1 ELSE 0 END) AS count_keyword_7107, COUNT(DISTINCT mk.movie_id) AS num_movies_with_keywords FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN movie_keyword AS mk ON cn.id = mk.movie_id LEFT JOIN cast_info AS ci ON ci.movie_id = mk.movie_id WHERE cn.country_code IS NOT NULL AND ci.note NOT LIKE '%(segment "%' AND ci.note NOT LIKE '%(1998)%' GROUP BY ct.kind ORDER BY num_companies DESC, num_people DESC;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT n.id) AS number_of_cast_members, COUNT(DISTINCT cc.subject_id) AS number_of_cast_types, AVG(cc.status_id) AS average_status_id FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id WHERE cc.status_id = 4 AND t.production_year > 1990 GROUP BY t.kind_id ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT aka.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, SUM(CASE WHEN aka.title = 'Sea of Love' THEN 1 ELSE 0 END) AS count_sea_of_love, SUM(CASE WHEN aka.title = 'Anna of Rhodes' THEN 1 ELSE 0 END) AS count_anna_of_rhodes, SUM(CASE WHEN aka.title = 'The Last Days on Earth' THEN 1 ELSE 0 END) AS count_last_days_on_earth, SUM(CASE WHEN aka.title = 'Hammer Session!' THEN 1 ELSE 0 END) AS count_hammer_session, SUM(CASE WHEN aka.title = 'Bank Vault 713' THEN 1 ELSE 0 END) AS count_bank_vault_713 FROM aka_title AS aka JOIN kind_type AS kt ON aka.kind_id = kt.id LEFT JOIN movie_keyword AS mk ON aka.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT cc.kind AS cast_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_nr_order, COUNT(DISTINCT cn.id) AS number_of_companies, cn.country_code, SUM(CASE WHEN pi.info_type_id = 31 THEN 1 ELSE 0 END) AS count_of_info_type_31, MIN(pi.info) AS earliest_info FROM cast_info ci JOIN comp_cast_type cc ON ci.person_role_id = cc.id JOIN company_name cn ON cn.imdb_id = ci.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.nr_order IS NOT NULL AND cn.country_code IN ('[xyu]', '[se]', '[my]') AND pi.info_type_id = 31 GROUP BY cc.kind, cn.country_code ORDER BY number_of_movies DESC;
SELECT rt.ROLE, COUNT(*) AS role_count, AVG(ci.nr_order) AS average_order, SUM(ci.nr_order) AS total_order, MAX(ci.nr_order) AS max_order, MIN(ci.nr_order) AS min_order FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN movie_info mi ON ci.movie_id = mi.movie_id JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE mk.keyword_id IN (3544, 4170, 355, 3797, 2901) AND ci.movie_id IN (14730, 8894, 18741, 18773, 15355, 12280, 2069434, 2317758, 2267299) GROUP BY rt.ROLE ORDER BY role_count DESC, average_order;
SELECT kt.kind, AVG(t.production_year) AS average_production_year, COUNT(*) AS total_titles, COUNT(DISTINCT t.id) AS unique_titles, SUM(CASE WHEN at.name_pcode_nf IN ('E4525', 'K2436', 'T1415', 'R162', 'L6252', 'J1526') THEN 1 ELSE 0 END) AS count_aka_names, COUNT(DISTINCT at.person_id) AS distinct_persons_involved FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_name at ON t.id = at.person_id WHERE kt.kind IN ('video movie', 'episode', 'video game', 'tv series', 'movie') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT cct.kind, COUNT(*) AS count_cast_types, AVG(cn.imdb_id) AS average_imdb_id, SUM(cn.imdb_id) AS sum_imdb_id, cn.country_code, COUNT(DISTINCT cn.name) AS distinct_company_names, COUNT(DISTINCT mi.movie_id) AS distinct_movies FROM comp_cast_type cct JOIN company_name cn ON cct.id = cn.id JOIN movie_info_idx mi ON cn.id = mi.info_type_id WHERE cn.country_code IN ('[cu]', '[se]', '[dk]', '[ar]', '[al]') AND cn.name_pcode_nf IN ('M2531', 'A6254', 'M6341', 'K3256') AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind, cn.country_code ORDER BY count_cast_types DESC;
SELECT AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT at.movie_id) AS total_movies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS total_distributors, COUNT(DISTINCT pi.person_id) AS total_people, AVG(CASE WHEN pi.info_type_id = 17 THEN CAST(pi.info AS INTEGER) ELSE NULL END) AS avg_salary FROM movie_companies mc JOIN aka_title at ON mc.movie_id = at.movie_id JOIN person_info pi ON mc.movie_id = pi.person_id JOIN keyword k ON at.id = k.id WHERE mc.company_id IN (643, 838, 877) AND pi.info_type_id IN (17, 25, 35, 28, 26) AND at.kind_id IN (SELECT id FROM comp_cast_type WHERE kind IN ('complete+verified', 'cast', 'crew', 'complete')) AND k.id IN (2792, 548, 6394, 3958) GROUP BY mc.company_type_id;
SELECT t.title AS original_title, COUNT(DISTINCT at.id) AS number_of_alternative_titles, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distribution_companies, COUNT(DISTINCT n.id) AS number_of_unique_actors FROM title t LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 100 LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN name n ON n.id IN ('7238', '8193', '11843', '6809', '6894', '6651') LEFT JOIN movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = 3 WHERE t.production_year BETWEEN 1990 AND 2000 AND n.id IS NOT NULL AND mi.note IS NOT NULL GROUP BY t.title ORDER BY average_movie_rating DESC LIMIT 10;
SELECT kt.kind AS movie_type, COUNT(t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) FILTER (WHERE ct.kind = 'special effects companies') AS special_effects_companies_involved, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN aka_name AS an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND kt.kind IN ('tv movie', 'video movie', 'tv mini series', 'movie') GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(ak.production_year) AS average_production_year, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN ci.person_role_id IN (444, 927, 278, 35) THEN 1 ELSE 0 END) AS specific_person_roles FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id JOIN complete_cast AS cc ON cn.id = cc.movie_id JOIN aka_title AS ak ON cc.movie_id = ak.movie_id JOIN cast_info AS ci ON ak.movie_id = ci.movie_id WHERE cn.country_code = 'US' GROUP BY ct.kind HAVING COUNT(*) > 10 ORDER BY total_movies DESC;
SELECT kt.kind, it.info AS genre, AVG(LENGTH(mi.info)) AS avg_info_length, COUNT(DISTINCT ml.movie_id) AS movie_count, COUNT(DISTINCT ml.link_type_id) AS link_type_count FROM kind_type kt JOIN movie_info mi ON mi.info IN ('Persian', 'Korean', 'Swedish', 'Kalmyk-Oirat', 'Cantonese', 'Estonian') JOIN info_type it ON it.id = mi.info_type_id AND it.info = 'genres' JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN link_type lt ON lt.id = ml.link_type_id AND lt.id IN ('3', '6', '13', '5', '10') WHERE kt.kind IN ('episode', 'tv series') AND mi.movie_id IN ('924200', '924460', '929898', '929803', '926981') GROUP BY kt.kind, it.info;
SELECT AVG(m.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT n.id) AS number_of_persons FROM title AS m LEFT JOIN movie_companies AS mc ON mc.movie_id = m.id LEFT JOIN movie_info AS mi ON mi.movie_id = m.id AND mi.info_type_id = 6 LEFT JOIN keyword AS k ON k.id = mi.info_type_id LEFT JOIN name AS n ON n.id = mi.movie_id GROUP BY m.kind_id HAVING COUNT(DISTINCT mc.company_id) > 1 ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT cn.id) AS number_of_characters, COUNT(DISTINCT kw.id) AS number_of_keywords, COUNT(DISTINCT lt.id) AS number_of_link_types, AVG(mi.movie_id) AS average_movie_id, SUM(CASE WHEN lt.link = 'remake of' THEN 1 ELSE 0 END) AS count_remake_of_links, SUM(CASE WHEN lt.link = 'referenced in' THEN 1 ELSE 0 END) AS count_referenced_in_links, SUM(CASE WHEN lt.link = 'references' THEN 1 ELSE 0 END) AS count_references_links, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS count_features_links, AVG(CASE WHEN kw.id = '1157' THEN mi.movie_id END) AS average_movie_id_with_keyword_1157, AVG(CASE WHEN kw.id = '6848' THEN mi.movie_id END) AS average_movie_id_with_keyword_6848 FROM char_name AS cn FULL OUTER JOIN keyword AS kw ON cn.id = kw.id FULL OUTER JOIN link_type AS lt ON cn.id = lt.id FULL OUTER JOIN movie_info AS mi ON cn.id = mi.id WHERE cn.name LIKE 'A%' AND (kw.keyword LIKE '%love%' OR kw.keyword LIKE '%hate%') AND lt.id IN ('1', '18', '16', '12', '3', '13') AND (lt.link LIKE '%link%' OR lt.link LIKE '%remake%');
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_with_role, n.gender, n.name_pcode_nf FROM cast_info ci JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN name n ON ci.person_id = n.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND n.name_pcode_nf IN ('T6535', 'E3245', 'T124') AND ci.nr_order IN (2, 21, 10, 117, 42) GROUP BY n.gender, n.name_pcode_nf ORDER BY average_movie_rating DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx_cnt.count) AS average_keywords_per_movie, SUM(case when n.gender = 'M' then 1 else 0 end) AS male_actors_count, SUM(case when f.gender = 'F' then 1 else 0 end) AS female_actors_count, MIN(n.name) AS most_common_male_actor_name, MIN(f.name) AS most_common_female_actor_name FROM cast_info ci LEFT JOIN name n ON ci.person_id = n.id AND n.gender = 'M' LEFT JOIN name f ON ci.person_id = f.id AND f.gender = 'F' LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS count FROM movie_keyword GROUP BY movie_id ) mi_idx_cnt ON ci.movie_id = mi_idx_cnt.movie_id WHERE ci.nr_order = 1 GROUP BY ci.person_id;
SELECT cn.country_code, cc.status_id, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(cn.imdb_id) AS average_imdb_id, STRING_AGG(DISTINCT it.info, '; ') AS associated_info_types FROM company_name AS cn JOIN complete_cast AS cc ON cn.id = cc.subject_id JOIN info_type AS it ON cc.status_id = it.id WHERE cc.status_id IN (3, 4) AND it.id IN (14, 61) GROUP BY cn.country_code, cc.status_id ORDER BY number_of_movies DESC;
SELECT pi.note AS person_note, COUNT(DISTINCT ml.movie_id) AS total_movies, AVG(CAST(pi.info AS INTEGER)) AS average_person_info_number, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_subject_id_1 FROM person_info pi JOIN movie_link ml ON pi.person_id = ml.movie_id JOIN complete_cast cc ON ml.movie_id = cc.movie_id WHERE pi.note IN ('Nick van de Wall', 'Gary Brumburgh / gr-home@pacbell.net') AND ml.link_type_id IN (3, 13, 17, 10, 16, 2) AND pi.info_type_id IN (32, 17, 31, 33, 38, 36) GROUP BY pi.note HAVING COUNT(DISTINCT ml.linked_movie_id) > 5;
SELECT it.info AS info_type, COUNT(DISTINCT pi.person_id) AS total_people, AVG(pi.person_id) AS average_person_id, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN ml.link_type_id = '16' THEN 1 ELSE 0 END) AS count_link_type_16, SUM(CASE WHEN ml.link_type_id = '7' THEN 1 ELSE 0 END) AS count_link_type_7, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, COUNT(DISTINCT aka.id) AS total_aka_names FROM person_info AS pi JOIN info_type AS it ON pi.info_type_id = it.id LEFT JOIN movie_link AS ml ON ml.movie_id = pi.person_id LEFT JOIN movie_keyword AS mk ON mk.movie_id = pi.person_id LEFT JOIN aka_name AS aka ON aka.person_id = pi.person_id LEFT JOIN title AS t ON t.id = pi.person_id WHERE pi.person_id IN ('9199', '7096', '7497', '4410', '8830') AND aka.md5sum IN ('777e5dd36014a444dcb9fd6b6e79db1b', 'c858ae027357bb0cc527c2bf2cd39730', 'bead886d98c81cafedcdcb186c8d7fc8') GROUP BY it.info;
SELECT COUNT(DISTINCT ml.movie_id) AS linked_movies_count, AVG(CAST(pi.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN it.info = 'opening weekend' THEN CAST(pi.info AS NUMERIC) ELSE 0 END) AS total_opening_weekend_revenue, lt.LINK AS link_type, cct.kind AS company_type FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_companies AS mc ON ml.movie_id = mc.movie_id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN person_info AS pi ON ml.movie_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE it.info IN ('LD language', 'opening weekend', 'LD digital sound') AND it.id IN ('58', '108', '37', '73', '112') AND pi.info ~ '^[0-9]+(\.[0-9]+)?$' GROUP BY lt.LINK, cct.kind ORDER BY total_opening_weekend_revenue DESC;
SELECT t.kind_id, t.production_year, COUNT(DISTINCT t.id) AS total_movies, AVG(CASE WHEN mi_idx.info_type_id = 3 THEN CAST(mi_idx.info AS NUMERIC) END) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 2 THEN 1 ELSE 0 END) AS count_color_info, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE t.production_year BETWEEN 2000 AND 2020 AND mi_idx.info_type_id IN (2, 3) AND (mi_idx.movie_id IN ('9006', '13848', '9572', '6738', '9636', '8393') OR t.id = '12979') GROUP BY t.kind_id, t.production_year ORDER BY t.production_year DESC, t.kind_id;
SELECT kt.kind AS kind_of_production, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, AVG(sub.movie_keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT an.person_id) AS number_of_distinct_persons FROM kind_type kt JOIN movie_keyword mk ON mk.id = ANY(ARRAY[3853, 448, 3514, 4583, 3985]) JOIN (SELECT movie_id, COUNT(keyword_id) AS movie_keyword_count FROM movie_keyword GROUP BY movie_id) AS sub ON sub.movie_id = mk.movie_id LEFT JOIN aka_name an ON an.id = mk.movie_id AND an.name IS NOT NULL WHERE kt.kind IN ('video game', 'tv series', 'tv mini series', 'episode', 'video movie') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT cct.kind, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_votes, COUNT(DISTINCT pi.person_id) AS number_of_people, SUM(CASE WHEN pi.info LIKE '%1971%' THEN 1 ELSE 0 END) AS count_people_born_1971, SUM(CASE WHEN pi.info LIKE '%O-chan%' THEN 1 ELSE 0 END) AS count_people_with_Ochan_info FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE cct.kind = 'crew' GROUP BY cct.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS total_produced_by_company_type_1, COUNT(DISTINCT n.id) AS total_actors_involved, AVG(CAST(n.gender AS integer)) AS average_gender_code FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = t.id LEFT JOIN name n ON n.id = cc.subject_id AND cc.status_id = 1 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT t.title, kt.kind, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT comp_n.id) AS total_companies, AVG(t.production_year) AS average_production_year, MAX(it.info) AS most_frequent_info FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_info_idx mii ON t.id = mii.movie_id LEFT JOIN info_type it ON mii.info_type_id = it.id LEFT JOIN char_name cn ON t.id = cn.id LEFT JOIN company_name comp_n ON t.id = comp_n.id GROUP BY t.title, kt.kind ORDER BY total_characters DESC, total_companies DESC;
SELECT it.info AS info_type_description, COUNT(DISTINCT at.id) AS number_of_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN ml.link_type_id = 5 THEN 1 ELSE 0 END) AS count_type_5_links, SUM(CASE WHEN ml.link_type_id = 13 THEN 1 ELSE 0 END) AS count_type_13_links, SUM(CASE WHEN ml.link_type_id = 15 THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN ml.link_type_id = 7 THEN 1 ELSE 0 END) AS count_type_7_links, SUM(CASE WHEN ml.link_type_id = 16 THEN 1 ELSE 0 END) AS count_type_16_links, COUNT(DISTINCT cn.id) AS number_of_unique_characters FROM aka_title at JOIN movie_link ml ON at.movie_id = ml.movie_id JOIN info_type it ON it.id = ml.link_type_id JOIN char_name cn ON cn.md5sum = at.md5sum WHERE at.id IN (4738, 7311, 11190, 4033, 11219) AND ml.link_type_id IN (5, 13, 15, 7, 16) AND cn.name IN ('Allday, Dave', 'Algarra, Ma. Luisa', 'Allan, Clifford', 'Allgood, Frances V.') AND it.id = 75 GROUP BY it.info;
SELECT c.name AS company_name, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT mk.keyword_id) AS total_unique_keywords FROM company_name c JOIN movie_keyword mk ON c.id = mk.keyword_id JOIN title t ON mk.movie_id = t.id WHERE c.country_code IN ('US', 'GB') AND t.production_year BETWEEN 1990 AND 2000 GROUP BY c.name HAVING COUNT(DISTINCT t.id) > 10 ORDER BY total_feature_films DESC, total_tv_shows DESC;
SELECT ct.id AS company_type_id, ct.kind AS company_type_kind, COUNT(*) AS total_companies, kt.id AS kind_type_id, kt.kind AS kind_type_kind, AVG(chn.imdb_id) AS average_imdb_id, SUM(chn.imdb_id) AS total_imdb_id_sum FROM company_type AS ct JOIN kind_type AS kt ON ct.id = kt.id LEFT JOIN char_name AS chn ON chn.id = ct.id GROUP BY ct.id, kt.id ORDER BY total_companies DESC, average_imdb_id ASC;
SELECT t.production_year, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id = 524 THEN 1 ELSE 0 END) AS count_role_524, SUM(CASE WHEN ci.person_role_id = 235 THEN 1 ELSE 0 END) AS count_role_235, SUM(CASE WHEN ci.person_role_id = 1257 THEN 1 ELSE 0 END) AS count_role_1257 FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN movie_info_idx AS mi ON t.id = mi.movie_id WHERE t.production_year >= 2000 AND t.production_year <= 2010 GROUP BY t.production_year ORDER BY t.production_year;
SELECT kt.kind, COUNT(DISTINCT mi.movie_id) AS movie_count, AVG(CAST(NULLIF(mi.info, '') AS numeric)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CAST(NULLIF(mi.info, '') AS numeric)) FILTER (WHERE it.info = 'budget') AS total_budget FROM movie_info mi JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN kind_type kt ON kt.id = mk.keyword_id JOIN (SELECT id, info FROM movie_info WHERE info_type_id IN (SELECT id FROM info_type WHERE info IN ('rating', 'budget'))) it ON mi.id = it.id WHERE mi.movie_id IN (925861, 925697, 924285) AND kt.id IN (1, 5, 7) GROUP BY kt.kind;
SELECT ml.link_type_id, k.keyword AS genre, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT t.id) AS number_of_movies FROM movie_link AS ml JOIN title AS t ON ml.movie_id = t.id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE ml.link_type_id IN (6, 13, 11, 7) AND ci.role_id = 1 AND k.id IN (3152) GROUP BY ml.link_type_id, k.keyword ORDER BY avg_production_year DESC, number_of_movies DESC;
SELECT rt.ROLE, COUNT(*) AS num_roles, AVG(cn.imdb_id) AS avg_imdb_id, SUM(cct.id) AS sum_cast_type_ids FROM aka_name AS an JOIN char_name AS cn ON an.person_id = cn.id JOIN comp_cast_type AS cct ON cn.id = cct.id JOIN role_type AS rt ON cct.id = rt.id GROUP BY rt.ROLE ORDER BY num_roles DESC;
SELECT COUNT(ci.id) AS total_cast_entries, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS total_alias_castings, MIN(t.title) AS earliest_title_alphabetically, MAX(t.production_year) AS latest_production_year, AVG(mi_idx.info::NUMERIC) AS avg_info_numeric_value FROM cast_info AS ci JOIN title AS t ON ci.movie_id = t.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id WHERE ci.person_id IN (1095, 1184, 1812, 1636) AND mi_idx.info LIKE '...%' GROUP BY ci.person_id
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_persons, AVG(ci.nr_order) AS average_order, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT mi.movie_id) AS number_of_movies_with_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id AND mc.company_type_id = 1 JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id JOIN complete_cast cc ON ci.movie_id = cc.movie_id AND cc.subject_id = 1 WHERE ci.person_id IN (3767, 4155) AND ci.person_role_id IS NOT NULL AND mi.info LIKE '..00011111%' AND mi.info_type_id IN (15, 28, 24) GROUP BY rt.ROLE;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_top_ranked_movies FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN title AS t ON mc.movie_id = t.id JOIN movie_info AS mi ON t.id = mi.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND t.production_year >= 2000 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT AVG(CAST(mi.info AS NUMERIC)) as average_rating, COUNT(DISTINCT at.id) as total_alternate_titles, COUNT(DISTINCT cn.id) as total_companies_involved, MAX(t.production_year) as latest_production_year, MIN(t.production_year) as earliest_production_year FROM title t LEFT JOIN movie_info_idx miidx ON miidx.movie_id = t.id LEFT JOIN info_type it ON it.id = miidx.info_type_id AND it.info = 'rating' LEFT JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = it.id LEFT JOIN aka_title at ON at.movie_id = t.id LEFT JOIN movie_companies mc ON mc.movie_id = t.id LEFT JOIN company_name cn ON cn.id = mc.company_id LEFT JOIN complete_cast cc ON cc.movie_id = t.id WHERE t.production_year BETWEEN 2000 AND 2023 AND cn.country_code = '[us]' GROUP BY t.id;
SELECT AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT aka.title) AS unique_aka_titles, COUNT(DISTINCT ci.person_id) AS number_of_cast_members, MAX(ml.link_type_id) AS highest_link_type_id FROM aka_title aka JOIN cast_info ci ON aka.movie_id = ci.movie_id JOIN movie_companies mc ON aka.movie_id = mc.movie_id JOIN movie_link ml ON aka.movie_id = ml.movie_id WHERE aka.title IS NOT NULL AND aka.production_year IS NOT NULL AND (aka.title LIKE '0....01124%' OR aka.title LIKE '...0012111%' OR aka.title LIKE '%758%') GROUP BY aka.production_year ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_type, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN at.id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_alternate_titles, MAX(ci.nr_order) AS max_cast_order FROM cast_info AS ci LEFT JOIN aka_title AS at ON ci.movie_id = at.movie_id JOIN kind_type AS kt ON at.kind_id = kt.id GROUP BY kt.kind HAVING AVG(at.production_year) > 1990 AND COUNT(DISTINCT ci.movie_id) > 10;
SELECT COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT ci.movie_id) AS movies_with_keywords, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors, MIN(cn.name) AS company_name FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE k.keyword IN ('pearl', 'reference-to-john-the-baptist', 'gigantic-breasts', 'mental-abuse', 'hammer-moves-by-itself', 'picket-fence') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.info > '2.0' AND n.gender IN ('m', 'f') AND ci.note IN ('CelebrityLoop.com', 'Les Maykithappen', 'Guy Bellinger', 'Allegra Masters', 'Anonymous') GROUP BY cn.name ORDER BY average_movie_rating DESC, total_actors DESC LIMIT 1;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT cc.movie_id) AS total_movies, COUNT(DISTINCT mi.id) AS total_movie_info_entries, AVG(CASE WHEN lt.LINK LIKE '%imdb%' THEN 1 ELSE NULL END) AS avg_imdb_linked, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_info_type_1 FROM complete_cast cc JOIN movie_info mi ON cc.movie_id = mi.movie_id JOIN kind_type kt ON kt.id = cc.subject_id LEFT JOIN link_type lt ON lt.id = mi.info_type_id WHERE kt.id IN (1, 4, 2) AND mi.info LIKE '%budget%' AND cc.status_id BETWEEN 1 AND 5 GROUP BY kt.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN mi.info = 'Brazilian Sign Language' THEN 1 ELSE 0 END) AS number_of_brazilian_sign_language_movies, SUM(CASE WHEN mi.info = 'Mandarin' THEN 1 ELSE 0 END) AS number_of_mandarin_movies, SUM(CASE WHEN mi.info = 'Finnish' THEN 1 ELSE 0 END) AS number_of_finnish_movies, SUM(CASE WHEN mi.info = 'Slovenian' THEN 1 ELSE 0 END) AS number_of_slovenian_movies, SUM(CASE WHEN mi.info = 'Tagalog' THEN 1 ELSE 0 END) AS number_of_tagalog_movies, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS number_of_german_movies FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN company_name cn ON mc.company_id = cn.id JOIN movie_info mi ON mc.movie_id = mi.movie_id AND mi.info_type_id = 4 JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT cct.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(at.id) AS number_of_titles, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at JOIN comp_cast_type cct ON at.kind_id = cct.id GROUP BY cct.kind ORDER BY average_production_year DESC;
SELECT mc.company_id, COUNT(mc.movie_id) AS num_movies, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS num_completed_cast, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year FROM movie_companies AS mc JOIN title AS t ON mc.movie_id = t.id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id WHERE t.md5sum = '12d48ee4d0d61ef22a7ce0c5a1d93caf' GROUP BY mc.company_id ORDER BY num_movies DESC;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(mc.company_type_id) AS avg_company_type_id, COUNT(DISTINCT mc.company_id) AS num_companies_involved, link.link AS link_description, COUNT(link.id) AS num_links FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id INNER JOIN link_type AS link ON mc.company_type_id = link.id GROUP BY k.keyword, link.link ORDER BY num_movies DESC, num_companies_involved DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified_casts, MIN(cn.country_code) AS country_code, MAX(mi.info) AS maximum_movie_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id JOIN company_name cn ON ci.person_id = cn.id JOIN movie_info mi ON ci.movie_id = mi.movie_id WHERE ci.person_role_id IN (107, 448, 439, 1389, 1249, 420) AND cc.movie_id = 1643515 AND cc.id IN (4897, 2653, 4910, 182, 342, 359) AND mi.info LIKE '0.......26%' GROUP BY rt.ROLE ORDER BY number_of_people DESC, average_cast_order;
SELECT kt.kind AS media_type, rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_people, COUNT(DISTINCT CASE WHEN n.gender = 'M' THEN n.id END) AS total_males, COUNT(DISTINCT CASE WHEN n.gender = 'F' THEN n.id END) AS total_females, AVG(n.imdb_id) AS average_imdb_id FROM name n JOIN role_type rt ON n.id = rt.id JOIN kind_type kt ON n.id = kt.id WHERE kt.kind IN ('tv movie', 'movie', 'episode', 'tv series', 'tv mini series') AND rt.role = 'actress' GROUP BY kt.kind, rt.ROLE ORDER BY total_people DESC, total_males DESC, total_females DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_movies_linked_to, AVG(cn.imdb_id) AS average_imdb_id FROM company_name cn LEFT JOIN movie_companies mc ON cn.id = mc.company_id LEFT JOIN movie_keyword mk ON mc.movie_id = mk.movie_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id OR mc.movie_id = ml.linked_movie_id WHERE cn.country_code NOT IN ('[pl]') AND cn.name_pcode_sf IN ('V6251', 'D1253', 'A4562', 'D5351', 'T5626') AND (ml.link_type_id IN (5, 3, 13) OR ml.link_type_id IS NULL) GROUP BY cn.name ORDER BY number_of_movies_with_keywords DESC, number_of_linked_movies DESC, number_of_movies_linked_to DESC, average_imdb_id DESC LIMIT 10;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keyword_count, SUM(CASE WHEN an.name_pcode_cf LIKE 'A%' THEN 1 ELSE 0 END) AS names_starting_with_a, COUNT(DISTINCT an.person_id) AS total_actors_with_alternate_names FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN aka_name AS an ON an.person_id = t.id JOIN company_type AS ct ON ct.id = t.kind_id WHERE t.production_year > 2000 AND mk.keyword_id IN (4192, 3543, 917, 3554) AND an.name_pcode_cf IN ('K365', 'J262', 'C4625', 'A1526') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(LENGTH(mc.note)) AS avg_company_notes_length, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS number_of_male_actors, cn.name AS production_company, COUNT(k.id) AS number_of_keywords_used, AVG(ci.nr_order) AS avg_cast_order FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN name n ON ci.person_id = n.id JOIN keyword k ON k.id = ci.role_id WHERE n.gender = 'm' AND ci.nr_order IN (23, 43, 32, 50, 117, 56) AND mc.note IS NOT NULL AND cn.country_code = 'US' GROUP BY cn.name ORDER BY number_of_movies DESC, avg_company_notes_length DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS films_after_2000, MAX(t.production_year) AS latest_production_year FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN cast_info ci ON ci.movie_id = cn.id JOIN title t ON ci.movie_id = t.id GROUP BY ct.kind ORDER BY number_of_companies DESC;
SELECT COUNT(DISTINCT at.id) AS number_of_titles, AVG(at.production_year) AS average_production_year, rt.role AS role_type, COUNT(DISTINCT mi.id) AS number_of_movie_infos, SUM(CASE WHEN at.kind_id = '1' THEN 1 ELSE 0 END) AS number_of_movies, SUM(CASE WHEN at.kind_id = '2' THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT at.episode_of_id) AS number_of_unique_series, MAX(at.season_nr) AS max_season_number, MAX(at.episode_nr) AS max_episode_number FROM aka_title at JOIN movie_info mi ON at.movie_id = mi.movie_id JOIN role_type rt ON mi.info_type_id = rt.id WHERE at.production_year BETWEEN 1990 AND 2020 AND mi.info LIKE '%color%' GROUP BY rt.role ORDER BY number_of_titles DESC, average_production_year;
SELECT rt.ROLE AS Role, COUNT(distinct ci.person_id) AS Number_Of_Actors, AVG(ci.nr_order) AS Average_Billing_Position, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS Male_Actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS Female_Actors, MIN(aka.production_year) AS Earliest_Film_Year, MAX(aka.production_year) AS Latest_Film_Year, COUNT(distinct mk.movie_id) AS Number_Of_Movies_With_Keywords, AVG(pi.info_type_id::integer) AS Average_Info_Type_Id FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN aka_title aka ON ci.movie_id = aka.movie_id LEFT JOIN movie_keyword mk ON ci.movie_id = mk.movie_id LEFT JOIN person_info pi ON n.id = pi.person_id WHERE (aka.title = 'Abduction - Riprenditi la tua vita' OR aka.title = 'Mala wielka milosc' OR aka.title = 'Great Performances: On the Town in Concert' OR aka.title = 'æÁÂÒÉËÉ Ú×ÅÚÄ. ÷ÏÚ×ÒÁÝÅÎÉÅ' OR aka.title = 'Zavoevanie ameriki') AND pi.info_type_id IN ('37', '20', '28', '32', '25') AND ci.nr_order = 93 GROUP BY rt.ROLE;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT an.id) AS total_aka_names, COUNT(DISTINCT mi.id) AS total_movie_info, SUM(CASE WHEN lt.LINK = 'remade as' THEN 1 ELSE 0 END) AS total_remake_links FROM title t LEFT JOIN aka_name an ON t.id = an.person_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id LEFT JOIN link_type lt ON mi.info_type_id = lt.id LEFT JOIN company_type ct ON t.kind_id = ct.id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, COUNT(DISTINCT k.id) AS unique_keywords_used FROM movie_link AS ml JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN kind_type AS kt ON kt.id = cc.status_id JOIN name AS n ON n.id = (SELECT subject_id FROM complete_cast WHERE movie_id = ml.movie_id LIMIT 1) JOIN movie_keyword AS mk ON mk.movie_id = ml.movie_id JOIN keyword AS k ON k.id = mk.keyword_id WHERE kt.id IN (7, 4) AND n.name_pcode_cf IN ('A2343', 'A3152', 'A6216', 'A2324', 'A436', 'A254') AND n.imdb_index = 'IV' AND k.phonetic_code IN ('S4623', 'I5264', 'U5321') AND k.keyword IN ('scavenging-for-food', 'garbage-truck', 'obscenity', 'red-wine', 'sexism', 'glass') GROUP BY kt.kind;
SELECT lt.LINK as link_type, AVG(ml.id) as average_movie_link_id, SUM(ml.linked_movie_id) as total_linked_movie_id, COUNT(ml.movie_id) as total_movies, COUNT(DISTINCT ml.movie_id) as unique_movies_linked, CCT.kind as comp_cast_type_kind, COUNT(CCT.id) as comp_cast_type_count FROM movie_link as ml JOIN link_type as lt ON ml.link_type_id = lt.id JOIN comp_cast_type as CCT ON CCT.id = ml.link_type_id GROUP BY lt.LINK, CCT.kind ORDER BY total_movies DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.movie_id) AS total_unique_movies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_regular_movies, SUM(CASE WHEN at.kind_id > 1 THEN 1 ELSE 0 END) AS total_special_movies, COUNT(DISTINCT cn.id) AS total_unique_characters, MAX(pi.info) AS most_recent_person_info FROM aka_title AS at JOIN movie_info AS mi ON at.movie_id = mi.movie_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN char_name AS cn ON cn.id = cc.subject_id JOIN person_info AS pi ON pi.person_id = cn.id WHERE at.phonetic_code = 'D35' AND at.imdb_index IN ('III', 'IV', 'I', 'II') AND pi.id IN ('1502', '3072', '4836') AND pi.person_id IN ('2127', '823', '3169', '4061999') AND mi.movie_id IN ('927236', '926899', '924318') AND mi.note IN ('(only a few lines)', '(interviews)') AND EXISTS ( SELECT 1 FROM link_type AS lt WHERE lt.id IN ('14', '10') AND lt.link = 'unknown link' ) GROUP BY at.kind_id;
SELECT rt.role AS role_type, COUNT(DISTINCT pi.person_id) AS number_of_people, AVG(CASE WHEN pi.info LIKE '%cm' THEN CAST(SUBSTRING(pi.info FROM '^[0-9]+') AS INTEGER) END) AS average_height, COUNT(DISTINCT cn.id) AS number_of_companies, cn.country_code, SUM(CASE WHEN pi.info LIKE '%Bad Faith%' THEN 1 ELSE 0 END) AS bad_faith_count FROM person_info pi JOIN role_type rt ON rt.id = pi.info_type_id JOIN name n ON n.id = pi.person_id JOIN company_name cn ON cn.imdb_id = n.imdb_id WHERE rt.role IN ('writer', 'producer', 'actor') AND cn.country_code IN ('US', 'GB', 'CA') GROUP BY rt.role, cn.country_code ORDER BY role_type, cn.country_code;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_characters, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, COUNT(DISTINCT cn.id) AS number_of_companies_involved, STRING_AGG(DISTINCT cn.country_code, ', ') AS countries_involved FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON kt.id IN (6, 4) WHERE ci.nr_order = 39 AND mk.id IN (337, 1460, 1468, 4397, 4374, 1643) AND mk.keyword_id = 3554 AND kt.kind IN ('tv movie', 'tv mini series', 'video game', 'episode') GROUP BY kt.kind;
SELECT cn.name AS company_name, COUNT(mc.movie_id) AS number_of_movies, AVG(cast(mi_idx.info AS numeric)) AS average_movie_rating, SUM(CASE WHEN lt.LINK = 'distributor' THEN 1 ELSE 0 END) AS distribution_deals_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN link_type AS lt ON mc.company_type_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.company_id IN ('908', '1169', '855') AND mc.company_type_id = '1' AND cn.name IN ('StudioCanal', 'Dollhouse', 'Images Film Library', 'Creative Video Features', 'Afterschool Special', 'Star Creations International') GROUP BY cn.name ORDER BY number_of_movies DESC, average_movie_rating DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS total_persons, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN movie_link AS ml ON ci.movie_id = ml.movie_id WHERE rt.ROLE IN ('cinematographer', 'actress', 'costume designer') AND ml.link_type_id IN (10, 8, 11, 13, 7, 6) AND (mc.note LIKE '%(1993) (UK) (all media)%' OR mc.note LIKE '%(1952-1960) (UK) (TV)%') GROUP BY rt.ROLE ORDER BY total_persons DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info = 'Norwegian' THEN 1 ELSE 0 END) AS norwegian_movies_count, SUM(CASE WHEN mi.info = 'Arabic' THEN 1 ELSE 0 END) AS arabic_movies_count, SUM(CASE WHEN mi.info = 'Serbian' THEN 1 ELSE 0 END) AS serbian_movies_count, SUM(CASE WHEN mi.info = 'Portuguese' THEN 1 ELSE 0 END) AS portuguese_movies_count FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = '4' WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY number_of_companies DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(aka.production_year) AS average_production_year, MAX(aka.production_year) AS latest_production_year, MIN(aka.production_year) AS earliest_production_year, COUNT(DISTINCT cn.id) AS number_of_unique_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_cast_members, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_cast_members FROM movie_companies AS mc JOIN aka_title AS aka ON mc.movie_id = aka.movie_id JOIN movie_keyword AS mk ON aka.movie_id = mk.movie_id JOIN complete_cast AS cc ON aka.movie_id = cc.movie_id JOIN char_name AS cn ON cn.name_pcode_nf IN ('E2416', 'R3242', 'W4165') JOIN name AS n ON cn.id = n.id WHERE mc.id IN ('577', '4551', '4702', '4381', '3126', '3864') AND aka.kind_id = 1 GROUP BY aka.kind_id HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY average_production_year DESC;
SELECT rt.ROLE, COUNT(DISTINCT n.id) AS Total_People, AVG(mi.id) AS Average_Movie_Info_Id, SUM(CASE WHEN ml.linked_movie_id IN ('2454993', '1779499', '763084', '1938935', '188175', '1915458') THEN 1 ELSE 0 END) AS Linked_Movies_Count FROM role_type rt JOIN name n ON n.surname_pcode = CAST(rt.id AS CHARACTER VARYING) JOIN movie_info mi ON mi.info_type_id = rt.id LEFT JOIN movie_link ml ON ml.movie_id = mi.movie_id WHERE rt.id = 12 AND rt.ROLE IN ('writer', 'producer', 'actress', 'actor', 'director', 'composer') AND n.surname_pcode IN ('A432', 'A4', 'A465', 'A456') AND ml.movie_id IN ('10538', '16743', '7369', '5520', '14521') GROUP BY rt.ROLE;
SELECT n.gender, COUNT(DISTINCT n.id) AS total_people, AVG(ci.nr_order) AS average_credit_order FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id WHERE n.gender IN ('M', 'F') AND ci.note LIKE '%(2000)%' GROUP BY n.gender;
SELECT it.info AS info_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(LENGTH(mi.note)) FILTER (WHERE mi.info_type_id = it.id) AS average_note_length, SUM(CASE WHEN ch.imdb_id IS NOT NULL THEN 1 ELSE 0 END) AS total_characters_with_imdb_id, MAX(t.production_year) AS latest_production_year FROM info_type it JOIN movie_info mi ON mi.info_type_id = it.id JOIN title t ON t.id = mi.movie_id JOIN cast_info ci ON ci.movie_id = t.id JOIN char_name ch ON ch.id = ci.person_id WHERE (ch.name_pcode_nf IN ('P6523', 'C1563', 'S2345') OR ch.surname_pcode IN ('O6', 'L3', 'H616', 'C4162', 'C5')) AND t.season_nr IN (22, 36, 28, 44, 38) AND it.id IN (108, 57, 44, 85, 52) GROUP BY it.info;
SELECT COUNT(DISTINCT at.id) AS num_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN mc.company_type_id = 9 THEN 1 ELSE 0 END) AS num_producer_companies, rt.ROLE AS role_type, COUNT(DISTINCT an.id) AS num_people_with_alternate_names FROM aka_title at JOIN movie_companies mc ON at.movie_id = mc.movie_id JOIN complete_cast compl_cast ON mc.movie_id = compl_cast.movie_id JOIN role_type rt ON compl_cast.subject_id = rt.id LEFT JOIN aka_name an ON an.person_id = compl_cast.subject_id WHERE mc.movie_id IN ('28519', '17394', '23681', '8931') AND an.md5sum IN ('0f9068a7f5499ebd1078fd242aa8d403', 'e4e7deb17d9499fb2031dfcbe39a2884', '19133574cb176a198fc5d24c24352d61', '86ce7e5bfe4997de75b05c21865ca40d', 'c42897449a530ff6921dbfdd466254ca') AND rt.id IN ('9', '2', '12', '6', '10') GROUP BY rt.ROLE ORDER BY num_producer_companies DESC, num_people_with_alternate_names DESC;
SELECT ct.kind AS company_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(COUNT(DISTINCT mk.keyword_id)) OVER (PARTITION BY mc.company_type_id) AS total_keywords FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id GROUP BY ct.kind, mc.company_type_id ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT COUNT(DISTINCT an.id) AS number_of_aka_names, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_count, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_count, COUNT(DISTINCT cc.movie_id) AS number_of_movies_with_complete_cast, SUM(CASE WHEN an.surname_pcode = 'P6' THEN 1 ELSE 0 END) AS surname_pcode_P6_count, SUM(CASE WHEN an.surname_pcode = 'A625' THEN 1 ELSE 0 END) AS surname_pcode_A625_count, SUM(CASE WHEN an.surname_pcode = 'C43' THEN 1 ELSE 0 END) AS surname_pcode_C43_count FROM aka_name AS an JOIN complete_cast AS cc ON an.person_id = cc.subject_id JOIN comp_cast_type AS cct ON cc.status_id = cct.id WHERE cc.movie_id IN ('1679404', '51426', '1649449', '1656947', '1656720', '2526470') AND cct.id IN ('1', '4');
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS total_features_links, c.name AS company_name, c.country_code AS company_country, MIN(m.info) AS movie_info FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN company_name c ON cc.movie_id = c.imdb_id JOIN link_type lt ON cc.subject_id = lt.id JOIN movie_info m ON ci.movie_id = m.movie_id WHERE m.info_type_id = '4' AND ci.note LIKE '%(segment "Laman")%' AND ci.person_id IN ('1523', '1842', '1395', '1462', '1527', '1496') AND cc.id IN ('3566', '4902', '2721') AND cc.movie_id IN ('1683114', '1664432') AND lt.id IN ('9', '16', '1', '7', '6', '18') AND lt.link IN ('features', 'follows') GROUP BY c.name, c.country_code;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cast_count.cast_count) AS average_cast_per_movie, SUM(keyword_count.keyword_count) AS total_keywords FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN (SELECT movie_id, COUNT(*) AS cast_count FROM cast_info GROUP BY movie_id) AS cast_count ON mc.movie_id = cast_count.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS keyword_count ON mc.movie_id = keyword_count.movie_id GROUP BY cn.name ORDER BY total_movies_produced DESC, average_cast_per_movie DESC, total_keywords DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS movie_count, AVG(keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT ci.person_id) AS distinct_actor_count FROM title t LEFT JOIN ( SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id ) AS mk ON t.id = mk.movie_id LEFT JOIN cast_info ci ON t.id = ci.movie_id AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') LEFT JOIN name n ON ci.person_id = n.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year ORDER BY t.production_year;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(nm.imdb_id) AS average_imdb_id, SUM(CASE WHEN nm.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN nm.gender = 'm' THEN 1 ELSE 0 END) AS male_count FROM company_type ct JOIN movie_info mi ON ct.id = mi.info_type_id JOIN name nm ON mi.movie_id = nm.id WHERE ct.kind IN ('special effects companies', 'distributors', 'production companies') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_genre, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, SUM(CAST(person_info.info AS INTEGER)) AS total_movie_budget, COUNT(DISTINCT name.id) AS number_of_actors, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM movie_info_idx mi_idx JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN movie_info_idx budget_idx ON mi_idx.movie_id = budget_idx.movie_id AND budget_idx.info_type_id = (SELECT id FROM kind_type WHERE kind = 'budget') JOIN person_info ON mi_idx.movie_id = person_info.person_id JOIN name ON person_info.person_id = name.id WHERE kt.id IN ('6', '3', '5', '7', '2', '1') AND name.name_pcode_cf IN ('A2545', 'A2651', 'A4236', 'A4341', 'A2456', 'A2632') GROUP BY movie_genre ORDER BY number_of_movies DESC, average_rating DESC;
SELECT it.info AS info_type, COUNT(*) AS total_movies, AVG(CAST(mi.info AS INTEGER)) AS average_info_value, SUM(CAST(mi.info AS INTEGER)) AS sum_info_value, COUNT(DISTINCT cc.movie_id) AS count_distinct_movies FROM movie_info_idx mi JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN complete_cast cc ON mi.movie_id = cc.movie_id WHERE it.id IN (27, 34, 97, 20, 80, 54) AND mi.movie_id IN (19576, 19282, 18727, 13977, 7344) GROUP BY it.info;
SELECT t.title AS "Movie Title", t.production_year AS "Production Year", COUNT(ci.id) AS "Total Cast", AVG(ci.nr_order) AS "Average Cast Billing Position", SUM(CASE WHEN lt.id = '13' THEN 1 ELSE 0 END) AS "Total Sequels", SUM(CASE WHEN lt.id = '12' THEN 1 ELSE 0 END) AS "Total Prequels", COUNT(DISTINCT an.id) AS "Total AKA Names" FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_info_idx mii ON t.id = mii.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id LEFT JOIN aka_name an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND lt.id IN ('13', '12') AND an.md5sum IN ('54a7b18f26374fc200ddedde0844f8ec', 'a91c2d9d617691d9ba689d7e46ddc157') GROUP BY t.title, t.production_year ORDER BY "Production Year" DESC, "Total Cast" DESC;
SELECT kt.kind AS movie_kind, COUNT(*) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS color_movie_count, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS black_and_white_movie_count FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_info AS mi ON t.id = mi.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('color', 'black and white')) GROUP BY kt.kind HAVING COUNT(*) > 100 ORDER BY total_movies DESC, average_production_year;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS total_alias_credits, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT ci.person_id) AS unique_cast_members FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id WHERE ct.kind IN ('distributors', 'miscellaneous companies', 'special effects companies') AND ci.note IS NOT NULL GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT kt.kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT cn.id) AS total_companies, AVG(pi.person_id) AS average_person_id, SUM(cc.subject_id) AS sum_subject_ids FROM movie_link AS ml JOIN kind_type AS kt ON ml.link_type_id = kt.id JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN company_name AS cn ON cn.country_code NOT LIKE '%[pl]%' JOIN person_info AS pi ON pi.person_id = cc.subject_id WHERE kt.kind IN ('episode', 'movie', 'video movie', 'video game') AND cc.subject_id = '1' AND cn.name_pcode_sf IN ('J2316', 'F4131', 'N2314', 'S1526', 'D2346', 'J6123') GROUP BY kt.kind;
SELECT ct.kind AS company_type, avg(at.production_year) AS average_production_year, count(DISTINCT at.movie_id) AS total_alternate_titles, sum(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_full_cast_movies, count(DISTINCT n.id) AS total_actors, count(DISTINCT mi.movie_id) AS total_movies_with_info FROM aka_title at JOIN movie_info mi ON at.movie_id = mi.movie_id JOIN complete_cast cc ON mi.movie_id = cc.movie_id JOIN company_type ct ON cc.subject_id = ct.id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN name n ON n.imdb_index = at.imdb_index WHERE mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('birth date', 'mini biography')) AND mi.note NOT LIKE '%(interviews)%' AND at.kind_id NOT IN (SELECT id FROM info_type WHERE info = 'admissions') AND (at.phonetic_code = 'M5251' OR at.phonetic_code = 'B4536') GROUP BY ct.kind ORDER BY total_alternate_titles DESC;
SELECT COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT pi.person_id) AS total_people_contributed, AVG(pi.info::NUMERIC) FILTER (WHERE pi.info_type_id = 3) AS average_movie_length FROM title AS t LEFT JOIN person_info AS pi ON t.id = pi.person_id WHERE t.production_year BETWEEN 1990 AND 2020 AND t.series_years LIKE '%199%' GROUP BY t.kind_id;
SELECT kt.kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, SUM(CASE WHEN mc.note LIKE '%(DVD)%' THEN 1 ELSE 0 END) AS number_of_dvd_releases, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS number_of_tv_releases, COUNT(DISTINCT kw.id) AS number_of_unique_keywords FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id JOIN movie_keyword mk ON akat.movie_id = mk.movie_id JOIN keyword kw ON mk.keyword_id = kw.id JOIN movie_companies mc ON akat.movie_id = mc.movie_id WHERE kt.id IN (3, 4, 5) AND kw.keyword IN ('black-shirt', 'reference-to-nintendo', 'married-couple', 'giving-back', 'oil-tycoon', 'poet') AND akat.production_year = 1998 GROUP BY kt.kind;
SELECT AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS total_unique_actors, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_complete_status, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS count_incomplete_status, COUNT(DISTINCT an.id) AS total_aka_names FROM cast_info AS ci JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN aka_name AS an ON ci.person_id = an.person_id WHERE ci.role_id = 1 AND cc.id IN (1863, 310, 417, 31, 2902, 329) GROUP BY ci.movie_id;
SELECT cn.country_code, COUNT(DISTINCT mi.movie_id) AS movie_count, AVG(pi.info_type_id::numeric) AS avg_person_info_type, COUNT(DISTINCT cn.name) AS company_count, COUNT(DISTINCT chn.name) AS character_name_count FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id JOIN company_name cn ON mi.movie_id = cn.imdb_id JOIN person_info pi ON mi.movie_id = pi.person_id JOIN char_name chn ON mi.movie_id = chn.imdb_id WHERE cn.country_code IN ('[np]', '[kr]', '[cn]', '[tw]', '[sa]', '[my]') AND pi.note IN ('info@aeberhard.com', 'Chris Hendren', 'Quincy Johnson', 'Ian Adema', 'isabelleadriani@yahoo.it') AND pi.info_type_id IN ('34', '36') AND mi.info IN ('Galician', 'Flemish', 'Persian', 'Czech') GROUP BY cn.country_code ORDER BY movie_count DESC, avg_person_info_type DESC;
SELECT tk.kind, AVG(t.production_year) AS average_production_year, SUM(t.production_year) AS total_production_year_sum, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT mc.company_type_id) AS distinct_company_types_involved FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN (SELECT id, 'Drama' AS kind FROM title WHERE kind_id = 1 UNION ALL SELECT id, 'Comedy' AS kind FROM title WHERE kind_id = 2 ) AS tk ON t.id = tk.id GROUP BY tk.kind ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT rt.role, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.person_count) AS avg_people_per_role FROM ( SELECT c.movie_id, c.role_id, COUNT(c.person_id) AS person_count FROM cast_info AS c INNER JOIN movie_companies AS mc ON c.movie_id = mc.movie_id WHERE (mc.note LIKE '%(USA) (TV)%' OR mc.note LIKE '%(USA) (DVD)%') GROUP BY c.movie_id, c.role_id ) AS ci INNER JOIN role_type AS rt ON ci.role_id = rt.id GROUP BY rt.role ORDER BY total_movies DESC, avg_people_per_role DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT at.id) AS total_movies, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_movie_rating, SUM(CASE WHEN k.keyword = 'staring' THEN 1 ELSE 0 END) AS count_staring_keyword, SUM(CASE WHEN k.keyword = 'disarming-someone' THEN 1 ELSE 0 END) AS count_disarming_keyword FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN aka_title AS at ON mc.movie_id = at.id JOIN movie_info_idx AS mi_idx ON at.id = mi_idx.movie_id LEFT JOIN movie_keyword AS mk ON at.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE ct.kind IN ('production companies', 'distributors') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS DECIMAL) >= 5.0 AND at.production_year BETWEEN 2000 AND 2010 GROUP BY ct.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS total_directors FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id JOIN movie_info_idx AS mi_idx ON t.movie_id = mi_idx.movie_id LEFT JOIN cast_info AS ci ON t.movie_id = ci.movie_id WHERE mi_idx.info_type_id = 101 AND kt.kind IN ('movie', 'tv series') AND t.production_year BETWEEN 1990 AND 2023 GROUP BY kt.kind;
SELECT SUM(CASE WHEN pi.info_type_id = 1 THEN 1 ELSE 0 END) AS total_actors, AVG(CASE WHEN pi.info_type_id = 2 THEN CAST(pi.info AS NUMERIC) ELSE NULL END) AS average_director_salary, COUNT(DISTINCT k.id) AS unique_keywords_used, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS count_high_budget_movies FROM cast_info AS ci JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN keyword AS k ON ci.movie_id = k.id WHERE ci.role_id = 1 AND pi.info_type_id IN (1, 2) AND mi_idx.info_type_id IN (3) AND mi_idx.info LIKE '%Million%' GROUP BY ci.movie_id;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_males, COUNT(DISTINCT ml.movie_id) AS unique_movies_linked FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN name AS n ON ml.linked_movie_id = n.id WHERE lt.LINK IN ('features', 'featured in', 'spin off from', 'follows', 'followed by') AND ml.linked_movie_id IN (2362378, 227254, 1337065, 1230549) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT it.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) AS average_votes, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, COUNT(DISTINCT pi.person_id) AS number_of_persons_with_info, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'genres' LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id AND ml.link_type_id IN (12, 16, 13, 8) LEFT JOIN person_info pi ON pi.info_type_id = 89 LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id WHERE mi.note NOT LIKE '%(interviews)%' AND mi.note NOT LIKE '%(some dialogue)%' AND mi.note NOT LIKE '%(English subtitles)%' AND mi.note NOT LIKE '%(Ukrainian)%' AND mi.note NOT LIKE '%(Original version)%' AND mi.note NOT LIKE '%(English Subtitles)%' GROUP BY genre;
SELECT c.name AS company_name, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) AS average_info_numeric, SUM(CAST(CASE WHEN mi.info ~ '^\d+$' THEN mi.info ELSE '0' END AS INTEGER)) AS sum_info_numeric FROM company_name c JOIN movie_companies mc ON c.id = mc.company_id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mc.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE k.keyword IN ('atv', 'general-contractor', 'chance') AND k.phonetic_code IN ('C4615', 'B32', 'B3415') AND c.country_code IN ('[ddde]', '[pr]', '[nl]', '[ar]', '[xyu]') AND c.name_pcode_sf = 'B4232' AND mi.info ~ '^\d+$' GROUP BY c.name, it.info ORDER BY number_of_movies DESC, average_info_numeric DESC;
SELECT title.kind_id, AVG(cast_info.nr_order) AS average_order, COUNT(DISTINCT cast_info.person_id) AS unique_actors, SUM(CASE WHEN comp_cast_type.kind = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN comp_cast_type.kind = 'actress' THEN 1 ELSE 0 END) AS total_actresses, COUNT(DISTINCT company_name.id) AS involved_companies, MIN(title.production_year) AS earliest_production_year, MAX(title.production_year) AS latest_production_year FROM cast_info INNER JOIN title ON cast_info.movie_id = title.id LEFT JOIN complete_cast ON title.id = complete_cast.movie_id LEFT JOIN company_name ON title.id = company_name.imdb_id LEFT JOIN comp_cast_type ON cast_info.role_id = comp_cast_type.id WHERE complete_cast.subject_id = 1 AND (cast_info.nr_order IN (50, 54, 7, 19, 23, 101) OR cast_info.person_id IN (1494, 1727, 1433, 1693, 1732, 1327)) AND company_name.name_pcode_nf IN ('R2353', 'C6231', 'O4123', 'M3523', 'K2353', 'P6535') GROUP BY title.kind_id ORDER BY unique_actors DESC;
SELECT at.production_year, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.episode_nr) AS average_episodes_per_season, COUNT(DISTINCT rt.id) AS distinct_roles_count FROM aka_title at JOIN role_type rt ON at.kind_id = rt.id JOIN info_type it ON at.id = it.id WHERE at.production_year IN (1972, 1934, 1943) AND rt.role IN ('production designer', 'composer', 'guest', 'producer', 'actor', 'writer') AND it.info IN ('admissions', 'votes', 'LD master format', 'soundtrack') GROUP BY at.production_year ORDER BY at.production_year;
SELECT COUNT(DISTINCT a.id) AS unique_alternate_titles, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.movie_id) AS total_movies_with_complete_cast, SUM(CASE WHEN k.keyword = 'dry-cleaners' THEN 1 ELSE 0 END) AS dry_cleaners_keyword_count, (SELECT COUNT(*) FROM link_type) AS total_link_types FROM aka_title AS a LEFT JOIN complete_cast AS c ON a.movie_id = c.movie_id LEFT JOIN movie_keyword AS mk ON a.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id WHERE a.production_year >= 2000 AND c.status_id IN (SELECT id FROM comp_cast_type WHERE kind = 'complete+verified') AND (k.phonetic_code = 'L2523' OR k.keyword IN ('imam', 'jug', 'greek', 'richard-nixon')) GROUP BY a.kind_id HAVING COUNT(DISTINCT c.movie_id) > 5;
SELECT MIN(n.name) AS actor_name, AVG(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') THEN mi.info::FLOAT ELSE NULL END) AS average_movie_length, COUNT(DISTINCT k.id) AS unique_keywords_count, SUM(CASE WHEN ct.id = '1' THEN 1 ELSE 0 END) AS production_company_movies, SUM(CASE WHEN ct.id = '2' THEN 1 ELSE 0 END) AS distributor_movies, COUNT(DISTINCT a_t.id) AS total_movies_count FROM name AS n JOIN aka_name AS an ON n.id = an.person_id JOIN movie_info AS mi ON mi.movie_id = an.id JOIN movie_keyword AS mk ON mk.movie_id = an.id JOIN keyword AS k ON k.id = mk.keyword_id JOIN aka_title AS a_t ON a_t.movie_id = an.id JOIN movie_companies AS mc ON mc.movie_id = an.id JOIN company_type AS ct ON ct.id = mc.company_type_id WHERE n.name_pcode_nf = 'J4163' AND ct.id IN ('1', '2', '3', '4') GROUP BY n.id;
SELECT rt.ROLE, COUNT(distinct ci.movie_id) AS total_movies, COUNT(distinct ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, COUNT(distinct kw.id) AS total_keyword_occurrences, COUNT(distinct cn.id) AS total_companies_involved, AVG(length(pi.info)) AS average_person_info_length FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN keyword kw ON kw.id = ANY(ARRAY[9828, 3338, 5730, 2511]) JOIN company_name cn ON cn.imdb_id = mi_idx.movie_id JOIN person_info pi ON ci.person_id = pi.person_id WHERE rt.id IN (11, 10, 7, 2) AND rt.ROLE = 'actor' AND ci.movie_id IN (1610581, 1098561, 1413295, 2451586, 1851477, 2419871) AND ci.role_id = 1 GROUP BY rt.ROLE
SELECT t.production_year, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, AVG(mi.info::numeric) AS average_movie_info, SUM(CASE WHEN k.phonetic_code = 'V6413' THEN 1 ELSE 0 END) AS count_of_keyword_V6413, MAX(t.title) AS latest_movie_title FROM title t LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id AND mi.info_type_id = 1 WHERE t.production_year BETWEEN 1990 AND 2000 AND t.kind_id = 1 AND (k.phonetic_code IN ('V6413', 'V632', 'M61', 'F5326', 'U1263', 'L261') OR k.phonetic_code IS NULL) GROUP BY t.production_year ORDER BY t.production_year DESC;
SELECT kt.kind AS movie_kind, AVG(mk.keyword_id) AS average_keyword_id, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN cct.kind = 'crew' THEN 1 ELSE 0 END) AS total_crew_companies, MAX(cn.name) AS largest_company_name FROM movie_keyword AS mk JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id JOIN kind_type AS kt ON ml.link_type_id = kt.id WHERE ml.link_type_id IN ('7', '8') AND cct.id IN ('2', '1', '4', '3') GROUP BY kt.kind ORDER BY number_of_movies DESC, average_keyword_id;
SELECT rt.ROLE, COUNT(ci.id) AS number_of_people, AVG(ci.nr_order) AS average_order, COUNT(DISTINCT ci.movie_id) AS number_of_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id WHERE ci.person_role_id IS NOT NULL AND mk.keyword_id IN (SELECT id FROM movie_keyword WHERE movie_id IN ('10613', '18733')) GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT COUNT(DISTINCT t.id) AS num_movies, AVG(mi_idx.info::numeric) AS avg_movie_info, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS num_movies_imdb_v, SUM(CASE WHEN t.imdb_index = 'I' THEN 1 ELSE 0 END) AS num_movies_imdb_i, SUM(CASE WHEN t.imdb_index = 'II' THEN 1 ELSE 0 END) AS num_movies_imdb_ii, COUNT(DISTINCT ci.person_id) AS num_actors, COUNT(DISTINCT k.id) AS num_keywords FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN keyword AS k ON k.id = ci.role_id WHERE t.production_year >= 2000 AND mi_idx.info_type_id BETWEEN 100 AND 200 GROUP BY t.kind_id ORDER BY num_movies DESC;
SELECT AVG(cast_info.nr_order) AS average_cast_order, COUNT(DISTINCT name.id) AS total_actors, COUNT(DISTINCT movie_keyword.movie_id) AS total_movies_with_keywords, SUM(CASE WHEN comp_cast_type.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_verified_casts, COUNT(DISTINCT movie_link.movie_id) AS total_movie_links, MAX(aka_title.production_year) AS latest_production_year FROM cast_info JOIN name ON cast_info.person_id = name.id JOIN movie_keyword ON cast_info.movie_id = movie_keyword.movie_id JOIN comp_cast_type ON cast_info.role_id = comp_cast_type.id JOIN aka_title ON cast_info.movie_id = aka_title.movie_id JOIN movie_link ON cast_info.movie_id = movie_link.movie_id WHERE comp_cast_type.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND movie_keyword.keyword_id IN (3208, 869, 3853, 1657) AND aka_title.production_year BETWEEN 1990 AND 2020 GROUP BY aka_title.kind_id ORDER BY total_movies_with_keywords DESC, latest_production_year DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, SUM(pi.id) AS total_person_info_records, COUNT(DISTINCT k.id) AS unique_keywords_count FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN name AS n ON mc.movie_id = n.id JOIN person_info AS pi ON pi.person_id = n.id JOIN keyword AS k ON k.id = pi.id WHERE kt.id IN ('7', '6', '2', '5') AND k.keyword IN ('24-hours', 'compassion') AND n.surname_pcode IN ('A415', 'A4') AND pi.note IN ('Jack Backstreet', 'Zaid Adham', 'David Adler', 'John Dream', 'Trace''s Publicist') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_cast_count FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN title AS t ON ml.movie_id = t.id JOIN movie_info_idx AS miidx ON miidx.movie_id = t.id JOIN info_type AS it ON miidx.info_type_id = it.id JOIN name AS n ON n.id = miidx.movie_id WHERE lt.id IN (13, 14, 8, 18, 4) AND ml.movie_id IN (10590, 11494) AND n.name_pcode_cf IN ('A4534', 'A31') GROUP BY lt.LINK ORDER BY number_of_movies DESC, average_production_year;
SELECT COUNT(DISTINCT akat.movie_id) AS total_movies, AVG(CAST(akat.production_year AS DECIMAL)) AS average_production_year, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS total_movies_with_notes, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN it.info = 'English' THEN 1 ELSE 0 END) AS total_english_language_movies FROM aka_title akat JOIN movie_info mi ON akat.movie_id = mi.movie_id JOIN movie_info_idx miidx ON akat.movie_id = miidx.movie_id JOIN movie_keyword mk ON akat.movie_id = mk.movie_id JOIN movie_companies mc ON akat.movie_id = mc.movie_id JOIN info_type it ON mi.info_type_id = it.id WHERE akat.production_year IN (1979, 1966) AND mc.company_type_id IN (SELECT id FROM link_type WHERE id = 7) AND mk.id IN (3803, 847) GROUP BY akat.kind_id;
SELECT it.info AS information_type, COUNT(DISTINCT ml.id) AS total_movie_links, COUNT(DISTINCT pi.person_id) AS total_people_linked, AVG(LENGTH(pi.note)) AS average_note_length, SUM(CASE WHEN pi.info_type_id = 91 THEN 1 ELSE 0 END) AS count_of_tech_info FROM movie_link AS ml JOIN person_info AS pi ON ml.movie_id = pi.person_id OR ml.linked_movie_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE it.info = 'tech info' AND ml.link_type_id IN (SELECT id FROM info_type WHERE id IN (91, 73, 61, 38)) GROUP BY it.info;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies_count FROM role_type rt LEFT JOIN comp_cast_type cct ON rt.id = cct.id LEFT JOIN company_name cn ON cn.name_pcode_nf = 'M5236' OR cn.name_pcode_sf = 'L5612' LEFT JOIN movie_keyword mk ON mk.keyword_id IN (3479, 3152) WHERE cn.id IN (69171, 31595, 57187, 23935, 26659, 14910) AND rt.id IN (6, 5, 1, 7, 2) GROUP BY rt.ROLE ORDER BY number_of_companies DESC, number_of_movies_with_keywords DESC;
SELECT T.production_year, COUNT(*) AS total_titles, AVG(KW.count_keywords) AS avg_keywords_per_title, SUM(CASE WHEN T.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN T.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN T.kind_id = 3 THEN 1 ELSE 0 END) AS total_video_games FROM title AS T LEFT JOIN ( SELECT MK.movie_id, COUNT(MK.keyword_id) AS count_keywords FROM movie_keyword AS MK GROUP BY MK.movie_id ) AS KW ON T.id = KW.movie_id WHERE T.production_year BETWEEN 2000 AND 2020 GROUP BY T.production_year ORDER BY T.production_year;
SELECT AVG(ak.title_count) AS average_titles_per_movie, SUM(mc.company_count) AS total_companies_involved, COUNT(DISTINCT n.id) AS unique_actors_count FROM (SELECT movie_id, COUNT(*) AS title_count FROM aka_title GROUP BY movie_id) ak JOIN aka_title at ON ak.movie_id = at.movie_id JOIN (SELECT movie_id, COUNT(*) AS company_count FROM movie_companies GROUP BY movie_id) mc ON at.movie_id = mc.movie_id JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN name n ON cc.movie_id = n.id JOIN movie_companies mcom ON mcom.movie_id = ak.movie_id JOIN company_type ct ON mcom.company_type_id = ct.id JOIN link_type lt ON lt.id = 15 WHERE cct.kind = 'actors' AND ct.kind LIKE '%production%' AND lt.link = 'features' AND at.production_year BETWEEN 2000 AND 2010 GROUP BY ak.movie_id;
SELECT AVG(mi_idx.info::numeric) AS average_movie_rating, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(cn.name) AS largest_company_name, ct.kind AS company_type, MIN(lt.link) AS link_type_description, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN company_name cn ON cn.country_code = '[lv]' OR cn.country_code = '[by]' JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON lt.id = mi_idx.info_type_id WHERE mi_idx.info_type_id = (SELECT id FROM link_type WHERE link = 'edited from') AND (k.keyword = 'blind-woman' OR k.keyword = 'weather-forecasting') AND cn.name_pcode_sf IN ('O2163', 'G4214', 'A4314') GROUP BY ct.kind ORDER BY average_movie_rating DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT mk.movie_id) AS total_movies, COUNT(mk.keyword_id) AS total_keywords_use, AVG(keyword_length) AS avg_keyword_length, SUM(keyword_length) AS total_keyword_length FROM movie_keyword mk JOIN keyword k ON mk.keyword_id = k.id JOIN link_type lt ON mk.id = lt.id CROSS JOIN (SELECT LENGTH(k.keyword) AS keyword_length FROM keyword k) AS subquery GROUP BY lt.LINK ORDER BY total_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.id) AS average_movie_info_id, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_info_type_1, SUM(CASE WHEN mi.note IS NOT NULL THEN 1 ELSE 0 END) AS count_of_non_null_notes FROM movie_info mi JOIN movie_info_idx mii ON mi.movie_id = mii.movie_id JOIN company_type ct ON mii.info_type_id = ct.id WHERE mi.movie_id IN (939658, 924408, 929751) AND mi.id IN (7267027, 7270561, 7268356, 7270113) AND mii.id = 949 GROUP BY ct.kind;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_productions, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributions FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = 3 WHERE t.kind_id = 1 AND mc.company_type_id IN (1, 2) AND t.production_year BETWEEN 2000 AND 2020 GROUP BY t.production_year ORDER BY t.production_year;
SELECT it.info AS info_category, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(CAST(mi_idx.info AS numeric)) AS average_movie_info, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count FROM info_type it JOIN movie_info_idx mi_idx ON it.id = mi_idx.info_type_id JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN name n ON mi_idx.movie_id = n.id WHERE it.info IN ('crazy credits', 'bottom 10 rank', 'tech info', 'LD quality program', 'production process protocol') GROUP BY it.info;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN cct.kind = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN cct.kind = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN comp_cast_type cct ON ci.person_role_id = cct.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_type, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS total_tv_movies, SUM(CASE WHEN mc.note LIKE '%(DVD)%' THEN 1 ELSE 0 END) AS total_dvd_movies, SUM(CASE WHEN mc.note LIKE '%(VHS)%' THEN 1 ELSE 0 END) AS total_vhs_movies FROM kind_type kt JOIN aka_title at ON kt.id = at.kind_id JOIN movie_companies mc ON at.movie_id = mc.movie_id JOIN cast_info ci ON at.movie_id = ci.movie_id GROUP BY kt.kind;
SELECT kt.kind AS movie_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT n.id) AS total_actors, SUM(CASE WHEN cn.country_code IS NOT NULL THEN 1 ELSE 0 END) AS total_companies_with_country_code, MAX(cc.subject_id) AS max_subject_id_in_cast, MIN(cc.status_id) AS min_status_id_in_cast FROM aka_title AS t LEFT JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN complete_cast AS cc ON t.movie_id = cc.movie_id LEFT JOIN company_name AS cn ON t.movie_id = cn.imdb_id LEFT JOIN name AS n ON t.movie_id = n.imdb_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(mi_idx.info::NUMERIC) AS average_rating, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_movie_count FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN company_type AS ct ON ct.kind = 'miscellaneous companies' JOIN movie_companies AS mc ON t.id = mc.movie_id AND ct.id = mc.company_type_id WHERE t.kind_id = 1 AND mi_idx.info_type_id = 101 AND t.production_year BETWEEN 2000 AND 2010 AND mc.note LIKE '%(international)%' GROUP BY t.production_year ORDER BY t.production_year;
SELECT ct.kind AS cast_type, AVG(movcomp_notes.note_length) AS average_note_length, COUNT(DISTINCT movcomp.movie_id) AS number_of_movies, COUNT(DISTINCT comp.name) AS number_of_companies, SUM(CASE WHEN movcomp.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_producers, MAX(comp_cast.subject_id) AS max_subject_id_for_cast_type FROM complete_cast AS comp_cast JOIN comp_cast_type AS ct ON comp_cast.subject_id = ct.id JOIN movie_companies AS movcomp ON movcomp.movie_id = comp_cast.movie_id JOIN company_name AS comp ON movcomp.company_id = comp.id LEFT JOIN (SELECT movie_id, LENGTH(note) AS note_length FROM movie_companies) AS movcomp_notes ON movcomp.movie_id = movcomp_notes.movie_id WHERE comp_cast.id IN (4264, 2513, 575, 1032) AND comp_cast.subject_id = 1 AND ct.id = 4 GROUP BY ct.kind;
SELECT cct.kind AS cast_type, COUNT(DISTINCT cc.movie_id) AS number_of_movies, rt.ROLE AS role_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, AVG(CAST(mi.info AS numeric)) AS average_info_numeric_value FROM comp_cast_type AS cct JOIN complete_cast AS cc ON cct.id = cc.status_id JOIN role_type AS rt ON cc.subject_id = rt.id JOIN movie_info_idx AS mi ON cc.movie_id = mi.movie_id WHERE cct.id IN (2, 3) AND rt.id IN (11, 9, 1, 3) AND rt.ROLE IN ('producer', 'guest', 'writer') AND mi.id IN (4348, 2817, 476, 2090, 937) GROUP BY cct.kind, rt.ROLE ORDER BY number_of_movies DESC, average_info_numeric_value DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_characters, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.surname_pcode = 'T5253' THEN 1 ELSE 0 END) AS count_surname_T5253, SUM(CASE WHEN cn.surname_pcode = 'M5253' THEN 1 ELSE 0 END) AS count_surname_M5253, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, STRING_AGG(DISTINCT rt.ROLE, ', ') AS roles_involved, STRING_AGG(DISTINCT mc.note, '; ') AS production_notes FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN char_name cn ON cn.id = mc.movie_id LEFT JOIN role_type rt ON rt.id = mc.company_type_id WHERE kt.kind IN ('episode', 'tv movie', 'movie', 'video movie', 'tv mini series', 'video game') AND mc.company_type_id = 1 AND (cn.surname_pcode IN ('T5253', 'M5253') OR cn.name IN ('Ish', 'Conti', 'Governor of the town', 'Himself - Grand Questor', 'Miss Travers''s Class')) AND rt.ROLE IN ('costume designer', 'production designer', 'cinematographer', 'director', 'writer', 'miscellaneous crew') AND mc.note LIKE '%(TV)%' GROUP BY kt.kind;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_order_of_appearance, SUM(CASE WHEN ci.note LIKE '%(as %' THEN 1 ELSE 0 END) AS count_with_alias, COUNT(DISTINCT ml.movie_id) AS number_of_movies_linked, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, most_common_link_type.LINK AS most_common_link_type, COUNT(DISTINCT lt.id) AS number_of_distinct_link_types FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id LEFT JOIN (SELECT inner_ml.movie_id, lt.LINK FROM movie_link inner_ml JOIN link_type lt ON inner_ml.link_type_id = lt.id GROUP BY inner_ml.movie_id, lt.LINK ORDER BY COUNT(*) DESC ) AS most_common_link_type ON ci.movie_id = most_common_link_type.movie_id GROUP BY rt.ROLE, most_common_link_type.LINK ORDER BY number_of_actors DESC, average_order_of_appearance;
SELECT it.info AS info_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT kw.id) AS unique_keywords_count, SUM(mc.company_id) AS total_company_id_sum, rt.ROLE AS role_type, COUNT(DISTINCT cc.movie_id) AS movies_count FROM info_type AS it JOIN movie_companies AS mc ON it.id = mc.company_type_id LEFT JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id LEFT JOIN keyword AS kw ON mc.movie_id = kw.id LEFT JOIN name AS nm ON cc.subject_id = nm.id JOIN role_type AS rt ON cc.status_id = rt.id WHERE mc.company_type_id = '1' AND (nm.name_pcode_nf = 'B4645' OR nm.name_pcode_nf = 'B1436') AND (rt.ROLE = 'producer' OR rt.ROLE = 'actor') AND mc.movie_id IN ('1646081', '1699392', '1666532', '1678176', '1677967') GROUP BY it.info, rt.ROLE ORDER BY movies_count DESC, average_imdb_id;
SELECT ct.kind AS company_kind, cn.country_code, COUNT(DISTINCT cn.id) AS total_companies, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT k.phonetic_code) AS unique_keyword_phonetic_codes FROM company_name cn JOIN company_type ct ON cn.id = ct.id LEFT JOIN keyword k ON cn.id = k.id GROUP BY ct.kind, cn.country_code ORDER BY total_companies DESC, unique_keyword_phonetic_codes DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS avg_cast_position, SUM(case when cct.kind = 'cast' then 1 else 0 end) AS total_cast_entries, SUM(case when cct.kind = 'crew' then 1 else 0 end) AS total_crew_entries, MAX(n.name) AS most_recently_added_person, COUNT(DISTINCT mc.company_id) AS num_companies_involved, COUNT(DISTINCT k.id) AS num_keywords_associated FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN name n ON ci.person_id = n.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN keyword k ON k.id = ANY (SELECT mk.keyword_id FROM movie_keyword mk WHERE mk.movie_id = ci.movie_id) WHERE mc.movie_id IN ('10521', '18817') AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS total_companies, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN cct.kind = 'cast' THEN 1 ELSE 0 END) AS total_cast_roles, SUM(CASE WHEN cct.kind = 'crew' THEN 1 ELSE 0 END) AS total_crew_roles FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN movie_companies mc ON cn.id = mc.company_id JOIN cast_info ci ON mc.movie_id = ci.movie_id JOIN comp_cast_type cct ON ci.person_role_id = cct.id WHERE (cn.name = 'Laska Productions' OR cn.name = 'Curzon Film World' OR cn.name = 'Jernigan Films' OR cn.name = 'Clark Productions') AND ct.kind IN ('production companies', 'distributors') AND ci.person_id IN (1732, 1053, 1788, 1668, 1056, 1817) AND ci.person_role_id IN (374, 366) AND cct.id IN (1, 2, 3, 4) GROUP BY ct.kind;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS total_features_link, MAX(an.name) AS latest_aka_name FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN complete_cast AS cc ON mi_idx.movie_id = cc.movie_id JOIN movie_link AS ml ON mi_idx.movie_id = ml.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN aka_name AS an ON an.person_id = mi_idx.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND k.phonetic_code IN ('B3241', 'C23', 'A165', 'L5212', 'P45', 'N23') AND lt.link IN ('spin off', 'similar to', 'edited from', 'remade as', 'features') AND cc.movie_id = 1619 AND an.id = 2748 GROUP BY cc.movie_id;
SELECT ct.kind AS cast_type, rt.ROLE AS role, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT n.id) AS number_of_people, AVG(mk.keyword_id) AS average_keyword_id, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS count_movie_sequels FROM comp_cast_type ct JOIN role_type rt ON ct.id = rt.id JOIN company_name cn ON cn.country_code = 'us' JOIN name n ON n.gender = 'f' JOIN movie_keyword mk ON mk.movie_id = n.id JOIN movie_link ml ON ml.movie_id = n.id GROUP BY ct.kind, rt.ROLE HAVING COUNT(DISTINCT mk.keyword_id) > 10;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN name n ON mc.company_id = n.id WHERE ct.kind IN ('production companies', 'special effects companies', 'distributors') GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.info_type_id) AS average_info_type_id, SUM(CASE WHEN lt.link = 'featured in' THEN 1 ELSE 0 END) AS featured_in_count, SUM(CASE WHEN lt.link = 'version of' THEN 1 ELSE 0 END) AS version_of_count, COUNT(DISTINCT CASE WHEN rt.role = 'actor' THEN mi.movie_id END) AS actor_movie_count FROM movie_info mi JOIN company_type ct ON mi.info_type_id = ct.id JOIN link_type lt ON mi.id = lt.id JOIN role_type rt ON mi.id = rt.id WHERE mi.movie_id IN (925851, 931906, 924737, 927210, 924162) GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cast_member_count) AS average_cast_members_per_movie, SUM(link_count) AS total_movie_links FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN (SELECT movie_id, COUNT(*) AS cast_member_count FROM cast_info GROUP BY movie_id) AS ci ON mc.movie_id = ci.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS link_count FROM movie_link GROUP BY movie_id) AS ml ON mc.movie_id = ml.movie_id GROUP BY ct.kind ORDER BY total_movies_produced DESC;
SELECT ct.kind AS company_type, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS feature_films, SUM(CASE WHEN at.kind_id = 2 THEN 1 ELSE 0 END) AS short_films, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS tv_movies, COUNT(DISTINCT pi.person_id) AS total_individual_contributors FROM company_type ct JOIN company_name cn ON cn.country_code = 'US' JOIN movie_companies mc ON mc.company_id = cn.id AND mc.company_type_id = ct.id JOIN aka_title at ON at.movie_id = mc.movie_id LEFT JOIN person_info pi ON pi.info LIKE '%@%' WHERE at.kind_id IN (1, 2, 3, 4, 7) AND at.production_year BETWEEN 1990 AND 2020 GROUP BY ct.kind;
SELECT pi.info_type_id, COUNT(DISTINCT pi.person_id) AS total_people, AVG(CAST(pi.info AS FLOAT)) FILTER (WHERE pi.info_type_id = 1) AS average_info_type_1, SUM(CAST(pi.info AS INTEGER)) FILTER (WHERE pi.info_type_id = 2) AS sum_info_type_2, mc.company_type_id, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT cn.id) AS total_characters FROM person_info pi JOIN movie_companies mc ON pi.person_id = mc.company_id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN char_name cn ON cn.imdb_id = ml.linked_movie_id GROUP BY pi.info_type_id, mc.company_type_id HAVING COUNT(DISTINCT pi.person_id) > 1 ORDER BY total_people DESC, total_companies DESC;
SELECT rt.ROLE as role, COUNT(DISTINCT ci.person_id) as number_of_people, AVG(ci.nr_order) as average_order, SUM(case when ct.kind = 'distributors' then 1 else 0 end) as number_of_distributors, COUNT(DISTINCT ml.movie_id) as linked_movies_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN company_type ct ON ci.person_role_id = ct.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE ci.nr_order IN (14, 15) AND rt.id IN (7, 1) GROUP BY rt.ROLE;
SELECT ct.kind AS cast_type, lt.LINK AS link_type, avg(at.production_year) AS average_production_year, count(distinct at.movie_id) AS number_of_movies, sum(CASE WHEN co.kind = 'distributors' THEN 1 ELSE 0 END) AS number_of_distributors, sum(CASE WHEN co.kind = 'production companies' THEN 1 ELSE 0 END) AS number_of_production_companies, sum(CASE WHEN co.kind = 'special effects companies' THEN 1 ELSE 0 END) AS number_of_special_effects_companies FROM comp_cast_type AS ct JOIN aka_title AS at ON ct.id = at.kind_id JOIN company_type AS co ON at.kind_id = co.id JOIN link_type AS lt ON at.id = lt.id WHERE ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND lt.id IN ('13', '3', '5', '1', '10', '15') AND at.phonetic_code IN ('K4236', 'P2163', 'B5326') AND at.kind_id IN ('3', '2', '1', '4') GROUP BY ct.kind, lt.LINK;
SELECT AVG(mi.info::numeric) AS average_movie_length, COUNT(DISTINCT ci.person_id) AS unique_actors_count, COUNT(DISTINCT at.movie_id) AS total_alternate_titles, COUNT(DISTINCT ml.movie_id) AS movies_with_links, MAX(cn.name) AS company_with_latest_movie FROM movie_info mi JOIN aka_title at ON mi.movie_id = at.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN cast_info ci ON ci.movie_id = mi.movie_id JOIN company_name cn ON cn.imdb_id = mi.movie_id WHERE mi.info_type_id = 1 AND ml.link_type_id IN (3, 4, 6, 10) AND ml.linked_movie_id IN (1131872, 5910, 2403234) GROUP BY mi.movie_id;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(aka.production_year) AS average_production_year, SUM(CASE WHEN mi.info_type_id = 100 THEN 1 ELSE 0 END) as total_type_100_info, SUM(CASE WHEN mi.info_type_id = 101 THEN 1 ELSE 0 END) as total_type_101_info, COUNT(DISTINCT pi.person_id) AS total_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, rt.ROLE AS role_type, COUNT(DISTINCT CASE WHEN rt.id IN (1, 10, 7) THEN pi.person_id END) AS count_specific_roles FROM movie_info mi JOIN aka_title aka ON mi.movie_id = aka.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN person_info pi ON pi.info IN ('1988', 'Gontková, Olga', 'Wallerstein, Robin', 'Son with Booth: ''Al Adamson'' (qv)', 'Dresden, Germany', 'Adasky, Beryl') AND pi.note = 'woodyanders' LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN role_type rt ON rt.id IN (1, 10, 7) GROUP BY it.info, rt.ROLE ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producer_roles, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id LEFT JOIN role_type AS rt ON mi.info_type_id = rt.id AND rt.role IN ('actress', 'producer') GROUP BY kt.kind ORDER BY number_of_companies_involved DESC, avg_production_year;
SELECT kt.kind AS movie_type, AVG(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS avg_male_involvement, AVG(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS avg_female_involvement, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS total_titles_after_2000, COUNT(DISTINCT n.id) AS total_unique_persons_involved, COUNT(DISTINCT pi.person_id) AS total_persons_with_extra_info FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN person_info pi ON at.id = pi.person_id LEFT JOIN name n ON pi.person_id = n.id WHERE kt.id IN (5, 7) AND n.imdb_index IN ('VII', 'VI', 'XIII') AND at.production_year IS NOT NULL GROUP BY kt.kind;
SELECT kt.kind as movie_kind, AVG(t.production_year) as average_production_year, COUNT(DISTINCT t.id) as total_movies, COUNT(DISTINCT n.id) as total_actors, SUM(CASE WHEN pi.info_type_id = 76 THEN 1 ELSE 0 END) as total_awards, MIN(t.title) as earliest_movie_title FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info_idx mii ON t.id = mii.movie_id JOIN info_type it ON mii.info_type_id = it.id JOIN person_info pi ON pi.info_type_id = it.id JOIN name n ON pi.person_id = n.id WHERE kt.kind = 'video game' AND t.production_year > 2000 AND n.gender = 'f' AND pi.note NOT LIKE '%Coverland%' AND pi.note NOT LIKE '%CED Talent%' AND pi.note NOT LIKE '%The Official Web Site of Alexandra Adomaitis%' GROUP BY kt.kind;
SELECT cn.country_code, k.keyword, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(CAST(NULLIF(REGEXP_REPLACE(mi_duration.info, '[^\d.]', '', 'g'), '') AS NUMERIC)) AS average_movie_duration, SUM(CASE WHEN mi_release.info_type_id = 4 THEN 1 ELSE 0 END) AS count_movie_releases FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN movie_info AS mi_release ON mc.movie_id = mi_release.movie_id AND mi_release.info_type_id = 4 LEFT JOIN movie_info AS mi_duration ON mc.movie_id = mi_duration.movie_id AND mi_duration.info_type_id = 3 WHERE k.keyword IN ('dead-mother', 'manipulation') AND mi_release.note IN ('(some dialogue)', '(none)', '(only a few lines)', '(a few lines)', '(a few words)') GROUP BY cn.country_code, k.keyword ORDER BY cn.country_code, k.keyword;
SELECT ct.kind AS company_type, AVG(pi.info::NUMERIC) AS average_salary, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, COUNT(DISTINCT cn.id) AS total_companies FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN person_info AS pi ON cn.imdb_id = pi.person_id WHERE pi.info_type_id = 2 AND ct.kind = 'Production' GROUP BY ct.kind ORDER BY average_salary DESC;
SELECT kt.kind AS movie_kind, AVG(title.production_year) AS average_production_year, COUNT(DISTINCT cast_info.person_id) AS number_of_actors, COUNT(DISTINCT company_name.id) AS number_of_companies, SUM(case when cast_info.role_id = 1 then 1 else 0 end) AS number_of_lead_roles, MAX(movie_info.info) AS longest_movie_info FROM title JOIN kind_type AS kt ON title.kind_id = kt.id JOIN cast_info ON title.id = cast_info.movie_id JOIN movie_companies ON title.id = movie_companies.movie_id JOIN company_name ON movie_companies.company_id = company_name.id JOIN movie_info ON title.id = movie_info.movie_id WHERE title.production_year >= 2000 AND cast_info.role_id = 1 AND movie_companies.company_type_id IN (SELECT id FROM company_name WHERE country_code = 'US') GROUP BY kt.kind ORDER BY average_production_year DESC, number_of_actors DESC;
SELECT it.info AS info_category, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mn.movie_id) AS total_movies, AVG(CAST(pi.info AS INTEGER)) FILTER (WHERE it.info = 'runtimes') AS average_runtime, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'remade as') AS total_remake_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'features') AS total_feature_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'spoofed in') AS total_spoof_links, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link = 'edited from') AS total_edit_links, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = 103) AS total_LD_language_entries FROM company_name AS cn JOIN movie_link AS mn ON cn.id = mn.movie_id JOIN link_type AS lt ON mn.link_type_id = lt.id JOIN person_info AS pi ON cn.imdb_id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id WHERE cn.country_code = 'US' AND it.info IN ('portrayed in', 'runtimes', 'release dates', 'alternate versions', 'LD quality of source') GROUP BY it.info;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, COUNT(DISTINCT at.id) AS number_of_alternative_titles, rt.ROLE, COUNT(*) AS total_movies_by_role_type FROM title AS t JOIN movie_keyword AS mk ON mk.movie_id = t.id JOIN aka_title AS at ON at.movie_id = t.id JOIN role_type AS rt ON rt.id = at.kind_id WHERE t.production_year BETWEEN 1990 AND 2000 AND rt.id IN ('5', '4', '6') AND t.imdb_index IN ('V', 'I', 'II') GROUP BY rt.ROLE ORDER BY total_movies_by_role_type DESC;
SELECT pi.person_id, COUNT(DISTINCT k.id) AS keyword_count, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT cn.id) AS unique_char_count FROM person_info pi JOIN info_type it ON pi.info_type_id = it.id JOIN keyword k ON it.id = k.id AND k.phonetic_code IN ('S5312', 'M3243', 'W16', 'C26', 'W3616') JOIN char_name cn ON pi.person_id = cn.id AND cn.name_pcode_nf IN ('R2631', 'N', 'D2362') AND cn.surname_pcode IN ('C64', 'C145', 'W43', 'V5365', 'P6536') GROUP BY pi.person_id ORDER BY keyword_count DESC, unique_char_count DESC;
SELECT kt.kind AS movie_kind, rt.ROLE AS role_type, AVG(ci.nr_order) AS avg_cast_order, COUNT(DISTINCT mk.keyword_id) AS keyword_count, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, COUNT(DISTINCT at.movie_id) AS aka_titles_count, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS credited_roles_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM aka_title WHERE movie_id = ci.movie_id LIMIT 1) JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN movie_link ml ON ml.movie_id = ci.movie_id LEFT JOIN aka_title at ON at.movie_id = ci.movie_id WHERE ci.nr_order IN (21, 36) AND rt.id IN (7, 12, 10) AND rt.ROLE IN ('director', 'production designer', 'editor', 'costume designer') GROUP BY kt.kind, rt.ROLE;
SELECT kind.id AS kind_id, COUNT(DISTINCT aka_title.movie_id) AS number_of_movies, AVG(aka_title.production_year) AS average_production_year, COUNT(DISTINCT movie_info_idx.info_type_id) AS unique_info_types_count, SUM(CASE WHEN info_type.info = 'locations' THEN 1 ELSE 0 END) AS locations_count, SUM(CASE WHEN info_type.info = 'adaption' THEN 1 ELSE 0 END) AS adaption_count, SUM(CASE WHEN info_type.info = 'LD disc format' THEN 1 ELSE 0 END) AS ld_disc_format_count, SUM(CASE WHEN info_type.info = 'quotes' THEN 1 ELSE 0 END) AS quotes_count FROM aka_title JOIN movie_info_idx ON aka_title.movie_id = movie_info_idx.movie_id JOIN info_type ON movie_info_idx.info_type_id = info_type.id JOIN (SELECT id, kind_id FROM aka_title GROUP BY id, kind_id) AS kind ON aka_title.kind_id = kind.id GROUP BY kind.id ORDER BY number_of_movies DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mk.keyword_id AS NUMERIC)) AS average_keyword_id, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS completed_movie_count FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_keyword mk ON mc.movie_id = mk.movie_id LEFT JOIN complete_cast cc ON mc.movie_id = cc.movie_id WHERE mc.company_type_id = 1 AND cn.country_code IS NOT NULL GROUP BY cn.name ORDER BY number_of_movies DESC, completed_movie_count DESC LIMIT 10;
SELECT p.info AS person_birthplace, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(sub.link_count) AS average_number_of_links_per_movie, SUM(CASE WHEN mk.keyword_id = 2693 THEN 1 ELSE 0 END) AS count_keyword_2693 FROM person_info p LEFT JOIN movie_keyword mk ON p.person_id = mk.movie_id LEFT JOIN ( SELECT movie_id, COUNT(*) AS link_count FROM movie_link GROUP BY movie_id ) sub ON sub.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mk.movie_id WHERE p.info = 'Miles City, Montana, USA' GROUP BY p.info;
SELECT t.title AS Movie_Title, COUNT(DISTINCT akn.id) AS Number_of_Aliases, COUNT(DISTINCT cn.id) AS Number_of_Characters, COUNT(DISTINCT mk.id) AS Number_of_Keywords, AVG(t.production_year) AS Average_Production_Year, SUM(CASE WHEN akn.name_pcode_cf IN ('A2312', 'A4565', 'A2651', 'T4236', 'K526', 'A1216') THEN 1 ELSE 0 END) AS Sum_Aliases_With_Specific_Pcodes, SUM(CASE WHEN akn.surname_pcode IN ('M53', 'Q53', 'L23') THEN 1 ELSE 0 END) AS Sum_Aliases_With_Specific_Surnames FROM title t LEFT JOIN aka_name akn ON t.id = akn.person_id LEFT JOIN char_name cn ON t.id = cn.imdb_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE mk.keyword_id IN ('2968', '2869', '3716', '2906') AND t.id IN ('199103', '150273', '87557') GROUP BY t.title ORDER BY Number_of_Aliases DESC, Number_of_Characters DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, LT.LINK AS link_type, AVG(pi.person_id) AS average_person_id, SUM(CASE WHEN mk.keyword_id = '3986' THEN 1 ELSE 0 END) AS count_of_keyword_3986, SUM(CASE WHEN mk.keyword_id = '3808' THEN 1 ELSE 0 END) AS count_of_keyword_3808, SUM(CASE WHEN mk.keyword_id = '4322' THEN 1 ELSE 0 END) AS count_of_keyword_4322 FROM movie_link AS ml JOIN link_type AS LT ON ml.link_type_id = LT.id JOIN kind_type AS kt ON kt.id IN ('6', '5') JOIN movie_keyword AS mk ON mk.movie_id = ml.movie_id LEFT JOIN person_info AS pi ON pi.person_id = ml.movie_id AND pi.info_type_id = mk.keyword_id WHERE mk.movie_id = '8874' AND LT.link IN ('features', 'referenced in', 'spin off', 'edited from', 'remade as', 'unknown link') GROUP BY kt.kind, LT.LINK;
SELECT AVG(aka.production_year) AS average_production_year, COUNT(DISTINCT aka.id) AS total_alternate_titles, COUNT(DISTINCT pi.person_id) AS total_persons_involved, SUM(CASE WHEN ct.kind = 'Distributor' THEN 1 ELSE 0 END) AS total_distributors, MAX(mi_idx.info) AS max_rating_info, MIN(mi_idx.info) AS min_rating_info FROM aka_title AS aka JOIN movie_info_idx AS mi_idx ON aka.movie_id = mi_idx.movie_id JOIN person_info AS pi ON pi.info_type_id = mi_idx.info_type_id JOIN company_type AS ct ON ct.id = mi_idx.info_type_id WHERE aka.production_year BETWEEN 1990 AND 2020 AND mi_idx.note IS NOT NULL AND aka.md5sum IN ('8173fbc966e75848163d8bf3766b4497', 'b17609e6b3c789ed4cc36812549fe2b4', 'df5fc0502294c32330a516626ef75c18') GROUP BY mi_idx.info_type_id HAVING COUNT(DISTINCT aka.movie_id) > 10 ORDER BY average_production_year DESC, total_alternate_titles;
SELECT n.name AS actor_name, COUNT(a.id) AS aka_name_count, AVG(n.imdb_id) AS average_imdb_id, SUM(mc.movie_id) AS sum_movie_ids, MAX(mc.note) AS latest_production_note FROM name n LEFT JOIN aka_name a ON n.id = a.person_id INNER JOIN movie_companies mc ON n.id = mc.company_id WHERE n.imdb_index IN ('IX', 'XVI', 'I', 'XI', 'XIX') AND a.name_pcode_nf IN ('N1312', 'A6236', 'W5653', 'A5463', 'K52', 'B5415') AND mc.company_type_id = '1' GROUP BY n.name;
SELECT cct.kind AS cast_type, AVG(nm.imdb_id) AS average_imdb_id, COUNT(DISTINCT an.name) AS unique_aka_names, COUNT(*) AS total_entries, SUM(CASE WHEN an.surname_pcode = 'P1' THEN 1 ELSE 0 END) AS surname_pcode_P1_count FROM name nm JOIN aka_name an ON nm.id = an.person_id JOIN complete_cast cc ON nm.id = cc.subject_id JOIN comp_cast_type cct ON cc.status_id = cct.id WHERE an.name IN ('Aldhaheri, Saeed Ali Mohammed', 'Allen-Turner, Knitted Richard', 'Allen, Clinton Layne', 'Burpee, Luke', 'Algrang, Manfred Anton', 'Alfonsó') GROUP BY cct.kind
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies_kind_id_2, SUM(CASE WHEN t.kind_id = 7 THEN 1 ELSE 0 END) AS total_movies_kind_id_7, COUNT(DISTINCT aka.id) AS total_alternate_titles, SUM(CASE WHEN t.season_nr = 34 THEN 1 ELSE 0 END) AS total_season_34_episodes FROM title t LEFT JOIN aka_title aka ON t.id = aka.movie_id LEFT JOIN company_type ct ON t.kind_id = ct.id GROUP BY ct.kind;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_status_id_4, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS count_status_id_3, COUNT(DISTINCT pi.person_id) AS distinct_person_count FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id LEFT JOIN name AS n ON cc.subject_id = n.id LEFT JOIN person_info AS pi ON n.id = pi.person_id WHERE lt.id IN (6, 15, 11, 5) AND cc.subject_id = 1 AND cc.status_id IN (4,3) AND ml.id IN (2720, 2119, 4076, 1826, 498) AND ml.linked_movie_id IN (260725, 2349487, 1391927) GROUP BY lt.LINK;
SELECT cn.name AS company_name, ct.kind AS company_type, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_rating, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT aka.person_id) AS number_of_unique_actors FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN movie_info mi ON cn.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') JOIN movie_keyword mk ON mi.movie_id = mk.movie_id AND mk.keyword_id IN (107, 3961, 2524, 3462, 4021, 2764) JOIN aka_name aka ON aka.person_id = mk.movie_id WHERE cn.country_code IN ('[cl]', '[md]', '[ir]', '[ma]', '[ddde]', '[tt]') AND EXISTS (SELECT 1 FROM complete_cast cc WHERE cc.movie_id = mk.movie_id AND cc.status_id IN (4, 3)) GROUP BY cn.name, ct.kind ORDER BY average_movie_rating DESC, number_of_movies_with_keywords DESC, number_of_unique_actors DESC LIMIT 10;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS movie_count, AVG(cn.imdb_index::numeric) AS avg_imdb_index, COUNT(DISTINCT ml.linked_movie_id) AS unique_linked_movies_count FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN char_name AS cn ON mk.movie_id = cn.id JOIN movie_link AS ml ON mk.movie_id = ml.movie_id WHERE k.id IN (5710) AND cn.name IN ('George Curtis', 'Sheet-metal worker', 'Sam Hall', 'Mr. Wood', 'Basil''s Henchman', 'Harvard Interviewer') AND cn.md5sum = '935983a2b8b5ca56e24c96447e850d60' GROUP BY k.keyword ORDER BY movie_count DESC;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN k.keyword IN ('intelligence-agency', 'armed-forces') THEN 1 ELSE 0 END) AS military_related_movies, COUNT(DISTINCT CASE WHEN k.keyword = 'monster-in-the-closet' THEN akat.movie_id END) AS monster_in_the_closet_movies FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id LEFT JOIN keyword AS k ON akat.movie_id = k.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT cc.kind AS cast_kind, AVG(cc.id) AS average_cast_id, CN.name AS company_name, COUNT(*) AS number_of_movies, SUM(MI.id) AS sum_movie_info_id, AVG(MI.info_type_id) AS average_info_type_id FROM cast_info CI JOIN comp_cast_type CC ON CI.person_role_id = CC.id JOIN company_name CN ON CN.country_code = CI.note JOIN movie_info_idx MI ON CI.movie_id = MI.movie_id WHERE CI.nr_order IN (56, 62, 2, 74) AND CI.movie_id IN (1884275, 2284142, 1084092) AND CN.country_code IN ('[xyu]', '[suhh]', '[lv]', '[nl]', '[cn]') AND CN.name_pcode_sf IN ('W4216', 'A4526', 'S4163', 'C1616') GROUP BY cc.kind, CN.name ORDER BY number_of_movies DESC, company_name;
SELECT avg(pi.info::numeric) AS average_rating, count(DISTINCT ci.person_id) AS number_of_actors, count(DISTINCT mk.keyword_id) AS number_of_keywords, kt.kind_id, kt.production_year FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id INNER JOIN cast_info AS ci ON mc.movie_id = ci.movie_id INNER JOIN aka_title AS kt ON mc.movie_id = kt.movie_id INNER JOIN person_info AS pi ON ci.person_id = pi.person_id AND pi.info_type_id = 101 WHERE kt.title IN ('Law & Order: Special Victims Unit', 'Plus One Minus One', 'The Searchers') AND mc.movie_id IN ('12242', '26379') AND kt.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind_id, kt.production_year ORDER BY average_rating DESC, number_of_actors DESC, number_of_keywords DESC;
SELECT ct.kind as cast_type, COUNT(DISTINCT mk.movie_id) as num_movies, COUNT(DISTINCT k.id) as num_keywords, AVG(sub.num_keywords_per_movie) as avg_keywords_per_movie, SUM(sub.num_keywords_per_movie) as total_keywords FROM movie_keyword as mk INNER JOIN keyword as k ON mk.keyword_id = k.id INNER JOIN comp_cast_type as ct ON ct.id = mk.movie_id INNER JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) as num_keywords_per_movie FROM movie_keyword as mk GROUP BY mk.movie_id ) sub ON mk.movie_id = sub.movie_id GROUP BY ct.kind;
SELECT a.title AS alternate_title, m.title AS original_title, COUNT(DISTINCT n.id) AS number_of_actors, AVG(CAST(mi.info AS numeric)) AS average_rating, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors FROM aka_title AS a JOIN movie_info AS mi ON a.movie_id = mi.movie_id JOIN title AS m ON a.movie_id = m.id JOIN cast_info AS ci ON m.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND a.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie') AND m.production_year BETWEEN 2000 AND 2010 AND n.name IN ('Ando, Tadao', 'Amey, Ian') GROUP BY a.title, m.title ORDER BY average_rating DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS roles_with_person_role, COUNT(DISTINCT ci.person_id) AS distinct_actors_count FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN company_type ct ON cct.id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT an.person_id) AS number_of_unique_persons, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN ml.link_type_id = 12 THEN 1 ELSE 0 END) AS count_of_link_type_12 FROM aka_title AS ak JOIN aka_name AS an ON ak.id = an.person_id JOIN movie_keyword AS mk ON ak.movie_id = mk.movie_id JOIN movie_link AS ml ON ak.movie_id = ml.movie_id WHERE an.name_pcode_cf IN ('P54', 'A5321', 'D232', 'A1463', 'V4214', 'A235') AND ak.kind_id = (SELECT id FROM info_type WHERE info = 'movie') AND ak.production_year BETWEEN 2000 AND 2020 GROUP BY ak.kind_id;
SELECT COUNT(DISTINCT ci.id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT mk.id) AS total_movie_keywords, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mi.id) AS total_movie_info_records, ct.kind AS company_kind, COUNT(DISTINCT n.id) AS total_people FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN title t ON ci.movie_id = t.id JOIN movie_info mi ON mi.movie_id = t.id JOIN company_type ct ON ct.id = mi.info_type_id JOIN name n ON n.id = ci.person_id WHERE ci.role_id = 1 AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND ci.nr_order IN (36, 47, 23, 39) AND mk.movie_id IN (14906, 12662, 17516, 17625) GROUP BY ct.kind ORDER BY total_movie_keywords DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_value, SUM(CAST(mi_idx.info AS NUMERIC)) AS total_info_value, COUNT(DISTINCT k.id) AS distinct_keywords_used FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN keyword k ON k.phonetic_code LIKE mi_idx.info WHERE mi_idx.info_type_id IN (100, 101, 99) AND mi_idx.info LIKE '...12...23' AND mc.company_id IN (741, 1095, 343, 1129) AND it.id IN (92, 14, 59) GROUP BY it.info ORDER BY number_of_movies DESC, average_info_value DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS total_series, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info, COUNT(DISTINCT pi.person_id) AS total_persons_with_info, COUNT(DISTINCT cn.id) AS total_companies, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at LEFT JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_info mi ON at.movie_id = mi.movie_id LEFT JOIN person_info pi ON mi.movie_id = pi.person_id LEFT JOIN company_name cn ON mi.movie_id = cn.imdb_id GROUP BY kt.kind ORDER BY total_alternate_titles DESC;
SELECT AVG(CAST(mi_idx.info AS decimal)) AS average_rating, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributors, n.gender, ki.keyword FROM cast_info AS ci JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN name AS n ON ci.person_id = n.id JOIN keyword AS ki ON mi_idx.info_type_id = ki.id WHERE ci.role_id = 1 AND n.gender IS NOT NULL AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'distributor') GROUP BY n.gender, ki.keyword HAVING COUNT(DISTINCT ci.movie_id) > 10 ORDER BY average_rating DESC, number_of_movies DESC;
SELECT t.kind_id, min(k.kind) AS movie_kind, avg(t.production_year) AS average_production_year, count(DISTINCT mc.company_id) AS number_of_companies, count(DISTINCT ml.id) AS number_of_movie_links, count(DISTINCT mc.company_type_id) AS number_of_company_types FROM title AS t LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN comp_cast_type AS k ON mc.company_type_id = k.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id AND ml.link_type_id IN ('16', '10') WHERE t.kind_id IN ('2', '7') GROUP BY t.kind_id;
SELECT cnt.kind AS company_type, AVG(mc_notes.note_length) AS average_note_length, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mc.movie_id) AS movies_involved, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cnt ON mc.company_type_id = cnt.id LEFT JOIN ( SELECT movie_id, company_id, LENGTH(note) as note_length FROM movie_companies WHERE note IS NOT NULL ) AS mc_notes ON mc.movie_id = mc_notes.movie_id AND mc.company_id = mc_notes.company_id LEFT JOIN ( SELECT name.id, name.gender FROM name WHERE name.gender IN ('F', 'M') ) AS n ON mc.company_id = n.id GROUP BY cnt.kind ORDER BY cnt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people_involved, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS num_male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS num_female_actors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN cast_info AS ci ON mc.movie_id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE ct.id IN (2, 3, 4) GROUP BY ct.kind
SELECT cn.name AS character_name, COUNT(cn.id) AS character_occurrences, AVG(cn.imdb_id) AS average_imdb_id FROM char_name AS cn JOIN aka_name AS akn ON akn.person_id = cn.id JOIN company_type AS ct ON ct.id = akn.person_id WHERE ct.kind = 'distributors' GROUP BY cn.name ORDER BY character_occurrences DESC, average_imdb_id DESC;
SELECT mi.info AS genre, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS FLOAT)) AS average_rating, COUNT(DISTINCT k.id) AS keyword_count FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id AND it.info = 'genre' LEFT JOIN movie_info_idx AS mi_idx ON mi.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id GROUP BY mi.info HAVING COUNT(DISTINCT mi.movie_id) > 10 ORDER BY average_rating DESC, number_of_movies DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT c.id) AS total_casts, AVG(mi.info::INTEGER) AS average_movie_length, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequels FROM title t LEFT JOIN complete_cast c ON t.id = c.movie_id AND c.subject_id = 1 LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id AND mi.info_type_id = 3 LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id = 1 WHERE t.production_year IN (1997, 1974, 1967, 1969) GROUP BY t.production_year ORDER BY t.production_year;
SELECT c.name AS company_name, it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS num_movies, AVG(CAST(mi_idx.info AS numeric)) AS average_info, SUM(CAST((CASE WHEN mi_idx.note = '1' THEN 1 ELSE 0 END) AS integer)) AS sum_notes_flagged_1 FROM company_name c JOIN movie_info mi ON c.id = mi.movie_id JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND mk.keyword_id IN ('4340', '3698', '3610', '2735') AND mi_idx.info IN ('0.0.010105', '1....1..6.', '1......413', '0..0000033') GROUP BY c.name, it.info ORDER BY num_movies DESC, average_info DESC;
SELECT k.keyword, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS number_of_persons, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, COUNT(DISTINCT at.title) AS number_of_alternate_titles FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN title AS t ON mk.movie_id = t.id LEFT JOIN aka_title AS at ON t.id = at.movie_id LEFT JOIN aka_name AS an ON t.id = an.person_id LEFT JOIN name AS n ON an.person_id = n.id WHERE k.phonetic_code IN ('F4235', 'I626') AND t.production_year > 2000 GROUP BY k.keyword ORDER BY number_of_movies DESC;
SELECT at.production_year, ct.kind AS cast_type, COUNT(DISTINCT at.id) AS number_of_titles, COUNT(DISTINCT at.movie_id) AS number_of_movies, COUNT(DISTINCT ml.movie_id) AS movies_with_links, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies, AVG(at.season_nr) AS average_season_number, SUM(at.episode_nr) AS total_episode_count FROM aka_title AS at JOIN comp_cast_type AS ct ON at.kind_id = ct.id LEFT JOIN movie_link AS ml ON at.movie_id = ml.movie_id WHERE at.production_year > 2000 AND ml.link_type_id IN ('10', '2', '4') AND ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY at.production_year, ct.kind ORDER BY at.production_year DESC, number_of_titles DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_lead_roles FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN char_name cn ON ci.person_role_id = cn.id WHERE ci.person_id IN (1097, 1215) AND ci.role_id = 1 AND kt.id = 7 GROUP BY kt.kind;
SELECT it.info AS info_type, AVG(CAST(mi.info AS INTEGER)) AS average_info, COUNT(DISTINCT mk.movie_id) AS count_movies, COUNT(DISTINCT at.id) AS count_alternative_titles, SUM(CASE WHEN at.episode_of_id = 15436 THEN 1 ELSE 0 END) AS count_episodes_of_show_15436 FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mk.movie_id = mi.movie_id LEFT JOIN aka_title at ON at.movie_id = mi.movie_id WHERE it.id IN (112, 107) AND mi.info ~ '^\d+$' GROUP BY it.info HAVING COUNT(DISTINCT mk.movie_id) > 5;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, COUNT(DISTINCT pi.person_id) AS total_actors, AVG(CAST(pi.info AS numeric)) AS average_rating, SUM(CASE WHEN pi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_main_roles FROM movie_link AS ml JOIN kind_type AS kt ON kt.id = ml.link_type_id JOIN person_info AS pi ON pi.person_id = ml.movie_id WHERE kt.kind IN ('video movie', 'tv movie', 'video game', 'episode') AND ml.linked_movie_id IN (825152, 1846684, 1922177) AND pi.person_id IN (1740363, 732, 286, 1740595, 2742) AND pi.info_type_id IN (1, 7) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT mc.company_id, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(subquery.keyword_count) AS avg_keywords_per_movie, COUNT(DISTINCT pi.person_id) AS unique_roles_involved FROM movie_companies AS mc LEFT JOIN (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id) AS subquery ON mc.movie_id = subquery.movie_id LEFT JOIN person_info AS pi ON mc.movie_id = pi.person_id WHERE mc.company_id = 947 GROUP BY mc.company_id;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(ci.status_id) AS average_status_id, SUM(ci.subject_id) AS total_subject_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN complete_cast AS ci ON ml.movie_id = ci.movie_id WHERE lt.id IN (8, 10) AND ci.status_id BETWEEN 1 AND 10 GROUP BY lt.LINK ORDER BY number_of_movies DESC, number_of_linked_movies DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN m_info.info = 'Tagalog' THEN 1 ELSE 0 END) AS tagalog_movie_count FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') JOIN movie_info AS m_info ON ci.movie_id = m_info.movie_id AND m_info.info_type_id = (SELECT id FROM info_type WHERE info = 'language') JOIN aka_name AS an ON n.id = an.person_id WHERE n.md5sum IN ('5c62d56f20103365a0051ebfd83ddd52', '4fbdca492f6b2ca9c6ee41602f4c8105', 'b19cb2bb887743bd4f33ed7c2b452ef6', '11f7d599980f6d97b7059ab1819ac294', 'd8d7be4935447c9e30dce0605179162d', 'e788144eeed55c07f730effca4f3cb55') AND n.surname_pcode = 'A4' GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY average_movie_rating DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT a_t.movie_id) AS num_movies, COUNT(DISTINCT c_c.movie_id) AS num_complete_cast_movies, COUNT(DISTINCT p_i.person_id) AS num_persons_info, SUM(CASE WHEN a_t.production_year >= 2000 THEN 1 ELSE 0 END) AS num_movies_since_2000 FROM movie_info_idx mi_idx JOIN aka_title a_t ON mi_idx.movie_id = a_t.movie_id JOIN complete_cast c_c ON a_t.movie_id = c_c.movie_id JOIN person_info p_i ON p_i.person_id = ANY(ARRAY[1739786, 3545, 2362, 3631, 1719, 1739809]) WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND a_t.kind_id = 1 AND a_t.production_year IS NOT NULL GROUP BY a_t.kind_id;
SELECT it.info AS info_category, COUNT(pi.id) AS total_person_info_records, AVG(mi.movie_id) AS average_movie_id, SUM(CASE WHEN pi.note = 'anonymous' THEN 1 ELSE 0 END) AS anonymous_count, SUM(CASE WHEN pi.note = 'Spook Show Entertainment' THEN 1 ELSE 0 END) AS spook_show_count, MAX(pi.id) AS max_person_info_id, MIN(mi.id) AS min_movie_info_id FROM person_info pi JOIN info_type it ON pi.info_type_id = it.id JOIN movie_info mi ON pi.person_id = mi.movie_id JOIN comp_cast_type cct ON mi.info_type_id = cct.id AND cct.kind = 'complete' GROUP BY it.info HAVING COUNT(pi.id) > 5 ORDER BY total_person_info_records DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movies_played, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN cct.kind = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN cct.kind = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN comp_cast_type cct ON ci.role_id = cct.id WHERE ci.person_role_id IN (1242, 894) AND ci.id IN (15187, 18533) AND n.id IN (8915, 8784, 8411, 7360) AND ci.person_id IN (4062401, 4062465, 1751638, 4062519, 1747068, 24195) GROUP BY n.name;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_role_order, SUM(CASE WHEN cn.surname_pcode = 'G3143' THEN 1 ELSE 0 END) AS count_surname_G3143_roles, it.info AS information_type, COUNT(DISTINCT ci.person_id) AS number_of_persons FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN char_name cn ON ci.person_role_id = cn.id JOIN info_type it ON cn.imdb_id = it.id WHERE ci.person_id IN (1663, 1868, 1050, 1120) AND ci.person_role_id IN (538, 1342, 1444, 1143, 1039) AND rt.id IN (5, 3, 1, 11) GROUP BY rt.ROLE, it.info ORDER BY number_of_movies DESC, average_role_order;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT an.person_id) AS unique_actors_with_alternate_names, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_produced_after_2000 FROM aka_name an INNER JOIN name n ON an.person_id = n.id INNER JOIN aka_title at ON n.id = at.movie_id INNER JOIN title t ON at.movie_id = t.id INNER JOIN kind_type kt ON t.kind_id = kt.id INNER JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN char_name chn ON an.person_id = chn.id WHERE (chn.name = 'Clarkson' OR chn.name = 'Miguelito' OR chn.name = 'Basket coach') GROUP BY kt.kind;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_unique_characters, SUM(CASE WHEN ct.kind = 'Production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(mc.note) AS longest_note FROM aka_title AS akat JOIN movie_companies AS mc ON akat.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN char_name AS cn ON akat.id = cn.id WHERE akat.production_year BETWEEN 2000 AND 2020 AND ct.kind IN ('Production', 'Distributors', 'Special Effects') GROUP BY ct.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT kt.kind, AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS total_votes, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT p.id) AS number_of_people_involved FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies mc ON t.id = mc.movie_id JOIN person_info p ON p.info_type_id = mi_idx.info_type_id WHERE kt.kind = 'movie' AND t.production_year BETWEEN 2000 AND 2010 AND mi_idx.info_type_id IN (1, 3) GROUP BY kt.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY average_rating DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CASE WHEN kt.kind = 'movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_movies, AVG(CASE WHEN kt.kind = 'tv movie' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_movies, AVG(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) * 100.0 AS percentage_tv_mini_series, AVG(CASE WHEN kt.kind = 'episode' THEN 1 ELSE 0 END) * 100.0 AS percentage_episodes FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN kind_type AS kt ON mc.movie_id = kt.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_movies, COUNT(DISTINCT cn.id) AS number_of_companies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN title AS t ON mc.movie_id = t.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ml.movie_id) AS total_movies_linked, AVG(mi_idx.info::integer) AS average_info_index, STRING_AGG(DISTINCT cn.name, ', ') AS involved_companies, COUNT(DISTINCT rt.id) FILTER (WHERE rt.role IN ('production designer', 'costume designer', 'editor')) AS total_special_role_types FROM movie_link AS ml JOIN kind_type AS kt ON kt.id = ml.link_type_id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ml.movie_id JOIN company_name AS cn ON cn.imdb_id = ml.movie_id JOIN role_type AS rt ON rt.id = ANY(ARRAY[8, 10]) WHERE cn.country_code IN ('[us]', '[ba]', '[cu]', '[ni]', '[gb]', '[bh]') AND cn.name_pcode_sf IN ('G5235', 'P4352', 'I53', 'B4262') GROUP BY kt.kind;
SELECT COUNT(DISTINCT n.id) AS total_people, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_rating, SUM(CASE WHEN mi.info_type_id = 45 THEN 1 ELSE 0 END) AS count_of_genre_science_fiction, COUNT(DISTINCT pi.person_id) AS total_people_with_additional_info, MAX(n.name) AS last_person_name FROM name AS n LEFT JOIN movie_info AS mi ON n.id = mi.movie_id AND mi.info_type_id = 7 LEFT JOIN person_info AS pi ON n.id = pi.person_id WHERE n.gender = 'm' AND EXISTS (SELECT 1 FROM movie_info_idx AS mi_idx WHERE mi_idx.movie_id = n.id AND mi_idx.info_type_id IN (45, 71, 75, 30, 7, 84)) GROUP BY n.gender;
SELECT cn.name AS company_name, cn.country_code AS company_country, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS numeric)) FILTER (WHERE it.info = 'rating') AS average_movie_rating, SUM(CAST(mi.info AS numeric)) FILTER (WHERE it.info = 'budget') AS total_budget, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_info mi JOIN company_name cn ON cn.imdb_id = mi.movie_id JOIN keyword k ON k.id = mi.info_type_id JOIN movie_info it ON it.id = mi.info_type_id AND it.info IN ('rating', 'budget') WHERE cn.name IN ('Comedy Central', 'Odd Lot International', '20th Television') AND k.id IN ('7281', '7278', '9681', '1373', '9407', '1515') GROUP BY cn.name, cn.country_code ORDER BY total_movies DESC, average_movie_rating DESC;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT ak.title) AS unique_titles_count, COUNT(DISTINCT cn.name) AS unique_character_names, COUNT(DISTINCT mk.keyword_id) AS total_keywords_used, COUNT(DISTINCT cc.id) AS complete_cast_records, SUM(CASE WHEN ak.kind_id = 1 THEN 1 ELSE 0 END) AS feature_film_count FROM aka_title ak JOIN movie_keyword mk ON ak.movie_id = mk.movie_id JOIN char_name cn ON ak.movie_id = cn.id JOIN complete_cast cc ON ak.movie_id = cc.movie_id WHERE mk.keyword_id IN ('4162', '3164', '2594', '2742', '2189') AND ak.movie_id IN ('8850', '8984') GROUP BY ak.movie_id;
SELECT LEFT(cn.name_pcode_nf, 1) AS first_letter_of_pcode, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT cct.id) AS total_cast_types, lt.LINK AS link_type, COUNT(lt.id) AS link_type_count FROM char_name cn CROSS JOIN comp_cast_type cct JOIN link_type lt ON lt.id = cn.id GROUP BY first_letter_of_pcode, link_type ORDER BY first_letter_of_pcode, link_type_count DESC;
SELECT rt.ROLE, AVG(miidx.info::NUMERIC) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cl.movie_id) AS number_of_movies_linked, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM role_type rt LEFT JOIN char_name cn ON cn.surname_pcode = rt.id::CHARACTER VARYING LEFT JOIN movie_link cl ON cl.link_type_id = rt.id LEFT JOIN movie_keyword mk ON mk.movie_id = cl.movie_id LEFT JOIN movie_info_idx miidx ON miidx.movie_id = cl.movie_id WHERE rt.ROLE IN ('production designer', 'guest', 'editor', 'cinematographer') AND cn.name_pcode_nf IN ('T3452', 'A423', 'D653', 'A5426', 'H5161', 'B3216') AND miidx.info_type_id = 101 /* Assuming 101 is the info_type_id for 'rating' */ GROUP BY rt.ROLE;
SELECT COUNT(DISTINCT mk.movie_id) AS num_movies_with_keywords, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, COUNT(DISTINCT ml.movie_id) AS num_movies_with_links, COUNT(DISTINCT cc.movie_id) AS num_movies_with_complete_cast, STRING_AGG(DISTINCT k.keyword, ', ') AS sample_keywords FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info_idx AS mi ON mk.movie_id = mi.movie_id INNER JOIN movie_link AS ml ON mk.movie_id = ml.movie_id INNER JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id WHERE mi.info_type_id = 3 AND ml.link_type_id IN (1, 2, 3) AND cc.status_id IN (1, 2) GROUP BY mi.info_type_id;
SELECT it.info AS info_category, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, MAX(n.name) AS max_name FROM movie_companies mc JOIN person_info pi ON mc.company_id = pi.person_id JOIN info_type it ON pi.info_type_id = it.id JOIN name n ON pi.person_id = n.id GROUP BY it.info ORDER BY number_of_movies DESC, number_of_companies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS num_of_people, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS num_complete_verified, cn.country_code, COUNT(DISTINCT mk.keyword_id) AS num_of_keywords, AVG(CASE WHEN mi.info SIMILAR TO '[0-9]+\.[0-9]' THEN CAST(mi.info AS FLOAT) ELSE NULL END) AS average_info_numeric FROM cast_info ci INNER JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN comp_cast_type cct ON ci.person_role_id = cct.id LEFT JOIN company_name cn ON ci.person_id = cn.imdb_id LEFT JOIN movie_keyword mk ON ci.movie_id = mk.movie_id LEFT JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id WHERE mi.movie_id::VARCHAR LIKE '%19410%' AND mi.info SIMILAR TO '(0|84|349|11\.7)%' AND mk.id IN (1932, 3564, 2558, 997, 3482, 1435) GROUP BY rt.ROLE, cn.country_code ORDER BY num_of_people DESC, average_order ASC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.note LIKE '%(working title)%' THEN 1 ELSE 0 END) AS total_working_titles, COUNT(DISTINCT mi_idx.movie_id) AS total_movies_with_additional_info, MAX(at.season_nr) AS max_season_number, MIN(at.episode_nr) AS min_episode_number FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_info_idx mi_idx ON at.movie_id = mi_idx.movie_id WHERE kt.kind IN ('tv series', 'movie', 'tv mini series', 'video game', 'episode') AND at.production_year IS NOT NULL GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS distributor_movie_count, COUNT(DISTINCT mk.keyword_id) AS unique_keyword_count, COUNT(DISTINCT ml.linked_movie_id) AS linked_movie_count FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN title AS t ON ci.movie_id = t.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE n.name IN ('Anderson, Abe', 'Anderako, Mark', 'Anagnostopoulos, Ilias') AND mc.company_type_id IN (SELECT id FROM company_type WHERE kind IN ('special effects companies', 'miscellaneous companies', 'distributors')) GROUP BY n.name;
SELECT it.info AS information_type, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_value, COUNT(DISTINCT ml.movie_id) AS number_of_related_movies, COUNT(DISTINCT n.id) AS number_of_unique_actors, SUM(CASE WHEN rt.role = 'writer' THEN 1 ELSE 0 END) AS writers_count, SUM(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS composers_count, SUM(CASE WHEN rt.role = 'costume designer' THEN 1 ELSE 0 END) AS costume_designers_count FROM info_type it LEFT JOIN movie_info_idx mi_idx ON it.id = mi_idx.info_type_id LEFT JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id LEFT JOIN complete_cast cc ON mi_idx.movie_id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN role_type rt ON cc.status_id = rt.id WHERE it.info IN ('LD year', 'top 250 rank', 'keywords', 'LD disc format', 'release dates') AND lt.link IN ('spin off from', 'spoofed in', 'featured in') AND rt.role IN ('costume designer', 'composer', 'writer', 'miscellaneous crew') GROUP BY it.info;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movies_participated, AVG(mi_idx_nr_order.avg_nr_order) AS average_cast_order, SUM(CASE WHEN mi_info.info LIKE '%budget%' THEN 1 ELSE 0 END) AS budget_movies_count, MAX(CASE WHEN mi_info.info_type_id = (SELECT id FROM movie_info_idx WHERE info = 'release dates') THEN mi_info.info ELSE NULL END) AS latest_release_date FROM name n JOIN cast_info ci ON ci.person_id = n.id LEFT JOIN (SELECT movie_id, AVG(nr_order) AS avg_nr_order FROM cast_info GROUP BY movie_id) mi_idx_nr_order ON mi_idx_nr_order.movie_id = ci.movie_id LEFT JOIN movie_info mi_info ON mi_info.movie_id = ci.movie_id WHERE n.gender = 'm' AND n.surname_pcode IN ('A416', 'A43', 'A413', 'A462') GROUP BY n.name ORDER BY movies_participated DESC, average_cast_order;
SELECT it.info AS InfoType, COUNT(DISTINCT ci.movie_id) AS NumberOfMovies, COUNT(DISTINCT ci.person_id) AS NumberOfPeople, AVG(ci.nr_order) AS AverageCastOrder, COUNT(DISTINCT cc.movie_id) AS CompleteMoviesCount, MAX(n.name) AS MostCommonName, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS MaleCount, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS NonMaleCount, mi.info AS MovieInfo FROM cast_info ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN info_type it ON ci.role_id = it.id JOIN movie_info_idx mi ON ci.movie_id = mi.movie_id JOIN name n ON ci.person_id = n.id WHERE ci.role_id IN (100, 101, 99) AND n.surname_pcode IN ('A452', 'A424') AND n.gender = 'm' AND mi.info_type_id IN (100, 101, 99) GROUP BY it.info, mi.info ORDER BY NumberOfMovies DESC, NumberOfPeople DESC;
SELECT rt.role, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(movie_count_per_company.movie_count) AS average_movies_per_company FROM movie_companies mc JOIN (SELECT company_id, COUNT(movie_id) AS movie_count FROM movie_companies GROUP BY company_id) AS movie_count_per_company ON mc.company_id = movie_count_per_company.company_id JOIN role_type rt ON mc.company_type_id = rt.id GROUP BY rt.role ORDER BY number_of_movies DESC;
SELECT FLOOR(t.production_year / 10) * 10 AS decade, AVG(CASE WHEN mi.info_type_id = 101 THEN CAST(mi.info AS NUMERIC) END) AS avg_rating, COUNT(DISTINCT t.id) AS movie_count, AVG(sub.company_count) AS avg_company_count FROM title t LEFT JOIN movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = 101 LEFT JOIN ( SELECT mc.movie_id, COUNT(DISTINCT mc.company_id) AS company_count FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id WHERE ct.id IN (2, 1, 4, 3) GROUP BY mc.movie_id ) sub ON t.id = sub.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id WHERE mk.keyword_id IN (3751, 946, 4031) GROUP BY decade ORDER BY decade ASC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT ml.id) AS total_movie_links, SUM(CASE WHEN at.imdb_index = 'III' THEN 1 ELSE 0 END) AS count_imdb_index_III, SUM(CASE WHEN at.imdb_index = 'II' THEN 1 ELSE 0 END) AS count_imdb_index_II FROM aka_title at JOIN keyword k ON at.id = k.id JOIN movie_companies mc ON at.movie_id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id JOIN (SELECT id, kind FROM comp_cast_type WHERE kind IN ('actor', 'actress')) kt ON at.kind_id = kt.id WHERE at.kind_id IN ('1', '4') AND k.id IN ('5500', '1630', '2267', '1048', '1589') AND cn.md5sum IN ( 'ecf8ff261534cbe4303655e3dc9d91d6', 'b62db3e43522346d25381c78513fb9f0', '558dd734341ba79634e8c1a3eb8cb0b4', '209bfa49f531585f9c54dcc6f84a6263', 'f617c567816ace229f1654cef896d37c', 'a6ab3a7e25fc36179e64a2d2f6d205e8' ) AND ml.linked_movie_id IN ('1089913', '2016615') GROUP BY kt.kind;
SELECT AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN mi.info = 'Hungarian' THEN 1 ELSE 0 END) AS total_hungarian_movies, SUM(CASE WHEN mi.info = 'Ukrainian' THEN 1 ELSE 0 END) AS total_ukrainian_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM movie_info_idx mi_idx JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN movie_info mi ON mi.movie_id = mk.movie_id JOIN movie_companies mc ON mc.movie_id = mk.movie_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND mi.info IN ('Hungarian', 'Ukrainian', 'Georgian', 'Gujarati') AND mi.note = '(some dialogue)' AND mc.id IN ('3664', '4755', '120', '941', '3015') GROUP BY mc.company_id HAVING COUNT(DISTINCT mk.keyword_id) > 5 ORDER BY average_rating DESC, number_of_movies_with_keywords DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT mi.movie_id) AS movies_with_keywords, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_cast_count, COUNT(DISTINCT pi.person_id) AS total_person_info_entries, AVG(CASE WHEN rt.id = 1 THEN 1.0 ELSE 0 END) AS avg_movies_with_main_cast FROM title t LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN comp_cast_type cct ON cc.subject_id = cct.id LEFT JOIN person_info pi ON t.id = pi.person_id LEFT JOIN role_type rt ON cc.status_id = rt.id WHERE t.kind_id IN (2, 7) AND (t.season_nr IS NULL OR t.season_nr IN (20, 3)) GROUP BY t.kind_id;
SELECT n.gender, COUNT(DISTINCT n.id) AS total_actors, SUM(mc.movie_id) AS total_movie_production_involvements, MIN(aka.title) AS earliest_movie_title FROM name AS n JOIN aka_name AS an ON n.id = an.person_id JOIN aka_title AS aka ON aka.id = an.id JOIN movie_companies AS mc ON mc.movie_id = aka.movie_id GROUP BY n.gender HAVING COUNT(DISTINCT n.id) > 10 ORDER BY total_actors DESC LIMIT 5;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.person_id) AS total_unique_actors, AVG(CAST(t.production_year AS DECIMAL)) AS average_production_year, AVG(CAST(sub.nr_roles AS DECIMAL)) AS average_roles_per_movie FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN ( SELECT movie_id, COUNT(*) AS nr_roles FROM cast_info GROUP BY movie_id ) sub ON t.id = sub.movie_id LEFT JOIN cast_info ci ON t.id = ci.movie_id WHERE t.production_year IS NOT NULL AND t.id IN ('19580', '17102', '17123', '10072') GROUP BY kt.kind;
SELECT k.keyword, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(CAST(movie_cast.total_cast AS FLOAT)) AS average_cast_members, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, lt.LINK AS link_type FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN cast_info AS ci ON mk.movie_id = ci.movie_id LEFT JOIN ( SELECT movie_id, COUNT(*) AS total_cast FROM cast_info GROUP BY movie_id ) AS movie_cast ON ci.movie_id = movie_cast.movie_id LEFT JOIN movie_link AS ml ON ci.movie_id = ml.movie_id LEFT JOIN link_type AS lt ON ml.link_type_id = lt.id WHERE k.keyword IN ('superhero', 'villain', 'science fiction', 'fantasy', 'action') AND (lt.LINK IS NULL OR lt.LINK IN ('follows', 'followed by', 'featured in')) GROUP BY k.keyword, lt.LINK ORDER BY number_of_movies DESC, average_cast_members DESC;
SELECT ct.kind AS cast_type, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN pi.info_type_id = 17 THEN 1 ELSE 0 END) AS count_info_type_17, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT t.id) FILTER (WHERE t.production_year > 2010) AS titles_after_2010 FROM title AS t JOIN comp_cast_type AS ct ON t.kind_id = ct.id LEFT JOIN company_name AS cn ON cn.md5sum IN ('46757a84e182ecbce2485bbe4f94c35c', '042c3abaa3eee3219096099e572cbd78', '055c9414a7d1b5428c44a7840e634a28') LEFT JOIN person_info AS pi ON pi.info IN ('Elektra', '23 September 1989') LEFT JOIN keyword AS k ON k.keyword LIKE '%' LEFT JOIN link_type AS lt ON lt.link = 'similar to' AND lt.id = 13 WHERE (t.episode_of_id = '86208' OR cn.name_pcode_nf = 'M6421') GROUP BY ct.kind;
SELECT c.name AS company_name, p.gender, COUNT(*) AS number_of_employees, AVG(pi.info_type_id) AS average_info_type_id, SUM(mi.movie_id) AS total_movie_id_sum, COUNT(DISTINCT k.id) AS unique_keyword_count FROM company_name AS c JOIN movie_info_idx AS mi ON c.imdb_id = mi.movie_id JOIN person_info AS pi ON mi.movie_id = pi.person_id JOIN name AS p ON pi.person_id = p.id JOIN keyword AS k ON mi.info LIKE '%' || k.keyword || '%' WHERE c.name_pcode_nf IN ('E2153', 'C5125', 'M2643', 'C2425') AND c.name_pcode_sf IN ('V3252', 'C1212', 'I2416', 'T6215', 'U5163') AND mi.info_type_id IN ('100', '101', '99') GROUP BY c.name, p.gender ORDER BY number_of_employees DESC, average_info_type_id;
SELECT rt.role, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, COUNT(DISTINCT pi.person_id) AS number_of_people, COUNT(DISTINCT cn.id) AS number_of_char_names, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM role_type rt JOIN name n ON n.id = CAST(rt.id AS INTEGER) LEFT JOIN char_name cn ON cn.md5sum = n.md5sum LEFT JOIN person_info pi ON pi.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = pi.person_id WHERE rt.role IN ('director', 'producer', 'composer') AND pi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('trivia', 'quotes', 'birth notes')) AND (pi.note IS NULL OR pi.note <> 'Jacqeline Buono') GROUP BY rt.role;
SELECT cn.name AS company_name, COUNT(DISTINCT n.id) AS number_of_employees, AVG(pi.info::numeric) FILTER (WHERE it.info = 'salary') AS average_salary, SUM(pi.info::numeric) FILTER (WHERE it.info = 'bonus') AS total_bonus_paid, COUNT(pi.info) FILTER (WHERE it.info = 'position' AND pi.info = 'Director') AS number_of_directors FROM company_name AS cn JOIN person_info AS pi ON cn.id = pi.person_id JOIN name AS n ON n.id = pi.person_id JOIN info_type AS it ON it.id = pi.info_type_id WHERE cn.country_code = 'US' AND n.gender = 'f' AND cn.id IN ('17965', '11842') AND cn.name_pcode_nf IN ('T545', 'V2123', 'R4521', 'U5164', 'V6323', 'A2531') GROUP BY cn.name;
SELECT rt.ROLE, COUNT(ci.id) AS total_roles, AVG(ci.nr_order) AS average_order, SUM(mc.company_id) AS total_company_involvement FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN char_name cn ON ci.person_id = cn.id JOIN link_type lt ON cn.imdb_id = lt.id WHERE cn.surname_pcode IN ('M252', 'E4253', 'S3626', 'D535', 'K6524', 'P3625') AND cn.md5sum IN ('9e82cce9eed474fa357bbbdcdb9e9f99', '808e4e20a938e31d406296247307a377', '314b308705241e3843cfa0f420a3d71d', '161ebf33e0bbb8c7a20bed4ba04289b5') AND lt.link IN ('alternate language version of', 'spin off', 'referenced in', 'remade as', 'references', 'version of') AND lt.id IN ('17', '8', '6') GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.company_id) AS number_of_companies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS german_movie_count FROM movie_info mi JOIN movie_companies ci ON mi.movie_id = ci.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN title t ON mi.movie_id = t.id WHERE (mi.note LIKE '%(interviews)%' OR mi.note LIKE '%(Original Version)%' OR mi.note LIKE '%(only a few lines)%' OR mi.note LIKE '%(English subtitles)%') GROUP BY mi.movie_id;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS total_actors, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_position, MIN(mi_idx.info) AS min_info_value, MAX(mi_idx.info) AS max_info_value, it.info AS info_type_description FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id WHERE it.info IN ('sound mix', 'LD audio noise', 'LD dynamic range', 'magazine cover photo', 'novel', 'certificates') AND rt.ROLE IN ('actor', 'actress', 'producer', 'director') GROUP BY rt.ROLE, it.info ORDER BY total_movies DESC, total_actors DESC, average_cast_position;
SELECT COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(cc.status_id) AS average_status, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS titles_after_2000, lt.LINK, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN link_type lt ON cc.subject_id = lt.id GROUP BY lt.LINK ORDER BY total_alternate_titles DESC;
SELECT AVG(keyword_summary.keyword_count) AS average_movie_keywords, SUM(role_summary.total_roles) AS sum_total_roles, COUNT(DISTINCT cct.kind) AS distinct_cast_types, AVG(CAST(mi_idx.info AS integer)) AS average_movie_votes FROM (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id) AS keyword_summary JOIN (SELECT ci.movie_id, ci.person_role_id, COUNT(ci.id) AS total_roles FROM cast_info AS ci GROUP BY ci.movie_id, ci.person_role_id) AS role_summary ON keyword_summary.movie_id = role_summary.movie_id JOIN movie_info_idx AS mi_idx ON keyword_summary.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 1 JOIN comp_cast_type AS cct ON role_summary.person_role_id = cct.id WHERE CAST(mi_idx.info AS integer) > 10000 GROUP BY mi_idx.info_type_id;
SELECT AVG(mi.id) AS average_movie_info_id, COUNT(DISTINCT mk.movie_id) AS count_distinct_movies, SUM(mk.keyword_id) AS sum_keyword_ids, COUNT(DISTINCT cn.id) AS count_distinct_character_names, MAX(ct.kind) AS max_comp_cast_type_kind FROM movie_info mi JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN char_name cn ON cn.id = mk.id JOIN comp_cast_type ct ON ct.id = cn.id WHERE mi.info IN ('French', 'Macedonian', 'Tatar') AND mk.movie_id IN ('12263', '18845') AND mi.id IN ('7268883', '7269557', '7270084') GROUP BY mi.info;
SELECT cn.country_code, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, SUM(cc.subject_id) AS total_subjects, AVG(cc.status_id) AS average_status_id FROM movie_link AS ml JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN company_name AS cn ON ml.movie_id = cn.imdb_id WHERE ml.movie_id IN (16753, 14650) GROUP BY cn.country_code ORDER BY total_movies DESC;
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(cn.imdb_id) AS average_imdb_id_for_companies, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies FROM kind_type kt JOIN movie_keyword mk ON kt.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN company_name cn ON cn.id = mk.movie_id WHERE kt.kind IN ('movie', 'tv movie', 'tv series') AND k.keyword IN ('boss-is-away', 'musical-performance', 'global-warming') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT AVG(mi_idx_rating.info::NUMERIC) AS average_rating, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies, MIN(cn.name) AS first_company_name, MAX(cn.name) AS last_company_name FROM movie_info mi_genre JOIN movie_info mi_idx_rating ON mi_genre.movie_id = mi_idx_rating.movie_id JOIN movie_info mi_language ON mi_genre.movie_id = mi_language.movie_id JOIN cast_info ci ON mi_genre.movie_id = ci.movie_id JOIN company_name cn ON ci.movie_id = ci.movie_id WHERE mi_genre.info_type_id = (SELECT id FROM info_type WHERE info = 'genres') AND mi_genre.info IN ('Drama', 'Comedy', 'Action') AND mi_idx_rating.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx_rating.info AS NUMERIC) >= 5.0 AND mi_language.info_type_id = (SELECT id FROM info_type WHERE info = 'languages') AND mi_language.info IN ('English', 'Spanish', 'French') AND ci.nr_order IS NOT NULL AND ci.nr_order BETWEEN 1 AND 10 GROUP BY mi_genre.movie_id HAVING COUNT(DISTINCT ci.person_id) > 3 ORDER BY average_rating DESC;
SELECT ct.kind AS company_kind, AVG(ci.nr_order) AS average_cast_number, COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_leading_roles, COUNT(DISTINCT mi.movie_id) AS number_of_movies, MIN(mi.info) AS earliest_release_date FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN movie_info mi ON mi.movie_id = mc.movie_id JOIN cast_info ci ON ci.movie_id = mc.movie_id WHERE ct.kind = 'special effects companies' AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'release dates') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS number_of_movies, COUNT(DISTINCT cc.movie_id) AS number_of_completed_movies, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS count_features_link, MAX(mi.info) AS latest_movie_info FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN complete_cast cc ON akat.movie_id = cc.movie_id AND cc.status_id = 4 LEFT JOIN movie_info mi ON akat.movie_id = mi.movie_id LEFT JOIN link_type lt ON lt.id = mi.info_type_id AND lt.link IN ('features', 'spin off', 'remade as') WHERE akat.production_year IS NOT NULL AND akat.kind_id IN (SELECT id FROM kind_type) GROUP BY kt.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT n.id) AS total_actors, AVG(nk.keyword_count) AS average_keywords_per_actor, SUM(nk.keyword_count) AS total_keywords FROM name AS n INNER JOIN ( SELECT mk.movie_id, COUNT(*) AS keyword_count FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id WHERE k.phonetic_code IN ('H525', 'C4252', 'P3624', 'A543', 'F6526', 'M1525') GROUP BY mk.movie_id ) AS nk ON nk.movie_id = n.id INNER JOIN role_type AS rt ON rt.id IN ('1', '2', '6', '10', '5', '4') INNER JOIN movie_companies AS mc ON mc.movie_id = nk.movie_id WHERE n.gender IS NOT NULL GROUP BY rt.ROLE ORDER BY total_actors DESC;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT mk.movie_id) AS movies_with_keywords, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM movie_info_idx AS mi_idx JOIN aka_title AS at ON mi_idx.movie_id = at.movie_id JOIN company_type AS ct ON at.kind_id = ct.id JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN name AS n ON at.movie_id = n.id WHERE mi_idx.info_type_id = 101 AND mi_idx.movie_id IN ('18742', '8465', '6663') AND at.production_year BETWEEN 2000 AND 2023 GROUP BY ct.kind ORDER BY average_rating DESC;
SELECT kt.kind AS movie_type, rt.ROLE AS role, COUNT(ci.movie_id) AS role_count, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS with_role_info, COUNT(DISTINCT ci.person_id) AS distinct_actors, COUNT(DISTINCT mc.company_id) AS distinct_companies, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM cast_info ci INNER JOIN kind_type kt ON ci.movie_id = kt.id INNER JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id WHERE kt.kind IN ('video game', 'video movie', 'tv movie', 'episode', 'movie', 'tv mini series') AND rt.role IN ('writer', 'actor', 'miscellaneous crew', 'production designer', 'editor') GROUP BY kt.kind, rt.ROLE ORDER BY movie_type, role_count DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT n.id) AS number_of_unique_actors, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ct.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM title t LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name ct ON mc.company_id = ct.id LEFT JOIN movie_link ml ON t.id = ml.movie_id GROUP BY t.production_year HAVING COUNT(DISTINCT t.id) > 5 ORDER BY t.production_year DESC;
SELECT ct.kind AS company_kind, rt.ROLE AS role_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN role_type AS rt ON mc.company_type_id = rt.id JOIN title AS t ON mc.movie_id = t.id GROUP BY ct.kind, rt.ROLE ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_production_companies, COUNT(DISTINCT pi.person_id) AS number_of_individual_contributors, SUM(CASE WHEN t.md5sum IN ('1f1ce7379075bf949e40cb57616b3f4d', '0d05192e412a817cc87628ae56d58d5b') THEN 1 ELSE 0 END) AS count_of_specific_md5sum FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN person_info pi ON pi.person_id = t.id WHERE ct.kind = 'production' AND t.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT chn.id) AS number_of_characters, MAX(chn.name) AS max_character_name, MIN(chn.name) AS min_character_name FROM role_type AS rt JOIN char_name AS chn ON chn.name IN ('Un gangster', 'Clancey') JOIN movie_info AS mi ON mi.movie_id = chn.id GROUP BY rt.ROLE;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT cn.id) AS number_of_characters, SUM(CASE WHEN mi_idx.info_type_id = '100' THEN 1 ELSE 0 END) AS count_of_type_100_info, SUM(CASE WHEN mi_idx.info_type_id = '101' THEN 1 ELSE 0 END) AS count_of_type_101_info FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN char_name cn ON ci.person_id = cn.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE ci.person_id IN ('1761', '1644', '1317', '1004') AND cn.name_pcode_nf IN ('W4126', 'D563', 'P3632') AND kt.id IN ('7', '3', '5') AND mi_idx.info_type_id IN ('100', '101') GROUP BY kt.kind;
SELECT t.kind_id, t.production_year, COUNT(DISTINCT t.id) AS number_of_titles, COUNT(DISTINCT n.id) AS number_of_unique_persons, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, SUM(CASE WHEN at.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS number_of_episodes FROM title t LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi ON t.id = mi.movie_id AND mi.info_type_id = 100 LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id WHERE t.production_year BETWEEN 2000 AND 2020 AND t.kind_id IN (1, 2, 3) GROUP BY t.kind_id, t.production_year ORDER BY t.kind_id, t.production_year;
SELECT rt.role AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mi.info::numeric) AS average_movie_rating, SUM(CASE WHEN k.keyword IN ('drug-abuser', 'obesity') THEN 1 ELSE 0 END) AS count_unhealthy_keywords, COUNT(DISTINCT mi.movie_id) AS number_of_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_info mi ON ci.movie_id = mi.movie_id AND mi.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) JOIN keyword k ON mi.movie_id = ANY ( SELECT movie_id FROM movie_info WHERE info = k.keyword ) GROUP BY rt.role HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY average_movie_rating DESC;
SELECT kt.kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_titles, SUM(CASE WHEN rt.role = 'cinematographer' THEN 1 ELSE 0 END) AS cinematographer_count, SUM(CASE WHEN rt.role = 'writer' THEN 1 ELSE 0 END) AS writer_count, SUM(CASE WHEN rt.role = 'miscellaneous crew' THEN 1 ELSE 0 END) AS miscellaneous_crew_count FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN role_type rt ON t.id = rt.id WHERE kt.id IN (3, 7, 4, 6, 2) AND rt.id IN (5, 3, 9, 4, 11, 6) AND t.production_year IS NOT NULL GROUP BY kt.kind ORDER BY average_production_year DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS completed_and_verified_casts, COUNT(DISTINCT rt.id) AS number_of_cinematographer_roles, MIN(aka.name) AS example_aka_name FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id JOIN movie_keyword AS mk ON cn.id = mk.movie_id JOIN movie_info_idx AS mi_idx ON mk.movie_id = mi_idx.movie_id JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id JOIN role_type AS rt ON rt.role = 'cinematographer' LEFT JOIN aka_name AS aka ON aka.name_pcode_cf = 'D1353' AND aka.md5sum IN ('e6b1b0cc9037b00160a143b03dc5524d', '1d440711fb046c932badfdc8121ce380', '88bcce46f057ed51b9026d05fbdb1ac0') WHERE cc.status_id IN ('3', '4') GROUP BY ct.kind
SELECT AVG(CAST(mi.info AS FLOAT)) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies, cn.name AS company_name, rt.ROLE AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_actors FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id AND mi.info_type_id = 101 JOIN cast_info AS ci ON mc.movie_id = ci.movie_id JOIN role_type AS rt ON ci.role_id = rt.id WHERE cn.name_pcode_nf IN ('C5342', 'A6514', 'W6321', 'S2', 'M1653', 'A3532') AND mc.company_id IN ('1199', '263', '157', '78') AND mi.id IN ('7268010', '7269101', '7266891', '7268390', '7270852', '7269590') GROUP BY cn.name, rt.ROLE ORDER BY average_rating DESC, number_of_movies DESC, number_of_actors DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::integer) AS average_rating, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS number_of_us_companies_involved, COUNT(DISTINCT ci.person_id) AS number_of_cast_members FROM movie_companies AS mc JOIN kind_type AS kt ON kt.id = mc.company_type_id JOIN cast_info AS ci ON ci.movie_id = mc.movie_id JOIN company_name AS cn ON cn.id = mc.company_id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = mc.movie_id AND mi_idx.info_type_id = 101 WHERE mc.movie_id IN (19315, 15715, 19236, 19775, 18865, 11243) AND mc.note LIKE '%(TV)%' AND kt.kind IN ('movie', 'episode') AND cn.name_pcode_sf IN ('B5261', 'H1535', 'T5642', 'W5214', 'C3163', 'K2145') GROUP BY kt.kind;
SELECT t.title AS Movie_Title, COUNT(DISTINCT n.id) AS Number_of_Actors, AVG(mi_idx.info::numeric) AS Average_Rating, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS Total_Actors, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS Total_Actresses, t.production_year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND t.production_year BETWEEN 2000 AND 2010 AND rt.role IN ('actor', 'actress') GROUP BY t.title, t.production_year HAVING COUNT(DISTINCT n.id) > 10 ORDER BY Average_Rating DESC, Number_of_Actors DESC LIMIT 10;
SELECT it.info AS info_type, COUNT(DISTINCT mi.id) AS movie_count, AVG(mc.company_id) AS average_company_id, SUM(mc.company_id) AS sum_company_id, COUNT(DISTINCT ak.id) AS alias_count, rt.ROLE, COUNT(DISTINCT kw.id) AS keyword_count FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_companies AS mc ON mi.movie_id = mc.movie_id JOIN role_type AS rt ON mc.company_type_id = rt.id JOIN aka_name AS ak ON mi.movie_id = ak.person_id JOIN keyword AS kw ON ak.surname_pcode = kw.phonetic_code GROUP BY it.info, rt.ROLE ORDER BY movie_count DESC, average_company_id;
SELECT t.title AS movie_title, ct.kind AS company_type, rt.role AS role, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mi.movie_id) AS number_of_movie_info_entries, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS total_director_roles FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info mi ON t.id = mi.movie_id JOIN role_type rt ON t.id = rt.id WHERE ct.kind IN ('miscellaneous companies', 'special effects companies', 'distributors') AND rt.role IN ('actor', 'guest', 'writer', 'director') AND t.season_nr IS NULL AND t.production_year BETWEEN 2000 AND 2023 GROUP BY t.title, ct.kind, rt.role ORDER BY average_production_year DESC, number_of_companies DESC, number_of_movie_info_entries DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS INTEGER)) FILTER (WHERE it.info = 'budget') AS average_movie_budget, SUM(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_movie_votes, kt.kind AS movie_kind, COUNT(DISTINCT cc.movie_id) FILTER (WHERE cc.status_id = 1) AS number_of_complete_movies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN kind_type AS kt ON kt.id = 1 JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('budget', 'votes')) AND cc.status_id = 1 GROUP BY ct.kind, kt.kind;
SELECT COUNT(DISTINCT ml.movie_id) AS num_movies, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies, AVG(sub.num_keywords) AS avg_keywords_per_movie, SUM(CASE WHEN pi.info_type_id = '34' THEN 1 ELSE 0 END) AS count_info_type_34, SUM(CASE WHEN pi.info_type_id = '25' THEN 1 ELSE 0 END) AS count_info_type_25 FROM movie_link AS ml JOIN (SELECT mk.movie_id, COUNT(mk.keyword_id) AS num_keywords FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub ON ml.movie_id = sub.movie_id LEFT JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY ml.link_type_id;
SELECT ct.kind AS company_type, AVG(ati.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ati.movie_id) AS number_of_movies, SUM(CASE WHEN ati.note LIKE '%(subtitle)%' THEN 1 ELSE 0 END) AS number_of_subtitled_movies, SUM(CASE WHEN ati.note LIKE '%(series title)%' THEN 1 ELSE 0 END) AS number_of_series_titles, SUM(CASE WHEN ati.note LIKE '%(informal literal title)%' THEN 1 ELSE 0 END) AS number_of_informal_literal_titles FROM aka_title ati JOIN company_type ct ON ati.kind_id = ct.id LEFT JOIN company_name cn ON ati.movie_id = cn.imdb_id GROUP BY ct.kind ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT mk.keyword_id, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(ci.person_id) AS total_cast_members, AVG(CAST(ci.nr_order AS DECIMAL)) AS average_cast_order FROM movie_keyword AS mk INNER JOIN cast_info AS ci ON mk.movie_id = ci.movie_id INNER JOIN link_type AS lt ON ci.person_role_id = lt.id WHERE lt.link IN ('followed by', 'edited into', 'similar to') GROUP BY mk.keyword_id ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, MAX(mii.info) AS max_info_value FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN company_name AS cn ON cn.imdb_id = t.imdb_id JOIN movie_info_idx AS mii ON t.id = mii.movie_id WHERE t.kind_id = 1 AND t.production_year >= 2000 AND cn.name IN ('Action Video', 'Cresa Roma', 'Time Life Films', 'Starlink Asia', 'New Cinema', 'Rok Americas') AND ci.role_id = 1 GROUP BY t.kind_id ORDER BY total_movies DESC, avg_production_year DESC;
SELECT t.production_year, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT an.id) AS total_distinct_actors, COUNT(DISTINCT CASE WHEN an.name_pcode_cf = 'M6353' THEN an.person_id ELSE NULL END) AS actors_with_pcode_M6353 FROM title AS t LEFT JOIN aka_title AS at ON t.id = at.movie_id LEFT JOIN aka_name AS an ON t.id = an.person_id WHERE t.production_year BETWEEN 1990 AND 2000 GROUP BY t.production_year ORDER BY t.production_year;
SELECT ct.kind AS company_kind, rt.ROLE AS role_type, COUNT(DISTINCT ci.id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN mi_idx.info LIKE '....33.1.1' THEN 1 ELSE 0 END) AS count_specific_info_pattern, kind.kind AS movie_kind FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN kind_type AS kind ON kind.id = (SELECT movie_id FROM complete_cast WHERE movie_id = ci.movie_id LIMIT 1) JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id WHERE ci.movie_id = 305396 AND ct.id IN (1, 2, 3, 4) AND rt.ROLE IN ('actor', 'actress', 'producer', 'director') AND (mi_idx.info LIKE '00.0011111' OR mi_idx.info LIKE '1.....21.4') GROUP BY ct.kind, rt.ROLE, kind.kind;
SELECT cn.name AS company_name, ct.kind AS cast_type, COUNT(ml.id) AS total_movie_links, AVG(ml.linked_movie_id) AS average_linked_movie_imdb_id, COUNT(DISTINCT chn.id) AS total_characters FROM company_name cn JOIN movie_link ml ON cn.id = ml.movie_id JOIN comp_cast_type ct ON ml.link_type_id = ct.id LEFT JOIN char_name chn ON ml.movie_id = chn.id WHERE cn.country_code = 'US' AND cn.name_pcode_sf BETWEEN 'A0000' AND 'Z9999' GROUP BY cn.name, ct.kind ORDER BY total_movie_links DESC, average_linked_movie_imdb_id;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT l.id) AS total_link_types, COUNT(DISTINCT a.id) AS total_aka_titles, SUM(CASE WHEN a.episode_nr = 23 THEN 1 ELSE 0 END) AS count_episode_23, SUM(CASE WHEN a.episode_nr = 2 THEN 1 ELSE 0 END) AS count_episode_2, SUM(CASE WHEN a.episode_nr = 198 THEN 1 ELSE 0 END) AS count_episode_198 FROM aka_title AS a JOIN comp_cast_type AS c ON a.kind_id = c.id JOIN link_type AS l ON a.id = l.id WHERE a.production_year IS NOT NULL AND a.md5sum IN ('fb468fe5a2dd6cbadb547cbfcc31fe6e', 'aebc712f90712d70c4098b641cecc92c', 'f13da07aa2abf77454bb4a2209a5fc0d') GROUP BY a.kind_id;
SELECT mi.info AS genre, AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT at.id) AS number_of_alternate_titles, at.production_year FROM movie_info mi INNER JOIN aka_title at ON mi.movie_id = at.movie_id INNER JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id WHERE mi.info_type_id = 3 AND mi_idx.info_type_id = 1 AND at.production_year IS NOT NULL GROUP BY mi.info, at.production_year ORDER BY at.production_year DESC, average_rating DESC;
SELECT kind_id, COUNT(id) AS total_titles, AVG(production_year) AS average_production_year FROM title GROUP BY kind_id ORDER BY total_titles DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(COUNT(ci.person_id)) OVER (PARTITION BY ci.movie_id) AS avg_roles_per_movie, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(COUNT(mc.company_id)) OVER (PARTITION BY ci.movie_id) AS avg_companies_per_movie, COUNT(DISTINCT pi.info) AS total_ratings, AVG(CAST(pi.info AS NUMERIC)) AS average_rating FROM cast_info ci JOIN movie_link ml ON ci.movie_id = ml.movie_id OR ci.movie_id = ml.linked_movie_id JOIN person_info pi ON ci.person_id = pi.person_id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id WHERE ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('sequel', 'prequel')) AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY ci.movie_id;
SELECT ct.kind AS company_kind, COUNT(mc.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ti.series_years IS NOT NULL THEN 1 ELSE 0 END) AS total_series, COUNT(DISTINCT t.id) AS unique_titles, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN title AS ti ON t.episode_of_id = ti.id WHERE ct.kind IN ('production companies', 'special effects companies') AND t.production_year BETWEEN 1980 AND 2005 AND (t.series_years = '1985-1987' OR t.series_years = '1987-????' OR t.series_years LIKE '1968-%' OR t.series_years LIKE '1978-1979') AND mc.company_id = 909 GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS number_of_unique_keywords, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT t.id) AS total_movies FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id WHERE t.production_year > 1990 AND mc.company_type_id IN (1, 2, 3) AND cc.status_id = 1 AND k.phonetic_code IN ('W25', 'P4232', 'G4323') GROUP BY t.kind_id HAVING COUNT(DISTINCT mc.company_id) > 5 ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.note LIKE '%(producer)%' THEN 1 ELSE 0 END) AS total_producer_mentions, cct.kind AS cast_type_kind, MIN(cn.name) AS company_name, MAX(ci.nr_order) AS highest_cast_order FROM cast_info AS ci JOIN comp_cast_type AS cct ON ci.person_role_id = cct.id JOIN company_name AS cn ON cn.id = ci.person_id JOIN movie_keyword AS mk ON ci.movie_id = mk.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN link_type AS lt ON ci.role_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id WHERE cct.kind IN ('complete', 'complete+verified') AND cn.name_pcode_sf IN ('C6532', 'L2653', 'U53', 'D252') AND (ci.note LIKE '%(producer)%' OR ci.note IS NULL) AND lt.id IN ('7', '15') GROUP BY cct.kind ORDER BY average_movie_rating DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.movie_id) AS total_movies, AVG(CASE WHEN mc.note LIKE '%(worldwide) (all media)%' THEN 1 ELSE NULL END) * 100 AS percentage_worldwide_distribution, COUNT(DISTINCT lt.id) FILTER (WHERE lt.link LIKE '%remake of%') AS total_remakes, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ml.linked_movie_id) FILTER (WHERE ml.link_type_id IN ('17', '16')) AS total_sequel_or_prequels, COUNT(DISTINCT n.id) AS total_actors_involved FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id LEFT JOIN movie_companies AS mc ON t.movie_id = mc.movie_id LEFT JOIN link_type AS lt ON lt.id = mc.company_type_id LEFT JOIN movie_link AS ml ON t.movie_id = ml.movie_id LEFT JOIN movie_info AS mi ON t.movie_id = mi.movie_id AND mi.info_type_id = '4' LEFT JOIN name AS n ON n.imdb_id = t.movie_id GROUP BY kt.kind;
SELECT kt.kind, lt.link, COUNT(DISTINCT mi.movie_id) AS num_movies, AVG(n.imdb_id) AS avg_imdb_id, SUM(CASE WHEN mi.info = 'French' THEN 1 ELSE 0 END) AS num_french_movies, SUM(CASE WHEN mi.note = '(none)' THEN 1 ELSE 0 END) AS num_movies_without_notes, COUNT(DISTINCT c.name) FILTER (WHERE c.surname_pcode = 'M6456') AS count_characters_with_surname_pcode_M6456 FROM movie_info mi JOIN kind_type kt ON mi.movie_id = kt.id JOIN link_type lt ON lt.id = mi.info_type_id LEFT JOIN movie_info_idx mii ON mii.movie_id = mi.movie_id AND mii.info_type_id = mi.info_type_id LEFT JOIN char_name c ON c.id = mii.info_type_id LEFT JOIN name n ON n.id = c.id WHERE lt.id IN ('4', '6', '9', '1', '14') AND mi.info IN ('Albanian', 'Catalan', 'French', 'Danish') GROUP BY kt.kind, lt.link ORDER BY num_movies DESC, avg_imdb_id;
SELECT n.name AS actor_name, COUNT(ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_cast_position, MAX(a.production_year) AS latest_movie_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_productions, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributions FROM name n JOIN cast_info ci ON n.id = ci.person_id JOIN aka_title a ON ci.movie_id = a.movie_id JOIN movie_companies mc ON a.movie_id = mc.movie_id WHERE n.gender = 'F' AND ci.role_id = 1 AND a.production_year BETWEEN 2000 AND 2020 GROUP BY n.name ORDER BY movie_count DESC, average_cast_position, latest_movie_year DESC LIMIT 10;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_movie_duration, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, MAX(CAST(mi.info AS INTERVAL)) AS longest_movie_duration, MIN(CAST(mi.info AS INTERVAL)) AS shortest_movie_duration FROM movie_info mi JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN comp_cast_type cct ON ci.person_role_id = cct.id JOIN char_name cn ON ci.person_id = cn.id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') AND mc.note LIKE '%(USA)%' AND cct.kind IN ('cast', 'complete') AND cn.surname_pcode IN ('E235', 'A6432', 'E2536', 'A1526') GROUP BY mc.company_id ORDER BY average_movie_duration DESC;
SELECT rt.ROLE, AVG(nk.count_keywords) AS average_keywords, COUNT(DISTINCT at.movie_id) AS number_of_movies, SUM(CASE WHEN at.production_year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS movies_2000_to_2010, COUNT(DISTINCT n.id) AS number_of_names FROM role_type rt LEFT JOIN aka_title at ON rt.id = at.kind_id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS count_keywords FROM movie_keyword mk GROUP BY mk.movie_id ) nk ON nk.movie_id = at.movie_id LEFT JOIN name n ON n.id = at.movie_id WHERE rt.id IN (6, 7, 8) GROUP BY rt.ROLE ORDER BY average_keywords DESC;
SELECT rt.role AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_persons, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mi.info = 'Greek' THEN 1 ELSE 0 END) AS greek_language_movies, SUM(CASE WHEN mi.info = 'Hindi' THEN 1 ELSE 0 END) AS hindi_language_movies, SUM(CASE WHEN mi.info = 'Kyrgyz' THEN 1 ELSE 0 END) AS kyrgyz_language_movies FROM role_type AS rt JOIN cast_info AS ci ON rt.id = ci.role_id JOIN movie_info AS mi ON ci.movie_id = mi.movie_id JOIN movie_info_idx AS mi_idx ON mi.movie_id = mi_idx.movie_id WHERE rt.role = 'writer' AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('languages', 'language')) GROUP BY rt.role;
SELECT CN.name AS character_name, AVG(CI.nr_order) AS average_order_appearance, COUNT(DISTINCT CI.movie_id) AS number_of_movies, COUNT(DISTINCT CI.person_id) AS number_of_actors, CN.surname_pcode AS character_surname_code, STRING_AGG(DISTINCT CO.name, ', ') AS associated_companies, SUM(CASE WHEN CO.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_US_companies FROM cast_info CI JOIN char_name CN ON CI.person_role_id = CN.id JOIN company_name CO ON CI.movie_id = CO.imdb_id WHERE CO.name_pcode_nf = 'T1452' GROUP BY CN.name, CN.surname_pcode ORDER BY number_of_movies DESC, average_order_appearance;
SELECT rt.role AS role_type, COUNT(*) AS num_roles, AVG(cast(mi_idx.info AS double precision)) AS average_rating, SUM(cast(mi.info AS integer)) AS total_award_count FROM role_type AS rt JOIN char_name AS cn ON cn.id = rt.id JOIN movie_info_idx AS mi_idx ON cn.id = mi_idx.movie_id JOIN movie_info AS mi ON cn.id = mi.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') AND rt.role IN ('actor', 'actress', 'producer', 'director') GROUP BY rt.role ORDER BY num_roles DESC, average_rating DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_box_office, SUM(CAST(mi.info AS NUMERIC)) AS total_box_office, COUNT(DISTINCT mc.company_id) AS number_of_production_companies FROM title AS t JOIN movie_info AS mi_language ON t.id = mi_language.movie_id AND mi_language.info_type_id = ( SELECT id FROM info_type WHERE info = 'language' ) JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = ( SELECT id FROM info_type WHERE info = 'box office' ) JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE mi_language.info IN ('Slovak', 'Spanish', 'Italian') AND mc.company_type_id = 1 AND t.title IN ('Freaky Friends & Fiction', 'Fait Accompli', '(#1.109)', 'Der Sheriff von Giesing', 'Dont Utter a Note') GROUP BY t.production_year ORDER BY t.production_year DESC;
SELECT rt.ROLE, COUNT(DISTINCT n.id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT k.id) AS total_keywords FROM name n JOIN person_info pi ON n.id = pi.person_id JOIN movie_info_idx mii ON pi.info_type_id = mii.info_type_id JOIN role_type rt ON pi.info_type_id = rt.id JOIN title t ON mii.movie_id = t.id LEFT JOIN keyword k ON k.phonetic_code = t.phonetic_code WHERE mii.info IN ('856', '1..11...15') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY rt.ROLE;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, SUM(CASE WHEN ct.kind = 'production' THEN 1 ELSE 0 END) AS production_companies_count, AVG(t.production_year) AS average_production_year, MIN(t.title) AS oldest_movie_title, MAX(t.title) AS latest_movie_title, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_info mi ON t.id = mi.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_type ct ON mc.company_type_id = ct.id WHERE t.title = 'Vengence' AND t.production_year >= 2000 AND (t.episode_nr IN ('119', '9622', '13530', '255', '26') OR t.episode_nr IS NULL) GROUP BY t.production_year ORDER BY t.production_year ASC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, COUNT(DISTINCT pi.person_id) AS person_count, AVG(CASE WHEN mi.note NOT LIKE '%(English version)%' THEN CAST(mi.info AS FLOAT) ELSE NULL END) AS average_non_english_info_rating, SUM(CASE WHEN pi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS total_interviews FROM info_type it LEFT JOIN movie_info mi ON it.id = mi.info_type_id LEFT JOIN person_info pi ON it.id = pi.info_type_id WHERE it.id IN (79, 44, 61) GROUP BY it.info;
SELECT lt.link AS link_type, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mk.keyword_id = 2603 THEN 1 ELSE 0 END) AS count_keyword_2603, COUNT(DISTINCT mk.movie_id) FILTER (WHERE mk.keyword_id IN (1147, 2693)) AS movies_with_keywords_1147_2693 FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN title AS t ON ml.movie_id = t.id JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE lt.link IN ('similar to', 'spin off', 'alternate language version of', 'featured in', 'spoofs', 'remake of') AND t.production_year BETWEEN 1950 AND 2010 GROUP BY lt.link;
SELECT ct.kind AS company_kind, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_movie_budget, COUNT(DISTINCT cn.id) AS total_production_companies, COUNT(DISTINCT mi_idx.movie_id) AS total_movies_with_budget, COUNT(DISTINCT rt.id) AS total_distinct_roles FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id AND it.info = 'budget' JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind = 'production companies' JOIN cast_info ci ON mi_idx.movie_id = ci.movie_id JOIN role_type rt ON ci.role_id = rt.id GROUP BY ct.kind HAVING COUNT(DISTINCT mi_idx.movie_id) > 3;
SELECT kt.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.movie_id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords FROM aka_title at INNER JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_keyword mk ON at.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT lt.link AS link_type, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, AVG(pi.info_type_id) AS average_info_type_id, SUM(CASE WHEN it.info = 'LD quality of source' THEN 1 ELSE 0 END) AS ld_quality_count FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id LEFT JOIN person_info AS pi ON mk.movie_id = pi.person_id LEFT JOIN info_type AS it ON pi.info_type_id = it.id WHERE lt.id IN ('4', '9', '11') AND it.id IN ('29', '89', '46') GROUP BY lt.link ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(ci.person_id) AS number_of_cast_entries, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN rt.role = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS total_actresses, COUNT(DISTINCT CASE WHEN ct.kind = 'production' THEN ci.movie_id END) AS number_of_production_movies, COUNT(DISTINCT CASE WHEN ct.kind = 'distributor' THEN ci.movie_id END) AS number_of_distributed_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN kind_type kt ON ci.person_role_id = kt.id JOIN company_type ct ON ci.person_id = ct.id WHERE kt.kind = 'tv movie' AND ct.id IN (3, 4, 2) GROUP BY kt.kind HAVING COUNT(DISTINCT ci.movie_id) > 0;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT n.id) AS number_of_actors, AVG(mi.info::numeric) AS average_movie_length, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender != 'm' THEN 1 ELSE 0 END) AS non_male_actors_count, MAX(cn.name) AS biggest_production_company, COUNT(DISTINCT mk.keyword_id) AS unique_keyword_count FROM movie_info mi JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN kind_type kt ON kt.id = mi.info_type_id JOIN movie_keyword mk ON mk.movie_id = mi.movie_id JOIN company_name cn ON cn.id = mc.company_id JOIN name n ON n.imdb_id = mc.company_id WHERE mi.info_type_id = 3 AND kt.kind IN ('movie', 'tv') AND cn.country_code IN ('[us]', '[uk]') AND mi.note NOT LIKE '%(English Subtitles)%' GROUP BY kt.kind ORDER BY average_movie_length DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_actors, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, MAX(mi.info) AS longest_movie_duration FROM title t JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') JOIN char_name cn ON cn.id IN (SELECT person_id FROM cast_info WHERE movie_id = t.id) JOIN role_type rt ON rt.id IN (SELECT role_id FROM cast_info WHERE person_id = cn.id) WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY t.kind_id ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_positions_filled, COUNT(DISTINCT an.id) AS unique_aka_names, COUNT(DISTINCT chn.id) AS unique_character_names, AVG(mii.info::NUMERIC) AS average_movie_info_numeric_value FROM kind_type AS kt JOIN movie_info_idx AS mii ON kt.id = mii.info_type_id LEFT JOIN cast_info AS ci ON mii.movie_id = ci.movie_id LEFT JOIN aka_name AS an ON ci.person_id = an.person_id LEFT JOIN char_name AS chn ON ci.person_id = chn.imdb_id WHERE kt.id IN (1, 2, 4, 7) AND mii.info SIMILAR TO '(26|00..001212|1\.00101100|...0\.110\.6)%' AND ci.nr_order IN (20, 33, 65, 75, 87, 93) AND an.name_pcode_cf IN ('A42', 'W4526', 'F6165', 'S5152', 'A641', 'M2626') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mk.movie_id) AS movie_count, AVG(mk.movie_id) AS average_movie_id, SUM(mk.keyword_id) AS sum_keyword_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN movie_keyword mk ON mk.movie_id = cn.imdb_id WHERE cn.country_code = 'US' AND mk.keyword_id IN (SELECT keyword_id FROM movie_keyword WHERE movie_id IN (11153, 9867, 7272, 12152, 12175, 8867)) GROUP BY ct.kind ORDER BY movie_count DESC;
SELECT ct.kind AS company_type, AVG(CAST(at.production_year AS NUMERIC)) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN lt.LINK = 'references' THEN 1 ELSE 0 END) AS references_count, SUM(CASE WHEN lt.LINK = 'referenced in' THEN 1 ELSE 0 END) AS referenced_in_count FROM company_type AS ct JOIN company_name AS cn ON cn.country_code = 'US' JOIN movie_info AS mi ON mi.movie_id = cn.id JOIN aka_title AS at ON at.movie_id = mi.movie_id JOIN cast_info AS ci ON ci.movie_id = at.movie_id JOIN link_type AS lt ON lt.id IN (SELECT ml.link_type_id FROM movie_link AS ml WHERE ml.movie_id = ci.movie_id) WHERE ct.kind IN ('production companies', 'distributors') AND at.production_year BETWEEN 2000 AND 2010 AND ci.nr_order IS NOT NULL GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_type, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(k.id) AS keyword_count, SUM(CASE WHEN it.info = 'LD official retail price' THEN CAST(mi.info AS NUMERIC) ELSE 0 END) AS total_official_retail_price FROM company_type ct JOIN movie_info mi ON ct.id = mi.info_type_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN info_type it ON mi.info_type_id = it.id WHERE mk.keyword_id IN (2506, 2862, 589, 3476, 4237) AND k.phonetic_code IN ('D1653', 'H532', 'M6321', 'H4326', 'F2426', 'A3513') AND it.id IN (15, 16, 18, 76, 39, 111) AND mi.movie_id IN (9091, 13237, 927238) AND (mi.note ILIKE '%(English subtitles)%' OR mi.note ILIKE '%(Original version)%') GROUP BY ct.kind;
SELECT ct.kind AS company_kind, AVG(mi.info::numeric) AS average_movie_length, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT ml.link_type_id) AS distinct_link_types, SUM(CASE WHEN pi.info_type_id = '26' THEN 1 ELSE 0 END) AS count_info_type_26, SUM(CASE WHEN pi.info_type_id = '23' THEN 1 ELSE 0 END) AS count_info_type_23, SUM(CASE WHEN pi.info_type_id = '34' THEN 1 ELSE 0 END) AS count_info_type_34 FROM movie_companies AS mc JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN cast_info AS ci ON mc.movie_id = ci.movie_id JOIN movie_link AS ml ON mc.movie_id = ml.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') AND mc.note NOT LIKE '%(TV)%' AND mc.note LIKE '%(USA)%' AND pi.person_id IN ('2159', '1740245', '2140') GROUP BY ct.kind HAVING COUNT(DISTINCT ci.person_id) > 10;
SELECT t.title AS movie_title, t.production_year AS movie_year, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ml.movie_id) AS total_related_movies, SUM(CASE WHEN ci.note LIKE '%(plastic surgeon)%' THEN 1 ELSE 0 END) AS plastic_surgeon_roles FROM title AS t LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year > 1990 AND (ml.linked_movie_id IN ('6083', '1392360', '1432949', '672621', '2395841', '604373') OR ml.linked_movie_id IS NULL) AND (ml.link_type_id = '11' OR ml.link_type_id IS NULL) AND (ci.person_role_id IS NOT NULL) GROUP BY t.title, t.production_year HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY total_cast_members DESC, movie_year DESC;
SELECT k.keyword, k.phonetic_code, COUNT(DISTINCT mk.movie_id) AS movies_count, COUNT(DISTINCT pi.person_id) AS people_count, SUM(CASE WHEN pi.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_info_count, AVG(CASE WHEN pi.note IS NOT NULL THEN 1 ELSE 0 END) AS avg_noted_info FROM keyword AS k JOIN movie_keyword AS mk ON k.id = mk.keyword_id JOIN person_info AS pi ON mk.movie_id = pi.person_id GROUP BY k.keyword, k.phonetic_code ORDER BY movies_count DESC, people_count DESC;
SELECT cn.name AS company_name, COUNT(at.id) AS number_of_titles, AVG(at.production_year) AS average_production_year, kt.kind AS movie_kind, COUNT(DISTINCT at.movie_id) AS unique_movies FROM aka_title at JOIN company_name cn ON at.movie_id = cn.id JOIN comp_cast_type kt ON at.kind_id = kt.id WHERE cn.name_pcode_sf IN ('G3532', 'J2614') AND cn.name IN ('CHASE', 'Lowbrow Customs', 'Universal Film R. T.', 'Aloisia Film', 'Home on the Range Productions') GROUP BY cn.name, kt.kind ORDER BY number_of_titles DESC, average_production_year DESC;
SELECT k.keyword, COUNT(mk.movie_id) AS movie_count FROM keyword AS k JOIN movie_info_idx AS mk ON k.id = mk.info_type_id WHERE k.id IN (6020, 8681, 8319, 3964, 4363, 7683) GROUP BY k.keyword ORDER BY movie_count DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(mi_idx_rank.info::FLOAT) AS average_movie_rank, COUNT(DISTINCT pi.person_id) AS number_of_people_involved, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM link_type AS lt JOIN movie_link AS ml ON lt.id = ml.link_type_id LEFT JOIN movie_info AS mi_idx_rank ON mi_idx_rank.movie_id = ml.movie_id AND mi_idx_rank.info_type_id = (SELECT id FROM info_type WHERE info = 'rank') LEFT JOIN movie_companies AS mc ON mc.movie_id = ml.movie_id LEFT JOIN person_info AS pi ON pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') AND pi.info LIKE '%actor%' WHERE lt.link IN ('follows', 'edited from') AND (mc.note LIKE '(2009)%' OR mc.note LIKE '(2012)%' OR mc.note LIKE '(2000-????)%') AND ml.movie_id IN ('7361', '14633') GROUP BY lt.LINK ORDER BY average_movie_rank DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(pk.count_per_keyword) AS average_keywords_per_movie, MAX(cast(pi.info as integer)) AS max_budget, MIN(cast(pi.info as integer)) AS min_budget FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN (SELECT movie_id, COUNT(keyword_id) AS count_per_keyword FROM movie_keyword GROUP BY movie_id) AS pk ON t.id = pk.movie_id LEFT JOIN person_info AS pi ON t.id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget') LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY t.production_year ORDER BY t.production_year;
SELECT AVG(CAST(mi.info AS DOUBLE PRECISION)) AS average_budget, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, COUNT(DISTINCT n.id) AS total_people_with_surname_code, SUM(CASE WHEN mi_idx.info LIKE '0.0%' THEN 1 ELSE 0 END) AS count_prefix_info FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN name n ON n.surname_pcode = 'A465' WHERE mi.info_type_id = 3 AND mi_idx.info_type_id = 2 AND ml.link_type_id = 1 AND mi.note IS NOT NULL GROUP BY n.surname_pcode;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, COUNT(DISTINCT al.id) AS total_links, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = kt.id AND kt.kind = 'movie' THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = kt.id AND kt.kind = 'tv series' THEN 1 ELSE 0 END) AS total_tv_series FROM aka_title AS at JOIN kind_type AS kt ON at.kind_id = kt.id LEFT JOIN movie_link AS al ON at.movie_id = al.movie_id GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT kt.kind AS movie_kind, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT mk.movie_id) AS num_movies_with_keywords, SUM(CASE WHEN cc.status_id = '3' THEN 1 ELSE 0 END) AS count_complete_cast_status_3, SUM(CASE WHEN cc.status_id = '4' THEN 1 ELSE 0 END) AS count_complete_cast_status_4, COUNT(DISTINCT ml.movie_id) AS num_linked_movies FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_keyword mk ON at.movie_id = mk.movie_id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id GROUP BY kt.kind ORDER BY num_movies_with_keywords DESC, avg_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(CAST(mi.info AS numeric)) AS average_rating, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_count, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t INNER JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM movie_info_idx WHERE info = 'rating') LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id WHERE t.production_year BETWEEN 1990 AND 2010 GROUP BY kt.kind HAVING COUNT(DISTINCT t.id) > 10 ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT k.id) AS total_distinct_keywords, MAX(t.production_year) AS latest_production_year FROM title t INNER JOIN aka_title at ON t.id = at.movie_id INNER JOIN movie_info_idx mi ON t.id = mi.movie_id INNER JOIN name n ON n.md5sum = at.md5sum INNER JOIN keyword k ON k.phonetic_code = at.phonetic_code WHERE t.production_year BETWEEN 2000 AND 2010 AND mi.info_type_id IN ('100', '101', '99') AND at.episode_of_id IN ('14284', '16059', '8468', '2167', '20079', '24526') AND n.name_pcode_cf IN ('A4165', 'A3423') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN cn.country_code LIKE 'US%' THEN 1 ELSE 0 END) AS total_usa_productions FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id JOIN company_name AS cn ON akat.movie_id = cn.imdb_id WHERE akat.production_year BETWEEN 1990 AND 2000 AND kt.kind IN ('tv movie', 'movie') AND cn.country_code IN ('USA', 'CAN', 'GBR') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT comp.id) AS number_of_companies, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS full_cast_movies, COUNT(DISTINCT mk.id) AS number_of_keywords, MAX(pi.id) AS max_person_info_id FROM aka_title AS at JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN company_name AS comp ON mc.company_id = comp.id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN movie_keyword AS mk ON at.movie_id = mk.movie_id LEFT JOIN person_info AS pi ON pi.person_id = at.movie_id WHERE at.kind_id = 1 AND mc.company_type_id IN (1, 2) AND cc.status_id IN (3, 4) AND at.production_year BETWEEN 1990 AND 2000 GROUP BY at.production_year ORDER BY average_production_year DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ct.kind = 'production companies' THEN 1 ELSE 0 END) AS count_production_companies, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS count_distributors, SUM(CASE WHEN ct.kind = 'special effects companies' THEN 1 ELSE 0 END) AS count_special_effects_companies, SUM(CASE WHEN ct.kind = 'miscellaneous companies' THEN 1 ELSE 0 END) AS count_miscellaneous_companies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id WHERE ci.movie_id IN ('1061075', '1326354', '1324782', '1249308', '2383083', '2172643') AND mc.company_id IN ('22', '900', '1231', '886') GROUP BY rt.ROLE;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_type_1_links, SUM(CASE WHEN ml.link_type_id = 17 THEN 1 ELSE 0 END) AS number_of_type_17_links, AVG(ml.id) AS average_movie_link_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN keyword AS k ON k.id = ml.movie_id WHERE ml.link_type_id IN (1, 17) AND ml.linked_movie_id = 2302013 AND k.phonetic_code IN ('L2315', 'A3132') GROUP BY lt.LINK ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT akn.person_id) AS unique_person_count, AVG(LENGTH(akn.name)) AS average_name_length, SUM(CASE WHEN akn.surname_pcode = 'A262' THEN 1 ELSE 0 END) AS surname_A262_count, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords FROM company_type AS ct LEFT JOIN movie_companies AS mc ON ct.id = mc.company_type_id LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_name AS akn ON mk.movie_id = akn.person_id GROUP BY ct.kind
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT pi.person_id) AS total_people, SUM(CASE WHEN ct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_casts, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.note IN ('AJ Addo', 'tina ansah', 'Fan Club President')) AS noted_persons FROM title AS t LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN comp_cast_type AS ct ON cc.status_id = ct.id LEFT JOIN role_type AS rt ON cc.subject_id = rt.id LEFT JOIN person_info AS pi ON pi.person_id = t.id WHERE t.kind_id = 1 AND t.production_year BETWEEN 1990 AND 2005 AND (ct.id IN (2, 1, 4, 3) OR ct.id IS NULL) AND (pi.person_id IN (904, 1963, 736, 1740234, 1741102) OR pi.person_id IS NULL) GROUP BY t.kind_id;
SELECT cn.country_code, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT n.id) AS number_of_people, AVG(n.imdb_id) AS average_imdb_id, SUM(cc.movie_id) AS total_movie_associations FROM company_name cn JOIN complete_cast cc ON cn.id = cc.subject_id JOIN name n ON cc.movie_id = n.id JOIN aka_name an ON n.id = an.person_id WHERE cn.country_code IS NOT NULL AND n.surname_pcode IN ('A415', 'A413', 'A431') AND an.imdb_index IS NOT NULL GROUP BY cn.country_code ORDER BY number_of_companies DESC, number_of_people DESC;
SELECT kt.kind AS movie_kind, MIN(at.title) AS alternative_title, AVG(CASE WHEN mi.info_type_id = it.id AND it.info = 'rating' THEN CAST(mi.info AS FLOAT) END) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN mc.company_type_id = ct.id AND ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies, MAX(at.production_year) AS latest_production_year FROM kind_type AS kt LEFT JOIN aka_title AS at ON kt.id = at.kind_id LEFT JOIN movie_info AS mi ON at.movie_id = mi.movie_id LEFT JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_companies AS mc ON at.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id WHERE at.production_year >= 1990 AND (at.title = 'The 11th Hour' OR at.title = 'Anna and Wulin' OR at.title = 'Arabian Tale') AND (at.imdb_index = 'I' OR at.imdb_index = 'III' OR at.imdb_index = 'IV') GROUP BY kt.kind;
SELECT ct.kind AS company_type, COUNT(mc.id) AS total_movies, AVG(mi_idx.info::numeric) AS average_movie_info, SUM(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS total_directors, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS total_editors FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN role_type AS rt ON rt.id = mc.company_type_id WHERE mi_idx.info_type_id IN (100, 101, 99) AND ct.id IN (SELECT id FROM comp_cast_type WHERE kind IN ('complete+verified', 'cast', 'crew', 'complete')) AND rt.id IN (9, 3, 10, 8, 11, 6) GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT it.info AS information_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN k.phonetic_code = 'H5632' THEN 1 ELSE 0 END) AS count_specific_phonetic_code, COUNT(DISTINCT k.id) AS unique_keywords_used FROM aka_title at JOIN info_type it ON at.kind_id = it.id LEFT JOIN keyword k ON at.movie_id = k.id WHERE at.kind_id IN (7, 3, 4) AND it.info IN ('trade mark', 'production process protocol', 'languages', 'LD catalog number', 'mini biography') AND at.production_year IS NOT NULL GROUP BY it.info ORDER BY total_movies DESC, average_production_year DESC;
SELECT t.title AS movie_title, COUNT(ci.id) AS total_cast_members, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.imdb_index IN ('I', 'II') THEN 1 ELSE 0 END) AS count_sequels, mi.info AS movie_info, COUNT(DISTINCT k.id) AS distinct_keywords FROM title AS t JOIN cast_info AS ci ON ci.movie_id = t.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id JOIN movie_info AS mi ON mi.movie_id = t.id LEFT JOIN keyword AS k ON mi.info = k.keyword WHERE ci.person_role_id = 619 AND t.production_year > 2005 GROUP BY t.title, mi.info ORDER BY total_cast_members DESC, average_production_year;
SELECT ct.kind AS company_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT cc.subject_id) AS number_of_subjects, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, SUM(CASE WHEN t.kind_id = 4 THEN 1 ELSE 0 END) AS number_of_documentaries FROM title t JOIN complete_cast cc ON t.id = cc.movie_id JOIN company_type ct ON t.kind_id = ct.id GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT rt.role, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.movie_id) AS number_of_movies, COUNT(DISTINCT mi.id) AS number_of_movie_info_entries FROM role_type rt JOIN aka_name an ON rt.id = an.person_id JOIN aka_title at ON at.movie_id = an.person_id JOIN movie_info mi ON mi.movie_id = at.movie_id WHERE rt.role IN ('actor', 'actress') GROUP BY rt.role ORDER BY rt.role;
SELECT kt.kind AS movie_kind, count(DISTINCT ci.movie_id) AS num_movies, avg(ci.nr_order) AS avg_cast_order, count(DISTINCT pi.person_id) AS num_people, sum(case when pi.info LIKE '%tropical fever%' then 1 else 0 end) AS count_tropical_fever_mentions, min(a.name) AS example_actor_name, max(k.keyword) AS example_keyword FROM cast_info AS ci JOIN kind_type AS kt ON ci.movie_id = kt.id JOIN person_info AS pi ON ci.person_id = pi.person_id JOIN aka_name AS a ON ci.person_id = a.person_id JOIN keyword AS k ON pi.info LIKE '%' || k.keyword || '%' WHERE a.name_pcode_nf IN ('L6543', 'E3624', 'F6543', 'F6261', 'A5242', 'F6526') AND ci.person_id IN ('21277', '11977', '18600') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN mc.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_productions, t.production_year, t.kind_id FROM cast_info AS ci JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN title AS t ON ci.movie_id = t.id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND t.production_year IS NOT NULL GROUP BY t.production_year, t.kind_id ORDER BY t.production_year DESC, average_rating DESC;
SELECT kt.kind, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT n.id) AS total_directors, MAX(t.production_year) AS latest_movie_year FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_info AS mi ON t.id = mi.movie_id LEFT JOIN person_info AS pi ON pi.person_id = t.id AND pi.info_type_id = mi.info_type_id JOIN name AS n ON n.id = pi.person_id WHERE mi.info_type_id = 4 AND kt.id IN (4, 5, 1, 6, 3) AND ( mi.note IS NULL OR mi.note IN ('(Original version)', '(none)', '(some dialogue)') ) GROUP BY kt.kind ORDER BY average_rating DESC, total_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CASE WHEN mi_idx.info_type_id = 100 THEN CAST(mi_idx.info AS FLOAT) END) AS average_rating, SUM(CASE WHEN mi_idx.info_type_id = 101 THEN CAST(mi_idx.info AS INTEGER) END) AS total_budget, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved FROM movie_info_idx mi_idx JOIN company_type ct ON mi_idx.info_type_id = ct.id LEFT JOIN person_info pi ON mi_idx.movie_id = pi.person_id WHERE mi_idx.info_type_id IN (100, 101, 99) GROUP BY ct.kind;
SELECT rt.ROLE as role_type, COUNT(DISTINCT t.id) as total_titles, COALESCE(SUM(t.episode_nr), 0) as total_episodes, ROUND(AVG(t.production_year), 2) as average_production_year FROM title t JOIN role_type rt ON t.kind_id = rt.id GROUP BY rt.ROLE ORDER BY total_titles DESC;
SELECT AVG(cast_roles.total_roles) AS average_roles_per_movie, COUNT(DISTINCT prod.movie_id) AS total_production_movies, COUNT(DISTINCT spec_eff.company_id) AS distinct_special_effects_companies FROM title t LEFT JOIN ( SELECT ci.movie_id, COUNT(ci.person_id) AS total_roles FROM cast_info ci GROUP BY ci.movie_id ) cast_roles ON cast_roles.movie_id = t.id LEFT JOIN ( SELECT mc.movie_id, mc.company_id FROM movie_companies mc INNER JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind = 'production companies' ) prod ON prod.movie_id = t.id LEFT JOIN ( SELECT mc.movie_id, mc.company_id FROM movie_companies mc INNER JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind = 'special effects companies' ) spec_eff ON spec_eff.movie_id = t.id WHERE t.production_year >= 2000 GROUP BY t.production_year;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_participants, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_movies, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS verified_movies, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.note IS NOT NULL) AS noted_person_info_entries, COUNT(DISTINCT ml.movie_id) AS total_movie_links, COUNT(DISTINCT an.person_id) AS total_aka_persons FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id LEFT JOIN person_info AS pi ON ci.person_id = pi.person_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN aka_name AS an ON ci.person_id = an.person_id WHERE kt.kind IN ('movie', 'tv series') AND t.production_year >= 2000 AND t.production_year <= 2010 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN at.kind_id = 6 THEN 1 ELSE 0 END) AS total_season_6_titles, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT mi_finnish.movie_id) AS total_finnish_movies FROM cast_info ci JOIN aka_title at ON ci.movie_id = at.movie_id JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN movie_info mi_finnish ON ci.movie_id = mi_finnish.movie_id AND mi_finnish.info = 'Finnish' WHERE ci.note LIKE '%(as %)' AND at.season_nr IN (1, 9) GROUP BY at.production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_individuals_involved, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN lt.link = 'references' THEN 1 ELSE 0 END) AS total_references, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id JOIN keyword AS k ON mi_idx.info_type_id = k.id JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN cast_info AS ci ON ml.movie_id = ci.movie_id WHERE ml.link_type_id IN (4, 2, 13, 1, 11, 9) AND lt.link IN ('unknown link', 'references') AND mi_idx.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating') AND kt.id IN (SELECT id FROM kind_type WHERE kind LIKE '%movie%') AND ci.note IN ('(producer)', '(executive producer)') GROUP BY kt.kind;
SELECT c.name AS company_name, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.keyword_id) AS distinct_keywords, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, COUNT(DISTINCT n.id) AS number_of_cast_members, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, SUM(CASE WHEN t.kind_id = 3 THEN 1 ELSE 0 END) AS number_of_video_games FROM company_name c LEFT JOIN movie_keyword mk ON mk.movie_id = c.imdb_id LEFT JOIN movie_link ml ON ml.movie_id = c.imdb_id LEFT JOIN complete_cast cc ON cc.movie_id = c.imdb_id LEFT JOIN title t ON t.id = c.imdb_id LEFT JOIN name n ON n.imdb_id = c.imdb_id LEFT JOIN movie_keyword k ON k.movie_id = t.id WHERE c.name IN ('Crown International Pictures', 'Hisa-Film-Vertrieb GmbH', 'Quality Special Products', 'Hem Films', 'H & H Warranted Productions') GROUP BY c.name ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN al.title IS NOT NULL THEN 1 ELSE 0 END) AS number_of_alternate_titles, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM title AS t LEFT JOIN aka_title AS al ON t.id = al.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN keyword AS k ON k.phonetic_code = al.phonetic_code INNER JOIN company_type AS ct ON t.kind_id = ct.id WHERE t.production_year BETWEEN 2000 AND 2023 AND ml.linked_movie_id IN (16385, 2365137, 1412093, 1391187, 16056, 1432843) AND al.title IS NOT NULL AND k.keyword IN ('freezer', 'vengeance', 'undead', 'meat-cleaver') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT rt.ROLE as role_type, AVG(title.production_year) as average_production_year, COUNT(DISTINCT title.id) as total_movies, COUNT(DISTINCT cast_info.person_id) as total_actors, SUM(case when title.production_year BETWEEN 1970 AND 1980 then 1 else 0 end) as movies_1970s, SUM(case when title.production_year BETWEEN 1981 AND 1990 then 1 else 0 end) as movies_1980s FROM title JOIN cast_info ON title.id = cast_info.movie_id JOIN role_type rt ON cast_info.role_id = rt.id WHERE title.phonetic_code = 'C6123' AND title.production_year IN ('1974', '1969', '1987', '1957') GROUP BY rt.ROLE ORDER BY average_production_year DESC;
SELECT lt.LINK AS link_type, COUNT(ml.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN p.info = 'actor' THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN p.info = 'director' THEN 1 ELSE 0 END) AS total_directors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 JOIN person_info AS p ON ml.movie_id = p.person_id WHERE lt.id IN (9, 3, 18, 8, 15) AND mi.info_type_id = 3 AND ml.linked_movie_id = 2439274 AND p.info IN ('actor', 'director') GROUP BY lt.LINK ORDER BY total_movies DESC, average_rating DESC;
SELECT it.info AS genre, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(mi.info::numeric) AS average_budget, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'budget' JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON ml.movie_id = mi.movie_id JOIN person_info pi ON pi.person_id = mi.movie_id JOIN name n ON pi.person_id = n.id WHERE mi.movie_id IN ('19606', '114', '12283', '8086') GROUP BY it.info;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies, SUM(CASE WHEN lt.link LIKE '%remake of%' THEN 1 ELSE 0 END) AS total_remake_movies, COUNT(DISTINCT pi.person_id) AS number_of_persons_with_info, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS total_actress_roles FROM title AS t LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN person_info AS pi ON pi.info IN ('Sand Springs, Oklahoma, USA', 'Wilmington, Delaware, USA', '29 January 1982') LEFT JOIN role_type AS rt ON rt.role IN ('editor', 'composer', 'actress') LEFT JOIN link_type AS lt ON lt.link IN ('remake of', 'spin off from', 'spoofs') WHERE t.production_year > 2000 AND mc.company_type_id = '1' AND (lt.id IN ('5', '2', '1', '15', '17') OR lt.id IS NULL) GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT pi.info_type_id, AVG(LENGTH(an.name)) AS avg_name_length, COUNT(DISTINCT an.name) AS total_distinct_names, COUNT(DISTINCT an.surname_pcode) AS count_unique_surnames, SUM(CASE WHEN mi.note = 'Y' THEN 1 ELSE 0 END) AS count_note_yes FROM aka_name an JOIN person_info pi ON an.person_id = pi.person_id JOIN movie_info_idx mi ON mi.movie_id = an.person_id WHERE pi.info_type_id IN (17, 23, 29, 25, 27, 20) AND an.md5sum IN ('576c973c18ecc2f62ddb0c705a3b7d0f', '9466c784daef2ca04d576060483fa8e3', 'd2db89e5d232e9c60e2d13cf2877f90b') AND an.surname_pcode IN ('F6', 'A134') GROUP BY pi.info_type_id ORDER BY pi.info_type_id;
SELECT COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS total_male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS total_female_actors, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year FROM movie_keyword AS mk JOIN title AS t ON mk.movie_id = t.id JOIN name AS n ON t.id = n.id GROUP BY n.gender ORDER BY total_movies_with_keywords DESC, average_production_year;
SELECT AVG(ak.title_count) AS average_title_count, MAX(ak.max_production_year) AS latest_production_year, MIN(ak.min_production_year) AS earliest_production_year, SUM(ak.title_count) AS total_titles, COUNT(DISTINCT ki.id) AS total_unique_keywords, COUNT(DISTINCT pi.person_id) AS total_unique_persons FROM (SELECT at.movie_id, COUNT(at.id) AS title_count, MAX(at.production_year) AS max_production_year, MIN(at.production_year) AS min_production_year FROM aka_title at GROUP BY at.movie_id ) ak LEFT JOIN movie_keyword mk ON mk.movie_id = ak.movie_id LEFT JOIN keyword ki ON ki.id = mk.keyword_id AND ki.keyword IN ('vampire-hunter', 'training', 'newspaper-editor', 'multiple-views', 'historical-fiction', 'forbidden-love') LEFT JOIN movie_info_idx mi ON mi.movie_id = ak.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id GROUP BY ki.keyword;
SELECT COUNT(DISTINCT cn.id) AS num_companies, COUNT(DISTINCT chn.id) AS num_characters, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_movie_rating, SUM(CASE WHEN kt.id = '4' THEN 1 ELSE 0 END) AS num_tv_series, COUNT(DISTINCT cc.movie_id) AS num_movies_with_complete_cast FROM company_name cn LEFT JOIN movie_companies mc ON cn.id = mc.company_id LEFT JOIN char_name chn ON chn.surname_pcode IN ('O416', 'M65', 'L5163') LEFT JOIN complete_cast cc ON mc.movie_id = cc.movie_id LEFT JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN kind_type kt ON cc.subject_id = kt.id LEFT JOIN info_type it ON mi_idx.info_type_id = it.id AND it.info = 'rating' WHERE cn.name_pcode_nf IN ('L2416', 'A2321') AND ( cn.id = '152' OR kt.id = '4' OR it.id IN ('29', '49', '97', '78') ) GROUP BY cn.country_code;
SELECT c.name AS company_name, c.country_code, COUNT(DISTINCT t.id) AS number_of_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN p.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_contributors, SUM(CASE WHEN p.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_contributors, COUNT(DISTINCT pi.person_id) AS number_of_contributors FROM company_name AS c JOIN aka_title AS t ON c.id = t.movie_id JOIN movie_info_idx AS mi ON t.movie_id = mi.movie_id JOIN person_info AS pi ON pi.person_id = mi.movie_id JOIN name AS p ON pi.person_id = p.id WHERE c.country_code LIKE 'US%' AND mi.info_type_id IN (100, 101, 99) GROUP BY c.name, c.country_code ORDER BY number_of_titles DESC;
SELECT AVG(keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT complete_verified_movie_id) AS total_movies_with_complete_verified_cast, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used FROM ( SELECT mk.movie_id AS complete_verified_movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk INNER JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id INNER JOIN comp_cast_type AS cct ON cc.status_id = cct.id WHERE cct.kind = 'complete+verified' GROUP BY mk.movie_id ) AS subquery JOIN movie_keyword AS mk ON subquery.complete_verified_movie_id = mk.movie_id JOIN movie_info_idx AS mii ON mk.movie_id = mii.movie_id JOIN info_type AS it ON mii.info_type_id = it.id WHERE it.info = 'release dates' AND mii.info LIKE 'USA:%20%' AND SUBSTRING(mii.info FROM 'USA:%(\\d+)%')::INTEGER > 2000;
SELECT AVG(at.note_length) AS avg_note_length, COUNT(DISTINCT kw.id) AS num_unique_keywords, COUNT(DISTINCT at.id) AS num_titles, SUM(CASE WHEN at.episode_nr = 155 THEN 1 ELSE 0 END) AS num_episode_155, STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords_list FROM ( SELECT id, movie_id, episode_nr, LENGTH(note) AS note_length FROM aka_title WHERE note LIKE '%(Australia) (fake working title)%' ) AS at JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN keyword AS kw ON cn.country_code = kw.phonetic_code WHERE kw.keyword IN ('handcuffed-to-someone', 'religious', 'drug-trafficking', 'conservatory', 'scientology', 'horse-riding') AND ct.kind = 'production companies' GROUP BY cn.country_code;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS numeric)) FILTER (WHERE mi_idx.info_type_id = '100') AS average_rating_100, SUM(CAST(mi_idx.info AS numeric)) FILTER (WHERE mi_idx.info_type_id = '101') AS total_budget_101, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = '99') AS count_of_person_info_type_99 FROM movie_info_idx mi_idx JOIN company_type ct ON mi_idx.movie_id = ct.id LEFT JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND (mi_idx.note IS NULL OR mi_idx.note != '') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT cct.kind AS cast_type_kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(kt.id) AS average_kind_type_id, SUM(mk.keyword_id) AS total_keyword_id_sum FROM comp_cast_type cct JOIN movie_keyword mk ON cct.id = mk.movie_id JOIN kind_type kt ON mk.movie_id = kt.id WHERE cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND mk.movie_id IN (13927, 7318, 9248, 15407) GROUP BY cct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT at.title) AS title_count, SUM(CASE WHEN cn.id IS NOT NULL THEN 1 ELSE 0 END) AS unique_character_count FROM aka_title AS at JOIN kind_type AS kt ON at.kind_id = kt.id LEFT JOIN movie_info AS mi ON at.movie_id = mi.movie_id LEFT JOIN char_name AS cn ON mi.movie_id = cn.id WHERE at.production_year IS NOT NULL GROUP BY kt.kind ORDER BY avg_production_year DESC, title_count DESC;
SELECT it.info AS info_type, AVG(mi.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT ml.movie_id) AS number_of_movies_linked, SUM(CASE WHEN pi.info_type_id = it.id THEN 1 ELSE 0 END) AS number_of_person_info_entries FROM movie_info_idx AS mii JOIN aka_title AS mi ON mi.movie_id = mii.movie_id JOIN info_type AS it ON mii.info_type_id = it.id JOIN keyword AS k ON k.id = mii.info_type_id JOIN movie_link AS ml ON ml.movie_id = mii.movie_id JOIN person_info AS pi ON pi.info_type_id = it.id GROUP BY it.info ORDER BY number_of_unique_keywords DESC, average_production_year DESC;
SELECT cct.kind AS cast_type, COUNT(DISTINCT mi.movie_id) AS total_movies, COUNT(DISTINCT k.id) AS total_keywords, AVG(COUNT(k.id)) OVER (PARTITION BY cct.kind) AS avg_keywords_per_movie FROM comp_cast_type AS cct JOIN movie_info_idx AS mi ON cct.id = mi.info_type_id JOIN keyword AS k ON mi.movie_id = k.id WHERE cct.kind IN ('complete', 'complete+verified') GROUP BY cct.kind;
SELECT COUNT(*) AS total_movies, AVG(aka_title.production_year) AS average_production_year, SUM(CASE WHEN comp_cast_type.kind = 'complete' THEN 1 ELSE 0 END) AS total_complete_cast_movies, SUM(CASE WHEN comp_cast_type.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_verified_cast_movies, COUNT(DISTINCT char_name.name) AS distinct_character_names, COUNT(DISTINCT keyword.id) AS total_keywords, MAX(movie_companies.company_type_id) AS max_company_type_id FROM aka_title JOIN movie_keyword ON aka_title.movie_id = movie_keyword.movie_id JOIN keyword ON movie_keyword.keyword_id = keyword.id JOIN movie_companies ON aka_title.movie_id = movie_companies.movie_id JOIN comp_cast_type ON movie_companies.company_type_id = comp_cast_type.id JOIN char_name ON char_name.name = aka_title.note WHERE aka_title.production_year BETWEEN 1990 AND 2000 AND movie_companies.company_type_id = 1 AND aka_title.kind_id = 1 AND (char_name.name IN ('Vereshchagin', 'Old Man on Street', 'Hadhod', 'Uncle Carl Åkerblom') OR movie_keyword.movie_id IN ('15386', '18793')) GROUP BY aka_title.kind_id ORDER BY total_movies DESC;
SELECT k.keyword AS keyword, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) AS average_movie_length, COUNT(DISTINCT n.id) AS number_of_actors FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_info AS mi ON mk.movie_id = mi.movie_id AND mi.info_type_id = 4 INNER JOIN name AS n ON mi.movie_id = n.imdb_id WHERE mk.keyword_id IN (3881, 2089, 3415, 3648) GROUP BY k.keyword ORDER BY number_of_movies DESC, average_movie_length DESC;
SELECT kt.kind AS movie_type, avg(akat.production_year) AS average_production_year, count(DISTINCT akat.movie_id) AS number_of_movies, count(DISTINCT mc.company_id) AS number_of_companies_involved, sum(CASE WHEN rt.role = 'director' THEN 1 ELSE 0 END) AS number_of_directors, sum(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS number_of_actresses, sum(CASE WHEN rt.role = 'cinematographer' THEN 1 ELSE 0 END) AS number_of_cinematographers, sum(CASE WHEN rt.role = 'composer' THEN 1 ELSE 0 END) AS number_of_composers FROM kind_type kt JOIN aka_title akat ON kt.id = akat.kind_id JOIN movie_companies mc ON akat.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_link mlink ON akat.movie_id = mlink.movie_id JOIN role_type rt ON mlink.link_type_id = rt.id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, avg(title.production_year) AS average_production_year, count(DISTINCT title.id) AS number_of_titles, count(DISTINCT cast_info.person_id) AS number_of_participants, count(DISTINCT movie_keyword.keyword_id) AS number_of_unique_keywords, sum(case when role_type.role = 'actor' then 1 else 0 end) AS number_of_actors, sum(case when role_type.role = 'actress' then 1 else 0 end) AS number_of_actresses FROM title JOIN kind_type AS kt ON title.kind_id = kt.id LEFT JOIN cast_info ON title.id = cast_info.movie_id LEFT JOIN role_type ON cast_info.role_id = role_type.id LEFT JOIN movie_keyword ON title.id = movie_keyword.movie_id WHERE kt.kind IN ('video movie', 'video game') AND title.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, COUNT(DISTINCT k.id) AS distinct_keywords_used FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN char_name cn ON t.id = cn.imdb_id LEFT JOIN name n ON cn.id = n.id WHERE t.production_year >= 2000 AND (n.surname_pcode = 'A41' OR n.surname_pcode = 'A42' OR n.surname_pcode = 'A435') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind, AVG(CAST(mi.info AS FLOAT)) AS average_rating, COUNT(DISTINCT cc.movie_id) AS unique_movies, COUNT(DISTINCT rt.id) AS different_roles FROM movie_info mi INNER JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id INNER JOIN kind_type kt ON mi.movie_id = kt.id INNER JOIN complete_cast cc ON mi.movie_id = cc.movie_id INNER JOIN comp_cast_type cct ON cc.status_id = cct.id INNER JOIN role_type rt ON cct.kind = rt.role WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS FLOAT) > 0 AND kt.kind IN ('tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT kt.kind AS content_type, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT n.id) AS total_people, AVG(n.imdb_id) AS average_imdb_id, COUNT(DISTINCT ak.id) AS total_aka_names, MAX(it.id) AS max_info_type_id, MIN(lt.id) AS min_link_type_id FROM kind_type kt LEFT JOIN keyword k ON kt.id = k.id LEFT JOIN name n ON n.surname_pcode = k.phonetic_code LEFT JOIN aka_name ak ON ak.person_id = n.id LEFT JOIN info_type it ON it.id = ak.id LEFT JOIN link_type lt ON lt.id = it.id GROUP BY kt.kind;
SELECT kt.kind, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_actors, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS num_tv_related_companies, SUM(CASE WHEN mc.note LIKE '%(worldwide) (all media)%' THEN 1 ELSE 0 END) AS num_worldwide_media_companies FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN cast_info ci ON t.id = ci.movie_id JOIN movie_companies mc ON t.id = mc.movie_id WHERE t.series_years NOT LIKE '%????%' AND t.production_year >= 2000 AND EXISTS (SELECT 1 FROM keyword k WHERE k.id = ci.movie_id AND k.keyword LIKE '%crime%') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.LINK = 'featured in' THEN 1 ELSE 0 END) AS featured_in_count, SUM(CASE WHEN lt.LINK = 'followed by' THEN 1 ELSE 0 END) AS followed_by_count, SUM(CASE WHEN lt.LINK = 'referenced in' THEN 1 ELSE 0 END) AS referenced_in_count, SUM(CASE WHEN lt.LINK = 'remade as' THEN 1 ELSE 0 END) AS remade_as_count FROM title AS t JOIN role_type AS rt ON t.kind_id = rt.id JOIN link_type AS lt ON t.kind_id = lt.id JOIN info_type AS it ON t.kind_id = it.id WHERE t.production_year BETWEEN 1990 AND 2010 AND t.episode_nr IS NOT NULL AND rt.id = 7 AND rt.ROLE = 'editor' AND lt.id IN (5, 15) AND it.id IN (31, 10, 50, 76, 73) GROUP BY rt.ROLE ORDER BY total_titles DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_position, MIN(n.name) AS first_actor_name, MAX(n.name) AS last_actor_name, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_actors, COUNT(DISTINCT cc.id) AS number_of_complete_casts, COUNT(DISTINCT cct.id) AS number_of_different_cast_types FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id LEFT JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN comp_cast_type AS cct ON cc.subject_id = cct.id WHERE ci.role_id = (SELECT id FROM comp_cast_type WHERE kind = 'actor') AND (ci.note LIKE '%(voice)%' OR ci.note NOT LIKE '%(archive footage)%') GROUP BY ci.movie_id HAVING COUNT(DISTINCT ci.person_id) > 1;
SELECT MAX(cn.name) AS company_name, ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS num_companies, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT cct.id) AS cast_type_count, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT it.id) AS info_type_count, COUNT(DISTINCT lt.id) AS link_type_count FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN comp_cast_type cct ON cn.id = cct.id JOIN info_type it ON cn.id = it.id JOIN link_type lt ON cn.id = lt.id WHERE cn.country_code IN ('US', 'JP', 'FR') AND cn.name_pcode_sf IN ('M3652', 'A6163', 'L2641', 'D6123') AND ct.id IN (1, 2, 3, 4) AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY us_based_companies DESC, num_companies DESC;
SELECT it.info AS information_type, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT cc.subject_id) AS number_of_subjects, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS status_3_count, AVG(mii.info_type_id) AS average_info_type_id FROM complete_cast cc JOIN movie_info_idx mii ON cc.movie_id = mii.movie_id JOIN info_type it ON mii.info_type_id = it.id GROUP BY it.info ORDER BY number_of_movies DESC, number_of_subjects DESC;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT t.id) AS total_titles, SUM(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) AS count_kind_id_4, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS count_kind_id_3, COUNT(DISTINCT cct.id) AS total_comp_cast_types, MAX(at.production_year) AS latest_alternate_title_year, MIN(t.production_year) AS earliest_title_year FROM title t LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN comp_cast_type cct ON cct.kind = 'complete' OR cct.kind = 'complete+verified' GROUP BY t.kind_id HAVING COUNT(DISTINCT at.id) > 0
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS number_of_movies, MIN(ct.kind) AS company_type, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS complete_cast_status_count FROM aka_title AS ak JOIN movie_companies AS mc ON ak.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN complete_cast AS cc ON ak.movie_id = cc.movie_id JOIN movie_info AS mi ON ak.movie_id = mi.movie_id JOIN movie_info_idx AS mix ON ak.movie_id = mix.movie_id WHERE ak.kind_id <> 1 AND ak.production_year IS NOT NULL AND ak.episode_of_id IS NULL AND mi.info_type_id IN (SELECT id FROM movie_info_idx WHERE movie_id IN (19223, 6744, 12274, 12077, 18867, 19586)) AND cc.id IN (2679, 2075) AND mix.info ~ '^[A-Za-z ]+$' GROUP BY ct.kind;
SELECT it.info AS info_type, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies FROM movie_keyword AS mk INNER JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id INNER JOIN company_name AS cn ON cn.imdb_id = mk.movie_id INNER JOIN info_type AS it ON it.id = cc.subject_id WHERE mk.id IN (3843, 4798) AND mk.movie_id IN (8317, 10013, 9914, 7373) AND cn.md5sum IN ( '8d978787b0ec287764f214189bd27ccc', 'cd11f002bfac4110767acd038dad525d', 'f528d5021e84ca97756808ca01ec4605', '885492194dc62a66d0fb18ca950f6163', 'c2c967c278a15530e9f0d846e4f11a14' ) AND it.info IN ('LD analog left', 'quotes', 'admissions') GROUP BY it.info;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN pi.info LIKE '%Oscar%' THEN 1 ELSE 0 END) AS total_oscars_won FROM cast_info ci INNER JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') WHERE n.imdb_index IN ('XXIII', 'XV', 'IX', 'XI') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') AND pi.note NOT IN ('carlosprimati@uol.com.br', 'E.A.', 'IMDb Editors') GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY total_oscars_won DESC, average_movie_rating DESC, total_movies DESC, actor_name;
SELECT COUNT(DISTINCT a.id) AS total_aka_titles, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT m.company_id) AS total_companies_involved, COUNT(DISTINCT n.id) AS total_unique_names, COUNT(DISTINCT ml.movie_id) AS total_movies_with_links, SUM(CASE WHEN a.production_year BETWEEN 1990 AND 2000 THEN 1 ELSE 0 END) AS titles_from_90s FROM aka_title AS a JOIN movie_companies AS m ON a.movie_id = m.movie_id JOIN name AS n ON n.md5sum = a.md5sum LEFT JOIN movie_link AS ml ON a.movie_id = ml.movie_id WHERE a.production_year IS NOT NULL AND m.note IS NOT NULL AND n.gender IN ('F', 'M') GROUP BY n.gender ORDER BY total_aka_titles DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_length, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors, MAX(n.name) AS most_recent_actor_name FROM movie_companies AS mc JOIN kind_type AS kt ON mc.movie_id = kt.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id WHERE mc.note LIKE '%(TV)%' AND kt.kind = 'movie' AND n.name_pcode_cf IN ('A2531', 'A4136', 'A21', 'A6123', 'A2', 'A5656') AND n.gender IN ('M', 'F') GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT cn.id) AS number_of_char_names, AVG(mi_idx.info::numeric) AS average_movie_info, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS indexed_aka_names_count FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON mi_idx.info_type_id = kt.id LEFT JOIN char_name AS cn ON cn.imdb_id = mi_idx.movie_id LEFT JOIN aka_name AS an ON an.person_id = mi_idx.movie_id WHERE kt.id IN (SELECT DISTINCT info_type_id FROM movie_info_idx) AND cn.id IN ('60670', '10694') AND mi_idx.note IS NOT NULL GROUP BY kt.kind;
SELECT cct.kind AS cast_type, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(mk.id) AS keyword_count, AVG(ct.id) AS average_company_type_id FROM comp_cast_type cct JOIN movie_keyword mk ON cct.id = mk.movie_id JOIN company_type ct ON mk.keyword_id = ct.id GROUP BY cct.kind HAVING COUNT(DISTINCT mk.movie_id) > 5 ORDER BY movie_count DESC, keyword_count DESC;
SELECT ct.kind AS company_type, COUNT(*) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE mi.info_type_id = 101) AS average_rating, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.linked_movie_id IN (10496, 260662, 2464253, 553702, 58480, 2087155)) AS movies_with_specific_links FROM company_type ct JOIN movie_info mi ON mi.info ~ ct.kind JOIN movie_link ml ON mi.movie_id = ml.movie_id GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(ci.id) AS total_roles, AVG(ci.nr_order) AS average_order, MIN(ci.nr_order) AS min_order, MAX(ci.nr_order) AS max_order, COUNT(DISTINCT ci.person_id) AS unique_actors FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.person_role_id IS NOT NULL AND pi.info_type_id = 3 GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT kt.kind AS movie_kind, MIN(t.title) AS movie_title, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, COUNT(DISTINCT mi_idx.movie_id) AS total_movies_with_info, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS sum_complete_status FROM title AS t INNER JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id GROUP BY kt.kind ORDER BY total_linked_movies DESC;
SELECT lt.LINK AS link_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT ml.movie_id) AS number_of_movies_linked, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows FROM movie_link AS ml INNER JOIN link_type AS lt ON ml.link_type_id = lt.id INNER JOIN title AS t ON ml.movie_id = t.id INNER JOIN movie_companies AS mc ON t.id = mc.movie_id INNER JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id WHERE lt.link IN ('alternate language version of', 'featured in') AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND mc.id IN ('2868', '289') AND ml.id IN ('5', '751', '4865') AND ml.linked_movie_id IN ('1634429', '905740', '1900325', '1041780', '426055') GROUP BY lt.LINK;
SELECT ct.kind AS company_kind, rt.ROLE AS role_description, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.LINK = 'follows' THEN 1 ELSE 0 END) AS total_follows_links FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN company_name cn ON ci.movie_id = cn.id JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON cn.id = lt.id WHERE ci.person_role_id IS NOT NULL AND cn.country_code = 'US' AND rt.ROLE IN ('actor', 'actress', 'producer', 'director') AND lt.LINK IN ('remade as', 'version of', 'spin off from', 'follows') GROUP BY ct.kind, rt.ROLE ORDER BY number_of_people DESC, average_cast_order;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN k.keyword = 'award' THEN 1 ELSE 0 END) AS total_award_keywords, SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS total_cast_order_info FROM aka_title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_keyword AS mk ON t.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON t.movie_id = ci.movie_id WHERE kt.kind IN ('tv mini series', 'video movie', 'episode', 'tv movie') AND (k.phonetic_code = 'F3654' OR k.phonetic_code = 'E2135') AND t.season_nr IN (36, 9, 28, 2, 16, 3) AND NOT EXISTS ( SELECT 1 FROM movie_companies AS mc WHERE mc.movie_id = t.movie_id AND mc.note LIKE '%(USA)%' ) GROUP BY kt.kind ORDER BY total_titles DESC, average_production_year DESC;
SELECT rt.role AS role_type, COUNT(ml.movie_id) AS number_of_movies, AVG(it.id) AS average_info_type_id, SUM(CASE WHEN ml.link_type_id = 8 THEN 1 ELSE 0 END) AS count_link_type_8, SUM(CASE WHEN ml.link_type_id = 11 THEN 1 ELSE 0 END) AS count_link_type_11, SUM(CASE WHEN ml.link_type_id = 3 THEN 1 ELSE 0 END) AS count_link_type_3 FROM movie_link AS ml JOIN role_type AS rt ON rt.id = ml.link_type_id JOIN info_type AS it ON it.id = ml.link_type_id GROUP BY rt.role ORDER BY number_of_movies DESC, average_info_type_id DESC;
SELECT cn.name AS company_name, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT rt.id) AS number_of_roles, SUM(CASE WHEN cn.name_pcode_sf = 'Y5214' THEN 1 ELSE 0 END) AS count_Y5214_companies, SUM(CASE WHEN cn.name_pcode_sf = 'F2536' THEN 1 ELSE 0 END) AS count_F2536_companies FROM company_name AS cn JOIN movie_companies AS mc ON mc.company_id = cn.id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = mc.movie_id JOIN cast_info AS ci ON ci.movie_id = mc.movie_id JOIN role_type AS rt ON rt.id = ci.role_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY cn.name HAVING COUNT(DISTINCT rt.id) > 1 ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_roles_per_movie, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT k.id) AS total_keywords FROM cast_info ci JOIN keyword k ON k.keyword = 'christ-the-redeemer-rio-de-janeiro' JOIN link_type lt ON lt.id = ci.role_id WHERE lt.link IN ('edited into', 'features', 'follows', 'similar to', 'edited from') GROUP BY ci.movie_id;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.series_years LIKE '%????' THEN 1 ELSE 0 END) AS ongoing_series_count, ct.kind AS company_type_kind, AVG(CAST(cn.country_code AS numeric)) AS average_country_code_numeric, ct.id AS company_type_id, MAX(t.season_nr) AS max_season_number FROM title t JOIN company_name cn ON t.id = cn.id JOIN company_type ct ON cn.id = ct.id JOIN complete_cast cc ON t.id = cc.movie_id JOIN comp_cast_type cct ON cc.subject_id = cct.id JOIN aka_title at ON t.id = at.movie_id JOIN info_type it ON at.id = it.id WHERE t.season_nr IN (6, 15, 8, 17) AND t.series_years IN ('1963-1969', '2003-2006', '1997-1998', '1974-????', '1956-????', '1993-1994') AND it.id IN (20, 107, 32, 88) AND it.info IN ('death notes', 'votes', 'LD subtitles', 'LD dynamic range', 'LD close captions-teletext-ld-g', 'adaption') AND cct.id = 1 AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') AND at.id = 33786 AND at.production_year IN (2002, 1976, 1959) GROUP BY ct.kind, ct.id ORDER BY total_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT alias_data.person_id) AS unique_persons_with_aliases, AVG(alias_data.alias_count) AS avg_aliases_per_person, COUNT(DISTINCT cc.movie_id) AS movies_with_complete_cast FROM company_type AS ct LEFT JOIN (SELECT mc.company_type_id, ci.person_id FROM movie_companies AS mc JOIN cast_info AS ci ON mc.movie_id = ci.movie_id WHERE ci.role_id IN ('7', '6')) AS movie_casts ON ct.id = movie_casts.company_type_id LEFT JOIN (SELECT person_id, COUNT(*) AS alias_count FROM aka_name GROUP BY person_id) AS alias_data ON movie_casts.person_id = alias_data.person_id LEFT JOIN complete_cast AS cc ON movie_casts.person_id = cc.subject_id AND cc.status_id IN ('4', '3') GROUP BY ct.kind;
SELECT cn.name AS company_name, cn.country_code, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN it.info = 'votes' THEN 1 ELSE 0 END) AS total_votes, COUNT(DISTINCT t.id) AS number_of_titles FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN title AS t ON mc.movie_id = t.id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE cn.country_code NOT IN ('US', 'CA') AND mc.company_type_id = 2 AND it.info IN ('rating', 'votes') AND cct.id IN (1, 3, 4) AND t.production_year BETWEEN 2010 AND 2020 GROUP BY cn.name, cn.country_code ORDER BY average_rating DESC, total_votes DESC, number_of_titles DESC, number_of_actors DESC LIMIT 10;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, COUNT(ml.id) AS total_links, AVG(ml.link_type_id) AS average_link_type, SUM(ml.link_type_id) AS sum_link_type FROM movie_link AS ml JOIN company_type AS ct ON ct.id = 2 JOIN kind_type AS kt ON kt.id = ml.link_type_id WHERE kt.kind IN ('episode', 'video movie', 'tv movie') GROUP BY ct.kind, kt.kind ORDER BY total_links DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_movie_links, AVG(pi.person_id) AS average_person_id, SUM(cc.status_id) AS sum_status_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN complete_cast AS cc ON ml.movie_id = cc.movie_id JOIN person_info AS pi ON cc.subject_id = pi.person_id WHERE ml.link_type_id IN (6, 5, 15, 16, 10, 17) AND ml.id IN (3372, 310) AND cc.id = 2124 GROUP BY lt.LINK ORDER BY total_movie_links DESC;
SELECT nt.info AS movie_genre, COUNT(DISTINCT cn.id) AS num_of_actors, AVG((n.gender = 'M')::int) AS avg_male_actors, AVG((n.gender = 'F')::int) AS avg_female_actors, SUM(CASE WHEN cn.id IN ('75924', '37156', '79891', '61423', '79360') THEN 1 ELSE 0 END) AS special_char_count, cname.name AS frequent_production_company, MAX(mi_idx.info) AS longest_movie_description FROM char_name cn JOIN name n ON cn.id = n.id JOIN movie_info_idx mi_idx ON n.id = mi_idx.movie_id JOIN info_type nt ON mi_idx.info_type_id = nt.id JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN company_name cname ON mc.company_id = cname.id WHERE n.md5sum IN ('5867f236efd2a49e525e28170e53884f', 'e30d31437d0cc24a549ebe11e068d91c', '103b12a2a1f067552d1582f217894732', '937aa89fd20c81ec429381d29296632e', 'b19e28f6480e3653f20f36528b67ddfd', 'ee97cefd84759ed4ec46f94d2e8962ed') AND cname.name IN ('Jamtown Films', 'Ovie Entertainment', 'Canibal Friends', 'Rocket Sheep Boom', 'Yarnmaker', 'Toko-Tokuma') AND nt.info IN ('LD dialogue intellegibility', 'book', 'tech info') GROUP BY nt.info, cname.name ORDER BY num_of_actors DESC, avg_male_actors DESC;
SELECT kt.kind AS movie_kind, rt.role AS cast_role, AVG(aka.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS total_unique_actors, SUM(CASE WHEN k.keyword = 'vietnamese-restaurant' THEN 1 ELSE 0 END) AS vietnamese_restaurant_keyword_count, SUM(CASE WHEN k.keyword = 'symbol' THEN 1 ELSE 0 END) AS symbol_keyword_count FROM aka_title aka JOIN kind_type kt ON aka.kind_id = kt.id JOIN cast_info ci ON aka.movie_id = ci.movie_id JOIN role_type rt ON ci.role_id = rt.id JOIN keyword k ON aka.id = k.id WHERE aka.production_year > 2000 GROUP BY kt.kind, rt.role ORDER BY total_unique_actors DESC;
SELECT AVG(mc.movie_id) AS average_movie_id, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS info_type_count, cct.kind AS cast_type_kind, COUNT(DISTINCT k.id) AS unique_keywords_used, MAX(cn.name) AS largest_company_name FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id JOIN keyword AS k ON mi.info = k.keyword WHERE cn.country_code = '[py]' AND (mi.info = 'Urdu' OR mi.info = 'Turkish' OR mi.info = 'Vietnamese' OR mi.info = 'Estonian') AND (cct.kind = 'complete+verified' OR cct.kind = 'cast' OR cct.kind = 'crew' OR cct.kind = 'complete') AND (k.id IN (2454, 1707, 7050, 8101)) GROUP BY cct.kind;
SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi_idx.avg_rating) AS average_movie_rating, SUM(case when ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS total_voice_roles FROM cast_info ci JOIN (SELECT movie_id, AVG(CAST(info AS FLOAT)) as avg_rating FROM movie_info_idx WHERE info_type_id = 101 GROUP BY movie_id) mi_idx ON mi_idx.movie_id = ci.movie_id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id JOIN char_name chn ON chn.id = ci.person_role_id JOIN aka_name an ON an.person_id = ci.person_id WHERE chn.surname_pcode IN ('L236', 'S4251', 'H61', 'M13', 'G64', 'B4123') AND an.md5sum IN ('335ed401df5f248a3e329bb55d27dd0d', '7b6c3470024015d9b7509ce72ba9bdbe', '676e4dab04ea3f8b91859f8353698682', 'ae437679898b344a4c9d5b911ff41b3d', '2326d6a8ac3328a37b6196b7d6122ca1', '2f0962bd6afa28b8588a8333f39cbb4e') AND mk.keyword_id IN (SELECT id FROM movie_keyword WHERE movie_id = mk.movie_id) GROUP BY chn.surname_pcode;
SELECT CT.kind AS cast_type, COUNT(DISTINCT ml.movie_id) AS total_movies, AVG(CASE WHEN mi.info_type_id = 4 THEN CAST(mi.info AS INTEGER) END) AS avg_movie_length, SUM(CASE WHEN mi.info_type_id = 2 THEN CAST(mi.info AS NUMERIC) END) AS total_budget, COUNT(DISTINCT an.person_id) AS total_unique_actors FROM movie_link AS ml JOIN comp_cast_type AS CT ON ml.link_type_id = CT.id LEFT JOIN movie_info AS mi ON ml.movie_id = mi.movie_id LEFT JOIN aka_name AS an ON an.person_id = ml.linked_movie_id WHERE ml.link_type_id IN ('11', '17', '1', '16', '3') AND ml.movie_id IN ('16168', '2666', '6637', '12189') AND an.name_pcode_nf = 'Y2462' AND CT.kind = 'complete' GROUP BY CT.kind;
SELECT AVG(title.production_year) AS average_production_year, SUM(CASE WHEN aka_title.production_year >= 2000 THEN 1 ELSE 0 END) AS titles_since_2000, COUNT(DISTINCT aka_name.person_id) AS unique_person_count, info_type.info AS info_type_description, COUNT(aka_title.id) AS aka_title_count FROM title LEFT JOIN aka_title ON title.id = aka_title.movie_id LEFT JOIN aka_name ON aka_name.person_id = title.id INNER JOIN info_type ON info_type.id = aka_title.kind_id WHERE title.production_year IS NOT NULL AND aka_title.md5sum IN ('d83332e937d61be7b06ae03d69ea3b48', 'f94e5c713cf9f2c4161c7ab6131590db') AND aka_name.name_pcode_nf IN ('J5264', 'M5262') AND info_type.info IN ('LD color rendition', 'copyright holder', 'opening weekend', 'LD video quality', 'plot') GROUP BY info_type.info ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN at.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes, kt.kind AS movie_kind, COUNT(DISTINCT k.id) AS distinct_keywords FROM title AS t JOIN aka_title AS at ON t.id = at.movie_id JOIN keyword AS k ON at.id = k.id JOIN company_type AS kt ON t.kind_id = kt.id WHERE t.production_year > 1990 AND at.md5sum IN ('3fbf6cc79b437aac2b533ef93a1a1f72', '3b7d0f2a4c38d29ba47fb2bef6fdc62a', '3029182796f9ac1107d5ec5eba333955', '3f32d0b04dd67b92118e6032b58a8be4', '33e7b8cd483255b73ad813d49d5f4a46') AND at.imdb_index IN ('III', 'IV', 'I', 'II') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT at.id) AS total_alternative_titles, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS titles_after_2000, cn.name AS character_name, it.info AS info_type_description, MAX(at.season_nr) AS max_season_nr, MIN(at.episode_nr) AS min_episode_nr FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN char_name cn ON cn.id = at.id JOIN info_type it ON it.id = cc.subject_id GROUP BY cn.name, it.info ORDER BY total_alternative_titles DESC, average_status_id;
SELECT rt.role AS role_type, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies_with_writers, COUNT(DISTINCT ci.person_id) AS total_different_writers, SUM(CASE WHEN at.title ILIKE 'The %' THEN 1 ELSE 0 END) AS movies_beginning_with_the FROM cast_info ci INNER JOIN role_type rt ON ci.role_id = rt.id AND rt.role = 'writer' LEFT JOIN aka_title at ON ci.movie_id = at.movie_id WHERE at.kind_id = 1 AND rt.id = 11 GROUP BY rt.role;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT n.id) AS number_of_related_people, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN k.keyword = 'business-deal' THEN 1 ELSE 0 END) AS count_business_deal_keywords, MAX(mi.info) AS latest_movie_info FROM company_name cn JOIN company_type ct ON cn.name_pcode_nf = ct.id::varchar JOIN movie_info mi ON mi.info_type_id = ct.id JOIN keyword k ON k.id = mi.movie_id JOIN name n ON n.imdb_id = mi.movie_id WHERE cn.country_code NOT IN ('[pl]', '[us]') AND k.keyword IN ('lunchbox', 'slipper', 'business-deal', 'child-molester') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY number_of_companies DESC, count_business_deal_keywords DESC;
SELECT it.info AS info_category, COUNT(DISTINCT pi.person_id) AS number_of_people, AVG(CASE WHEN it.info = 'gross' THEN CAST(pi.info AS NUMERIC) END) AS average_gross, SUM(CASE WHEN it.info = 'LD quality program' THEN 1 ELSE 0 END) AS LD_quality_programs FROM person_info AS pi JOIN info_type AS it ON pi.info_type_id = it.id WHERE it.id IN (22, 25, 105) GROUP BY it.info ORDER BY info_category;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN ak.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS number_of_series_episodes, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM title AS t LEFT JOIN aka_title AS ak ON t.id = ak.movie_id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND mc.note LIKE '%(TV)%' AND (ak.season_nr IN ('13', '5', '19') OR ak.season_nr IS NULL) AND (ak.production_year = '2008' OR ak.production_year IS NULL) GROUP BY ct.kind ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT ct.kind AS company_type, AVG(kw.id) AS average_keyword_id, COUNT(DISTINCT mc.movie_id) AS total_movies, SUM(mc.company_id) AS sum_company_id FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_link ml ON mc.movie_id = ml.movie_id JOIN keyword kw ON CAST(ml.link_type_id AS INTEGER) = kw.id JOIN name n ON mc.movie_id = n.id WHERE n.gender = 'm' AND kw.keyword IN ('Black Rick', 'Joel Gonzalez', 'TNI Soldier', 'ESPN', 'Newsroom Martian') GROUP BY ct.kind ORDER BY total_movies DESC, average_keyword_id;
SELECT COUNT(DISTINCT ml.movie_id) AS NumberOfMovies, COUNT(DISTINCT ml.linked_movie_id) AS NumberOfLinkedMovies, AVG(n.imdb_id) AS AverageIMDbID, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS Status3Count, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS Status4Count FROM movie_link AS ml JOIN complete_cast AS cc ON cc.movie_id = ml.movie_id JOIN name AS n ON n.id = cc.subject_id WHERE cc.status_id IN (3, 4) GROUP BY cc.subject_id;
SELECT COUNT(DISTINCT chn.id) AS total_characters, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_complete_cast, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS total_incomplete_cast FROM char_name AS chn JOIN cast_info AS ci ON ci.person_role_id = chn.id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id JOIN complete_cast AS cc ON cc.movie_id = ci.movie_id WHERE mi_idx.info_type_id = 101 AND (cc.subject_id = 1 AND cc.status_id IN (3, 4)) GROUP BY cc.movie_id;
SELECT ct.kind AS company_kind, COUNT(*) AS total_movies, AVG(cc.status_id) AS average_status_id, SUM(case when cc.subject_id = 1 then 1 else 0 end) AS subject_1_movie_count, COUNT(DISTINCT k.id) AS unique_keywords_count FROM complete_cast AS cc JOIN company_name AS cn ON cc.movie_id = cn.imdb_id JOIN company_type AS ct ON cn.id = ct.id JOIN movie_keyword AS mk ON cc.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE cc.status_id = 3 AND cc.subject_id = 1 AND cn.country_code SIMILAR TO '(\[ae\]|\[hu\]|\[tj\]|\[cu\]|\[is\])' AND k.id IN (9868, 4714, 290, 4495, 1113) GROUP BY ct.kind;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CASE WHEN n.gender = 'm' THEN 1.0 ELSE NULL END) AS avg_male_involvement, AVG(CASE WHEN n.gender = 'f' THEN 1.0 ELSE NULL END) AS avg_female_involvement, COUNT(DISTINCT an.person_id) AS unique_aka_names, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS count_info_type_4 FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN aka_name an ON an.person_id = mi.movie_id LEFT JOIN name n ON n.id = mi.movie_id WHERE mi.info LIKE '%Mandarin%' OR mi.info_type_id IN ('47', '5', '7') OR n.surname_pcode IN ('A432', 'A416', 'A414') OR n.imdb_index IN ('VI', 'XVII', 'XIV', 'I') GROUP BY it.info;
SELECT ct.kind AS company_type, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN akat.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN akat.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT ml.link_type_id) AS distinct_link_types FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS akat ON mc.movie_id = akat.movie_id JOIN movie_keyword AS mk ON akat.movie_id = mk.movie_id JOIN movie_link AS ml ON akat.movie_id = ml.movie_id WHERE mc.note IS NOT NULL AND akat.production_year BETWEEN 2000 AND 2010 AND ml.id IN ('434', '4988', '3490', '3087', '1401', '4759') GROUP BY ct.kind ORDER BY average_production_year DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_production_companies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies_kind_2, SUM(CASE WHEN t.kind_id = 7 THEN 1 ELSE 0 END) AS total_movies_kind_7 FROM title AS t LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) WHERE t.production_year BETWEEN 2000 AND 2010 AND (mc.note LIKE '%(USA) (TV)%' OR mc.note LIKE '%(UK) (TV)%') GROUP BY t.production_year ORDER BY t.production_year;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CASE WHEN mi_numeric.info_type_id = 3 THEN mi_numeric.info::NUMERIC END) AS average_movie_length, COUNT(DISTINCT kw.id) AS number_of_unique_keywords, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count FROM movie_info mi JOIN kind_type kt ON mi.info_type_id = kt.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword kw ON mk.keyword_id = kw.id LEFT JOIN movie_link ml ON mi.movie_id = ml.movie_id LEFT JOIN name n ON ml.movie_id = n.id LEFT JOIN movie_info mi_numeric ON mi.movie_id = mi_numeric.movie_id AND mi_numeric.info_type_id = 3 WHERE kt.kind = 'complete' AND kw.keyword IN ('santiago-de-chile', 'golf-club', 'tripping') AND n.name IN ('Anderson, Othello', 'Ammar, Ali', 'Ameyl, Dzaga') GROUP BY kt.kind;
SELECT k.keyword, COUNT(DISTINCT mk.movie_id) AS movie_count, AVG(LENGTH(k.phonetic_code)) AS avg_phonetic_code_length, COUNT(DISTINCT rt.id) AS distinct_role_types FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN cast_info AS ci ON mk.movie_id = ci.movie_id JOIN role_type AS rt ON ci.role_id = rt.id WHERE mk.movie_id IN ('12183', '10549', '12251', '15502', '13890', '9703') AND mk.keyword_id IN ('2957', '3334', '3038', '2036') GROUP BY k.keyword ORDER BY movie_count DESC, avg_phonetic_code_length;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'follows' THEN 1 ELSE 0 END) AS number_of_sequels, SUM(CASE WHEN lt.link = 'spoofed in' THEN 1 ELSE 0 END) AS number_of_spoofs FROM title t JOIN cast_info ci ON t.id = ci.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN link_type lt ON lt.id = mc.company_type_id WHERE t.production_year BETWEEN 2000 AND 2010 AND k.phonetic_code IN ('U6523', 'W46', 'S3123', 'L3416', 'A3435', 'P4252') AND ci.role_id = 1 GROUP BY t.production_year ORDER BY t.production_year;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS number_of_tv_related_movies, COUNT(DISTINCT ci.person_id) AS number_of_cast_members, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords FROM cast_info ci JOIN kind_type kt ON kt.id = ci.role_id JOIN movie_info_idx mi_idx ON mi_idx.movie_id = ci.movie_id JOIN movie_companies mc ON mc.movie_id = ci.movie_id JOIN movie_keyword mk ON mk.movie_id = ci.movie_id WHERE ci.role_id = 1 AND ci.person_id <> 1331 AND mi_idx.info_type_id = 101 AND ( ci.movie_id IN (929802, 930487) OR mi_idx.id IN (582, 3094, 1805, 510, 2997, 1382) OR mc.movie_id IN (28517, 18627, 13753, 26411, 16217) ) GROUP BY kt.kind ORDER BY number_of_movies DESC, average_movie_rating DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(mi.info::NUMERIC) FILTER (WHERE it.info = 'rating') AS average_rating, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword LIKE '%love%') AS love_keyword_count, rt.ROLE AS role_type, COUNT(DISTINCT ci.id) FILTER (WHERE rt.ROLE = 'actor') AS count_of_actors_roles, SUM(at.episode_nr) AS total_episodes, AVG(at.season_nr) AS average_season_number FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN cast_info ci ON mi.movie_id = ci.movie_id LEFT JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN aka_title at ON mi.movie_id = at.movie_id WHERE at.production_year BETWEEN 2000 AND 2010 AND (at.season_nr IS NOT NULL AND at.episode_nr IS NOT NULL) GROUP BY it.info, rt.ROLE ORDER BY number_of_movies DESC, average_rating DESC, love_keyword_count DESC, count_of_actors_roles DESC;
SELECT ct.kind AS company_type, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS titles_since_2000 FROM company_name AS cn JOIN movie_companies AS mc ON cn.id = mc.company_id JOIN title AS t ON mc.movie_id = t.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE cn.name IN ('SalviNET SIA', 'IconNicholson', 'Globe TV') AND it.info = 'rating' AND ct.kind IN ('production companies', 'distributors') GROUP BY ct.kind;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_info, SUM(CASE WHEN mi_idx.note = 'Y' THEN 1 ELSE 0 END) AS count_noted_info FROM complete_cast cc JOIN kind_type kt ON cc.subject_id = kt.id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id WHERE cc.status_id IN (1, 2, 3) AND mi_idx.info_type_id BETWEEN 10 AND 20 AND mi_idx.id NOT IN (4072, 3466, 2096, 1652, 1371) AND cc.id NOT IN (3672, 620) GROUP BY kt.kind HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY average_movie_info DESC;
SELECT mc.company_id, mc.company_type_id, COUNT(mc.movie_id) AS total_movies, AVG(at.production_year) AS avg_production_year, SUM(k.id) AS total_keyword_id_sum FROM movie_companies mc JOIN aka_title at ON mc.movie_id = at.movie_id LEFT JOIN keyword k ON at.id = k.id WHERE mc.movie_id IN (19080, 25456, 14762, 19670, 32217, 10568) GROUP BY mc.company_id, mc.company_type_id ORDER BY total_movies DESC, avg_production_year DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(mi_idx.info AS numeric)) AS average_movie_info, SUM(CAST(mi_idx.info AS numeric)) AS total_movie_info FROM movie_companies mc JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id WHERE mc.id IN (2842, 2303, 4675, 3814) AND mi_idx.movie_id IN (14671, 8865) AND mi_idx.note IS NOT NULL GROUP BY it.info;
SELECT kt.kind AS movie_genre, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS average_rating, MAX(CASE WHEN mi_idx.note SIMILAR TO '[0-9]+(\\.[0-9]+)?' THEN CAST(mi_idx.note AS FLOAT) ELSE NULL END) AS highest_rating FROM kind_type AS kt JOIN movie_info_idx AS mi_idx ON kt.id = mi_idx.info_type_id WHERE mi_idx.info LIKE '%Genre%' GROUP BY kt.kind;
SELECT a.production_year, c.name as company_name, COUNT(DISTINCT a.movie_id) as number_of_titles, AVG(m.link_type_id) as average_link_type_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) as female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) as male_count FROM aka_title a JOIN movie_link m ON a.movie_id = m.movie_id JOIN company_name c ON c.country_code = 'US' LEFT JOIN name n ON a.id = n.id WHERE a.production_year BETWEEN 1990 AND 2020 AND a.imdb_index IN ('I', 'IV') AND a.md5sum IN ('36b455987fe6d9fa28aa7bc9c575f2c2', 'c46fadf1cdd2338d8d67bb2b82a1f890') GROUP BY a.production_year, c.name ORDER BY a.production_year, c.name;
SELECT cct.kind AS cast_type_kind, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_numeric_value, COUNT(DISTINCT mi_idx.movie_id) AS unique_movies_count, COUNT(mi_idx.note) AS notes_count FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id WHERE cct.kind IN ('crew', 'cast', 'complete+verified') AND mi_idx.info_type_id = 99 GROUP BY cct.kind ORDER BY average_info_numeric_value DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS num_movies, COUNT(ml.id) AS total_links, AVG(sub_ml.movie_links_count) AS average_links_per_movie FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info_idx AS miidx ON ml.movie_id = miidx.movie_id JOIN (SELECT movie_id, COUNT(id) AS movie_links_count FROM movie_link GROUP BY movie_id) AS sub_ml ON sub_ml.movie_id = ml.movie_id WHERE miidx.info_type_id IN (SELECT id FROM company_type WHERE kind = 'special effects companies') GROUP BY lt.LINK;
SELECT rt.ROLE as role, COUNT(*) as number_of_actors, AVG(name.imdb_id) as average_imdb_id, MAX(ci.nr_order) as max_order_appearance, MIN(name.surname_pcode) as min_surname_pcode, COUNT(DISTINCT comp_cast_type.id) as distinct_comp_cast_type_count FROM cast_info ci JOIN name ON ci.person_id = name.id JOIN role_type rt ON ci.role_id = rt.id JOIN comp_cast_type ON ci.person_role_id = comp_cast_type.id JOIN movie_link ON ci.movie_id = movie_link.movie_id WHERE name.gender = 'f' AND comp_cast_type.kind IN ('actor', 'actress') AND movie_link.link_type_id BETWEEN 1 AND 4 GROUP BY rt.ROLE ORDER BY number_of_actors DESC, average_imdb_id;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT cc.subject_id) AS number_of_subjects, AVG(cc.status_id) AS average_status FROM company_type ct JOIN complete_cast cc ON ct.id = cc.status_id GROUP BY ct.kind HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY number_of_movies DESC, average_status ASC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS num_roles_with_person_role_id, COUNT(DISTINCT ci.person_id) AS num_unique_actors FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN kind_type kt ON kt.id = 1 JOIN cast_info ci ON mc.movie_id = ci.movie_id WHERE mc.company_type_id = 1 AND kt.kind IN ('episode', 'video movie') GROUP BY ct.kind, kt.kind;
SELECT AT.production_year, COUNT(DISTINCT AT.movie_id) AS total_movies, COUNT(DISTINCT ML.movie_id) AS total_linked_movies, AVG(CASE WHEN N.gender = 'F' THEN 1 ELSE 0 END) AS avg_female_actors, SUM(CASE WHEN MI_IDX.info_type_id = 1 THEN 1 ELSE 0 END) AS total_genre_info FROM aka_title AT JOIN movie_link ML ON AT.movie_id = ML.movie_id JOIN movie_info_idx MI_IDX ON AT.movie_id = MI_IDX.movie_id JOIN name N ON N.id = MI_IDX.movie_id WHERE AT.production_year BETWEEN 1960 AND 1970 AND ML.link_type_id IN (1, 2, 10, 13) AND N.gender IN ('F', 'M') GROUP BY AT.production_year ORDER BY AT.production_year;
SELECT it.info AS genre, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(a_t.production_year) AS average_production_year, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT a_t.id) AS number_of_alternate_titles FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info IN ('Action', 'Comedy', 'Drama', 'Sci-Fi', 'Romance') JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON mi.movie_id = ml.movie_id JOIN aka_title a_t ON mi.movie_id = a_t.movie_id GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_rating, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies_kind_1, COUNT(DISTINCT mc.company_id) AS total_production_companies, COUNT(DISTINCT n.id) AS total_unique_names, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN aka_title at ON mi.movie_id = at.movie_id JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN name n ON n.id = ANY(ARRAY(SELECT movie_id FROM movie_info WHERE info_type_id = (SELECT id FROM info_type WHERE info = 'writers'))) WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND CAST(mi_idx.info AS NUMERIC) > 5 AND at.production_year BETWEEN 1990 AND 2000 AND at.kind_id IN (1, 2, 3) GROUP BY at.kind_id ORDER BY total_movies_kind_1 DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people, AVG(ci.nr_order) AS avg_cast_order, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT k.id) AS num_keywords, count(DISTINCT cc.id) AS num_complete_cast_records FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN name n ON ci.person_id = n.id LEFT JOIN keyword k ON ci.movie_id = k.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE n.surname_pcode IN ('A415', 'A435') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS number_of_actors, SUM(CASE WHEN pi.info_type_id = 38 THEN 1 ELSE 0 END) AS total_awards_won, COUNT(DISTINCT at.id) AS number_of_alternative_titles FROM name AS n JOIN person_info AS pi ON n.id = pi.person_id LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN aka_title AS at ON at.movie_id = an.person_id WHERE pi.info_type_id IN (34, 35, 38) AND n.gender = 'M' AND (at.season_nr = 28 OR at.season_nr IS NULL) GROUP BY n.gender;
SELECT cct.kind AS cast_type_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.id) AS alternate_titles_count, COUNT(DISTINCT k.id) AS keyword_count FROM aka_title AS at JOIN keyword AS k ON k.phonetic_code = 'I3142' JOIN comp_cast_type AS cct ON cct.id = at.kind_id GROUP BY cct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(DISTINCT ci.person_id) AS num_people_involved, AVG(ci.nr_order) AS avg_cast_order, SUM(case when mi_idx.info_type_id = '100' THEN 1 ELSE 0 END) AS count_type_100, SUM(case when mi_idx.info_type_id = '101' THEN 1 ELSE 0 END) AS count_type_101, SUM(case when mi_idx.info_type_id = '99' THEN 1 ELSE 0 END) AS count_type_99 FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id IN ('100', '101', '99') AND ci.person_role_id = (SELECT id FROM info_type WHERE id = '94') GROUP BY kt.kind;
SELECT ct.kind AS company_kind, it.info AS info_category, COUNT(*) AS total_companies, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN info_type it ON cn.id = it.id WHERE cn.md5sum IN ('6f5f695d7bd08122f1c8ece2814ae2cd', 'a90eefb65011789cddc830ed101bcd88') AND it.id IN ('74', '51', '63') GROUP BY ct.kind, it.info;
SELECT mc.company_id, ct.kind AS company_type, AVG(t.production_year) AS avg_production_year, COUNT(t.id) AS movie_count, STRING_AGG(k.keyword, ', ') AS common_keywords, AVG(LENGTH(t.title)) AS avg_title_length FROM movie_companies AS mc JOIN kind_type AS ct ON mc.company_type_id = ct.id JOIN title AS t ON mc.movie_id = t.id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN keyword AS k ON mi.id = k.id WHERE mc.company_id IN (995, 1074, 719, 977, 232, 371) AND mc.company_type_id = 1 AND k.keyword IN ('yellow-dress', 'drug-enforcement', 'larry-holmes', 'borough-name-in-title', 'showbiz', 'flower-club') AND it.info = 'release dates' GROUP BY mc.company_id, ct.kind ORDER BY avg_production_year DESC, movie_count DESC;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_movie_rating, COUNT(DISTINCT ci.movie_id) AS count_movies_with_keywords, COUNT(DISTINCT k.keyword) AS count_distinct_keywords, MIN(cn.name) AS company_name, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_complete_verified_casts, MAX(cn.country_code) AS country_code_with_most_movies FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN movie_link AS ml ON mk.movie_id = ml.movie_id INNER JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id INNER JOIN cast_info AS ci ON ml.movie_id = ci.movie_id INNER JOIN company_name AS cn ON ci.person_id = cn.imdb_id INNER JOIN complete_cast AS cc ON mk.movie_id = cc.movie_id WHERE ml.link_type_id = 19 AND mk.movie_id IN (11231, 16365, 11116) AND cc.status_id IN (3, 4) AND cn.country_code IS NOT NULL GROUP BY cn.name ORDER BY average_movie_rating DESC, count_movies_with_keywords DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, COUNT(DISTINCT mc.company_id) AS total_production_companies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, SUM(CASE WHEN lt.id = '12' THEN 1 ELSE 0 END) AS total_prequels_links, SUM(CASE WHEN lt.id = '7' THEN 1 ELSE 0 END) AS total_sequels_links, MAX(n.name) AS max_actor_name, MIN(n.name) AS min_actor_name FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id WHERE n.imdb_index IN ('IX', 'XXIII', 'XIII') AND ci.note IN ('(segment "It Takes Two to Tango")', '(segment "Public Service Announcement")') AND ci.role_id = 1 GROUP BY ci.role_id;
SELECT COUNT(DISTINCT cn.id) AS total_companies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN lt.id = '12' THEN 1 ELSE 0 END) AS count_type_12_links, COUNT(DISTINCT t.id) AS total_titles, COUNT(DISTINCT mi_idx.info) AS total_unique_info FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN title t ON mc.movie_id = t.id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id WHERE cn.country_code = 'US' AND t.production_year BETWEEN 1990 AND 2000 AND mc.note IS NOT NULL AND (lt.id = '15' OR lt.id = '12') GROUP BY cn.country_code, t.production_year ORDER BY average_production_year DESC;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, COUNT(DISTINCT an.id) AS number_of_alternative_names, COUNT(DISTINCT cct.id) AS number_of_cast_types, AVG(LENGTH(n.name)) AS average_actor_name_length FROM name n LEFT JOIN aka_name an ON n.id = an.person_id LEFT JOIN comp_cast_type cct ON an.id = cct.id WHERE n.name LIKE '%Amplify%' OR an.name IN ('Allen, ''Barefoot'' Chris', 'Alsamia, Etienne', 'Altamirano, Lisa Mariea', 'Aller, Gina', 'Smith, Mary Alice') GROUP BY n.gender;
SELECT cc.kind AS cast_type, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT cn.id) AS number_of_companies, lt.link AS link_type, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN comp_cast_type cc ON ci.role_id = cc.id JOIN complete_cast c ON ci.movie_id = c.movie_id JOIN company_name cn ON cn.country_code LIKE 'US%' JOIN movie_link ml ON ci.movie_id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id WHERE cc.kind IN ('complete+verified', 'complete', 'cast') AND lt.link IN ('spoofs', 'spoofed in', 'follows', 'edited into', 'referenced in') GROUP BY cc.kind, lt.link ORDER BY number_of_movies DESC, average_cast_order ASC;
SELECT n.name AS actor_name, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.role_id) AS distinct_roles FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN title t ON ci.movie_id = t.id WHERE n.name LIKE 'Anderson,%' AND t.production_year >= 2000 GROUP BY n.name ORDER BY total_movies DESC, average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT t.id) AS num_productions, AVG(cast_count.num_cast) AS avg_cast_members, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN ( SELECT movie_id, COUNT(*) AS num_cast FROM cast_info GROUP BY movie_id ) cast_count ON t.id = cast_count.movie_id GROUP BY kt.kind ORDER BY num_productions DESC, avg_cast_members DESC;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS INTEGER)) AS average_movie_rating, SUM(CASE WHEN k.phonetic_code IN ('S1521', 'I5315', 'A3252', 'G2436', 'P163', 'R5161') THEN 1 ELSE 0 END) AS count_specific_keywords, COUNT(DISTINCT at.id) AS count_distinct_titles, COUNT(DISTINCT cn.id) AS count_distinct_companies, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM company_type AS ct JOIN company_name AS cn ON ct.id = cn.id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = cn.imdb_id JOIN movie_keyword AS mk ON mk.movie_id = mi_idx.movie_id JOIN keyword AS k ON k.id = mk.keyword_id JOIN aka_title AS at ON at.movie_id = mk.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND k.id IN ('2313', '8814', '3289', '2874', '8924') GROUP BY ct.kind;
SELECT kt.kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(mi_idx.info::NUMERIC) AS average_info, SUM(mi_idx.info::NUMERIC) AS total_info, COUNT(DISTINCT cn.id) AS total_companies, STRING_AGG(DISTINCT cn.name, ', ') AS company_names FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id JOIN kind_type kt ON mi_idx.movie_id = kt.id JOIN company_name cn ON cn.imdb_id = mi_idx.movie_id WHERE kt.kind IN ('video movie', 'tv mini series', 'tv series', 'tv movie') AND cn.country_code = 'US' AND it.info = 'budget' GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mi_idx.movie_id) AS movie_count, AVG(CAST(mi_idx.info AS DECIMAL)) AS average_rating, SUM(CASE WHEN k.keyword IN ('electric-shock', 'hiding-under-covers', 'stabbed-with-a-letter-opener') THEN 1 ELSE 0 END) AS thrill_keyword_count, COUNT(DISTINCT cn.id) AS number_of_companies_involved, STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_involved FROM kind_type AS kt LEFT JOIN movie_info_idx AS mi_idx ON kt.id = mi_idx.info_type_id LEFT JOIN keyword AS k ON mi_idx.movie_id = k.id LEFT JOIN company_name AS cn ON mi_idx.movie_id = cn.imdb_id WHERE kt.kind IN ('tv mini series', 'tv series', 'video movie', 'tv movie') AND mi_idx.note IS NOT NULL AND (k.id = '7078' OR k.id = '5806') AND (cn.country_code = 'US' OR cn.country_code IS NULL) GROUP BY kt.kind ORDER BY movie_type;
SELECT COUNT(DISTINCT n.id) AS total_actors, AVG(ak.production_year::decimal) AS average_production_year, SUM(CASE WHEN ak.title LIKE '%(imdb display title)%' THEN 1 ELSE 0 END) AS total_imdb_display_titles, COUNT(DISTINCT k.id) AS total_unique_keywords, MAX(pi.info) AS latest_person_info FROM name AS n JOIN aka_title AS ak ON ak.movie_id IN (SELECT DISTINCT cc.movie_id FROM complete_cast AS cc WHERE cc.subject_id = 1) JOIN complete_cast AS cc ON cc.movie_id = ak.movie_id AND cc.subject_id = 1 JOIN keyword AS k ON k.phonetic_code = ak.phonetic_code JOIN person_info AS pi ON pi.person_id = n.id WHERE n.gender = 'F' AND ak.note LIKE '%(imdb display title)%' AND ak.production_year > 2000 GROUP BY n.gender;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.name) AS distinct_company_names, COUNT(DISTINCT cn.country_code) AS distinct_country_codes, AVG(cc.movie_id) AS average_movie_id, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producers, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS total_editors, COUNT(DISTINCT cc.movie_id) AS distinct_movies_with_complete_cast, MAX(cc.status_id) AS max_status_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN complete_cast cc ON cc.movie_id = cn.imdb_id JOIN role_type rt ON rt.id = cc.subject_id WHERE cn.country_code != 'US' AND rt.role IN ('guest', 'actress', 'editor', 'producer') GROUP BY ct.kind ORDER BY total_producers DESC;
SELECT cn.country_code, COUNT(DISTINCT t.id) AS total_movies, ROUND(AVG(t.production_year), 2) AS avg_production_year, COUNT(DISTINCT CASE WHEN mk.keyword_id = '3096' THEN t.id ELSE NULL END) AS keyword_3096_count, COUNT(DISTINCT CASE WHEN mk.keyword_id = '2967' THEN t.id ELSE NULL END) AS keyword_2967_count, COUNT(DISTINCT CASE WHEN mk.keyword_id = '3179' THEN t.id ELSE NULL END) AS keyword_3179_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN title t ON mc.movie_id = t.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id GROUP BY cn.country_code ORDER BY total_movies DESC;
SELECT AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT n.id) AS total_unique_writers, SUM(CASE WHEN cn.surname_pcode = 'M1236' THEN 1 ELSE 0 END) AS count_of_m1236_surname_writers FROM keyword AS k LEFT JOIN movie_keyword AS mk ON k.id = mk.keyword_id LEFT JOIN movie_info_idx AS mi_idx ON mk.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN cast_info AS ci ON mk.movie_id = ci.movie_id LEFT JOIN char_name AS cn ON ci.person_id = cn.id AND ci.role_id = 2 LEFT JOIN name AS n ON ci.person_id = n.id AND n.gender = 'm' WHERE k.keyword IN ('airforce-one', 'mexican-revolutionary', 'full-house', 'gay-hollywood', 'overactive-imagination') AND cn.surname_pcode IN ('M1236', 'H3245', 'Z12', 'F236') AND ci.role_id IN (SELECT id FROM comp_cast_type WHERE kind = 'writer') GROUP BY ci.movie_id;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(mi.rating) AS average_rating, SUM(CASE WHEN p.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN p.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN (SELECT movie_id, CAST(info AS NUMERIC) AS rating FROM movie_info WHERE info_type_id = (SELECT id FROM info_type WHERE info = 'rating') ) mi ON ci.movie_id = mi.movie_id JOIN person_info pi ON ci.person_id = pi.person_id JOIN name p ON pi.person_id = p.id GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY average_rating DESC, total_movies DESC LIMIT 10;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, SUM(CASE WHEN it.info = 'rentals' THEN 1 ELSE 0 END) AS rental_info_count, COUNT(DISTINCT n.id) AS number_of_actors FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN info_type AS it ON it.info = 'rentals' OR it.info = 'LD disc format' LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN name AS n ON cc.subject_id = n.id WHERE t.production_year > 1990 AND kt.kind IN ('tv movie', 'movie') AND mc.movie_id IN (29084, 12692, 23482, 19661, 19291, 18927) GROUP BY kt.kind ORDER BY average_production_year DESC, number_of_companies_involved;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS us_based_companies, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS distinct_linked_movies FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN title AS t ON mc.movie_id = t.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ct.id IN (3, 4) AND cn.country_code IN ('[mk]', '[ua]', '[kr]', '[ir]', '[ph]') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT an.id) AS number_of_aka_names, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN cc.movie_id = 86434 THEN 1 ELSE 0 END) AS count_movie_86434, SUM(CASE WHEN cc.movie_id = 1676869 THEN 1 ELSE 0 END) AS count_movie_1676869, it.info AS information_type, MAX(an.name) AS most_common_alias FROM aka_name an JOIN complete_cast cc ON an.person_id = cc.subject_id JOIN info_type it ON cc.status_id = it.id GROUP BY it.info ORDER BY number_of_aka_names DESC, average_status_id;
SELECT rt.ROLE AS role, COUNT(DISTINCT ci.person_id) AS unique_person_count, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_produced_movies, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN role_type rt ON ci.role_id = rt.id JOIN company_name cn ON cn.imdb_id = t.imdb_id WHERE t.series_years IN ('1985-1987', '2000-2004', '2010-2011') AND t.episode_of_id IS NULL AND rt.ROLE IN ('producer', 'costume designer', 'director') AND ci.role_id = rt.id AND (cn.country_code IN ('[md]', '[ro]', '[kr]', '[br]', '[sa]') OR cn.country_code = '[us]') GROUP BY rt.ROLE;
SELECT comp.name AS company_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distribution_companies FROM company_name AS comp JOIN movie_companies AS mc ON comp.id = mc.company_id JOIN cast_info AS ci ON mc.movie_id = ci.movie_id WHERE comp.name_pcode_sf IN ('A4514', 'G5251', 'A3432', 'U5416', 'G6265', 'J3216') GROUP BY comp.name ORDER BY number_of_movies DESC, average_cast_order;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CASE WHEN k.keyword = 'drama' THEN 1.0 ELSE 0 END) AS avg_drama_keyword, SUM(CASE WHEN k.keyword = 'comedy' THEN 1 ELSE 0 END) AS total_comedy_keyword, COUNT(DISTINCT a.person_id) AS unique_actors FROM movie_info mi JOIN kind_type kt ON mi.movie_id = kt.id LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN aka_name a ON mi.movie_id = a.person_id WHERE k.id IN ('7626', '7498') AND kt.id IN ('6', '7', '4', '3', '5') AND mi.id IN ('7266975', '7266320', '7271067', '7270758', '7267432') GROUP BY kt.kind;
SELECT mc.company_id, it.info AS keyword, COUNT(DISTINCT mk.movie_id) AS movies_count, AVG(sub.person_count) AS avg_cast_size FROM movie_keyword AS mk JOIN (SELECT id, info FROM info_type WHERE id IN (3708, 323, 4279) ) AS it ON it.id = mk.keyword_id JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id AND mc.company_type_id = 1 LEFT JOIN (SELECT ci.movie_id, COUNT(DISTINCT ci.person_id) AS person_count FROM cast_info AS ci GROUP BY ci.movie_id ) AS sub ON mk.movie_id = sub.movie_id GROUP BY mc.company_id, it.info ORDER BY mc.company_id, movies_count DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN ct.kind = 'producer' THEN 1 ELSE 0 END) AS number_of_producers, MAX(ci.nr_order) AS max_cast_order FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN kind_type kt ON ct.id = kt.id LEFT JOIN cast_info ci ON mc.movie_id = ci.movie_id WHERE kt.kind IN ('movie', 'tv series', 'tv movie') AND ct.kind IN ('distributor', 'producer') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, COUNT(DISTINCT n.id) AS number_of_people_involved, it.info AS info_type, COUNT(DISTINCT mi.movie_id) AS movies_with_info, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN name n ON mi.movie_id = n.id WHERE mc.note LIKE '%(TV)%' AND it.info IN ('LD disc size', 'birth date', 'LD video noise', 'nick names', 'plot') AND mc.company_id IN (189, 1031, 498) GROUP BY ct.kind, it.info;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT a.id) AS total_aka_titles, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT n.id) AS total_names, COUNT(DISTINCT c.id) AS total_complete_cast_entries FROM title t LEFT JOIN aka_title a ON t.id = a.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN keyword k ON k.phonetic_code = a.phonetic_code LEFT JOIN name n ON n.gender = 'm' AND (n.imdb_index = 'XVII' OR n.imdb_index = 'XXII') LEFT JOIN complete_cast c ON t.id = c.movie_id WHERE t.kind_id IN (SELECT id FROM role_type WHERE role IN ('miscellaneous crew', 'director')) AND (k.keyword IN ('fbi', 'fencing-lesson', 'repairing-a-tv-set', 'leaving-home') OR k.phonetic_code IN ('L2153', 'G56', 'C6326', 'A3436', 'P212', 'W262')) AND ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('references', 'referenced in')) GROUP BY t.kind_id;
SELECT kt.kind AS movie_kind, AVG(mi_idx.info::numeric) AS average_rank, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cct.id) AS number_of_company_types, SUM(CASE WHEN rt.role = 'editor' THEN 1 ELSE 0 END) AS count_of_editor_roles FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON kt.id = mi_idx.info_type_id JOIN movie_companies AS mc ON mc.movie_id = mi_idx.movie_id JOIN comp_cast_type AS cct ON cct.id = mc.company_type_id JOIN role_type AS rt ON rt.id = cct.id WHERE mi_idx.info_type_id IN ('12', '4', '6', '7', '10') AND mc.company_type_id IN ('2', '1', '4', '3') AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND mc.note LIKE '%(co-production)%' GROUP BY kt.kind ORDER BY average_rank DESC;
SELECT cct.kind AS cast_type, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT mk.movie_id) AS number_of_keywords_used, AVG(CAST(pi.info AS INTEGER)) AS average_person_info, SUM(CASE WHEN k.keyword = 'massachusetts' THEN 1 ELSE 0 END) AS count_massachusetts_keyword, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_status_4_casts FROM comp_cast_type cct JOIN complete_cast cc ON cct.id = cc.subject_id JOIN movie_keyword mk ON cc.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN person_info pi ON pi.person_id = cc.id WHERE cc.status_id IN (3, 4) AND pi.info_type_id = cc.status_id AND k.keyword IN ('massachusetts', 'scavenging-for-food', 'acquitted-of-murder', 'airforce-one', 'archeologist', 'collecting') GROUP BY cct.kind;
SELECT t.title, COUNT(DISTINCT ci.person_id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN cct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_companies FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN comp_cast_type cct ON mc.company_type_id = cct.id WHERE t.production_year > 2000 AND mc.note LIKE '%(TV)%' GROUP BY t.title ORDER BY total_cast_members DESC, latest_production_year DESC;
SELECT ct.kind AS crew_type, COUNT(DISTINCT cn.id) AS num_companies, AVG(mi_idx.id::numeric) AS average_movie_info_idx, SUM(CASE WHEN mk.keyword_id IN ('3835', '2651', '3091', '4000') THEN 1 ELSE 0 END) AS relevant_keyword_count, MIN(cn.name) AS sample_company_name, MAX(cn.country_code) AS max_country_code FROM comp_cast_type ct JOIN movie_info_idx mi_idx ON ct.id = mi_idx.info_type_id JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = mi_idx.movie_id WHERE ct.kind = 'crew' AND mi_idx.id IN ('57', '2630') AND cn.name_pcode_nf IN ('P6431', 'U521', 'C6536') GROUP BY ct.kind;
SELECT mi_idx.movie_id, COUNT(DISTINCT a.person_id) AS unique_person_count, COUNT(a.id) AS total_aka_names, AVG(COUNT(a.id)) OVER () AS avg_aka_names_per_movie FROM movie_info_idx mi_idx LEFT JOIN aka_name a ON a.person_id = mi_idx.movie_id GROUP BY mi_idx.movie_id ORDER BY unique_person_count DESC, total_aka_names DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(ci.id) AS total_roles_played, AVG(ci.nr_order) AS average_order_of_appearance, AVG(CAST(mi_idx.info AS FLOAT)) AS average_movie_rating FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY n.name ORDER BY number_of_movies DESC, average_movie_rating DESC, average_order_of_appearance ASC LIMIT 10;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.season_nr) AS average_season_number, SUM(mov_comp.company_id) AS total_company_contributions, rt.ROLE, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT an.person_id) AS number_of_actors_with_aliases, MAX(t.episode_nr) AS max_episode_number FROM title AS t JOIN movie_companies AS mov_comp ON mov_comp.movie_id = t.id JOIN company_name AS cn ON cn.id = mov_comp.company_id JOIN role_type AS rt ON rt.id = mov_comp.company_type_id LEFT JOIN aka_name AS an ON an.person_id = t.id WHERE t.production_year BETWEEN 1990 AND 2020 AND cn.name IN ('Vestron UK', 'Messina Films') AND rt.id = 9 AND t.id IN ('17038', '13408', '18586', '19239', '26429') GROUP BY t.production_year, rt.ROLE ORDER BY t.production_year DESC, number_of_movies DESC;
SELECT kt.kind, COUNT(DISTINCT t.id) AS num_movies, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT k.id) AS num_keywords, COUNT(DISTINCT mc.company_id) AS num_companies, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE kt.kind IN ('movie', 'tv mini series', 'video game') AND t.production_year > 2010 AND k.keyword IN ('meadow', 'dry-ice', 'firing-squad', 'hurt', 'wall-phone') GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.name) AS number_of_companies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_budget, COUNT(DISTINCT ci.movie_id) AS number_of_movies_with_complete_cast, SUM(CASE WHEN rt.role = 'writer' THEN 1 ELSE 0 END) AS total_writers, COUNT(DISTINCT pi.person_id) AS unique_persons_involved FROM company_type ct JOIN company_name cn ON ct.id = cn.id LEFT JOIN movie_info mi ON cn.imdb_id = mi.movie_id AND mi.info_type_id = 3 LEFT JOIN complete_cast ci ON cn.imdb_id = ci.movie_id LEFT JOIN role_type rt ON ci.subject_id = rt.id LEFT JOIN person_info pi ON ci.subject_id = pi.info_type_id GROUP BY ct.kind ORDER BY number_of_companies DESC, average_movie_budget DESC;
SELECT ct.kind AS company_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT mki.movie_id) AS total_movies, COUNT(DISTINCT kw.id) AS total_unique_keywords, SUM(CASE WHEN akat.note LIKE '%(USA)%' THEN 1 ELSE 0 END) AS total_usa_dubbed_versions FROM aka_title akat JOIN movie_keyword mkw ON akat.movie_id = mkw.movie_id JOIN keyword kw ON mkw.keyword_id = kw.id JOIN movie_info_idx mki ON akat.movie_id = mki.movie_id JOIN company_type ct ON mki.info_type_id = ct.id WHERE akat.production_year BETWEEN 2000 AND 2020 GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.episode_of_id) AS number_of_series, SUM(CASE WHEN t.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons_count, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_since_2001 FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN title AS t ON ml.movie_id = t.id WHERE t.production_year BETWEEN 1980 AND 2023 AND lt.link IN ('remade as', 'edited from', 'referenced in') GROUP BY lt.LINK ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT cn.id) AS number_of_companies, kt.kind AS movie_kind, AVG(cc.status_id) AS average_status, SUM(CASE WHEN cn.country_code = '[fi]' THEN 1 ELSE 0 END) AS finnish_companies_count, COUNT(DISTINCT cc.movie_id) AS movies_count FROM company_name AS cn JOIN complete_cast AS cc ON cn.imdb_id = cc.movie_id JOIN kind_type AS kt ON cc.subject_id = kt.id WHERE cn.md5sum IN ('df5f53a18aca1956d39f4c3e8efba40d', '1f4fb34b400c593a88ee241792a10246', '528802a0236e52af987bb556a2a18522', '5dfe4406cd7d44d4e65cce35f75b02cb') AND kt.kind = 'video movie' AND cc.status_id IN (4, 3) AND cc.movie_id = 51584 GROUP BY kt.kind;
SELECT kt.kind as movie_kind, AVG(akat.production_year) as average_production_year, COUNT(DISTINCT akat.movie_id) as number_of_movies, SUM(CASE WHEN akat.episode_of_id IS NOT NULL THEN 1 ELSE 0 END) as number_of_episodes, COUNT(DISTINCT cn.id) as number_of_characters, COUNT(DISTINCT cct.id) as number_of_cast_types FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id JOIN char_name cn ON akat.movie_id = cn.imdb_id JOIN comp_cast_type cct ON akat.id = cct.id WHERE kt.kind = 'movie' AND akat.production_year BETWEEN 2000 AND 2010 AND akat.season_nr IN (6, 27, 1) AND akat.episode_of_id IN (23513, 23963, 12924, 12200, 8336) GROUP BY kt.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_titles, AVG(CAST(t.production_year AS NUMERIC)) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actor_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actor_count, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT ml.linked_movie_id) AS linked_movies_count, COUNT(DISTINCT cc.id) AS complete_cast_entries FROM kind_type AS kt JOIN aka_title AS t ON kt.id = t.kind_id LEFT JOIN movie_link AS ml ON t.movie_id = ml.movie_id LEFT JOIN complete_cast AS cc ON t.movie_id = cc.movie_id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE kt.kind IN ('movie', 'tv movie', 'episode', 'tv series', 'video movie') AND cc.subject_id = 1 AND (n.gender IS NULL OR n.gender IN ('m', 'f')) GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT pers_info.movie_id) AS number_of_movies, AVG(pers_info.avg_actor_age) AS average_actor_age, SUM(CASE WHEN mi_idx.info = 'color' THEN 1 ELSE 0 END) AS color_movie_count, SUM(CASE WHEN mi_idx.info = 'black and white' THEN 1 ELSE 0 END) AS bw_movie_count FROM company_name cn JOIN movie_info_idx mi_idx ON cn.imdb_id = mi_idx.movie_id JOIN (SELECT ci.movie_id, AVG(CAST(info AS INTEGER)) AS avg_actor_age FROM cast_info ci JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = 1 WHERE ci.role_id = (SELECT id FROM cast_info WHERE note = 'actor' LIMIT 1) GROUP BY ci.movie_id) pers_info ON mi_idx.movie_id = pers_info.movie_id WHERE cn.name_pcode_sf IN ('I5164', 'C3132') GROUP BY cn.name;
SELECT kt.kind AS movie_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN at.note LIKE '%(DVD box title)%' THEN 1 ELSE 0 END) AS total_dvd_box_titles, COUNT(DISTINCT ct.id) AS total_company_types, COUNT(lt.id) AS total_link_types FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN company_type ct ON ct.id = t.id LEFT JOIN link_type lt ON lt.id = t.id WHERE t.production_year BETWEEN 1990 AND 2020 AND at.note IS NOT NULL AND at.production_year > 1980 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT ml.movie_id) AS total_movie_links, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS count_of_series, COUNT(DISTINCT t.id) FILTER (WHERE t.title = 'It Came from the Nightosphere' OR t.title = 'Wes Craven Presents Don''t Look Down') AS specific_titles_count FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN comp_cast_type ct ON mc.company_type_id = ct.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE ct.id IN (2, 3) AND mc.company_type_id = 1 AND (ml.link_type_id IN (12, 1, 13, 15) OR ml.link_type_id IS NULL) GROUP BY ct.kind
SELECT mc.company_type_id, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(k.id) AS average_keyword_id, COUNT(DISTINCT n.id) AS total_unique_cast_members, MAX(n.name) AS most_recent_cast_member_name FROM movie_companies mc JOIN keyword k ON mc.movie_id = k.id JOIN name n ON n.id = mc.company_id WHERE mc.company_type_id = '1' AND mc.note LIKE '%(TV)%' AND k.keyword IN ('training', 'mad-scientist', 'war-memorial') AND n.name_pcode_cf IN ('A6136', 'A2353', 'A6515', 'A4564', 'A2352', 'A265') GROUP BY mc.company_type_id;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS number_of_us_companies, MAX(pi.info) AS latest_info_entry FROM title AS t JOIN company_name AS cn ON t.id = cn.imdb_id JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN person_info AS pi ON pi.info LIKE '%USA%' WHERE t.production_year BETWEEN 1980 AND 1990 AND cn.country_code IN ('[us]', '[ca]') GROUP BY ct.kind ORDER BY number_of_titles DESC;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT k.id) AS unique_keywords_count, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN title t ON t.production_year IS NOT NULL JOIN movie_keyword mk ON t.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE cn.country_code != 'US' AND k.keyword IN ('high-powered-gun', 'airforce', 'harpoon', 'creek') AND t.kind_id != 1 GROUP BY ct.kind, cn.country_code ORDER BY total_movies DESC;
SELECT n.gender, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS avg_cast_order, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, SUM(CASE WHEN ct.kind = 'production' THEN 1 ELSE 0 END) AS total_production_roles, SUM(CASE WHEN ct.kind = 'distributors' THEN 1 ELSE 0 END) AS total_distributor_roles FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN company_type AS ct ON mc.company_type_id = ct.id WHERE n.gender = 'm' AND ci.role_id = 1 AND mc.company_id IN (1057, 946, 317, 31, 1181, 84) AND ci.note NOT LIKE '%(voice)%' GROUP BY n.gender;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(ml.movie_id) AS average_movie_id, SUM(CASE WHEN pi.info_type_id = 7 THEN 1 ELSE 0 END) AS count_info_with_type_7, MAX(pi.note) AS latest_note FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN person_info AS pi ON ml.movie_id = pi.person_id GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT kt.kind, COUNT(DISTINCT cn.id) AS num_companies, COUNT(DISTINCT mi.movie_id) AS num_movies, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it1.info = 'rating') AS avg_rating, SUM(CAST(mi.info AS NUMERIC)) FILTER (WHERE it1.info = 'budget') AS total_budget FROM kind_type AS kt JOIN movie_info AS mi ON mi.info_type_id = kt.id JOIN company_name AS cn ON cn.imdb_id = mi.movie_id JOIN movie_info AS it1 ON mi.movie_id = it1.movie_id AND it1.info_type_id = kt.id WHERE kt.id IN ('4', '5', '1') AND kt.kind IN ('episode', 'tv series', 'video game') AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('rating', 'budget')) GROUP BY kt.kind;
SELECT a.title AS alternate_title, AVG(kt.production_year) AS avg_production_year, COUNT(DISTINCT n.id) AS number_of_contributors, SUM(CASE WHEN kw.keyword = 'ball' THEN 1 ELSE 0 END) AS ball_keyword_count, SUM(CASE WHEN kw.keyword = 'advisor' THEN 1 ELSE 0 END) AS advisor_keyword_count FROM aka_title a INNER JOIN keyword kw ON kw.phonetic_code = a.phonetic_code INNER JOIN aka_title kt ON kt.id = a.movie_id AND kt.kind_id = a.kind_id LEFT JOIN name n ON n.name_pcode_cf = a.phonetic_code WHERE a.movie_id IN ('1644521', '1664207') GROUP BY a.title;
SELECT ct.kind AS company_type_kind, AVG(name.imdb_id) AS avg_imdb_id, COUNT(DISTINCT aka_name.person_id) AS unique_aka_person_count, SUM(CASE WHEN pi.info_type_id = '22' THEN 1 ELSE 0 END) AS count_info_type_22, MAX(mc.note) AS max_movie_company_note FROM movie_companies AS mc JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id JOIN name ON name.id = mc.company_id JOIN aka_name ON aka_name.person_id = name.id LEFT JOIN person_info AS pi ON pi.person_id = name.id JOIN company_type AS ct ON ct.id = mc.company_type_id WHERE cct.kind = 'crew' AND name.surname_pcode IN ('A43', 'A432') AND name.md5sum IN ('95a7b086dc6ce3e141f3acbc8b45cc12', '27e967b3984165c80f751a75ef91e3fc') GROUP BY ct.kind;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT pi.person_id) AS actors_with_additional_info, SUM(CASE WHEN rt.ROLE = 'Actor' THEN 1 ELSE 0 END) AS total_actor_roles, SUM(CASE WHEN rt.ROLE = 'Director' THEN 1 ELSE 0 END) AS total_director_roles, COUNT(DISTINCT t.id) AS total_titles FROM title t LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN name n ON cc.subject_id = n.id LEFT JOIN role_type rt ON cc.status_id = rt.id LEFT JOIN person_info pi ON n.id = pi.person_id WHERE t.production_year IN ('1998', '1971') GROUP BY t.kind_id ORDER BY average_production_year DESC;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT n.id) AS total_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, COUNT(DISTINCT k.id) AS total_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id WHERE t.production_year BETWEEN 2000 AND 2020 AND kt.kind IN ('movie', 'tv series', 'video') AND t.season_nr IS NULL GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT mc.movie_id) AS number_of_movies_produced, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_movie_count, SUM(CASE WHEN k.keyword = 'comedy' THEN 1 ELSE 0 END) AS comedy_movie_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_keyword mk ON mc.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.company_type_id = 1 AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND cn.country_code = 'US' GROUP BY cn.name ORDER BY average_movie_rating DESC, number_of_movies_produced DESC;
SELECT it.info AS info_category, COUNT(*) AS total_entries, COUNT(DISTINCT mc.movie_id) AS distinct_movies_involved, COUNT(DISTINCT mc.company_id) AS distinct_companies_involved FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_companies mc ON mi.movie_id = mc.movie_id WHERE it.info IN ('crazy credits', 'locations', 'mpaa', 'LD group genre', 'LD number of chapter stops') GROUP BY it.info ORDER BY total_entries DESC;
SELECT ct.kind AS company_type, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_completed_movies, COUNT(DISTINCT k.id) AS number_of_unique_keywords, COUNT(DISTINCT mc.movie_id) AS number_of_movies_with_companies FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN complete_cast cc ON mc.movie_id = cc.movie_id JOIN keyword k ON mi.movie_id = k.id WHERE ct.id IN (3, 4) AND mc.company_id IN (202, 974) AND cc.status_id IN (3, 4) AND cc.subject_id = 1 AND mi.note LIKE '%(only a few lines)%' GROUP BY ct.kind;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT at.id) AS total_aka_titles, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT lt.id) AS total_link_types FROM title t LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN char_name cn ON cn.imdb_id = t.imdb_id LEFT JOIN link_type lt ON lt.id = ml.link_type_id WHERE t.production_year > 2000 AND (at.production_year BETWEEN 2000 AND 2010 OR at.production_year IS NULL) AND lt.id IN ('103', '6', '43', '37', '45') GROUP BY t.id;
SELECT AVG(mi_idx.info::integer) AS average_movie_rating, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT pi.person_id) AS total_people_with_info, MAX(cn.name) AS largest_company_name FROM keyword AS k, movie_keyword AS mk, movie_info_idx AS mi_idx, company_name AS cn, movie_companies AS mc, person_info AS pi, comp_cast_type AS cct WHERE k.keyword IN ('hang-gliding', 'stubbornness', 'porch-swing', 'cereal', 'identical-twins') AND k.id = mk.keyword_id AND mk.movie_id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.company_id = cn.id AND pi.info_type_id = cct.id AND cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY cct.kind;
SELECT kt.kind AS movie_type, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mk.movie_id) AS movie_count, COUNT(DISTINCT cn.id) AS company_count, COUNT(DISTINCT n.id) AS actor_count FROM movie_info mi JOIN kind_type kt ON mi.movie_id = kt.id JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN company_name cn ON mi.movie_id = cn.imdb_id JOIN cast_info ci ON ci.movie_id = mi.movie_id JOIN name n ON ci.person_id = n.id WHERE kt.id IN ('7', '1', '4') AND cn.name_pcode_sf IN ('F2365', 'Z3132', 'Y6253', 'F4231') AND mk.keyword_id IN ('3887', '4275', '3550', '4202') AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') GROUP BY kt.kind;
SELECT kind.kind AS company_kind, COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(mi_idx.info::NUMERIC) AS average_movie_rating, SUM(CASE WHEN at.title LIKE '%War%' THEN 1 ELSE 0 END) AS num_war_related_titles, COUNT(DISTINCT ci.person_id) AS num_unique_actors FROM company_type kind JOIN movie_info_idx mi_idx ON mi_idx.info LIKE '0.0%' JOIN movie_info mi ON mi.movie_id = mi_idx.movie_id AND mi.info = 'Romanian' JOIN aka_title at ON at.movie_id = mi.movie_id JOIN cast_info ci ON ci.movie_id = at.movie_id WHERE kind.kind = 'special effects companies' AND at.imdb_index IN ('I', 'II', 'III', 'IV') GROUP BY kind.kind;
SELECT AT.production_year, CT.kind AS company_kind, IT.info AS info_type, AVG(CI.nr_order) AS average_cast_order, COUNT(DISTINCT MK.keyword_id) AS number_of_keywords, COUNT(DISTINCT ML.link_type_id) AS number_of_link_types, SUM(CASE WHEN AT.episode_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_episodes FROM aka_title AT JOIN movie_keyword MK ON AT.movie_id = MK.movie_id JOIN movie_link ML ON AT.movie_id = ML.movie_id JOIN cast_info CI ON AT.movie_id = CI.movie_id JOIN company_type CT ON AT.kind_id = CT.id JOIN info_type IT ON MK.keyword_id = IT.id WHERE AT.production_year BETWEEN 2000 AND 2020 AND CT.kind = 'production' AND IT.info LIKE '%genre%' GROUP BY AT.production_year, CT.kind, IT.info ORDER BY AT.production_year, number_of_keywords DESC;
SELECT it.info AS cast_completeness, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(ci.person_count) AS average_roles_per_person FROM (SELECT movie_id, COUNT(DISTINCT person_id) AS person_count FROM cast_info GROUP BY movie_id) ci JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN info_type it ON cc.status_id = it.id GROUP BY it.info;
SELECT ak.production_year, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mk.keyword_id) AS number_of_unique_keywords, AVG(ci.nr_order) AS average_cast_order FROM movie_keyword mk INNER JOIN aka_title ak ON mk.movie_id = ak.movie_id INNER JOIN cast_info ci ON mk.movie_id = ci.movie_id INNER JOIN movie_info_idx mi ON mk.movie_id = mi.movie_id WHERE mk.keyword_id IN (3815, 3067) AND ak.production_year BETWEEN 1980 AND 1990 GROUP BY ak.production_year ORDER BY ak.production_year;
SELECT kt.kind AS genre, COUNT(DISTINCT t.id) AS total_movies, ROUND(AVG(t.production_year)) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS total_keywords FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC, average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT mv.movie_id) AS number_of_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords, COUNT(DISTINCT pi.person_id) AS number_of_persons FROM kind_type AS kt JOIN movie_info AS mi ON mi.info_type_id = (SELECT id FROM info_type WHERE info = 'runtime') JOIN movie_keyword AS mk ON mk.movie_id = mi.movie_id JOIN person_info AS pi ON pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') JOIN complete_cast AS mv ON mv.movie_id = mi.movie_id WHERE kt.kind IN ('movie', 'tv mini series') AND mi.info SIMILAR TO '[0-9]+' GROUP BY kt.kind HAVING COUNT(DISTINCT mv.movie_id) > 5;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(cast_info.nr_order) AS average_cast_order, SUM(case when cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON kt.kind IN ('episode', 'video game', 'video movie', 'tv movie', 'tv mini series', 'tv series') JOIN movie_keyword mk ON mk.movie_id = mc.movie_id JOIN cast_info ON cast_info.movie_id = mc.movie_id WHERE mk.movie_id IN ('12147', '11128', '12146') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_order, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_prequels_linked, SUM(CASE WHEN ml.link_type_id = 4 THEN 1 ELSE 0 END) AS total_sequels_linked, cn.name AS company_name, COUNT(DISTINCT cn.country_code) AS number_of_country_codes FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN title t ON ci.movie_id = t.id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN company_name cn ON t.id = cn.imdb_id WHERE rt.id IN (1, 4) AND ci.nr_order <= 20 AND cn.name IN ('RQB Group', 'HKK Film Company', 'Digital Media Production House', 'Film i Jönköpings län') GROUP BY rt.ROLE, cn.name ORDER BY rt.ROLE, cn.name;
SELECT k.keyword, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT at.movie_id) AS total_movies, COUNT(DISTINCT at.kind_id) AS different_kinds FROM keyword AS k JOIN movie_info AS mi ON mi.info LIKE '%' || k.keyword || '%' JOIN aka_title AS at ON at.movie_id = mi.movie_id WHERE k.keyword IN ('stewardess', 'lost-film', 'reality', 'honeymoon', 'murder-mystery') AND at.note LIKE '%lost film%' GROUP BY k.keyword;
SELECT kt.kind AS movie_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_lead_roles, COUNT(DISTINCT cn.id) AS number_of_unique_characters FROM cast_info ci JOIN aka_title at ON ci.movie_id = at.movie_id JOIN kind_type kt ON at.kind_id = kt.id JOIN char_name cn ON ci.person_role_id = cn.id WHERE at.production_year BETWEEN 1990 AND 2000 AND kt.kind = 'feature' GROUP BY kt.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 1) AS average_movie_budget, SUM(CAST(pi.info AS NUMERIC)) FILTER (WHERE pi.info_type_id = 2) AS total_box_office, COUNT(DISTINCT k.id) FILTER (WHERE k.keyword IN ('toy-car', 'personal-stories')) AS count_specific_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN person_info AS pi ON mc.movie_id = pi.person_id AND pi.info_type_id IN (1, 2) LEFT JOIN keyword AS k ON k.id = pi.info_type_id JOIN comp_cast_type AS cct ON mc.company_id = cct.id WHERE mc.company_id IN (1232, 968) AND ct.id IN (2, 1, 4, 3) AND ct.kind = 'miscellaneous companies' AND cct.id IN (1, 2) GROUP BY ct.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(*) AS total_links, AVG(ml.link_type_id) AS average_link_type_id, SUM(CASE WHEN ml.link_type_id = 17 THEN 1 ELSE 0 END) AS count_of_link_type_17, SUM(CASE WHEN ml.link_type_id = 16 THEN 1 ELSE 0 END) AS count_of_link_type_16 FROM movie_link AS ml JOIN company_type AS ct ON ml.link_type_id = ct.id WHERE ml.linked_movie_id IN (238671, 754434, 483510, 1404818, 1903725) AND ct.kind IN ('production companies', 'distributors') GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_type_1_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN link_type AS lt ON lt.id = cc.status_id WHERE t.production_year BETWEEN 2000 AND 2010 AND mc.company_type_id = 1 AND lt.link = 'similar to' GROUP BY t.kind_id ORDER BY number_of_movies DESC;
SELECT rt.ROLE, COUNT(*) AS total_roles, AVG(pi.person_id) AS average_person_id, SUM(ml.movie_id) AS total_movie_references, MAX(c.name) AS longest_char_name FROM role_type rt JOIN char_name c ON rt.id = c.id JOIN movie_link ml ON ml.id = c.id JOIN person_info pi ON pi.person_id = c.id WHERE ml.link_type_id = '11' AND c.md5sum IN ('88b24c378b8d6d3a9b9b0db5a90d076a', 'c36da3bda4ff32a6c5e348a693b4796b', '66a96a02207eb6d28a41944d55f42d0b') GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT cct.kind AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT k.id) AS number_of_keywords FROM cast_info ci JOIN comp_cast_type cct ON ci.role_id = cct.id JOIN keyword k ON k.keyword LIKE '%murder%' OR k.keyword LIKE '%violence%' WHERE ci.person_role_id IN (2, 3, 4) GROUP BY cct.kind ORDER BY number_of_people DESC, average_cast_order;
SELECT kt.kind AS movie_kind, AVG(ati.production_year) AS avg_production_year, COUNT(DISTINCT cn.id) AS total_actors, COUNT(DISTINCT compn.id) AS total_companies, SUM(CASE WHEN mi.info = 'Hungarian' THEN 1 ELSE 0 END) AS hungarian_movies_count, SUM(CASE WHEN mi.info = 'Bulgarian' THEN 1 ELSE 0 END) AS bulgarian_movies_count, SUM(CASE WHEN mi.info = 'Korean' THEN 1 ELSE 0 END) AS korean_movies_count FROM aka_title ati JOIN kind_type kt ON ati.kind_id = kt.id JOIN movie_info mi ON ati.movie_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN name n ON n.id = ati.episode_of_id LEFT JOIN company_name compn ON compn.id = ati.movie_id LEFT JOIN char_name cn ON n.id = cn.id WHERE mi.info_type_id = 4 AND kt.id IN (1, 6, 5) AND ati.title IN ('Articolo 99', 'Lippenstift am Kragen', 'Eine Klasse für sich') GROUP BY kt.kind;
SELECT a_t.title AS alternate_title, COUNT(c_i.id) AS total_cast_members, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN a_t.production_year > 2000 THEN 1 ELSE 0 END) AS post_2000_titles_count FROM aka_title AS a_t JOIN cast_info AS c_i ON a_t.movie_id = c_i.movie_id JOIN movie_info_idx AS mi_idx ON a_t.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = 100 AND a_t.movie_id IN ('8428', '19659') GROUP BY a_t.title;
SELECT kt.kind AS movie_kind, AVG(CASE WHEN rt.ROLE = 'director' THEN 1 ELSE 0 END) AS avg_director_presence, COUNT(DISTINCT ml.movie_id) AS num_movies_linked, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, SUM(CASE WHEN mi.info_type_id = 2 AND mi.info = 'color' THEN 1 ELSE 0 END) AS total_color_movies, COUNT(DISTINCT t.id) AS total_movies FROM title t LEFT JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN movie_info mi ON t.id = mi.movie_id LEFT JOIN role_type rt ON mi.info_type_id = rt.id WHERE t.production_year BETWEEN 1990 AND 2020 AND kt.kind IN ('movie', 'tv series', 'video game') AND (ml.link_type_id IN (5, 12, 16) OR ml.link_type_id IS NULL) AND (ml.linked_movie_id IN (1639371, 2307098) OR ml.linked_movie_id IS NULL) AND rt.ROLE IN ('director', 'actor', 'producer') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(mi.info::integer) AS average_movie_length, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS total_completed_movies, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS total_tv_movies, COUNT(DISTINCT pi.person_id) AS total_people_with_info FROM movie_companies mc JOIN movie_info mi ON mc.movie_id = mi.movie_id LEFT JOIN complete_cast cc ON mc.movie_id = cc.movie_id LEFT JOIN person_info pi ON pi.info_type_id IN (21, 25, 35) WHERE mc.company_type_id IN (SELECT id FROM movie_companies WHERE note LIKE '%(USA)%') AND mi.info_type_id = (SELECT id FROM movie_info WHERE info = 'length') AND mc.note NOT LIKE '%(edited version)%' GROUP BY mc.company_id HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY total_movies DESC, average_movie_length DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, COUNT(DISTINCT mc.company_id) AS total_production_companies_involved, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast FROM cast_info ci LEFT JOIN movie_keyword mk ON ci.movie_id = mk.movie_id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE ci.note NOT LIKE '%(uncredited)%' AND mk.keyword_id IN (3630, 3933, 2868, 3441, 70) AND ci.role_id = 1;
SELECT cn.country_code, ct.kind AS genre, COUNT(t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequels FROM title AS t JOIN company_name AS cn ON t.id = cn.imdb_id JOIN comp_cast_type AS ct ON t.kind_id = ct.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id AND ml.link_type_id = 1 WHERE t.production_year BETWEEN 2000 AND 2020 AND cn.country_code IN ('US', 'GB', 'CA') GROUP BY cn.country_code, ct.kind ORDER BY cn.country_code, total_movies DESC;
SELECT i.info AS genre, COUNT(DISTINCT k.keyword) AS number_of_keywords, AVG(m.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors FROM movie_link AS ml JOIN keyword AS k ON ml.movie_id = k.id JOIN aka_title AS m ON ml.movie_id = m.movie_id JOIN name AS n ON n.surname_pcode = m.phonetic_code JOIN person_info AS pi ON pi.person_id = n.id AND pi.info_type_id IN ('21', '24', '35', '17', '27') JOIN info_type AS i ON pi.info_type_id = i.id WHERE ml.linked_movie_id IN ('1928558', '571140', '1683460', '1635656', '1308096') AND ml.movie_id IN ('11141', '2036', '14524', '6636') AND n.surname_pcode IN ('A426', 'A436', 'A465', 'A453') GROUP BY i.info;
SELECT ct.kind AS company_kind, COUNT(DISTINCT an.id) AS total_aliases, AVG(pi.info::numeric) FILTER (WHERE pi.info_type_id = 101) AS average_salary, SUM(CASE WHEN pi.info_type_id = 102 THEN pi.info::numeric ELSE 0 END) AS total_bonus, COUNT(DISTINCT pi.person_id) FILTER (WHERE pi.info_type_id = 103) AS count_with_awards FROM company_type ct LEFT JOIN movie_companies mc ON mc.company_type_id = ct.id LEFT JOIN aka_name an ON an.person_id = mc.company_id LEFT JOIN person_info pi ON pi.person_id = an.person_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT company_name.id) AS total_companies, AVG(CAST(movie_info_idx.info AS INTEGER)) AS average_movie_votes, SUM(CASE WHEN movie_keyword.keyword_id IN ('3511', '571', '2246', '851') THEN 1 ELSE 0 END) AS relevant_keyword_count FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN company_name ON mc.company_id = company_name.id JOIN movie_info_idx ON mc.movie_id = movie_info_idx.movie_id AND movie_info_idx.info_type_id = '100' LEFT JOIN movie_keyword ON mc.movie_id = movie_keyword.movie_id WHERE company_name.country_code = 'us' AND company_name.name_pcode_nf IN ('M3261', 'N63', 'W145') AND company_name.md5sum IN ('b38522871a3a9a6ad83d7e5843a8052f', 'c67d47f8ed0acd863dbcb8c2b928208a', 'ae19a96a34d54b7e7ee2c770489cf9fb', '5e5a159eb009ac92bde3144fdf7d7d1a', '3119ec8bdc119971f2e03179a43f5ce4', 'f07a92b898eabd85eba36a20b3df770e') AND kt.kind IN ('tv movie', 'movie', 'tv mini series', 'episode', 'video game') GROUP BY kt.kind;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, SUM(CASE WHEN akat.imdb_index IS NOT NULL THEN 1 ELSE 0 END) AS indexed_movies_count, COUNT(mk.keyword_id) AS total_keywords FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT cct.kind AS cast_type, ct.kind AS company_kind, COUNT(DISTINCT k.id) AS keyword_count, AVG(LENGTH(k.keyword)) AS average_keyword_length, COUNT(DISTINCT lt.id) AS link_type_count FROM comp_cast_type cct JOIN company_type ct ON cct.id = ct.id LEFT JOIN keyword k ON SUBSTRING(k.phonetic_code, 1, 1) = 'A' LEFT JOIN link_type lt ON LENGTH(lt.link) > 10 GROUP BY cct.kind, ct.kind ORDER BY keyword_count DESC, average_keyword_length DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(kw.id) AS average_keyword_id, MAX(n.name) AS most_common_name, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS non_male_count FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN cast_info AS ci ON ml.movie_id = ci.movie_id JOIN keyword AS kw ON ci.id = kw.id JOIN name AS n ON ci.person_id = n.id GROUP BY lt.LINK ORDER BY number_of_movies DESC, number_of_linked_movies DESC;
SELECT kt.kind AS Movie_Type, AVG(t.production_year) AS Average_Production_Year, COUNT(DISTINCT t.id) AS Total_Movies, COUNT(DISTINCT cc.id) AS Total_Complete_Casts, SUM(CASE WHEN t.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS Total_Seasons FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IN ('movie', 'tv movie', 'video movie', 'video game') GROUP BY kt.kind ORDER BY Total_Movies DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(pi.info_type_id) AS average_info_type_id, MIN(k.keyword) AS minimum_keyword, SUM(ml.movie_id) AS sum_movie_ids, MAX(ml.linked_movie_id) AS max_linked_movie_id FROM movie_link AS ml JOIN link_type AS lt ON lt.id = ml.link_type_id JOIN keyword AS k ON k.id = ml.id JOIN person_info AS pi ON pi.id = ml.id WHERE k.keyword LIKE 'physician%' AND lt.LINK IN ('similar to', 'spin off') AND pi.note ILIKE '%Director%' GROUP BY lt.LINK;
SELECT a.imdb_index AS imdb_index_version, AVG(a.production_year) AS average_production_year, COUNT(DISTINCT c.person_id) AS number_of_people_involved, COUNT(DISTINCT k.id) AS number_of_unique_keywords, lt.LINK AS link_type_description FROM aka_title a JOIN cast_info c ON a.movie_id = c.movie_id JOIN movie_keyword mk ON a.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_link ml ON a.movie_id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id WHERE a.imdb_index IN ('I', 'II', 'III', 'IV') AND lt.LINK IN ('remake of', 'version of') GROUP BY a.imdb_index, lt.LINK ORDER BY average_production_year DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_lead_roles, COUNT(DISTINCT mc.company_id) AS number_of_companies_worked_with FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 JOIN movie_companies mc ON ci.movie_id = mc.movie_id WHERE ci.nr_order <= 51 AND mi_idx.info::numeric >= 5.0 GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY average_movie_rating DESC, number_of_movies DESC LIMIT 10;
SELECT pi.person_id, COUNT(DISTINCT an.id) AS alternative_name_count, AVG(LENGTH(an.name)) AS avg_alternative_name_length, COUNT(DISTINCT pi.id) AS info_count, cct.kind AS cast_type FROM person_info pi JOIN info_type it ON pi.info_type_id = it.id AND it.info IN ('LD release date', 'LD master format', 'LD analog right', 'LD aspect ratio') JOIN aka_name an ON pi.person_id = an.person_id JOIN comp_cast_type cct ON cct.id = pi.info_type_id GROUP BY pi.person_id, cct.kind ORDER BY alternative_name_count DESC, avg_alternative_name_length DESC, info_count DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_companies_involved, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS short_films, SUM(CASE WHEN t.kind_id = 3 THEN 1 ELSE 0 END) AS documentaries, MAX(t.production_year) AS most_recent_production_year FROM movie_companies mc JOIN title t ON mc.movie_id = t.id JOIN name n ON mc.company_id = n.id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY mc.company_type_id ORDER BY total_movies DESC;
SELECT AVG(pi.id) AS average_person_info_id, COUNT(DISTINCT an.person_id) AS unique_aka_person_count, COUNT(DISTINCT lt.id) AS link_type_count, SUM(CASE WHEN an.name IS NOT NULL THEN 1 ELSE 0 END) AS not_null_aka_names, MAX(an.id) AS max_aka_name_id FROM aka_name AS an JOIN person_info AS pi ON an.person_id = pi.person_id JOIN link_type AS lt ON pi.info LIKE '%' || lt.link || '%' GROUP BY an.person_id HAVING COUNT(DISTINCT pi.info_type_id) > 1 ORDER BY unique_aka_person_count DESC, average_person_info_id ASC;
SELECT kt.kind as Movie_Type, AVG(t.production_year) as Average_Production_Year, COUNT(DISTINCT t.id) as Total_Movies, COUNT(DISTINCT ml.movie_id) as Movies_With_Links, SUM(CASE WHEN t.series_years LIKE '2004-____' THEN 1 ELSE 0 END) as Movies_From_2004_onwards FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id IN ('16', '13', '8') WHERE kt.kind IN ('tv mini series', 'tv movie', 'video game', 'movie') GROUP BY kt.kind;
SELECT akn.surname_pcode, COUNT(DISTINCT akn.person_id) AS number_of_people_with_surname, AVG(cast_tbl.status_id) AS average_status_id, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS total_movies_with_keywords, COUNT(DISTINCT mk.movie_id) AS unique_movie_count FROM aka_name akn LEFT JOIN complete_cast cast_tbl ON akn.person_id = cast_tbl.subject_id LEFT JOIN movie_keyword mk ON cast_tbl.movie_id = mk.movie_id WHERE cast_tbl.status_id = 4 AND akn.surname_pcode IN ('P245', 'F25', 'A126', 'F6') GROUP BY akn.surname_pcode ORDER BY number_of_people_with_surname DESC;
SELECT t.kind_id AS movie_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS direct_to_video_count, SUM(CASE WHEN t.imdb_index IN ('I', 'II') THEN 1 ELSE 0 END) AS sequel_count, COUNT(DISTINCT k.id) AS number_of_unique_keywords, AVG(pi.info_type_id) AS average_info_type_id FROM title AS t LEFT JOIN person_info AS pi ON t.id = pi.person_id LEFT JOIN char_name AS cn ON cn.id = pi.person_id LEFT JOIN keyword AS k ON k.id = pi.info_type_id GROUP BY t.kind_id HAVING COUNT(DISTINCT cn.surname_pcode) > 1 ORDER BY number_of_movies DESC;
SELECT AVG(COALESCE(NULLIF(pi.info::NUMERIC, 0), 0)) AS avg_person_info_numeric, SUM(CASE WHEN mk.keyword_id IN (2717, 2798) THEN 1 ELSE 0 END) AS sum_movie_keyword_special, COUNT(DISTINCT mc.movie_id) AS count_distinct_movies_with_companies, COUNT(DISTINCT an.person_id) AS count_distinct_persons_with_aka, COUNT(DISTINCT ml.linked_movie_id) AS count_linked_movies FROM person_info pi LEFT JOIN aka_name an ON pi.person_id = an.person_id LEFT JOIN movie_keyword mk ON mk.movie_id = an.person_id LEFT JOIN movie_companies mc ON mc.movie_id = mk.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mc.movie_id WHERE an.name IN ('Alouf, Bernard', 'Almedia-Pederalba, Karen', 'Chanclettes, The', 'Ali, Muhammed', 'Verbrugge, Willy') AND pi.id IN ('3188', '489', '4904') AND mk.id IN ('4094', '2901', '4468') AND ml.id IN ('608', '4874', '3573');
SELECT ct.kind AS company_type, AVG(CASE WHEN ml.link_type_id = '3' THEN 1 ELSE 0 END) AS avg_movie_references, COUNT(DISTINCT mk.movie_id) AS unique_movies_with_keywords, COUNT(DISTINCT at.id) AS total_aka_titles, SUM(CASE WHEN at.phonetic_code IN ('T54', 'V5231') THEN 1 ELSE 0 END) AS count_phonetic_code_matches, MAX(at.production_year) AS latest_production_year FROM company_type ct LEFT JOIN movie_companies mc ON ct.id = mc.company_type_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON mc.movie_id = mk.movie_id LEFT JOIN aka_title at ON mc.movie_id = at.movie_id WHERE ct.kind = 'distributors' AND ml.link_type_id IN ('3', '9', '15', '4', '10') GROUP BY ct.kind;
SELECT ct.kind AS cast_type, COUNT(DISTINCT t.id) AS number_of_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title AS t JOIN comp_cast_type AS ct ON t.kind_id = ct.id JOIN aka_name AS an ON an.person_id = t.id JOIN person_info AS pi ON pi.person_id = an.person_id WHERE t.id IN (154689, 143089, 183564, 150330, 103875) AND an.surname_pcode IN ('A163', 'V625', 'S53', 'G12', 'H53') AND ct.id IN (2, 1, 4, 3) GROUP BY ct.kind;
SELECT link_type.LINK AS link_type, COUNT(DISTINCT movie_link.movie_id) AS total_movies, AVG(aka_title.production_year) AS average_production_year, SUM(CASE WHEN aka_title.kind_id = 1 THEN 1 ELSE 0 END) AS total_full_length_movies, COUNT(DISTINCT company_name.id) AS total_different_companies, COUNT(DISTINCT movie_companies.company_type_id) AS total_company_types, MAX(aka_title.season_nr) AS max_season_number, MIN(aka_title.episode_nr) AS min_episode_number, COUNT(DISTINCT info_type.id) AS total_info_types FROM movie_link JOIN link_type ON movie_link.link_type_id = link_type.id JOIN aka_title ON movie_link.movie_id = aka_title.movie_id JOIN movie_companies ON aka_title.movie_id = movie_companies.movie_id JOIN company_name ON movie_companies.company_id = company_name.id JOIN info_type ON 1=1 WHERE link_type.LINK IN ('features', 'alternate language version of', 'featured in', 'edited into', 'remade as') AND aka_title.kind_id IN (1, 4, 3, 7, 2, 6) AND aka_title.md5sum IN ('1b81d95ddc7a645727ec6e01c28ec5be', 'de1cedb89a8eeb93cc5cba31a251e0f8', 'b4e6ea5bd996a24faacd0571b2f495dd') AND company_name.country_code = '[tr]' GROUP BY link_type.LINK;
SELECT COUNT(DISTINCT ci.id) AS total_cast_members, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_male_cast, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT ml.id) AS total_movie_links, AVG(mi_idx.info::NUMERIC) AS average_movie_info_numeric_value FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id JOIN company_name AS cn ON cn.country_code = 'US' JOIN movie_link AS ml ON ml.movie_id = ci.movie_id JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = ci.movie_id WHERE n.name_pcode_nf IN ('I3542', 'I1425', 'A1346', 'A4152', 'E2415', 'A214') AND cn.name_pcode_sf IN ('T3612', 'A4135') AND ml.linked_movie_id IN ('566232', '327844', '2386590', '2368302', '1823148', '1881905') AND mi_idx.id IN ('3312', '4204') GROUP BY n.gender;
SELECT COUNT(ci.movie_id) AS total_movies_cast, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_lead_roles, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ch.id) AS unique_characters, COUNT(DISTINCT cc.id) AS complete_cast_records, COUNT(DISTINCT mi_idx.movie_id) AS movie_info_records FROM cast_info ci JOIN char_name ch ON ci.person_id = ch.id JOIN complete_cast cc ON ci.movie_id = cc.movie_id JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id WHERE ci.movie_id IN (40767, 1647276, 1650173, 27474, 8997, 1656118) AND ci.nr_order IN (52, 2) AND ci.role_id = 1;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(ml.movie_id) AS average_movie_id, SUM(ml.linked_movie_id) AS total_linked_movie_id, (SELECT COUNT(*) FROM movie_companies WHERE company_type_id = 1) AS total_production_companies, (SELECT COUNT(DISTINCT person_id) FROM aka_name WHERE surname_pcode IN ('R3', 'D261')) AS distinct_actors_with_surname_codes FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id WHERE ml.link_type_id IN (10, 17, 8, 4) AND ml.linked_movie_id IN (18308, 2451963, 244970, 615863, 1221214, 2112428) AND EXISTS (SELECT 1 FROM movie_companies WHERE movie_id = ml.movie_id AND company_type_id = 1) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT k.keyword, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(a.production_year) AS avg_production_year, COUNT(DISTINCT ci.person_id) AS actor_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS lead_roles, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS supporting_roles FROM keyword k JOIN cast_info ci ON ci.movie_id = k.id JOIN aka_title a ON a.movie_id = ci.movie_id WHERE k.id IN (9469, 4548, 8976, 5594, 8711) GROUP BY k.keyword ORDER BY movie_count DESC, avg_production_year DESC;
SELECT ct.kind AS company_kind, AVG(mc.id) AS average_movie_company_id, COUNT(DISTINCT k.id) AS total_distinct_keywords, SUM(CASE WHEN at.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000, COUNT(DISTINCT rt.id) AS total_distinct_roles FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN keyword AS k ON k.id = ml.id JOIN role_type AS rt ON rt.id = ml.link_type_id GROUP BY ct.kind HAVING COUNT(DISTINCT at.id) > 5;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies_casted, COUNT(DISTINCT cn.id) AS number_of_companies, SUM(CASE WHEN mi.info = 'Color' THEN 1 ELSE 0 END) AS color_movie_count, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM aka_title AS ak JOIN cast_info AS ci ON ak.movie_id = ci.movie_id JOIN company_name AS cn ON cn.md5sum IN ('6596ca830de5c8b7ec94b67c784e1a83', '0ad6c9035d400a497468ec039779ec3a', '6bca80dc1d9813e39427976f934f43bf', '37fac2d56e57bccc911e51e0e7830631', 'f8ebe23c1526539a4a78e7d7a3d8511e') JOIN movie_info_idx AS mi ON ak.movie_id = mi.movie_id AND mi.id = 2825 JOIN movie_link AS ml ON ak.movie_id = ml.movie_id AND ml.link_type_id = 15 WHERE ak.note IN ('(USA) (alternative spelling)', '(Finland: Swedish title) (alternative title)') GROUP BY ak.kind_id;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT akat.movie_id) AS total_movies FROM aka_title AS akat JOIN kind_type AS kt ON akat.kind_id = kt.id LEFT JOIN movie_companies AS mc ON akat.movie_id = mc.movie_id LEFT JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN movie_keyword AS mk ON akat.movie_id = mk.movie_id WHERE akat.production_year IS NOT NULL AND mk.keyword_id = 2464 GROUP BY kt.kind ORDER BY average_production_year DESC, total_us_companies DESC;
SELECT rt.role, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS total_characters, SUM(CASE WHEN mk.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS movie_keyword_count, COUNT(DISTINCT pi.person_id) AS total_persons_with_info FROM role_type rt LEFT JOIN aka_title akat ON rt.id = akat.kind_id LEFT JOIN char_name cn ON cn.name = akat.title LEFT JOIN movie_keyword mk ON mk.movie_id = akat.movie_id LEFT JOIN person_info pi ON pi.info_type_id = rt.id WHERE akat.production_year > 2000 GROUP BY rt.role ORDER BY total_movies DESC, average_production_year DESC;
SELECT COUNT(DISTINCT cn.id) AS unique_character_count, AVG(mi_idx.info::numeric) AS average_movie_info_numeric, SUM(case when lt.id = '7' then 1 else 0 end) AS total_remake_links, MAX(cn.name) AS last_character_name_alphabetically FROM char_name cn JOIN complete_cast cc ON cn.id = cc.subject_id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id JOIN link_type lt ON lt.id = cc.status_id WHERE cn.surname_pcode IN ('S362', 'S246') AND mi_idx.info SIMILAR TO '%[0-9]+%' AND cc.movie_id IN ('1635482', '1626761', '96348', '52977') AND mi_idx.id IN ('268', '1318', '4406', '2884', '1174') AND lt.link IN ('remake of', 'spin off from', 'similar to', 'featured in') GROUP BY cn.surname_pcode;
SELECT t.production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN lt.link = 'spin off' THEN 1 ELSE 0 END) AS spin_off_count, STRING_AGG(DISTINCT cn.name, ', ') AS character_names FROM title t JOIN cast_info ci ON ci.movie_id = t.id LEFT JOIN char_name cn ON cn.id = ci.person_id LEFT JOIN movie_link ml ON ml.movie_id = t.id LEFT JOIN link_type lt ON lt.id = ml.link_type_id WHERE t.production_year BETWEEN 2000 AND 2010 GROUP BY t.production_year ORDER BY t.production_year;
SELECT mi.info AS Movie_Language, rt.ROLE AS Role_Type, COUNT(DISTINCT ci.person_id) AS Total_People, AVG(ci.nr_order) AS Average_Cast_Order FROM movie_info mi JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN role_type rt ON ci.role_id = rt.id WHERE mi.info IN ('Bosnian', 'Serbian', 'Finnish', 'Greek') GROUP BY mi.info, rt.ROLE ORDER BY Movie_Language, Total_People DESC;
SELECT mc.company_id, COUNT(DISTINCT cc.movie_id) AS total_movies, AVG(mi_idx_numeric.info::NUMERIC) AS average_numeric_info, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS distribution_companies FROM movie_companies AS mc JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN movie_info_idx AS mi_idx_numeric ON mc.movie_id = mi_idx_numeric.movie_id AND mi_idx_numeric.info ~ '^[0-9\.]+$' WHERE mi_idx.info_type_id = 3 GROUP BY mc.company_id HAVING COUNT(DISTINCT cc.movie_id) > 5 ORDER BY total_movies DESC, average_numeric_info DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ml.link_type_id = 9 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT k.id) AS distinct_keywords, COUNT(DISTINCT mi_idx.movie_id) AS movies_with_trivia, MAX(t.production_year) AS latest_movie_year, MIN(t.production_year) AS earliest_movie_year FROM title AS t LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN info_type AS it ON mi_idx.info_type_id = it.id AND it.info = 'trivia' LEFT JOIN keyword AS k ON k.keyword = 'sequel' WHERE t.kind_id IN (SELECT id FROM comp_cast_type WHERE kind IN ('feature', 'tv series')) AND (ml.link_type_id IN (9, 5, 11, 16, 12, 15) OR ml.link_type_id IS NULL) AND (ml.linked_movie_id IN (1606280, 1432513, 1440129, 10552, 453927, 2160552) OR ml.linked_movie_id IS NULL) GROUP BY t.kind_id;
SELECT AVG(CAST(mi.info AS FLOAT)) AS average_rating, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, COUNT(DISTINCT cn.id) AS number_of_companies, cn.country_code FROM movie_info mi JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = mi.movie_id WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND cn.country_code = 'US' GROUP BY cn.country_code;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN a.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_titles, kt.kind AS title_kind, n.gender AS actor_gender FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN name n ON ci.person_id = n.id JOIN aka_title a ON t.id = a.movie_id JOIN (SELECT id, CASE kind_id WHEN 2 THEN 'Feature' WHEN 7 THEN 'TV Movie' ELSE 'Other' END AS kind FROM title) kt ON t.kind_id = kt.id WHERE t.kind_id IN (2, 7) AND a.kind_id IN (6, 4, 3, 1) AND (ci.note LIKE '%(1988)%' OR a.imdb_index IN ('III', 'IV', 'I', 'II')) AND n.name IN ('Anazald, Mark', 'Anderson, Dean', 'Ancevski, Blagoja') GROUP BY kt.kind, n.gender;
SELECT cn.country_code, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(ci.imdb_id) AS average_imdb_id, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_type_1_companies FROM movie_companies AS mc INNER JOIN company_name AS cn ON mc.company_id = cn.id LEFT JOIN name AS ci ON cn.imdb_id = ci.imdb_id WHERE cn.country_code IN ('[dm]', '[mt]', '[ph]', '[gb]', '[kz]', '[cz]') AND mc.note IN ('(1967) (USA) (TV) (original airing)', '(2009-2010) (Switzerland) (TV) (SF1)', '(2006) (Germany) (DVD)') GROUP BY cn.country_code
SELECT AVG(mi_idx.info::NUMERIC) AS average_movie_rating, COUNT(DISTINCT cn.name) AS number_of_production_companies, COUNT(DISTINCT chn.name) AS number_of_unique_character_names, SUM(CASE WHEN mw.movie_id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_movies_with_keywords FROM movie_info_idx AS mi_idx JOIN movie_keyword AS mw ON mi_idx.movie_id = mw.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id JOIN char_name AS chn ON chn.imdb_id = mi_idx.movie_id WHERE mi_idx.info_type_id = 101 AND mw.keyword_id IN (918, 3849, 3998, 3575) AND cn.name_pcode_sf IN ('L1242', 'S5261', 'G6425', 'S621', 'A5356', 'W132') AND chn.name_pcode_nf IN ('H61', 'M5316', 'D36', 'D1363') GROUP BY cn.country_code ORDER BY average_movie_rating DESC;
SELECT c.name AS company_name, c.country_code, kt.kind AS movie_type, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_num.info AS DECIMAL)) AS average_rating, SUM(CASE WHEN mk.keyword_id = 3569 THEN 1 ELSE 0 END) AS count_of_keyword_3569, SUM(CASE WHEN mk.keyword_id = 3677 THEN 1 ELSE 0 END) AS count_of_keyword_3677, COUNT(DISTINCT ml.id) AS number_of_movie_links, COUNT(DISTINCT mi.id) AS number_of_movie_infos FROM company_name c JOIN movie_info mi ON c.imdb_id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON mi.movie_id = ml.movie_id JOIN kind_type kt ON it.id = kt.id LEFT JOIN movie_info mi_num ON mi.movie_id = mi_num.movie_id AND mi_num.info_type_id = ( SELECT id FROM info_type WHERE info = 'rating' ) WHERE c.country_code = 'US' AND it.info = 'countries' AND kt.kind = 'movie' GROUP BY c.name, c.country_code, kt.kind ORDER BY number_of_movies DESC;
SELECT rt.role AS role_type, COUNT(*) AS total_roles, COUNT(DISTINCT cn.id) AS unique_characters, AVG(cn.imdb_id) AS average_imdb_id, SUM(cn.imdb_id) AS total_imdb_id, MAX(k.keyword) AS max_keyword, MIN(k.keyword) AS min_keyword, COUNT(DISTINCT k.id) AS total_unique_keywords FROM role_type rt JOIN char_name cn ON rt.id = cn.id JOIN keyword k ON cn.id = k.id GROUP BY rt.role ORDER BY total_roles DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS alternate_titles_count, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = 'USA' THEN 1 ELSE 0 END) AS usa_production_count, COUNT(DISTINCT ci.person_id) AS distinct_actors_count, COUNT(DISTINCT cn.id) AS distinct_companies_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN cast_info ci ON at.movie_id = ci.movie_id JOIN company_name cn ON cn.id = ci.movie_id WHERE at.production_year > 1990 AND kt.kind IN ('video game', 'tv mini series') AND cn.name IN ('ZETA Productions', 'Trans Atlantic Video', 'Arthur Ziehm', 'Tirrena Film', 'Interfilm', 'Les Films Pelléas') GROUP BY kt.kind ORDER BY usa_production_count DESC, alternate_titles_count DESC;
SELECT t.production_year, ct.kind AS company_type, COUNT(t.id) AS movie_count FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id WHERE cn.country_code IN ('[gb]', '[dk]') AND ct.kind IN ('Distribution', 'Production') GROUP BY t.production_year, ct.kind ORDER BY t.production_year ASC, ct.kind;
SELECT ct.kind as company_type, COUNT(DISTINCT ti.id) as total_titles, AVG(ti.production_year) as average_production_year, SUM(CASE WHEN k.phonetic_code = 'G5641' THEN 1 ELSE 0 END) as count_g5641_keywords, SUM(CASE WHEN k.phonetic_code = 'A61' THEN 1 ELSE 0 END) as count_a61_keywords FROM title ti INNER JOIN movie_info mi ON ti.id = mi.movie_id INNER JOIN info_type it ON mi.info_type_id = it.id INNER JOIN keyword k ON ti.id = k.id INNER JOIN company_type ct ON ct.kind = 'distributors' WHERE it.info IN ('LD quality of source', 'votes distribution', 'LD catalog number', 'locations') AND mi.note IS NOT NULL GROUP BY ct.kind;
SELECT mc.company_id, COUNT(DISTINCT mc.movie_id) AS number_of_movies, cs.status_id, AVG(CAST(pi.info AS FLOAT)) FILTER (WHERE pi.info_type_id = 10) AS average_rating FROM movie_companies AS mc JOIN complete_cast AS cs ON mc.movie_id = cs.movie_id JOIN person_info AS pi ON cs.subject_id = pi.person_id GROUP BY mc.company_id, cs.status_id ORDER BY number_of_movies DESC, average_rating DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, AVG(mc.company_id) AS average_company_id, SUM(mc.company_type_id) AS total_company_types FROM kind_type kt JOIN movie_companies mc ON kt.id = mc.company_type_id JOIN movie_keyword mk ON mc.movie_id = mk.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT AVG(cast_info.nr_order) as average_nr_order, COUNT(DISTINCT cast_info.movie_id) as total_movies, COUNT(DISTINCT person_info.person_id) as total_people_involved, SUM(case when movie_companies.company_id IN (1253, 1225, 1085, 846, 859) then 1 else 0 end) as total_movies_by_selected_companies FROM cast_info JOIN movie_companies ON cast_info.movie_id = movie_companies.movie_id JOIN person_info ON cast_info.person_id = person_info.person_id WHERE cast_info.person_role_id = 181 AND person_info.info LIKE '%(19[789][0-9])%' GROUP BY cast_info.person_role_id;
SELECT rt.ROLE as role_type, COUNT(DISTINCT ci.person_id) as num_people, AVG(ci.nr_order) as average_order, SUM(CASE WHEN lt.link = 'referenced in' THEN 1 ELSE 0 END) as num_referenced_in, COUNT(DISTINCT cc.subject_id) as num_unique_subjects FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id LEFT JOIN link_type lt ON lt.id = cc.status_id WHERE rt.ROLE IN ('actress', 'writer') AND (lt.link = 'referenced in' OR lt.link = 'edited from') GROUP BY rt.ROLE ORDER BY num_people DESC;
SELECT kt.kind AS movie_kind, COUNT(distinct t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified, SUM(CASE WHEN cct.kind = 'crew' THEN 1 ELSE 0 END) AS total_crew, SUM(CASE WHEN cct.kind = 'cast' THEN 1 ELSE 0 END) AS total_cast, COUNT(distinct mk.keyword_id) AS number_of_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN comp_cast_type cct ON t.id = cct.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE kt.id IN (2, 6) AND kt.kind = 'video movie' AND cct.kind IN ('complete+verified', 'crew', 'cast') AND cct.id IN (2, 1, 4, 3) GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS cast_type, AVG(mk.keyword_id) AS average_keyword_id, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT cn.id) AS total_companies, SUM(CASE WHEN ml.linked_movie_id = 1910055 THEN 1 ELSE 0 END) AS count_linked_to_movie_1910055, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id BETWEEN 2 AND 3) AS count_movie_links_type_2_3, COUNT(DISTINCT cn.id) FILTER (WHERE cn.country_code IN ('[lb]', '[cn]', '[na]', '[in]', '[kr]', '[xyu]')) AS count_movies_non_english_speaking_countries FROM comp_cast_type AS ct LEFT JOIN aka_title AS at ON ct.id = at.kind_id LEFT JOIN movie_keyword AS mk ON at.movie_id = mk.movie_id LEFT JOIN company_name AS cn ON cn.name_pcode_nf = 'A6453' LEFT JOIN movie_link AS ml ON at.movie_id = ml.movie_id WHERE ct.id IN (2, 3) AND mk.movie_id IN (18826, 18728, 18726, 12088, 18819, 15536) AND mk.id IN (886, 4673, 4280, 2228, 1485, 4805) GROUP BY ct.kind;
SELECT t.production_year, kt.kind, AVG(LENGTH(t.title)) AS average_title_length, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year IS NOT NULL AND kt.kind IS NOT NULL GROUP BY t.production_year, kt.kind ORDER BY t.production_year DESC, kt.kind;
SELECT t.production_year, COUNT(DISTINCT t.id) as total_movies, AVG(mcc.count_companies) as average_companies_per_movie, SUM(cast_members.total_cast) as total_cast_members FROM title t LEFT JOIN ( SELECT movie_id, COUNT(company_id) as count_companies FROM movie_companies GROUP BY movie_id ) mcc ON mcc.movie_id = t.id LEFT JOIN ( SELECT movie_id, COUNT(id) as total_cast FROM complete_cast GROUP BY movie_id ) cast_members ON cast_members.movie_id = t.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year ORDER BY t.production_year;
SELECT lt.LINK, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'budget') AS total_budget FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN movie_info AS it ON mi.info_type_id = it.id WHERE ml.movie_id IN ('11225', '16185', '8060') OR ml.linked_movie_id IN ('438568', '10238', '2451792', '1949408') AND mi.note IN ('(English subtitles)', '(Original Version)', '(a few lines)', '(Original version)') GROUP BY lt.LINK;
SELECT rt.ROLE, COUNT(mc.movie_id) AS number_of_movies, AVG(alt.production_year) AS average_production_year, SUM(CASE WHEN lt.LINK = 'sequel' THEN 1 ELSE 0 END) AS sequel_count, COUNT(DISTINCT mc.company_id) AS distinct_companies_involved FROM aka_title alt INNER JOIN movie_companies mc ON alt.movie_id = mc.movie_id INNER JOIN link_type lt ON lt.id = alt.kind_id INNER JOIN role_type rt ON rt.id = mc.company_type_id WHERE rt.id IN ('1', '8') GROUP BY rt.ROLE ORDER BY number_of_movies DESC;
SELECT kt.kind, AVG(at.production_year) AS avg_production_year, COUNT(at.id) AS alt_title_count, COUNT(DISTINCT pi.person_id) AS distinct_person_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN person_info pi ON at.movie_id = pi.person_id WHERE kt.kind IN ('tv series', 'video game', 'movie', 'tv movie') GROUP BY kt.kind ORDER BY kt.kind;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_budget, COUNT(DISTINCT at.id) AS number_of_movies, kt.kind AS movie_kind, COUNT(DISTINCT cn.id) AS number_of_companies_involved, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_trivia_info, MAX(at.production_year) AS latest_movie_year FROM movie_info mi INNER JOIN kind_type kt ON kt.id = mi.info_type_id INNER JOIN aka_title at ON at.movie_id = mi.movie_id INNER JOIN movie_info_idx mi_idx ON mi_idx.movie_id = mi.movie_id LEFT JOIN movie_companies mc ON mc.movie_id = mi.movie_id LEFT JOIN comp_cast_type cct ON cct.id = mc.company_type_id LEFT JOIN char_name cn ON cn.id = mc.company_id WHERE mi.info_type_id = 1 AND kt.kind IN ('movie', 'tv series') AND at.production_year BETWEEN 2000 AND 2022 AND mi_idx.info_type_id IN (2, 3) AND cct.kind IN ('complete', 'complete+verified') GROUP BY kt.kind ORDER BY average_budget DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(cn.imdb_id::NUMERIC) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'us' THEN 1 ELSE 0 END) AS num_us_companies, COUNT(DISTINCT cn.id) AS num_companies_involved FROM movie_keyword AS mk JOIN movie_info AS mi ON mk.movie_id = mi.movie_id JOIN kind_type AS kt ON mi.info_type_id = kt.id AND kt.id IN ('2', '3', '4', '5', '6') JOIN company_name AS cn ON mk.movie_id = cn.imdb_id WHERE (mk.keyword_id IN ('3195', '2832', '4019', '2965', '3002') OR mi.info IN ('Albanian', 'Norwegian', 'Ladino', 'Filipino', 'Estonian')) AND cn.name_pcode_nf IN ('R5365', 'C514', 'E5314', 'L532') AND cn.id IN ('23278', '44380', '28077', '6858', '43412', '27250') GROUP BY kt.kind;
SELECT cn.country_code, kt.kind AS title_kind, t.production_year AS year_of_production, COUNT(DISTINCT t.id) AS total_titles, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_names_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_names_count FROM title t INNER JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN company_name cn ON t.id = cn.imdb_id LEFT JOIN name n ON t.id = n.imdb_id WHERE t.production_year IS NOT NULL AND (n.gender = 'M' OR n.gender = 'F') GROUP BY cn.country_code, kt.kind, t.production_year ORDER BY cn.country_code, total_titles DESC, t.production_year DESC;
SELECT lt.LINK AS link_type, COUNT(*) AS total_links, AVG(at.production_year) AS average_production_year, SUM(mc.company_type_id) AS sum_company_types, MIN(n.name) AS earliest_name_entry FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN aka_title AS at ON ml.movie_id = at.movie_id JOIN movie_companies AS mc ON mc.movie_id = at.movie_id JOIN name AS n ON n.imdb_id = ANY(ARRAY[at.movie_id, ml.linked_movie_id]) WHERE lt.id IN ('14', '15', '17', '12') AND mc.company_type_id BETWEEN 1 AND 10 AND n.gender = 'M' GROUP BY lt.LINK ORDER BY total_links DESC, average_production_year;
SELECT ct.kind AS company_type, COUNT(DISTINCT t.id) AS number_of_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_tv_shows, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, MAX(t.episode_nr) AS highest_episode_number FROM company_type AS ct JOIN movie_keyword AS mk ON mk.id IN (736, 2675) JOIN title AS t ON mk.movie_id = t.id WHERE t.md5sum IN ('744ccb1f3edd96cf5612c32621c4791d', '0dc255a0af1364d1a6e0083ec4231290', '468bba8c2823f5f827c055c2915eab8d', 'cfc401143a32c532fb68d85bc9f69635', '70d7d2f9c169c31ae459fa8daa188539') AND t.episode_nr IN (10516, 95, 120, 103, 30, 151) AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY number_of_titles DESC;
SELECT kt.kind AS movie_genre, AVG(mi_idx.note::int) AS average_rating, COUNT(DISTINCT k.id) AS unique_keywords, SUM(CASE WHEN cct.kind = 'complete' THEN 1 ELSE 0 END) AS complete_cast_movies, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS verified_cast_movies FROM movie_info_idx mi_idx JOIN movie_link ml ON mi_idx.movie_id = ml.movie_id JOIN keyword k ON ml.link_type_id = k.id JOIN kind_type kt ON mi_idx.info_type_id = kt.id JOIN complete_cast cc ON mi_idx.movie_id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id WHERE kt.kind IN ('drama', 'comedy', 'action') AND mi_idx.info LIKE '%rating%' AND k.keyword IN ('epic', 'cult', 'thriller', 'romance') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT t.id) AS total_movies, AVG(t.imdb_id) AS average_imdb_id FROM title AS t JOIN movie_link AS ml ON t.id = ml.movie_id JOIN company_name AS cn ON cn.imdb_id = ml.linked_movie_id JOIN company_type AS ct ON cn.id = ct.id WHERE t.production_year BETWEEN 2010 AND 2020 AND cn.country_code IN ('US', 'GB', 'CA') GROUP BY ct.kind, cn.country_code ORDER BY total_movies DESC, average_imdb_id ASC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, AVG(ci.nr_order) AS average_cast_nr_order, COUNT(DISTINCT ci.person_id) AS total_unique_actors, COUNT(DISTINCT mc.movie_id) AS total_movies, SUM(CASE WHEN it.info = 'languages' THEN 1 ELSE 0 END) AS total_movies_with_languages_info FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_type ct ON mc.company_type_id = ct.id JOIN kind_type kt ON ci.role_id = kt.id JOIN info_type it ON ci.person_role_id = it.id WHERE ci.nr_order IN (35, 54, 23, 1) AND mc.movie_id IN (1542488, 1515644, 1097704) AND kt.id IN (3, 4, 2, 1) AND it.info IN ('taglines', 'languages', 'pictorial') GROUP BY company_kind, movie_kind;
SELECT kt.kind AS movie_type, COUNT(DISTINCT ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_order_of_appearance, COUNT(DISTINCT pi.person_id) AS distinct_actors_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_lead_roles FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id WHERE ci.person_role_id IN (1344, 1214) GROUP BY kt.kind ORDER BY movie_count DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT an.id) AS number_of_aka_names, AVG(cn.imdb_id) AS average_char_imdb_id, SUM(CASE WHEN lt.id IN (5, 7) THEN 1 ELSE 0 END) AS count_link_type_5_or_7 FROM aka_name an JOIN char_name cn ON an.person_id = cn.id JOIN company_type ct ON ct.kind LIKE '%companies' JOIN link_type lt ON lt.id = an.id % 10 WHERE an.person_id = 2704491 AND an.name IN ('Allaudin', 'McKean, Scott', 'Alles, J.') AND cn.id IN ('99259', '3288', '99679', '23104', '45337') AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND lt.id IN (12, 17, 9, 8, 5, 7) GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, AVG(aka_title.production_year) AS average_production_year, COUNT(DISTINCT aka_title.movie_id) AS total_movies, COUNT(DISTINCT movie_companies.company_id) AS total_companies_involved, SUM(case when aka_title.season_nr is not null then 1 else 0 end) AS total_seasons, COUNT(DISTINCT role_type.id) AS total_unique_roles FROM aka_title JOIN kind_type AS kt ON aka_title.kind_id = kt.id JOIN movie_companies ON aka_title.movie_id = movie_companies.movie_id JOIN company_type AS ct ON movie_companies.company_type_id = ct.id JOIN role_type ON role_type.id = movie_companies.company_id WHERE ct.kind = 'production companies' AND role_type.role IN ('guest', 'writer', 'miscellaneous crew', 'cinematographer') AND aka_title.imdb_index IN ('III', 'IV', 'I', 'II') AND aka_title.production_year BETWEEN 1990 AND 2020 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT ci.movie_id) AS num_movies_casted, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, COUNT(DISTINCT k.id) AS unique_keywords FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN cast_info AS ci ON ci.movie_id = mc.movie_id LEFT JOIN keyword AS k ON k.id = at.movie_id WHERE mc.note LIKE '%(20%)%' AND ci.nr_order IN (44, 146, 15, 7, 47) AND ci.role_id = 1 AND at.movie_id IN (879100, 610270, 1241825, 1678396, 1699805, 549252) GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mc.company_id AS NUMERIC)) AS average_company_id, SUM(kw.keyword_id) AS total_keyword_usage FROM kind_type kt JOIN movie_companies mc ON kt.id = mc.company_type_id JOIN movie_keyword kw ON mc.movie_id = kw.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, cct.kind AS company_type, MIN(cn.name) AS company_name, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors FROM movie_companies AS mc JOIN title AS t ON mc.movie_id = t.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN comp_cast_type AS cct ON mc.company_type_id = cct.id LEFT JOIN name AS n ON n.md5sum = mc.note WHERE cn.country_code NOT LIKE '[pl]' AND t.production_year BETWEEN 1950 AND 1999 AND t.phonetic_code = 'D323' AND n.name_pcode_nf IN ('N6454', 'I4364', 'O2464', 'D54', 'M3526', 'G6534') GROUP BY cct.kind;
SELECT country_stats.country_code, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies, AVG(cast(mi_idx.info AS FLOAT)) FILTER (WHERE mi_idx.info_type_id = 1) AS average_rating FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id, LATERAL ( SELECT cn.country_code FROM company_name AS cn WHERE mc.company_id = cn.id ) AS country_stats WHERE cn.name_pcode_sf IN ('R5621', 'M4561', 'K352', 'W1432', 'S5253') AND mi_idx.note NOT IN ('a', 'b', 'c') AND mc.note SIMILAR TO '%(\(TV\)|\(Internet\))%' GROUP BY country_stats.country_code ORDER BY number_of_movies DESC, average_rating DESC;
SELECT COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN at.episode_of_id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_episodes, it.info AS info_type_description, COUNT(DISTINCT an.person_id) AS number_of_actors, COUNT(DISTINCT at.movie_id) AS number_of_aka_titles FROM title AS t LEFT JOIN aka_title AS at ON t.id = at.movie_id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN info_type AS it ON mi_idx.info_type_id = it.id LEFT JOIN aka_name AS an ON an.id = mi_idx.movie_id WHERE t.production_year BETWEEN 1990 AND 2020 AND (mi_idx.info_type_id IN (100, 101, 99) OR mi_idx.info IS NOT NULL) AND (at.episode_of_id IN (24960, 8508, 3016, 7633) OR at.episode_of_id IS NULL) AND an.surname_pcode IN ('T653', 'E164', 'H56', 'A526') GROUP BY it.info;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT chn.id) AS total_character_names, COUNT(DISTINCT mi.movie_id) AS total_movies_with_info, AVG(mi.info_type_id) AS average_info_type_id FROM title AS t LEFT JOIN char_name AS chn ON chn.id = t.id LEFT JOIN movie_info_idx AS mi ON mi.movie_id = t.id WHERE t.production_year BETWEEN 1990 AND 2020 AND (t.title LIKE '%Roaring Twenties%' OR t.title LIKE '%Nothing Like Experience%') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT t.kind_id, AVG(CASE WHEN mi.info_type_id = 101 THEN CAST(mi.info AS NUMERIC) ELSE NULL END) AS avg_budget, SUM(CASE WHEN at.title LIKE '%Finnish%' THEN 1 ELSE 0 END) AS finnish_title_count, COUNT(DISTINCT t.id) AS total_movies, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title t LEFT JOIN movie_info mi ON t.id = mi.movie_id LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN complete_cast cc ON t.id = cc.movie_id WHERE (t.kind_id = 2 OR t.kind_id = 7) AND (at.phonetic_code IN ('C4231', 'U4351', 'D5353') OR t.phonetic_code = 'F635') AND (at.season_nr IN (30, 7, 9) OR t.production_year BETWEEN 2005 AND 2015) AND (mi.info = 'Finnish' OR mi.info = 'Serbo-Croatian') GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT kt.kind AS content_type, COUNT(DISTINCT chn.id) AS unique_characters, AVG(comp_cast_type.id) AS average_comp_cast_type_id, COUNT(DISTINCT company_type.id) AS number_of_company_types FROM char_name AS chn JOIN kind_type AS kt ON chn.id = kt.id JOIN comp_cast_type ON chn.id = comp_cast_type.id JOIN company_type ON chn.id = company_type.id WHERE kt.kind IN ('tv movie', 'tv series', 'video game', 'movie', 'episode', 'video movie') AND company_type.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY kt.kind ORDER BY unique_characters DESC, average_comp_cast_type_id;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN title t ON ci.movie_id = t.id JOIN movie_companies mc ON t.id = mc.movie_id WHERE rt.ROLE IN ('director', 'production designer', 'costume designer', 'composer') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT COUNT(DISTINCT cn.id) AS total_characters, AVG(mii.movie_id) AS average_movie_id, SUM(CASE WHEN kt.keyword_id IS NOT NULL THEN 1 ELSE 0 END) AS total_keywords_linked, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, MAX(mii_idx.info) AS max_movie_votes FROM char_name cn LEFT JOIN movie_info_idx mii_idx ON cn.id = mii_idx.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = mii_idx.movie_id LEFT JOIN movie_info_idx mii ON mii.movie_id = cc.movie_id LEFT JOIN keyword k ON k.phonetic_code LIKE 'A%' LEFT JOIN ( SELECT mk.movie_id, mk.keyword_id FROM movie_keyword mk INNER JOIN keyword k ON k.id = mk.keyword_id WHERE k.phonetic_code = 'A323' OR k.phonetic_code = 'B124' ) AS kt ON kt.movie_id = mii.movie_id WHERE cn.name_pcode_nf IN ('C614', 'J525', 'C6346', 'A4152') AND cc.id IN ('2966', '2652', '3214', '2072', '724', '2015') GROUP BY cn.surname_pcode;
SELECT kt.kind AS movie_kind, rt.ROLE AS role_type, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_people, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN rt.ROLE = 'producer' THEN 1 ELSE 0 END) AS total_producers, SUM(CASE WHEN rt.ROLE = 'actor' THEN 1 ELSE 0 END) AS total_actors FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN kind_type kt ON kt.id = (SELECT id FROM kind_type WHERE id = ci.person_role_id) JOIN movie_companies mc ON mc.movie_id = ci.movie_id JOIN company_name cn ON cn.id = mc.company_id WHERE rt.id IN (4, 5) GROUP BY kt.kind, rt.ROLE ORDER BY total_movies DESC, average_cast_position ASC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(n.imdb_id) AS avg_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM movie_companies AS mc JOIN link_type AS lt ON mc.company_type_id = lt.id JOIN name AS n ON mc.movie_id = n.id WHERE mc.company_type_id = 1 AND lt.link IN ('featured in', 'alternate language version of') AND mc.movie_id = 18491 GROUP BY lt.LINK;
SELECT t.title, COUNT(DISTINCT ci.person_id) AS total_cast_members, COUNT(DISTINCT k.id) AS number_of_keywords, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN rt.id = 7 THEN 1 ELSE 0 END) AS number_of_actors, SUM(CASE WHEN rt.id = 9 THEN 1 ELSE 0 END) AS number_of_actresses, SUM(CASE WHEN rt.id = 4 THEN 1 ELSE 0 END) AS number_of_producers, SUM(CASE WHEN rt.id = 6 THEN 1 ELSE 0 END) AS number_of_directors FROM title AS t JOIN cast_info AS ci ON t.id = ci.movie_id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id WHERE t.production_year > 1990 AND ci.role_id IN (7, 9, 4, 6) AND mc.company_type_id = 2 GROUP BY t.title HAVING COUNT(DISTINCT k.id) > 5 ORDER BY average_production_year DESC, total_cast_members DESC;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, AVG(sub.keyword_count) AS average_keywords, COUNT(DISTINCT mk.movie_id) AS total_movies FROM movie_keyword mk JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) sub ON sub.movie_id = mk.movie_id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM title WHERE id = mk.movie_id LIMIT 1) JOIN movie_companies mc ON mc.movie_id = mk.movie_id JOIN company_type ct ON ct.id = mc.company_type_id WHERE ct.kind = 'production companies' AND kt.kind IN ('movie', 'tv series', 'mini series') AND EXISTS (SELECT 1 FROM title WHERE id = mk.movie_id AND production_year > 2000) GROUP BY ct.kind, kt.kind ORDER BY average_keywords DESC;
SELECT MIN(t.title) AS movie_title, MIN(at.title) AS alternative_title, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_unique_actors, SUM(CASE WHEN t.production_year BETWEEN 1970 AND 1980 THEN 1 ELSE 0 END) AS movies_produced_1970_to_1980, SUM(CASE WHEN t.production_year BETWEEN 1981 AND 1990 THEN 1 ELSE 0 END) AS movies_produced_1981_to_1990, SUM(CASE WHEN t.production_year BETWEEN 1991 AND 2000 THEN 1 ELSE 0 END) AS movies_produced_1991_to_2000 FROM title AS t INNER JOIN aka_title AS at ON t.id = at.movie_id AND at.kind_id IN (1, 3) INNER JOIN cast_info AS ci ON t.id = ci.movie_id WHERE t.production_year IN (1985, 1975, 1950, 1972) GROUP BY t.kind_id HAVING COUNT(DISTINCT ci.person_id) > 10 ORDER BY number_of_movies DESC, average_cast_order;
SELECT n.gender, count(DISTINCT n.id) AS number_of_actors, avg(ci.nr_order) AS average_cast_order, sum(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_leading_roles, count(DISTINCT k.id) AS number_of_unique_keywords, it.info AS info_type, count(DISTINCT ci.movie_id) AS number_of_movies FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN keyword k ON k.phonetic_code = ci.note JOIN info_type it ON ci.person_role_id = it.id WHERE ci.role_id = 1 AND ci.nr_order IN (101, 69) AND n.gender = 'm' AND it.info IN ('essays', 'LD sharpness', 'bottom 10 rank', 'soundtrack', 'magazine cover photo', 'LD color information') GROUP BY n.gender, it.info ORDER BY number_of_actors DESC;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT at.id) AS total_titles, AVG(cc.status_id) AS average_cast_status, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, MAX(at.production_year) AS latest_production_year, MIN(at.production_year) AS earliest_production_year FROM company_name AS cn JOIN aka_title AS at ON cn.id = at.kind_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN person_info AS pi ON cc.subject_id = pi.person_id JOIN keyword AS k ON at.id = k.id WHERE cn.name IN ('Sunset Productions (II)', 'Coming Soon TV', 'Tucker Film', 'Windfall Films', 'NMK') AND k.keyword IN ('lavatory', 'society') AND at.production_year BETWEEN 2000 AND 2023 GROUP BY cn.country_code ORDER BY total_us_companies DESC, latest_production_year DESC;
SELECT AVG(a.production_year) AS average_production_year, COUNT(DISTINCT a.movie_id) AS number_of_movies, SUM(CASE WHEN cct.kind = 'actor' THEN 1 ELSE 0 END) AS total_actors, MAX(mic.info) AS max_movie_info FROM aka_title AS a INNER JOIN complete_cast AS cc ON a.movie_id = cc.movie_id INNER JOIN comp_cast_type AS cct ON cc.subject_id = cct.id INNER JOIN movie_companies AS mc ON a.movie_id = mc.movie_id INNER JOIN movie_info_idx AS mic ON a.movie_id = mic.movie_id WHERE a.production_year > 2000 AND mc.company_id IN (910, 1073) AND mic.info_type_id IN (100, 99) AND (a.season_nr IS NULL OR a.season_nr = 27) AND a.kind_id = 1 GROUP BY a.kind_id HAVING COUNT(DISTINCT a.movie_id) > 10;
SELECT cn.name AS company_name, kt.kind AS movie_kind, (t.production_year / 10) * 10 AS decade, COUNT(t.id) AS movie_count, AVG(t.imdb_id) AS average_imdb_id FROM company_name cn JOIN title t ON cn.imdb_id = t.imdb_id JOIN kind_type kt ON t.kind_id = kt.id WHERE cn.country_code = 'XX' AND t.production_year IS NOT NULL GROUP BY company_name, movie_kind, decade ORDER BY company_name, movie_kind, decade;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(mc.id) AS average_movie_company_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN movie_companies mc ON ci.movie_id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT ct.kind AS cast_type, AVG(production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT cn.id) AS number_of_characters, SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS number_of_credits_with_order FROM cast_info ci JOIN comp_cast_type ct ON ci.person_role_id = ct.id JOIN aka_title at ON ci.movie_id = at.movie_id JOIN char_name cn ON ci.person_id = cn.id WHERE at.kind_id = 1 AND ci.role_id IN (1,2) GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE it.info = 'rating') AS average_rating, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT mi.info) FILTER (WHERE it.info = 'release dates') AS total_release_dates FROM kind_type AS kt JOIN title AS t ON kt.id = t.kind_id JOIN movie_info AS mi ON t.id = mi.movie_id JOIN info_type AS it ON mi.info_type_id = it.id LEFT JOIN movie_keyword AS mk ON t.id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN name AS n ON ci.person_id = n.id WHERE kt.kind IN ('movie', 'tv series', 'video game') AND n.gender = 'm' AND it.id IN ('17', '71', '44', '69', '79', '64') AND mi.id IN ('7266297', '7266302', '7266333', '7267324', '7267795') AND t.production_year BETWEEN 2000 AND 2010 GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, AVG(CAST(an.id AS NUMERIC)) AS average_aka_name_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_based_companies FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN kind_type AS kt ON kt.id = mc.company_type_id LEFT JOIN aka_name AS an ON an.person_id = mc.id WHERE mc.movie_id IN ('23623', '12089', '22009', '20658', '18570', '31165') GROUP BY kt.kind;
SELECT COUNT(DISTINCT ci.movie_id) AS num_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cn.id) AS num_companies, AVG(complete_cast.status_id) AS avg_status_id, SUM(CASE WHEN pi.info_type_id = 19 THEN 1 ELSE 0 END) AS count_info_type_19, SUM(CASE WHEN pi.info_type_id = 20 THEN 1 ELSE 0 END) AS count_info_type_20, COUNT(DISTINCT mk.keyword_id) AS num_keywords FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN company_name cn ON cn.imdb_id = ci.movie_id JOIN complete_cast ON complete_cast.movie_id = ci.movie_id JOIN person_info pi ON pi.person_id = ci.person_id WHERE ci.note NOT LIKE '%(archive footage)%' AND cn.country_code = 'US' AND complete_cast.subject_id = 1 AND (pi.info LIKE '%Stage:%' OR pi.info LIKE '%AIDS%') GROUP BY cn.country_code;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(subquery.keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT CASE WHEN mc.company_type_id = 1 THEN mc.company_id ELSE NULL END) AS type_1_company_count FROM kind_type AS kt LEFT JOIN movie_companies AS mc ON kt.id = mc.company_type_id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id ) AS subquery ON mc.movie_id = subquery.movie_id WHERE kt.kind = 'movie' GROUP BY kt.kind;
SELECT n.gender, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ci.movie_id) AS movies_participated, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN kt.kind = 'movie' THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN kt.kind = 'tv' THEN 1 ELSE 0 END) AS total_tv_shows, MAX(ci.nr_order) AS highest_cast_position, MIN(ci.nr_order) AS lowest_cast_position FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN kind_type kt ON mc.company_type_id = kt.id JOIN name n ON ci.person_id = n.id WHERE ci.note NOT LIKE '%archive footage%' AND n.gender = 'm' GROUP BY n.gender;
SELECT COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.series_years LIKE '1990-1991' THEN 1 ELSE 0 END) AS count_1990_1991_series, COUNT(DISTINCT k.id) AS unique_keywords, lt.LINK AS link_type, AVG(t.episode_nr) AS average_episode_number FROM movie_companies mc JOIN title t ON mc.movie_id = t.id LEFT JOIN keyword k ON t.id = k.id JOIN link_type lt ON lt.id = mc.company_type_id WHERE t.production_year > 1980 AND (t.series_years LIKE '1990-1991' OR t.series_years LIKE '2005-2006') AND mc.company_id IN (SELECT company_id FROM movie_companies WHERE movie_id = 22464) AND lt.id IN (2, 10) GROUP BY lt.LINK ORDER BY number_of_movies DESC;
SELECT kt.kind AS content_type, COUNT(*) AS total_titles, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT cn.country_code) AS unique_country_codes, SUM(CASE WHEN an.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_primary_aka_names FROM kind_type AS kt JOIN company_name AS cn ON cn.id = kt.id LEFT JOIN aka_name AS an ON an.person_id = cn.id WHERE kt.id IN ('4', '3', '5', '6', '1', '2') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT ct.kind AS cast_type, AVG(mi_idx.info::NUMERIC) AS average_rating, COUNT(DISTINCT cc.movie_id) AS total_movies, COUNT(DISTINCT lt.id) AS link_types_count, SUM(CASE WHEN rt.id IN (10, 5, 3, 8, 11, 6) THEN 1 ELSE 0 END) AS specific_role_count FROM complete_cast cc JOIN comp_cast_type ct ON cc.subject_id = ct.id JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 4 JOIN link_type lt ON lt.id IN (3, 8, 10) AND lt.link = 'features' JOIN role_type rt ON rt.id IN (10, 5, 3, 8, 11, 6) JOIN movie_info mi ON mi.movie_id = cc.movie_id WHERE cc.movie_id IN (1642852, 1666892) AND cc.status_id = 1 GROUP BY ct.kind;
SELECT cct.kind AS cast_type_kind, it.info AS info_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS count_of_movies, SUM(CASE WHEN ml.linked_movie_id IS NOT NULL THEN 1 ELSE 0 END) AS sum_of_linked_movies FROM title t JOIN comp_cast_type cct ON t.kind_id = cct.id JOIN complete_cast cc ON t.id = cc.movie_id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE cc.status_id IN ('3', '4') GROUP BY cct.kind, it.info ORDER BY count_of_movies DESC, sum_of_linked_movies DESC;
SELECT mc.company_id, COUNT(DISTINCT cast_info_count.movie_id) AS total_movies, AVG(cast_info_count.nr_actors) AS average_actors_per_movie, SUM(kw_count.total_keywords) AS total_keywords, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 2) AS sequel_links, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 4) AS prequel_links FROM movie_companies mc LEFT JOIN (SELECT movie_id, COUNT(*) AS nr_actors FROM cast_info GROUP BY movie_id) cast_info_count ON mc.movie_id = cast_info_count.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS total_keywords FROM movie_keyword GROUP BY movie_id) kw_count ON mc.movie_id = kw_count.movie_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id WHERE mc.company_id IN (753, 1127, 569) GROUP BY mc.company_id ORDER BY mc.company_id;
SELECT ct.kind AS company_type, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT t.id) AS total_movies, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS feature_film_count, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM title t JOIN movie_companies mc ON t.id = mc.movie_id JOIN company_name cn ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id WHERE mc.movie_id IN ('14798', '11461', '25704', '25878', '18921', '29151') GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT mk.movie_id, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(LENGTH(pi.note)) AS average_note_length, COUNT(DISTINCT lt.id) AS total_distinct_link_types FROM movie_keyword AS mk LEFT JOIN person_info AS pi ON mk.movie_id = pi.person_id LEFT JOIN link_type AS lt ON mk.movie_id = lt.id WHERE mk.keyword_id IN (820, 3672, 3996, 3616, 1099) GROUP BY mk.movie_id ORDER BY total_keywords DESC, average_note_length DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS distinct_keywords_count FROM company_type AS ct JOIN title AS t ON t.kind_id = ct.id LEFT JOIN keyword AS k ON k.phonetic_code = t.phonetic_code WHERE t.production_year IS NOT NULL AND ct.id IN (SELECT kind_id FROM title WHERE id IN (175843, 103199, 50713, 123396, 75890)) GROUP BY ct.kind ORDER BY total_titles DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(k.id) AS average_keyword_id, SUM(CASE WHEN k.keyword = 'personal-stories' THEN 1 ELSE 0 END) AS count_personal_stories, SUM(CASE WHEN k.keyword = 'toyota-starlet' THEN 1 ELSE 0 END) AS count_toyota_starlet FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN keyword AS k ON k.phonetic_code = cn.name_pcode_nf GROUP BY ct.kind ORDER BY number_of_companies DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, AVG(ti.production_year) AS avg_production_year, COUNT(DISTINCT ti.id) AS number_of_movies, COUNT(DISTINCT ci.movie_id) AS number_of_casts, SUM(CASE WHEN mi.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_genre_info FROM title ti JOIN kind_type kt ON ti.kind_id = kt.id LEFT JOIN complete_cast ci ON ti.id = ci.movie_id LEFT JOIN movie_info mi ON ti.id = mi.movie_id WHERE ti.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT cct.kind AS cast_type_kind, AVG(mi_idx.info::numeric) AS average_movie_length, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, COUNT(DISTINCT pi.person_id) AS number_of_people_with_info FROM comp_cast_type cct JOIN movie_info_idx mi_idx ON cct.id = mi_idx.info_type_id JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN person_info pi ON pi.info_type_id = mi_idx.info_type_id WHERE mk.keyword_id IN (3246, 2661, 3786) AND mi_idx.info_type_id = cct.id AND pi.info_type_id = cct.id GROUP BY cct.kind;
SELECT AVG(mc.movie_id) AS average_movie_id, COUNT(DISTINCT mc.company_id) AS total_companies, COUNT(DISTINCT mc.company_type_id) AS total_company_types, kt.link AS link_type_description, COUNT(DISTINCT k.id) FILTER (WHERE k.phonetic_code = 'C5242') AS count_keywords_c5242, COUNT(DISTINCT k.id) FILTER (WHERE k.phonetic_code = 'V352') AS count_keywords_v352, COUNT(DISTINCT n.id) FILTER (WHERE n.gender = 'M') AS count_male_names, COUNT(DISTINCT n.id) FILTER (WHERE n.gender = 'F') AS count_female_names, AVG(n.imdb_id) AS average_imdb_id FROM movie_companies mc JOIN link_type kt ON mc.company_type_id = kt.id JOIN keyword k ON k.id = mc.id JOIN name n ON n.id = mc.id WHERE kt.link IN ('remake of', 'references') GROUP BY kt.link;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN mi.info = 'Color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'Black and White' THEN 1 ELSE 0 END) AS number_of_black_and_white_movies, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM movie_info_idx AS mi_idx JOIN movie_info AS mi ON mi_idx.movie_id = mi.movie_id AND mi_idx.info_type_id = mi.info_type_id JOIN title AS t ON t.id = mi.movie_id JOIN comp_cast_type AS cct ON t.kind_id = cct.id WHERE mi_idx.info_type_id IN ('100', '101') AND mi.info_type_id IN ('100', '101') AND cct.kind = 'complete+verified' GROUP BY cct.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT n.id) AS number_of_people, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_series_episodes, COUNT(DISTINCT at.id) AS number_of_alternate_titles FROM name n JOIN aka_name an ON n.id = an.person_id JOIN title t ON n.id = t.id JOIN aka_title at ON t.id = at.movie_id JOIN company_type ct ON ct.kind = 'production companies' GROUP BY ct.kind;
SELECT rt.ROLE, COUNT(DISTINCT it.id) AS info_type_count, AVG(lt.id) AS average_link_type_id, COUNT(DISTINCT lt.id) AS link_type_count FROM role_type rt LEFT JOIN info_type it ON rt.id = it.id LEFT JOIN link_type lt ON rt.id = lt.id GROUP BY rt.ROLE ORDER BY info_type_count DESC, average_link_type_id ASC;
SELECT rt.ROLE, COUNT(DISTINCT n.id) AS number_of_people, AVG(n.imdb_id) AS average_imdb_id, COUNT(DISTINCT it.id) AS number_of_info_types FROM role_type rt JOIN name n ON n.id = rt.id JOIN info_type it ON it.id = rt.id WHERE n.gender = 'm' AND it.info IN ('LD analog right', 'LD quality of source', 'votes', 'mpaa') GROUP BY rt.ROLE ORDER BY number_of_people DESC, average_imdb_id;
SELECT ct.kind AS company_kind, it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(ti.production_year) AS average_production_year, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'production companies' THEN 1 ELSE 0 END) AS production_companies_count, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'distributors' THEN 1 ELSE 0 END) AS distributors_count, SUM(CASE WHEN ti.kind_id = ct.id AND ct.kind = 'special effects companies' THEN 1 ELSE 0 END) AS special_effects_companies_count, SUM(CASE WHEN mi.note LIKE '%(Ukrainian)%' THEN 1 ELSE 0 END) AS ukrainian_notes_count FROM movie_info mi INNER JOIN info_type it ON mi.info_type_id = it.id INNER JOIN title ti ON mi.movie_id = ti.id INNER JOIN company_type ct ON ti.kind_id = ct.id GROUP BY ct.kind, it.info ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT t.title AS movie_title, ct.kind AS company_type, COUNT(DISTINCT cc.id) AS number_of_complete_casts, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS count_completed_casts, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN company_type AS ct ON ct.kind = 'production companies' JOIN comp_cast_type AS cct ON cc.subject_id = cct.id WHERE t.kind_id = 1 AND cct.kind IN ('complete', 'complete+verified') AND t.production_year BETWEEN 1990 AND 2020 GROUP BY t.title, ct.kind ORDER BY number_of_complete_casts DESC, average_production_year DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(mk.keyword_id) AS total_keyword_mentions, AVG(sub_query.avg_keyword_per_movie) AS average_keywords_per_movie FROM movie_keyword AS mk INNER JOIN keyword AS k ON mk.keyword_id = k.id INNER JOIN info_type AS it ON it.id = ANY(ARRAY[107, 103, 84, 8, 113]) LEFT JOIN (SELECT movie_id, AVG(keyword_count) AS avg_keyword_per_movie FROM (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub_query_1 GROUP BY movie_id) AS sub_query ON mk.movie_id = sub_query.movie_id WHERE mk.id IN (1632, 3030, 4546, 1918, 3771, 1414) AND mk.movie_id IN (15503, 12271, 9141) GROUP BY it.info;
SELECT it.info AS genre, COUNT(mi.movie_id) AS number_of_movies, AVG(LENGTH(mi.info)) AS average_info_length, SUM(CASE WHEN an.name_pcode_cf IN ('A5143', 'F2162', 'B362', 'M2462') THEN 1 ELSE 0 END) AS count_actors_with_pcode FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id LEFT JOIN aka_name an ON an.person_id = mi.movie_id WHERE it.id = 40 AND mi.info IN ('Tagalog', 'Persian') GROUP BY it.info;
SELECT AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(mc.company_id) AS largest_company_id, MIN(t.production_year) AS earliest_production_year, SUM(t.episode_nr) AS total_episodes FROM cast_info AS ci JOIN movie_companies AS mc ON ci.movie_id = mc.movie_id JOIN name AS n ON ci.person_id = n.id JOIN title AS t ON ci.movie_id = t.id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id WHERE ci.role_id = 1 AND n.imdb_index IN ('XI', 'IV', 'IX', 'XVII') AND k.keyword IN ('elevator-stuck-between-floors', 'pregnancy', 'snake', 'slave-owner') AND t.kind_id = 1 GROUP BY t.kind_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS total_actors_with_roles, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT ci.person_id) AS number_of_actors FROM kind_type AS kt JOIN movie_info AS mi ON kt.id = mi.info_type_id JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id JOIN cast_info AS ci ON mi.movie_id = ci.movie_id WHERE kt.kind IN ('animation', 'documentary', 'drama') AND mi.movie_id IN ('15385', '12319', '8904', '2482109', '1214055') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS content_type, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT a.person_id) AS total_individuals, SUM(CASE WHEN t.series_years = '1978-????' THEN 1 ELSE 0 END) AS count_series_from_1978 FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN aka_name AS a ON a.id = t.id LEFT JOIN role_type AS rt ON rt.id = a.id WHERE rt.role = 'editor' AND t.production_year IS NOT NULL GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT lt.LINK, COUNT(mk.id) AS keyword_count, AVG(n.imdb_id) AS average_imdb_id, SUM(n.imdb_id) AS total_imdb_id FROM movie_keyword AS mk JOIN link_type AS lt ON mk.keyword_id = lt.id JOIN name AS n ON mk.movie_id = n.id WHERE mk.keyword_id IN (3778, 3127, 2497, 782, 3628) AND lt.id IN (3, 18, 11, 1, 6) AND n.gender = 'F' GROUP BY lt.LINK ORDER BY keyword_count DESC;
SELECT rt.ROLE AS role_type, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT ci.movie_id) AS movies_count, MIN(t.title) AS earliest_movie_title, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS us_based_companies_count FROM cast_info AS ci JOIN role_type AS rt ON ci.role_id = rt.id JOIN title AS t ON ci.movie_id = t.id JOIN company_name AS cn ON cn.imdb_id = t.imdb_id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY rt.ROLE ORDER BY movies_count DESC, unique_actors DESC;
SELECT t.title AS original_title, COUNT(ak.id) AS alternate_title_count, COUNT(DISTINCT mk.keyword_id) AS keyword_count, AVG(t.production_year) AS average_production_year FROM title t LEFT JOIN aka_title ak ON t.id = ak.movie_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE t.title LIKE '%Crime%' OR t.title LIKE '%Fashion%' GROUP BY t.title ORDER BY alternate_title_count DESC, keyword_count DESC;
SELECT kt.kind as movie_type, COUNT(DISTINCT mk.movie_id) as number_of_movies, COUNT(DISTINCT k.id) as number_of_unique_keywords, STRING_AGG(DISTINCT k.keyword, ', ') as keywords_list FROM kind_type kt JOIN movie_keyword mk ON kt.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id JOIN movie_info mi ON mk.movie_id = mi.movie_id WHERE kt.kind = 'movie' AND mk.id IN ('3186', '2034', '2102', '2766', '2505', '305') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, AVG(mcc.status_id) AS average_status_id, SUM(CASE WHEN mc.note LIKE '%(DVD)%' THEN 1 ELSE 0 END) AS dvd_releases, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS tv_releases, SUM(CASE WHEN mc.note LIKE '%(all media)%' THEN 1 ELSE 0 END) AS all_media_releases, SUM(CASE WHEN mc.note LIKE '%) (UK) %' THEN 1 ELSE 0 END) AS uk_releases, SUM(CASE WHEN mc.note LIKE '%) (USA) %' THEN 1 ELSE 0 END) AS usa_releases FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN complete_cast AS mcc ON mc.movie_id = mcc.movie_id WHERE ct.kind IN ('distributors', 'special effects companies') GROUP BY ct.kind;
SELECT it.info AS info_type, COUNT(*) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.link = 'followed by' THEN 1 ELSE 0 END) AS followed_by_count, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS similar_to_count, SUM(CASE WHEN lt.link = 'unknown link' THEN 1 ELSE 0 END) AS unknown_link_count FROM title t JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id JOIN movie_link ml ON t.id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id WHERE t.production_year > 1990 GROUP BY it.info ORDER BY total_titles DESC, average_production_year;
SELECT ct.kind AS company_type, AVG(cast_info.nr_order) AS average_cast_order, COUNT(DISTINCT aka_title.movie_id) AS unique_movies_count, SUM(CASE WHEN aka_title.note = '(Australia) (subtitle)' THEN 1 ELSE 0 END) AS subtitle_count_australia, COUNT(DISTINCT name.id) AS number_of_actors FROM company_name JOIN company_type ct ON company_name.id = ct.id JOIN cast_info ON cast_info.person_role_id IN (1085, 1377, 785, 931, 155, 1103) JOIN aka_title ON aka_title.movie_id = cast_info.movie_id JOIN name ON name.id = cast_info.person_id LEFT JOIN movie_link ON movie_link.movie_id = aka_title.movie_id AND movie_link.link_type_id = 6 WHERE company_name.md5sum IN ('95cfc537e91c24f4cdc46ebabba6ee92', '61e6938b1d826bba25234363eac1a650') GROUP BY ct.kind;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT ci.id) AS total_actors, AVG(at.production_year) AS average_production_year, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT cn.id) AS total_character_names, COUNT(DISTINCT at.id) AS total_alternative_titles FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN aka_title at ON ci.movie_id = at.movie_id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN char_name cn ON ci.person_id = cn.id WHERE rt.ROLE = 'director' AND mc.company_type_id = 1 AND cn.md5sum IN ('4ddcdcf6282d436a10b411b7016b9fb2', '4e926214a66707706c1fe2bb2f000f18') AND at.note LIKE '%(video box title)%' GROUP BY rt.ROLE;
SELECT cn.country_code, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.movie_id) AS number_of_movies_with_companies, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS status_id_3_count, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS status_id_4_count FROM company_name cn LEFT JOIN movie_companies mc ON cn.id = mc.company_id LEFT JOIN complete_cast cc ON mc.movie_id = cc.movie_id GROUP BY cn.country_code ORDER BY number_of_movies_with_companies DESC;
SELECT it.info AS company_role, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mc.company_id) AS number_of_companies, AVG(CAST(coalesce(an.name_pcode_cf, '0') AS INTEGER)) AS avg_name_code_cf, SUM(CAST(coalesce(an.name_pcode_nf, '0') AS INTEGER)) AS total_name_code_nf FROM movie_companies mc JOIN role_type rt ON mc.company_type_id = rt.id JOIN info_type it ON rt.id = it.id LEFT JOIN aka_name an ON mc.movie_id = an.person_id WHERE mc.id IN (2557, 2170, 250, 4955, 466) GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT rt.role, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_info_numeric_value, SUM(CASE WHEN mi_idx.info_type_id IN (100, 101) THEN 1 ELSE 0 END) AS total_info_100_101_count FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id JOIN role_type rt ON mi.info_type_id = rt.id WHERE rt.id IN (7, 2, 1, 6, 8, 9) AND mi_idx.note IS NOT NULL AND mi_idx.info ~ '^\d+(\.\d+)?$' GROUP BY rt.role ORDER BY number_of_movies DESC, average_info_numeric_value DESC;
SELECT mi_genre.info AS genre, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(cast_member_count) AS avg_cast_members_per_movie, SUM(company_count) AS total_companies_involved FROM movie_info mi_genre INNER JOIN movie_info mi ON mi.movie_id = mi_genre.movie_id AND mi_genre.info_type_id = 1 LEFT JOIN (SELECT movie_id, COUNT(DISTINCT person_id) AS cast_member_count FROM cast_info GROUP BY movie_id) AS ci_sub ON ci_sub.movie_id = mi.movie_id LEFT JOIN (SELECT movie_id, COUNT(DISTINCT company_id) AS company_count FROM movie_companies GROUP BY movie_id) AS mc_sub ON mc_sub.movie_id = mi.movie_id GROUP BY mi_genre.info ORDER BY total_movies DESC, avg_cast_members_per_movie DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, COUNT(DISTINCT at.movie_id) AS unique_movies, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN lt.link = 'alternate language version of' THEN 1 ELSE 0 END) AS alt_lang_versions, SUM(CASE WHEN lt.link = 'version of' THEN 1 ELSE 0 END) AS versions, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS features_count FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN movie_info_idx mii ON at.movie_id = mii.movie_id JOIN link_type lt ON mii.id = lt.id WHERE at.imdb_index = 'IV' AND at.episode_of_id IN ('11942', '6153', '1980', '7480', '8274') AND kt.kind IN ('tv series', 'video movie', 'video game', 'tv mini series') AND mii.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%0..11202%' OR info LIKE '.0..002212') GROUP BY kt.kind;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(n.imdb_id) AS average_imdb_id, MIN(n.name) AS first_alphabetical_actor_name, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS total_actresses, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS total_actors FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN name AS n ON n.id = ml.movie_id OR n.id = ml.linked_movie_id WHERE lt.id IN (8, 6, 13, 10, 16, 7) GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT rt.role, COUNT(DISTINCT cn.id) AS num_characters, COUNT(DISTINCT cc.movie_id) AS num_movies, AVG(mi.info::numeric) AS average_rating, SUM(CASE WHEN mk.keyword_id = 4215 THEN 1 ELSE 0 END) AS count_keyword_4215, SUM(CASE WHEN mk.keyword_id = 3983 THEN 1 ELSE 0 END) AS count_keyword_3983 FROM role_type rt LEFT JOIN char_name cn ON rt.id = cn.id LEFT JOIN complete_cast cc ON cn.id = cc.subject_id LEFT JOIN movie_info mi ON cc.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM movie_info WHERE info = 'rating') LEFT JOIN movie_keyword mk ON cc.movie_id = mk.movie_id WHERE rt.role IN ('actress', 'producer') AND mi.movie_id IN ('925429', '925019') GROUP BY rt.role;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN at.kind_id <> 1 THEN 1 ELSE 0 END) AS number_of_nonfeature_films FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN aka_title at ON mi.movie_id = at.movie_id WHERE it.info IN ('sound mix', 'LD quality program', 'taglines') GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.season_nr IS NOT NULL THEN 1 ELSE 0 END) AS total_seasons, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT cc.id) AS total_complete_cast_records, COUNT(DISTINCT k.id) AS total_unique_keywords FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_companies mc ON at.movie_id = mc.movie_id LEFT JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN keyword k ON k.id = ANY(ARRAY[6884, 9943]) WHERE at.md5sum IN ('44c0080e0912e3ca5d10075839063f1b', 'a5be4ea19dc2872037b2956fcb845de1', 'ec82f287db52c1fe7be3ed79dfb0a06a', '42824af6235a76885dde510273e9d1a7', 'cd3e9be473ea7275bd1b401dce7d08f9', 'c994ea29391a6ac08145be73f75d09ff') GROUP BY kt.kind;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies, AVG(mi_idx.info::numeric) AS average_movie_length, SUM(CASE WHEN an.name = 'Alan, Shane' THEN 1 ELSE 0 END) AS count_alan_shane_movies FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id LEFT JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 3 LEFT JOIN aka_name AS an ON mc.movie_id = an.person_id AND an.name_pcode_nf = 'M2465' WHERE ct.kind IN ('production companies', 'special effects companies') AND mi_idx.note IS NULL GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT COUNT(t.id) AS total_movies, AVG(mi_idx.info::numeric) AS average_rating, SUM(CASE WHEN cn.country_code = '[ch]' THEN 1 ELSE 0 END) AS swiss_produced_movies, SUM(CASE WHEN k.keyword = 'video-tape' THEN 1 ELSE 0 END) AS video_tape_keyword_count, COUNT(DISTINCT cn.name) AS unique_companies_involved FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2010 AND k.keyword IN ('video-tape', 'delta-airlines') AND cn.country_code IN ('[sa]', '[hk]', '[np]', '[ao]', '[ch]', '[do]') AND cn.name_pcode_sf = 'F4623' AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') GROUP BY cn.country_code, k.keyword;
SELECT it.info AS info_category, COUNT(DISTINCT mi.movie_id) AS movie_count, SUM(CASE WHEN mi.note LIKE '%(interviews)%' THEN 1 ELSE 0 END) AS interview_movie_count, SUM(CASE WHEN mi.note LIKE '%(Original version)%' THEN 1 ELSE 0 END) AS original_version_movie_count, COUNT(DISTINCT k.id) AS distinct_keywords_used, AVG(mi.id) AS average_movie_info_id FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE it.id IN (9, 31) AND k.keyword IN ('cobra', 'dinosaur-egg', 'startled', 'paranoia') GROUP BY it.info ORDER BY movie_count DESC;
SELECT kind.kind as cast_type, avg(mi_idx.info::numeric) as average_rating, count(distinct mk.movie_id) as number_of_movies_with_keywords, count(distinct pi.person_id) as number_of_persons_associated, sum(case when at.production_year > 2000 then 1 else 0 end) as movies_after_2000 FROM movie_info_idx mi_idx JOIN info_type it ON mi_idx.info_type_id = it.id AND it.id = 48 JOIN movie_keyword mk ON mi_idx.movie_id = mk.movie_id JOIN aka_title at ON mi_idx.movie_id = at.movie_id JOIN comp_cast_type kind ON at.kind_id = kind.id LEFT JOIN person_info pi ON mi_idx.movie_id = pi.person_id WHERE at.production_year IS NOT NULL AND at.production_year >= 1990 AND mi_idx.info::numeric > 2.0 GROUP BY kind.kind ORDER BY average_rating DESC;
SELECT cct.kind AS cast_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS unique_keywords_count, SUM(CASE WHEN t.kind_id = cct.id AND cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified_titles, COUNT(*) AS total_titles FROM title t LEFT JOIN comp_cast_type cct ON t.kind_id = cct.id LEFT JOIN keyword k ON k.phonetic_code = t.phonetic_code GROUP BY cct.kind ORDER BY total_complete_verified_titles DESC;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, SUM(CAST(mi_idx.info AS INTEGER)) AS total_votes, COUNT(DISTINCT cn.id) AS number_of_characters, MAX(cn.name) AS longest_character_name FROM movie_info mi JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi.info_type_id = mi_idx.info_type_id JOIN char_name cn ON cn.id = mi.id WHERE mi.info_type_id = '4' AND mi_idx.info ~ '^\d+$' AND mi.movie_id IN ('8983', '18800', '19279', '12551') AND cn.name <> 'Clawed Stalker' GROUP BY mi.info_type_id;
SELECT COUNT(DISTINCT n.id) AS number_of_actors, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender != 'm' THEN 1 ELSE 0 END) AS non_male_actors_count, cct.kind AS cast_type, COUNT(DISTINCT t.id) AS number_of_titles, MAX(t.production_year) AS latest_production_year FROM name n JOIN aka_name an ON n.id = an.person_id JOIN complete_cast cc ON n.id = cc.movie_id JOIN comp_cast_type cct ON cc.status_id = cct.id JOIN title t ON cc.movie_id = t.id WHERE cc.status_id IN (3, 4) AND cct.id IN (4, 3, 1) AND n.name_pcode_cf = 'A43' AND n.gender = 'm' GROUP BY cct.kind ORDER BY number_of_actors DESC, average_production_year DESC;
SELECT it.info AS info_category, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, SUM(CASE WHEN mc.company_type_id = 2 THEN 1 ELSE 0 END) AS number_of_distributors, COUNT(DISTINCT pi.person_id) AS number_of_people_involved, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN movie_companies AS mc ON mi_idx.movie_id = mc.movie_id JOIN person_info AS pi ON mi_idx.movie_id = pi.person_id JOIN movie_link AS ml ON mi_idx.movie_id = ml.movie_id WHERE it.id IN (18, 57, 72, 5, 81) AND mc.id = 1085 AND mi_idx.id = 21 AND mc.note IS NOT NULL AND mi_idx.movie_id IN (8975, 19179, 18832, 8413, 9810) GROUP BY it.info ORDER BY number_of_movies DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT t.movie_id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT CASE WHEN kt.kind = 'episode' THEN t.movie_id END) AS total_episodes, COUNT(DISTINCT CASE WHEN kt.kind = 'video game' THEN t.movie_id END) AS total_video_games FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN aka_title t ON mc.movie_id = t.movie_id JOIN kind_type kt ON t.kind_id = kt.id WHERE cn.country_code = '[us]' AND t.production_year > 2000 GROUP BY cn.name ORDER BY total_movies DESC, average_production_year DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(CASE WHEN mi.info = 'color' THEN 1 ELSE 0 END) AS number_of_color_movies, SUM(CASE WHEN mi.info = 'black and white' THEN 1 ELSE 0 END) AS number_of_bw_movies, COUNT(DISTINCT mk.keyword_id) FILTER (WHERE mk.keyword_id IN (4048, 2907, 2882)) AS number_of_specific_keywords FROM company_name cn LEFT JOIN movie_info mi ON mi.movie_id = cn.id LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = mi.movie_id LEFT JOIN info_type it ON it.id = mi_idx.info_type_id LEFT JOIN movie_keyword mk ON mk.movie_id = mi.movie_id LEFT JOIN movie_link ml ON ml.movie_id = mi.movie_id AND ml.link_type_id IN (SELECT id FROM link_type WHERE link IN ('sequel', 'prequel')) WHERE cn.country_code NOT IN ('US', 'CA') AND it.info = 'rating' AND mi.info IN ('color', 'black and white') GROUP BY cn.name, cn.country_code ORDER BY average_rating DESC, number_of_movies DESC;
SELECT n.gender, COUNT(DISTINCT n.id) AS number_of_people, AVG(mi_idx.info::numeric) AS average_movie_rating, SUM(CASE WHEN lt.LINK = 'sequel' THEN 1 ELSE 0 END) AS count_sequel_links, COUNT(DISTINCT k.id) AS number_of_keywords, COUNT(DISTINCT an.id) AS number_of_aka_names FROM name AS n LEFT JOIN aka_name AS an ON n.id = an.person_id LEFT JOIN movie_link AS ml ON ml.movie_id IN (SELECT movie_id FROM movie_info_idx WHERE id IN (1031, 375, 3321, 4177, 537)) LEFT JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN movie_info_idx AS mi_idx ON ml.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id GROUP BY n.gender HAVING COUNT(DISTINCT k.id) > 5 ORDER BY average_movie_rating DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(ml.link_type_id) AS average_link_type_id, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS producer_roles_count, SUM(CASE WHEN rt.role = 'actress' THEN 1 ELSE 0 END) AS actress_roles_count FROM movie_link AS ml JOIN kind_type AS kt ON ml.movie_id = kt.id JOIN role_type AS rt ON ml.link_type_id = rt.id WHERE kt.kind IN ('movie', 'tv mini series', 'episode') AND rt.role IN ('guest', 'cinematographer', 'producer', 'actress') GROUP BY kt.kind;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ct.kind = 'production companies' THEN 1 ELSE 0 END) AS total_production_companies, COUNT(DISTINCT ml.movie_id) AS total_movie_links, SUM(CASE WHEN at.note LIKE '%working title%' THEN 1 ELSE 0 END) AS total_working_titles, AVG(mi_idx.info::NUMERIC) AS average_movie_info_numeric FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info ~ '^\d+(\.\d+)?$' LEFT JOIN movie_link AS ml ON t.id = ml.movie_id LEFT JOIN aka_title AS at ON t.id = at.movie_id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN company_type AS ct ON mc.company_type_id = ct.id WHERE t.production_year BETWEEN 1990 AND 2020 AND (ml.linked_movie_id IN (10537, 19940, 11149) OR ml.movie_id IN (10537, 19940, 11149)) AND mi_idx.movie_id IN (9646, 11233, 12272, 6743) AND at.movie_id IN (1373539, 255849, 1707841, 1665513) GROUP BY ct.kind;
SELECT ct.kind AS company_type, cn.country_code, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT cl.id) AS number_of_movie_links, AVG(pi.person_id) AS average_person_id, SUM(CASE WHEN pi.note SIMILAR TO '%(Erin Chambers|nazir afzal|woodyanders \(qv''s & corrections by A. Nonymous\)|Woodlene Adeyemo|tina ansah)%' THEN 1 ELSE 0 END) AS count_special_notes FROM company_name AS cn JOIN company_type AS ct ON cn.id = ct.id LEFT JOIN movie_link AS cl ON cn.id = cl.movie_id LEFT JOIN char_name AS chn ON chn.name IN ('Lumbard', 'Charlie Graham', 'Der junge Graf', 'Himself - King of Jungle') LEFT JOIN complete_cast AS cc ON cc.movie_id = cl.movie_id LEFT JOIN person_info AS pi ON pi.person_id = chn.id LEFT JOIN name AS n ON n.id = pi.person_id WHERE cn.country_code IN ('[sd]', '[ir]', '[ph]', '[tr]') GROUP BY ct.kind, cn.country_code ORDER BY number_of_companies DESC, average_person_id;
SELECT AVG(CAST(mii.info AS numeric)) AS average_movie_rating, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT pi.person_id) AS number_of_people, SUM(CASE WHEN lt.link = 'version of' THEN 1 ELSE 0 END) AS version_of_count, SUM(CASE WHEN lt.link = 'edited from' THEN 1 ELSE 0 END) AS edited_from_count FROM movie_info_idx AS mii JOIN movie_keyword AS mk ON mii.movie_id = mk.movie_id JOIN person_info AS pi ON pi.info_type_id = mii.info_type_id AND pi.note IN ('Archie York', 'InVerse PR/Infonet', 'E.A.', 'Bobbie Merritt/THE ENTERTAINMENT GROUP') LEFT JOIN link_type AS lt ON lt.id IN (12, 3) WHERE mii.note IS NOT NULL GROUP BY mii.info_type_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ci.person_id) AS count_distinct_actors FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN cast_info ci ON at.movie_id = ci.movie_id AND ci.role_id = (SELECT id FROM role_type WHERE role = 'actor') WHERE at.production_year > 2000 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT t.kind_id, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mi.info = 'Estonian' THEN 1 ELSE 0 END) AS total_estonian_movies, SUM(CASE WHEN mi.info = 'German' THEN 1 ELSE 0 END) AS total_german_movies, SUM(CASE WHEN mi.info = 'Dutch' THEN 1 ELSE 0 END) AS total_dutch_movies, SUM(CASE WHEN mi.info = 'Vietnamese' THEN 1 ELSE 0 END) AS total_vietnamese_movies, SUM(CASE WHEN mi.info = 'Greek' THEN 1 ELSE 0 END) AS total_greek_movies, SUM(CASE WHEN mi.info = 'Croatian' THEN 1 ELSE 0 END) AS total_croatian_movies, COUNT(DISTINCT an.id) AS total_aka_names, COUNT(DISTINCT cc.id) AS total_complete_casts, COUNT(DISTINCT lt.id) AS total_link_types FROM title AS t LEFT JOIN movie_info AS mi ON t.id = mi.movie_id AND mi.info_type_id = '4' LEFT JOIN aka_name AS an ON t.id = an.person_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id AND cc.subject_id = '1' AND cc.status_id IN ('3', '4') LEFT JOIN link_type AS lt ON lt.link IN ('edited into', 'similar to', 'spin off from') GROUP BY t.kind_id;
SELECT COUNT(DISTINCT t.id) AS total_movies, SUM(mc.company_id) AS total_companies_involved, link_typ.LINK AS link_type, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT ml.linked_movie_id) AS total_linked_movies FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id JOIN link_type AS link_typ ON link_typ.id = ml.link_type_id WHERE t.production_year BETWEEN 2000 AND 2020 AND mc.company_type_id = 2 AND link_typ.id IN (3, 10, 6, 15, 11) AND mk.movie_id IN (13936, 8886, 13347, 7802, 15519, 18796) GROUP BY link_typ.LINK ORDER BY total_movies DESC;
SELECT n.gender, COUNT(DISTINCT n.id) AS total_actors, AVG(pi.info::numeric) AS average_salary, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_since_2000, COUNT(DISTINCT an.id) AS alias_count FROM name AS n LEFT JOIN person_info AS pi ON n.id = pi.person_id AND pi.info_type_id = 5 LEFT JOIN aka_name AS an ON n.id = an.person_id JOIN title AS t ON t.production_year IS NOT NULL WHERE n.gender = 'm' AND an.surname_pcode IN ('A314', 'M625', 'A623') AND ( t.md5sum = 'e12660c2276e1be7ab2cedff19318a06' OR t.md5sum = 'ed4e8da1cad9d62090810472bc647ccb' ) GROUP BY n.gender;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ml.linked_movie_id IS NOT NULL THEN 1 ELSE 0 END) AS total_linked_movies FROM aka_title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_link AS ml ON t.movie_id = ml.movie_id JOIN movie_companies AS mc ON t.movie_id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id WHERE t.production_year IN (1995, 1960, 1928, 1896) AND cn.country_code IN ('[no]', '[ao]', '[th]', '[ae]', '[ve]') AND kt.kind IN ('video movie', 'tv series', 'movie') GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT mk.movie_id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(subquery.avg_keyword_count) AS average_keywords_per_movie FROM kind_type kt JOIN movie_keyword mk ON mk.movie_id = kt.id JOIN (SELECT movie_id, AVG(keyword_count) AS avg_keyword_count FROM (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) AS sub GROUP BY movie_id) AS subquery ON subquery.movie_id = mk.movie_id WHERE kt.id IN (4, 3, 7) AND mk.keyword_id = 1463 GROUP BY kt.kind;
SELECT ml.movie_id, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(COUNT(ml.linked_movie_id)) OVER () AS average_links_per_movie, COUNT(DISTINCT mk.keyword_id) AS total_distinct_keywords FROM movie_link AS ml INNER JOIN movie_info AS mi ON ml.movie_id = mi.movie_id INNER JOIN movie_keyword AS mk ON ml.movie_id = mk.movie_id GROUP BY ml.movie_id ORDER BY number_of_linked_movies DESC, total_distinct_keywords DESC;
SELECT it.info AS information_type, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN mc.company_id = 763 THEN 1 ELSE 0 END) AS count_specific_company, COUNT(DISTINCT mc.company_id) AS count_distinct_companies FROM movie_keyword AS mk INNER JOIN movie_companies AS mc ON mk.movie_id = mc.movie_id INNER JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id INNER JOIN info_type AS it ON it.id = mc.company_type_id WHERE cc.status_id BETWEEN 1 AND 5 AND mc.company_id IN (763, 1012, 1500) AND mk.keyword_id BETWEEN 100 AND 200 GROUP BY it.info ORDER BY number_of_movies DESC, average_company_id;
SELECT kt.kind AS movie_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_individuals_involved, SUM(CASE WHEN k.keyword = 'cashing-check' THEN 1 ELSE 0 END) AS cashing_check_keyword_count, SUM(CASE WHEN k.keyword = 'burglar' THEN 1 ELSE 0 END) AS burglar_keyword_count, SUM(CASE WHEN k.keyword = 'found-unconscious' THEN 1 ELSE 0 END) AS found_unconscious_keyword_count FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id WHERE kt.kind IN ('tv movie', 'episode', 'video movie', 'tv mini series') AND t.production_year IS NOT NULL GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind as company_type, avg(at.production_year) as average_production_year, count(distinct at.id) as total_movies, count(distinct ml.movie_id) as total_linked_movies, sum(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) as total_kind_id_3, sum(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) as total_kind_id_4 FROM aka_title at JOIN movie_link ml ON at.movie_id = ml.movie_id JOIN company_type ct ON ml.link_type_id = ct.id WHERE at.kind_id IN (3, 4) AND ml.linked_movie_id IN (766538, 436, 2392833, 1659295, 2490166) AND at.production_year > 2000 GROUP BY ct.kind;
SELECT it.info AS info_type, COUNT(mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS DOUBLE PRECISION)) AS average_info_value, SUM(CAST(mi.info AS DOUBLE PRECISION)) AS total_info_value, rt.ROLE AS role, COUNT(n.id) AS number_of_people FROM movie_info_idx mi JOIN info_type it ON mi.info_type_id = it.id JOIN name n ON n.id = mi.movie_id JOIN role_type rt ON n.id = mi.movie_id WHERE mi.movie_id IN (12235, 14532, 17098, 18783) AND mi.info_type_id IN (SELECT id FROM info_type WHERE info IN ('death date', 'pictorial', 'LD laserdisc title')) AND rt.id IN (3, 11) AND n.name_pcode_cf IN ('A616', 'A5136') GROUP BY it.info, rt.ROLE ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(kt.keyword_count) AS average_keywords_per_movie, MAX(t.production_year) AS latest_production_year, SUM(CASE WHEN ci.person_id IN (1674, 1343) THEN 1 ELSE 0 END) AS appearances_of_selected_actors FROM title t JOIN cast_info ci ON t.id = ci.movie_id JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) kt ON kt.movie_id = t.id WHERE t.episode_of_id IN ('133358', '192556', '167400', '84369') AND t.kind_id != 7 GROUP BY t.production_year ORDER BY latest_production_year DESC;
SELECT ct.kind AS company_kind, AVG(ti.production_year) AS average_production_year, COUNT(*) AS total_movies, SUM(CASE WHEN ml.link_type_id = 10 THEN 1 ELSE 0 END) AS total_sequels, COUNT(DISTINCT n.id) AS distinct_actors FROM title ti INNER JOIN company_type ct ON ti.kind_id = ct.id LEFT JOIN movie_link ml ON ti.id = ml.movie_id AND ml.link_type_id IN (10, 11, 5, 6, 13) LEFT JOIN cast_info ci ON ti.id = ci.movie_id LEFT JOIN name n ON ci.person_id = n.id WHERE ti.production_year BETWEEN 2000 AND 2020 GROUP BY ct.kind ORDER BY total_movies DESC, average_production_year;
SELECT kt.kind, COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(subquery.keyword_count) AS average_keywords_per_movie, COUNT(DISTINCT n.id) AS unique_actors FROM kind_type kt LEFT JOIN movie_info mi ON mi.info_type_id = kt.id LEFT JOIN ( SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count FROM movie_keyword mk GROUP BY mk.movie_id ) AS subquery ON mi.movie_id = subquery.movie_id LEFT JOIN name n ON n.imdb_index = mi.info WHERE n.imdb_index IN ('VII', 'IV', 'X', 'XXII', 'VI') AND mi.info_type_id IN (SELECT id FROM info_type WHERE id IN ('40', '7', '30', '74', '34', '76')) GROUP BY kt.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, COUNT(DISTINCT pi.person_id) AS number_of_people, AVG(subquery.avg_keywords_per_movie) AS average_keywords_per_movie FROM company_type ct JOIN movie_keyword mk ON mk.keyword_id = ct.id JOIN person_info pi ON pi.info_type_id = mk.id LEFT JOIN (SELECT mk1.movie_id, AVG(mk1.keyword_id) AS avg_keywords_per_movie FROM movie_keyword mk1 GROUP BY mk1.movie_id) AS subquery ON mk.movie_id = subquery.movie_id WHERE ct.kind = 'distributors' AND pi.note IN ('TrendEkiD@aol.com', 'maria afsharian', 'InVerse PR/Infonet', 'sam reden', 'Mattias Thuresson', 'Turkajans') AND pi.info = 'White Lake, Michigan, USA' GROUP BY ct.kind;
SELECT ct.kind AS company_category, COUNT(DISTINCT ml.movie_id) AS total_movies_linked, COUNT(DISTINCT akn.person_id) AS distinct_person_count, SUM(CASE WHEN ml.id IN ('3629', '2913', '3444', '4653', '4412', '4422') THEN 1 ELSE 0 END) AS special_movie_links_count FROM movie_link AS ml JOIN company_type AS ct ON ct.kind IN ('special effects companies', 'miscellaneous companies') LEFT JOIN aka_name AS akn ON akn.person_id = ml.movie_id GROUP BY ct.kind;
SELECT ct.kind AS company_type, AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT ak.movie_id) AS number_of_movies, COUNT(DISTINCT cc.subject_id) AS number_of_subjects, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actor_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actor_count, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM aka_title ak JOIN complete_cast cc ON ak.movie_id = cc.movie_id JOIN company_type ct ON ak.kind_id = ct.id JOIN keyword k ON ak.id = k.id JOIN name n ON ak.id = n.id WHERE ak.production_year BETWEEN 2000 AND 2010 AND n.md5sum IN ('660ea0ef9bdefafcda003d019848f703', '6d0c221bb93b310ab2904bdd75c8a442', 'a24f9431335b1461f14ac1933840f6cf', 'afaebb48a6577994f1924c5910d75467', 'e755250c050a467046983653e209cf90', '3978c1bc47a6deab5ab0956b3cb08ada') GROUP BY ct.kind;
SELECT rt.role AS role_type, COUNT(DISTINCT n.id) AS number_of_people, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, COUNT(DISTINCT k.id) AS unique_keywords_used, COUNT(DISTINCT mi.movie_id) AS movies_with_notes FROM name n INNER JOIN role_type rt ON n.id = rt.id INNER JOIN keyword k ON k.phonetic_code IN ('S56', 'S12', 'S1535', 'B4535', 'A25', 'O123') INNER JOIN movie_info mi ON mi.info_type_id = k.id WHERE mi.note IN ('(some dialogue)', '(English subtitles)', '(Original version)', '(English version)') AND n.name_pcode_nf IN ('C4145', 'T641', 'Q5354', 'G6342', 'E2541') AND rt.role IN ('editor', 'director', 'production designer', 'cinematographer', 'miscellaneous crew') AND n.name IN ('Amores, Joaquín', 'Amor, Miguel Ángel', 'Anderson, Damion', 'Amokrane, Mustapha', 'Anderlik, Maddie', 'André, Emmanuel') GROUP BY rt.role;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, SUM(CASE WHEN ct.id = 1 THEN 1 ELSE 0 END) AS count_of_company_type_1, COUNT(DISTINCT cn.id) AS number_of_char_names_with_notable_keywords FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN movie_info AS mi ON t.id = mi.movie_id LEFT JOIN char_name AS cn ON cn.md5sum IN ('b0dc5d03266435f97cebf99921c7e7ac', 'd86327f54be7c284dea0e9dbcfc30d64', 'c36ece9f29aeec8bdb6e41b809e925e7', 'a997ab7b0916b53836f2184145809ded') LEFT JOIN company_type AS ct ON ct.id IN (1, 2, 4) WHERE mi.info_type_id = 4 AND mi.info = 'Vietnamese' AND t.production_year IS NOT NULL GROUP BY ct.id;
SELECT kt.kind AS movie_type, COUNT(t.id) AS total_movies, AVG(t.production_year) AS avg_production_year, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title t JOIN (SELECT id, kind FROM comp_cast_type WHERE kind IN ('director', 'actor')) cct ON t.kind_id = cct.id LEFT JOIN (SELECT id, kind FROM kind_type) kt ON t.kind_id = kt.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(title.production_year) AS average_production_year, COUNT(DISTINCT name.id) AS number_of_actors, COUNT(DISTINCT title.id) AS number_of_movies, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_actors, MAX(title.production_year) AS latest_production_year, MIN(title.production_year) AS earliest_production_year FROM title JOIN aka_title ON title.id = aka_title.movie_id JOIN person_info ON aka_title.movie_id = person_info.person_id JOIN name ON person_info.person_id = name.id WHERE title.production_year BETWEEN 2000 AND 2020 AND name.name_pcode_nf IN ('N4532', 'H6341', 'M2164') GROUP BY title.kind_id HAVING COUNT(DISTINCT title.id) > 10 ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT kt.kind AS movie_kind, AVG(mi.info::numeric) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT an.id) AS total_actors, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_production_companies FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info mi ON t.id = mi.movie_id JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'rating' LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN complete_cast cc ON t.id = cc.movie_id LEFT JOIN complete_cast an ON cc.id = an.id WHERE kt.kind IN ('video game', 'episode', 'tv series', 'tv mini series') AND t.production_year > 2000 GROUP BY kt.kind HAVING AVG(mi.info::numeric) > 5.0 ORDER BY average_rating DESC;
SELECT t.production_year, COUNT(DISTINCT t.id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN t.kind_id = '2' THEN 1 ELSE 0 END) AS number_of_kind_id_2, COUNT(DISTINCT pi.person_id) AS number_of_persons_involved, MAX(t.episode_nr) AS highest_episode_number FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN person_info AS pi ON pi.person_id = mc.company_id WHERE mc.note LIKE '%(TV)%' AND t.production_year BETWEEN 1990 AND 2000 GROUP BY t.production_year ORDER BY t.production_year;
SELECT AVG(mi_numeric.info::numeric) AS average_movie_rating, COUNT(DISTINCT an.person_id) AS unique_actors_count, COUNT(DISTINCT cn.id) AS unique_companies_count, COUNT(DISTINCT cc.movie_id) AS movies_with_complete_cast, SUM(CASE WHEN cn.country_code = '[ch]' THEN 1 ELSE 0 END) AS swiss_companies_count, SUM(CASE WHEN cn.country_code = '[tt]' THEN 1 ELSE 0 END) AS trinidad_companies_count, COUNT(DISTINCT CASE WHEN an.surname_pcode = 'D12' THEN an.person_id ELSE NULL END) AS actors_with_surname_D12 FROM movie_info AS mi_numeric JOIN movie_info AS mi ON mi_numeric.movie_id = mi.movie_id LEFT JOIN aka_name AS an ON mi.movie_id = an.person_id LEFT JOIN company_name AS cn ON cn.imdb_id = mi.movie_id LEFT JOIN complete_cast AS cc ON cc.movie_id = mi.movie_id WHERE mi_numeric.info_type_id = 101 AND mi.info_type_id = 102 AND mi_numeric.info::numeric >= 0 AND (cn.country_code = '[ch]' OR cn.country_code = '[tt]') AND (an.surname_pcode IN ('D12', 'Y52', 'D54', 'K25', 'A625')) GROUP BY mi.movie_id;
SELECT AVG(mc.company_type_id) AS average_company_type, COUNT(DISTINCT mk.movie_id) AS total_movies_with_keywords, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, cn.name AS company_name, k.keyword AS keyword_name, COUNT(DISTINCT ml.link_type_id) AS total_link_types FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_link AS ml ON mc.movie_id = ml.movie_id WHERE cn.name_pcode_nf IN ('L3424', 'T3231', 'J23') AND ml.id IN ('713', '4080', '967', '4313', '3260') AND k.phonetic_code IN ('M5', 'P4162', 'V4514', 'H452') GROUP BY cn.name, k.keyword ORDER BY total_movies_with_keywords DESC, total_us_companies DESC;
SELECT AVG(CAST(pi.info AS numeric)) AS average_rating, COUNT(cc.id) AS total_cast_members, COUNT(DISTINCT at.id) AS total_alternate_titles, SUM(CASE WHEN at.title ILIKE '%love%' THEN 1 ELSE 0 END) AS titles_with_love FROM aka_title at JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN person_info pi ON cc.movie_id = pi.person_id WHERE at.movie_id IN (52294, 98509, 1635723, 1678623) AND pi.info_type_id = 101 GROUP BY at.movie_id;
SELECT t.title, COUNT(DISTINCT mk.keyword_id) AS total_keywords, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, SUM(CASE WHEN mi_idx.info_type_id = 3 THEN 1 ELSE 0 END) AS count_of_type_3_infos FROM title t JOIN movie_info mi ON t.id = mi.movie_id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN movie_keyword mk ON t.id = mk.movie_id LEFT JOIN movie_link ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 AND mi.info_type_id = 101 AND mk.keyword_id IN ('3774', '2749', '3382', '2831', '1138') AND mi_idx.info_type_id IN ('3', '5', '7') GROUP BY t.title ORDER BY average_rating DESC, total_linked_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.season_nr IN ('6', '22', '9', '1') THEN 1 ELSE 0 END) AS total_seasonal_titles, COUNT(DISTINCT ml.movie_id) AS total_movies_with_links, COUNT(DISTINCT pi.person_id) AS total_people_with_info FROM company_type AS ct JOIN movie_companies AS mc ON ct.id = mc.company_type_id LEFT JOIN aka_title AS at ON mc.movie_id = at.movie_id LEFT JOIN movie_link AS ml ON mc.movie_id = ml.movie_id LEFT JOIN person_info AS pi ON pi.person_id = mc.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY total_movies DESC;
SELECT cn.country_code, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(m_link.link_type_id) AS average_link_type_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count FROM company_name cn JOIN movie_companies mc ON cn.id = mc.company_id JOIN movie_link m_link ON mc.movie_id = m_link.movie_id JOIN name n ON n.name_pcode_nf IN ('A6354', 'D1345') WHERE mc.company_type_id = 1 GROUP BY cn.country_code HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY number_of_movies DESC;
SELECT kt.kind, COUNT(DISTINCT cn.id) AS total_characters, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT mi.info) AS distinct_info_count FROM kind_type AS kt LEFT JOIN movie_info_idx AS mi ON mi.info_type_id = kt.id LEFT JOIN char_name AS cn ON cn.imdb_id = mi.movie_id GROUP BY kt.kind ORDER BY total_characters DESC;
SELECT COUNT(DISTINCT akat.id) AS total_alternate_titles, AVG(akat.production_year) AS average_production_year, SUM(CASE WHEN mcomp.company_type_id = 1 THEN 1 ELSE 0 END) AS total_producer_companies, COUNT(DISTINCT k.id) AS total_unique_keywords, COUNT(DISTINCT mlink.movie_id) AS total_linked_movies, COUNT(DISTINCT n.id) AS total_people FROM aka_title AS akat JOIN movie_companies AS mcomp ON akat.movie_id = mcomp.movie_id JOIN movie_link AS mlink ON akat.movie_id = mlink.movie_id JOIN keyword AS k ON akat.movie_id IN (SELECT mk.movie_id FROM movie_keyword AS mk WHERE mk.keyword_id = k.id) JOIN name AS n ON akat.movie_id IN ( SELECT ci.movie_id FROM cast_info AS ci WHERE ci.person_id = n.id ) WHERE akat.kind_id = 1 AND mcomp.company_type_id IN (1, 2, 3) AND mlink.link_type_id IN (13, 15, 12, 2) AND k.id IN ('2959', '4902', '2890') AND n.id IN ('5102', '4144', '5253', '8021', '11905', '4985') GROUP BY mcomp.company_type_id ORDER BY total_producer_companies DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT mk.movie_id) AS number_of_unique_movies, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, COUNT(DISTINCT mi.id) AS total_movie_info_records FROM aka_title at JOIN movie_keyword mk ON at.movie_id = mk.movie_id JOIN movie_info mi ON at.movie_id = mi.movie_id WHERE mi.info_type_id = 4 AND at.production_year IS NOT NULL GROUP BY at.kind_id ORDER BY average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(LENGTH(note)) AS average_note_length, COUNT(DISTINCT cn.id) AS number_of_companies_involved, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, SUM(CASE WHEN ml.link_type_id = '9' THEN 1 ELSE 0 END) AS count_type_9_links, SUM(CASE WHEN ml.link_type_id = '15' THEN 1 ELSE 0 END) AS count_type_15_links, SUM(CASE WHEN ml.link_type_id = '5' THEN 1 ELSE 0 END) AS count_type_5_links, SUM(CASE WHEN ml.link_type_id = '13' THEN 1 ELSE 0 END) AS count_type_13_links FROM kind_type kt LEFT JOIN movie_companies mc ON kt.id = mc.company_type_id LEFT JOIN company_name cn ON mc.company_id = cn.id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(t.id) AS total_movies_produced, AVG(t.production_year) AS average_production_year FROM company_name AS cn JOIN movie_info AS mi ON cn.imdb_id = mi.movie_id JOIN title AS t ON mi.movie_id = t.id GROUP BY cn.name, cn.country_code ORDER BY total_movies_produced DESC, average_production_year DESC;
SELECT t.kind_id, COUNT(t.id) AS title_count, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT it.id) AS info_type_count, COUNT(DISTINCT lt.id) AS link_type_count FROM title t LEFT JOIN info_type it ON it.id IN (69, 110, 74, 23, 112, 97) LEFT JOIN link_type lt ON lt.link = 'alternate language version of' WHERE t.kind_id IN (2, 7) GROUP BY t.kind_id ORDER BY t.kind_id;
SELECT MIN(t.title) AS movie_title, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT n.id) AS total_actors, SUM(CASE WHEN pi.info = 'New Kensington, Pennsylvania, USA' THEN 1 ELSE 0 END) AS actors_from_new_kensington, COUNT(DISTINCT k.id) AS total_keywords_used FROM title AS t JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN name AS n ON cc.subject_id = n.id JOIN person_info AS pi ON n.id = pi.person_id JOIN keyword AS k ON k.phonetic_code = t.phonetic_code WHERE t.imdb_index IN ('V', 'I', 'II') AND n.surname_pcode IN ('A434', 'A414') AND pi.info IN ('New Kensington, Pennsylvania, USA', '5'' 6"', 'Czech Republic') AND pi.note IN ('Bobbie Merritt/THE ENTERTAINMENT GROUP', 'Be Free Films', 'isabelleadriani@yahoo.it', 'Autor', 'Quincy Johnson', 'MSC') GROUP BY t.id;
SELECT kt.kind AS movie_type, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT person_info.person_id) AS total_person_info_entries FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN person_info ON ci.person_id = person_info.person_id WHERE n.surname_pcode IN ('A41', 'A431') AND n.name_pcode_nf IN ('I2154', 'G45') AND t.phonetic_code IN ('A5353', 'M6323', 'B4312', 'U1236') AND ci.note NOT LIKE '%(archive footage)%' GROUP BY kt.kind;
SELECT rt.ROLE, COUNT(DISTINCT ml.movie_id) AS num_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT cn.id) AS num_companies_involved, STRING_AGG(DISTINCT it.info, ', ') AS related_info_types FROM role_type rt JOIN movie_link ml ON ml.link_type_id = rt.id AND ml.linked_movie_id IN (792877, 2127586) JOIN company_name cn ON cn.country_code LIKE '%[us]%' JOIN info_type it ON it.id IN (98, 17, 71, 5) AND it.info LIKE '%rating%' LEFT JOIN movie_info_idx mi_idx ON mi_idx.movie_id = ml.movie_id AND mi_idx.info_type_id = it.id WHERE rt.id IN (6, 7) AND rt.ROLE IN ('actor', 'cinematographer', 'producer') GROUP BY rt.ROLE ORDER BY num_movies DESC, average_rating DESC;
SELECT it.info AS info_type, COUNT(DISTINCT akn.person_id) AS unique_person_count, COUNT(DISTINCT k.id) AS unique_keyword_count, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN k.phonetic_code IN ('S6252', 'C351', 'F2352') THEN 1 ELSE 0 END) AS specific_phonetic_code_count FROM aka_name akn JOIN info_type it ON akn.surname_pcode = it.info JOIN keyword k ON akn.name_pcode_nf = k.phonetic_code JOIN movie_companies mc ON akn.person_id = mc.company_id GROUP BY it.info ORDER BY unique_person_count DESC, unique_keyword_count DESC;
SELECT c.name AS company_name, COUNT(DISTINCT ml.movie_id) AS number_of_linked_movies, AVG(name.imdb_id) AS average_imdb_id, SUM(CASE WHEN name.gender = 'M' THEN 1 ELSE 0 END) AS count_male_actors, SUM(CASE WHEN name.gender = 'F' THEN 1 ELSE 0 END) AS count_female_actors FROM movie_link AS ml JOIN complete_cast AS cc ON cc.movie_id = ml.movie_id JOIN name ON name.id = cc.subject_id JOIN movie_companies AS mc ON mc.movie_id = ml.movie_id JOIN company_name AS c ON c.id = mc.company_id WHERE name.name_pcode_nf IN ('B534', 'A214', 'N6435', 'M243', 'O5254') GROUP BY c.name ORDER BY number_of_linked_movies DESC, average_imdb_id DESC;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS average_production_year, COUNT(ci.person_id) AS total_cast_count, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS actor_count, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS actress_count FROM aka_title AS aka JOIN kind_type AS kt ON aka.kind_id = kt.id JOIN cast_info AS ci ON aka.movie_id = ci.movie_id JOIN movie_info AS mi ON aka.movie_id = mi.movie_id JOIN person_info AS pi ON ci.person_id = pi.person_id WHERE aka.title LIKE '%The Hobbits%' OR aka.id IN (34831, 39506, 43821, 20330) OR mi.movie_id IN (18783, 19260, 8743, 8393) GROUP BY kt.kind ORDER BY average_production_year DESC;
SELECT ct.kind AS company_kind, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS unique_keywords_count, COUNT(DISTINCT at.id) AS alternate_titles_count, SUM(CASE WHEN mic.info_type_id = '100' THEN 1 ELSE 0 END) AS count_info_type_100, SUM(CASE WHEN mic.info_type_id = '101' THEN 1 ELSE 0 END) AS count_info_type_101, SUM(CASE WHEN mic.info_type_id = '99' THEN 1 ELSE 0 END) AS count_info_type_99 FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN movie_info_idx AS mic ON mc.movie_id = mic.movie_id LEFT JOIN keyword AS k ON at.movie_id = k.id WHERE ct.kind = 'miscellaneous companies' AND mc.id IN ('1733', '1292', '472', '1920', '683', '4338') GROUP BY ct.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS movie_count, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords, AVG(CAST(mi.info AS NUMERIC)) AS average_info_numeric_value, SUM(CASE WHEN mi.info LIKE '%...26...2.%' THEN 1 ELSE 0 END) AS pattern_26_info_count, MAX(n.name) AS max_actor_name FROM movie_info_idx mi JOIN kind_type kt ON mi.info_type_id = kt.id JOIN movie_keyword mk ON mi.movie_id = mk.movie_id JOIN movie_link ml ON mi.movie_id = ml.movie_id JOIN name n ON ml.movie_id = n.id WHERE kt.kind = 'episode' AND mi.info_type_id IN (100, 101, 99) AND mi.info SIMILAR TO '%(4.2|....001322|0....01313|...26...2.|2.......24|2..2..2.4.)%' AND mk.keyword_id IN (2474, 3652) AND ml.linked_movie_id IN (254369, 1452436, 446227, 989565) AND ml.movie_id IN (20573, 12164, 2661) GROUP BY kt.kind;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT a.id) AS total_alternate_titles, COUNT(DISTINCT n.id) AS total_unique_actors, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequels FROM kind_type kt JOIN aka_title a ON kt.id = a.kind_id JOIN title t ON a.movie_id = t.id JOIN cast_info ci ON t.id = ci.movie_id JOIN name n ON ci.person_id = n.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id = 1 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT ak.id) AS total_alternate_titles, SUM(mc.company_type_id) AS total_company_types, COUNT(DISTINCT pi.person_id) AS total_persons_with_info, COUNT(DISTINCT kc.id) AS total_keywords_used, kt.LINK as link_type FROM aka_title ak JOIN movie_companies mc ON ak.movie_id = mc.movie_id JOIN person_info pi ON ak.movie_id = pi.person_id JOIN keyword kc ON ak.movie_id = kc.id JOIN link_type kt ON kt.id = mc.company_type_id WHERE ak.production_year > 2000 AND kt.LINK IN ('spoofs', 'remake of') AND mc.note IS NOT NULL AND pi.info_type_id BETWEEN 1 AND 5 GROUP BY kt.LINK ORDER BY average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS number_of_male_contributors, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS number_of_female_contributors FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id JOIN name AS n ON mc.company_id = n.id GROUP BY kt.kind HAVING COUNT(DISTINCT mc.movie_id) > 5 ORDER BY number_of_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS num_movies, COUNT(ci.person_id) AS num_performances, AVG(at.production_year) AS avg_production_year, SUM(CASE WHEN k.keyword = 'drama' THEN 1 ELSE 0 END) AS drama_keyword_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN aka_title at ON ci.movie_id = at.movie_id LEFT JOIN (SELECT mk.movie_id, k.keyword FROM movie_keyword mk JOIN keyword k ON mk.keyword_id = k.id) AS k ON ci.movie_id = k.movie_id WHERE rt.id IN ('12', '7', '9', '3') AND ci.person_id IN ('1145', '1200', '1289') AND at.movie_id IN ('19436', '18749', '11251', '18754', '17100') GROUP BY rt.ROLE HAVING COUNT(DISTINCT ci.movie_id) > 1 ORDER BY num_movies DESC, num_performances DESC;
SELECT rt.role AS role, COUNT(DISTINCT an.id) AS num_people, AVG(t.production_year) AS avg_production_year, SUM(CASE WHEN ml.link_type_id = 4 THEN 1 ELSE 0 END) AS num_sequels, COUNT(DISTINCT t.id) AS num_titles FROM role_type rt JOIN aka_name an ON rt.id = an.person_id JOIN title t ON an.person_id = t.id LEFT JOIN movie_link ml ON t.id = ml.movie_id AND ml.link_type_id = 4 WHERE rt.role IN ('composer', 'writer', 'actor', 'costume designer', 'producer', 'actress') AND rt.id IN ('4', '6', '7', '2', '9') AND an.name_pcode_cf IN ('A5314', 'T215', 'W4123', 'A2425', 'C6456') AND t.production_year BETWEEN 2000 AND 2020 GROUP BY rt.role ORDER BY num_people DESC, avg_production_year DESC, num_sequels DESC, num_titles DESC;
SELECT kt.kind AS movie_kind, AVG(CAST(pi.info AS NUMERIC)) AS average_budget, SUM(CASE WHEN mc.company_type_id = '1' THEN 1 ELSE 0 END) AS number_of_producers, COUNT(DISTINCT k.id) AS number_of_unique_keywords FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN person_info AS pi ON mc.movie_id = pi.person_id JOIN keyword AS k ON k.phonetic_code IN ('N3642', 'I', 'N3', 'B6245', 'S5324', 'C6361') WHERE pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget') GROUP BY kt.kind;
SELECT cc.movie_id, COUNT(DISTINCT chn.id) AS number_of_characters, COUNT(DISTINCT cn.id) AS number_of_companies_involved, AVG(cn.country_code::int) AS average_country_code_numeric, SUM(CASE WHEN cn.name = 'Circuit Films' THEN 1 ELSE 0 END) AS count_circuit_films, SUM(CASE WHEN cn.name = 'Wild East Productions' THEN 1 ELSE 0 END) AS count_wild_east_productions, SUM(CASE WHEN cn.name = 'Léo & Compagnie' THEN 1 ELSE 0 END) AS count_leo_and_compagnie, SUM(CASE WHEN cn.name = 'C3Studios' THEN 1 ELSE 0 END) AS count_c3studios, SUM(CASE WHEN cn.name = 'M.A. Marcondes' THEN 1 ELSE 0 END) AS count_ma_marcondes FROM complete_cast cc JOIN char_name chn ON cc.subject_id = chn.id JOIN company_name cn ON cc.movie_id = cn.imdb_id GROUP BY cc.movie_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mk.movie_id) AS number_of_movies, AVG(mk.keyword_id) AS average_keyword_id FROM movie_keyword AS mk INNER JOIN kind_type AS kt ON kt.id = mk.keyword_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT COUNT(DISTINCT akn.id) AS total_aka_names, COUNT(DISTINCT n.id) AS total_names, COUNT(DISTINCT pi.id) AS total_person_infos, AVG(n.imdb_id) AS average_imdb_id, MAX(ct.kind) AS largest_company_type, MIN(k.keyword) AS first_keyword FROM aka_name akn INNER JOIN name n ON akn.person_id = n.id INNER JOIN person_info pi ON n.id = pi.person_id LEFT JOIN company_type ct ON ct.id = pi.info_type_id LEFT JOIN keyword k ON k.phonetic_code = 'M4314' WHERE akn.surname_pcode = 'G235' AND (n.md5sum = '027846e5567882de4f67c71cfac3ae12' OR n.md5sum = 'f3a34ae0735af63ad03a7b5fb923a27e' OR n.md5sum = '073c556aa9cb435efd04b6f217cb153f' OR n.md5sum = '6f661ba1a459d8ee448710953f2f2216' OR n.md5sum = '144786e8a288b6b896bdb277a8bf9155') AND pi.info_type_id IN ('20', '23', '26', '28') GROUP BY k.keyword ORDER BY total_aka_names DESC, total_names DESC, total_person_infos DESC;
SELECT AVG(CAST(mi_idx.info AS numeric)) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS movies_after_2000 FROM title AS t JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE it.info = 'rating' AND cn.country_code IS NOT NULL AND ct.kind <> 'production companies' AND t.kind_id NOT IN (SELECT id FROM comp_cast_type WHERE kind = 'tv series') GROUP BY cn.country_code, ct.kind ORDER BY average_rating DESC, total_movies DESC;
SELECT kt.kind, AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT n.id) AS total_actors, COUNT(DISTINCT k.id) AS total_keywords, COUNT(DISTINCT mc.movie_id) AS total_movies, MIN(mi.info) AS lowest_rating, MAX(mi.info) AS highest_rating FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id JOIN movie_companies AS mc2 ON mc2.movie_id = mc.movie_id JOIN person_info AS mi ON mi.person_id = mc2.company_id AND mi.info_type_id = 101 /* Assuming 101 is the type_id for ratings */ JOIN movie_keyword AS mk ON mk.movie_id = mc.movie_id JOIN keyword AS k ON k.id = mk.keyword_id JOIN cast_info AS ci ON ci.movie_id = mc.movie_id JOIN name AS n ON n.id = ci.person_id WHERE kt.kind = 'production' AND mc.note IS NOT NULL AND mi.info SIMILAR TO '[0-9]+(\.[0-9]+)?' AND mi.info > '0' GROUP BY kt.kind
SELECT ct.kind AS company_type, COUNT(DISTINCT mki.movie_id) AS num_movies, AVG(nk.id) AS average_keyword_id, SUM(CAST(mi.info AS INTEGER)) AS total_movie_budget FROM movie_info_idx AS mi JOIN info_type AS it ON mi.info_type_id = it.id JOIN movie_keyword AS mk ON mi.movie_id = mk.movie_id JOIN keyword AS k ON mk.keyword_id = k.id JOIN movie_keyword AS mki ON mk.movie_id = mki.movie_id JOIN name AS nk ON mi.movie_id = nk.id JOIN company_type AS ct ON mi.movie_id = ct.id WHERE it.info = 'budget' AND nk.md5sum IN ('e15cd3fa3bbc8a9b94815e7c53272e8d', '210114d8aeab34bd1116444c16687fcf') AND mi.note IS NOT NULL AND k.keyword LIKE '%action%' GROUP BY ct.kind;
SELECT kt.kind, COUNT(DISTINCT cn.id) as number_of_companies, COUNT(DISTINCT pi.person_id) as number_of_people, AVG(CASE WHEN pi.note SIMILAR TO '%(Coverland|Chris Hendren|maria afsharian|CelebrityLoop.com)%' THEN CAST(pi.info AS NUMERIC) ELSE NULL END) as average_info_rating, SUM(CASE WHEN kt.kind = 'video movie' THEN 1 ELSE 0 END) as video_movie_count, SUM(CASE WHEN kt.kind = 'tv mini series' THEN 1 ELSE 0 END) as tv_mini_series_count, SUM(CASE WHEN kt.kind = 'video game' THEN 1 ELSE 0 END) as video_game_count FROM company_name cn JOIN kind_type kt ON cn.id = kt.id JOIN person_info pi ON cn.id = pi.person_id WHERE cn.country_code NOT IN ('US', 'GB') AND pi.info_type_id BETWEEN 1 AND 5 AND kt.id IN ('1', '2', '4', '5', '7') GROUP BY kt.kind ORDER BY number_of_companies DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_leading_roles, aka.production_year, mi.info AS movie_genre, AVG(aka.production_year) AS average_alternate_title_year FROM cast_info AS ci JOIN movie_info_idx AS mi ON ci.movie_id = mi.movie_id JOIN aka_title AS aka ON ci.movie_id = aka.movie_id WHERE ci.nr_order IN (200, 43, 31, 92, 117, 48) AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'genre') AND aka.kind_id = 1 AND aka.production_year > 2000 GROUP BY aka.production_year, mi.info ORDER BY aka.production_year DESC, total_actors DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT at.title) AS total_titles, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, AVG(LENGTH(at.title)) AS average_title_length FROM company_name cn LEFT JOIN aka_title at ON cn.id = at.movie_id LEFT JOIN movie_keyword mk ON at.movie_id = mk.movie_id WHERE cn.country_code = 'US' GROUP BY cn.name ORDER BY total_titles DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT at.id) AS total_titles, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN at.production_year >= 2000 THEN 1 ELSE 0 END) AS titles_since_2000, SUM(CASE WHEN at.production_year < 2000 THEN 1 ELSE 0 END) AS titles_before_2000 FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS number_of_characters, AVG(cn.imdb_id) AS average_imdb_id, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, SUM(CASE WHEN mc.note LIKE '%(TV)' THEN 1 ELSE 0 END) AS tv_releases_count, SUM(CASE WHEN mc.note LIKE '%(worldwide)%' THEN 1 ELSE 0 END) AS worldwide_releases_count FROM role_type rt JOIN char_name cn ON cn.id = rt.id JOIN movie_companies mc ON mc.movie_id = cn.id GROUP BY rt.ROLE ORDER BY number_of_characters DESC, number_of_companies_involved DESC;
SELECT COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, AVG(sub.avg_keywords_per_movie) AS average_keywords_per_movie, SUM(sub.keyword_count) AS total_keywords, COUNT(DISTINCT pi.person_id) AS number_of_people_with_info FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN (SELECT mk.movie_id, COUNT(mk.keyword_id) AS keyword_count, AVG(COUNT(mk.keyword_id)) OVER () AS avg_keywords_per_movie FROM movie_keyword AS mk GROUP BY mk.movie_id) AS sub ON mk.movie_id = sub.movie_id LEFT JOIN person_info AS pi ON pi.info = k.keyword WHERE k.phonetic_code IN ('G2532', 'R232');
SELECT cct.kind AS cast_type, COUNT(DISTINCT ci.person_id) AS number_of_actors, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN at.production_year >= 2000 THEN 1 ELSE 0 END) AS films_since_2000, COUNT(DISTINCT at.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year FROM cast_info ci JOIN aka_title at ON ci.movie_id = at.movie_id JOIN comp_cast_type cct ON ci.role_id = cct.id WHERE ci.person_id IN ('1348', '1765', '1800', '1112', '1381', '1614') AND cct.id IN ('3', '4', '2') GROUP BY cct.kind ORDER BY number_of_actors DESC;
SELECT cn.name AS character_name, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT k.keyword) AS unique_keywords, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, SUM(CASE WHEN pi.info_type_id = 3 THEN 1 ELSE 0 END) AS number_of_birthdays_recorded FROM char_name cn LEFT JOIN movie_info_idx mi_idx ON cn.imdb_id = mi_idx.movie_id AND mi_idx.info_type_id = 101 LEFT JOIN movie_keyword mk ON mk.movie_id = mi_idx.movie_id LEFT JOIN keyword k ON k.id = mk.keyword_id LEFT JOIN movie_link ml ON ml.movie_id = mi_idx.movie_id LEFT JOIN person_info pi ON pi.person_id = cn.id AND pi.info_type_id = 3 WHERE cn.md5sum IN ('ad29d0b30522be696e375c0cf52fad0b', 'ca8d2f6f99875f835be5a698310d23a5', 'e195362a34d97e0c055cd5c7275fb81f', '60817b9dbbd1ec43e9d559147a578e08') AND cn.name_pcode_nf IN ('G5146', 'J2525', 'B5', 'K6252') GROUP BY cn.name;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(mi_idx.info::NUMERIC) AS average_rating, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows, COUNT(DISTINCT ci.person_id) AS total_actors, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM title AS t LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 100 LEFT JOIN cast_info AS ci ON t.id = ci.movie_id LEFT JOIN comp_cast_type AS cct ON ci.role_id = cct.id WHERE t.production_year BETWEEN 1990 AND 2020 AND (t.imdb_index = 'V' OR t.imdb_index = 'I' OR t.imdb_index = 'II') AND ci.note IS NOT NULL AND mi_idx.note IS NOT NULL GROUP BY t.kind_id ORDER BY total_movies DESC;
SELECT AVG(CAST(mi_idx.info AS INTEGER)) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT c.name) AS number_of_companies_involved, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS number_of_production_companies, COUNT(DISTINCT cc.movie_id) AS movies_with_complete_cast FROM movie_info_idx mi_idx JOIN movie_companies mc ON mi_idx.movie_id = mc.movie_id JOIN complete_cast cc ON mc.movie_id = cc.movie_id JOIN char_name c ON cc.subject_id = c.id WHERE mi_idx.info_type_id = 101 AND mc.company_type_id = 1 AND mc.movie_id IN ('18480', '19586', '18553', '18572', '20750') AND (cc.movie_id = '1682331' OR cc.movie_id = '1683688') GROUP BY mc.company_type_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT ml.movie_id) AS total_linked_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.production_year > 1990 THEN 1 ELSE 0 END) AS movies_after_1990, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE kt.id IN (2, 4, 6, 3) AND kt.kind IN ('tv mini series', 'video movie') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT mi.info AS genre, COUNT(DISTINCT t.id) AS number_of_movies, AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT p.id) AS number_of_cast_members, SUM(CASE WHEN t.production_year BETWEEN 2000 AND 2010 THEN 1 ELSE 0 END) AS movies_2000_2010 FROM movie_info mi JOIN title t ON mi.movie_id = t.id LEFT JOIN movie_info mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = 4 JOIN complete_cast cc ON t.id = cc.movie_id JOIN person_info p ON cc.subject_id = p.person_id JOIN movie_companies mc ON t.id = mc.movie_id WHERE mi.info_type_id = 3 AND cc.status_id = 1 AND mc.company_type_id = 2 GROUP BY mi.info ORDER BY number_of_movies DESC, average_rating DESC;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, COUNT(DISTINCT pi.person_id) AS total_unique_actors, SUM(CASE WHEN mi.info_type_id = 37 THEN 1 ELSE 0 END) AS total_horror_movies FROM movie_info AS mi INNER JOIN movie_companies AS mc ON mi.movie_id = mc.movie_id INNER JOIN complete_cast AS cc ON mc.movie_id = cc.movie_id INNER JOIN person_info AS pi ON cc.subject_id = pi.person_id AND pi.info_type_id IN ('26', '20', '31', '37') GROUP BY mc.company_id HAVING COUNT(DISTINCT mc.movie_id) > 5 AND COUNT(DISTINCT pi.person_id) > 10 ORDER BY average_movie_length DESC, total_movies_produced DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.note LIKE '%(voice)%' THEN 1 ELSE 0 END) AS number_of_voice_roles, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN movie_link ml ON ci.movie_id = ml.movie_id GROUP BY rt.ROLE HAVING COUNT(DISTINCT ci.person_id) > 50;
SELECT rt.ROLE, COUNT(*) AS total_roles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN t.imdb_index = 'I' THEN 1 ELSE 0 END) AS count_imdb_index_I, SUM(CASE WHEN t.imdb_index = 'II' THEN 1 ELSE 0 END) AS count_imdb_index_II, SUM(CASE WHEN t.imdb_index = 'V' THEN 1 ELSE 0 END) AS count_imdb_index_V, COUNT(DISTINCT t.id) AS unique_titles, COUNT(DISTINCT k.id) AS unique_keywords FROM role_type rt LEFT JOIN char_name cn ON rt.id = cn.id LEFT JOIN movie_keyword mk ON cn.id = mk.keyword_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN title t ON mk.movie_id = t.id WHERE rt.id IN (3, 9, 8, 1, 11) AND t.production_year IS NOT NULL AND ( cn.name_pcode_nf IN ('R13', 'C6456', 'J326', 'R25', 'A3235', 'L6324') OR cn.surname_pcode = 'G16' ) GROUP BY rt.ROLE ORDER BY total_roles DESC;
SELECT COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT kt.kind) AS distinct_kind_types FROM aka_title at INNER JOIN movie_info_idx mi ON at.movie_id = mi.movie_id INNER JOIN kind_type kt ON at.kind_id = kt.id INNER JOIN link_type lt ON mi.info = lt.LINK WHERE kt.kind IN ('tv movie', 'tv series') AND lt.link IN ('follows', 'spoofs') AND at.imdb_index = 'II' GROUP BY kt.kind;
SELECT rt.ROLE, COUNT(DISTINCT ml.movie_id) AS num_movies, AVG(cn.imdb_id) AS avg_imdb_id, COUNT(DISTINCT k.id) AS num_keywords FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN char_name cn ON ci.person_role_id = cn.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN movie_keyword mk ON ml.movie_id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id GROUP BY rt.ROLE ORDER BY num_movies DESC, avg_imdb_id DESC;
SELECT ci.person_id, ci.role_id, COUNT(ci.movie_id) AS total_movies, AVG(ci.nr_order) AS avg_cast_position, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies, COUNT(DISTINCT lt.id) AS unique_link_types FROM cast_info ci LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id LEFT JOIN link_type lt ON ci.person_role_id = lt.id GROUP BY ci.person_id, ci.role_id ORDER BY total_movies DESC, avg_cast_position;
SELECT lt.LINK AS link_type, COUNT(DISTINCT ml.linked_movie_id) AS num_linked_movies, AVG(ml.movie_id) AS avg_movie_id, COUNT(DISTINCT an.person_id) AS num_alternate_names FROM movie_link AS ml INNER JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN aka_name AS an ON ml.movie_id = an.person_id GROUP BY lt.LINK ORDER BY num_linked_movies DESC;
SELECT COUNT(DISTINCT cn.id) AS number_of_characters, AVG(k.id) AS average_keyword_id, SUM(mi.movie_id) AS total_movie_info_movie_ids, mi.info AS movie_info, MAX(cn.name) AS max_character_name FROM char_name cn JOIN movie_info mi ON cn.id = mi.movie_id JOIN keyword k ON k.id = mi.info_type_id GROUP BY mi.info ORDER BY number_of_characters DESC, average_keyword_id;
SELECT ct.kind AS company_type, AVG(cast_info.nr_order) AS average_cast_order, COUNT(DISTINCT aka_title.movie_id) AS number_of_movies, SUM(CASE WHEN complete_cast.status_id = 1 THEN 1 ELSE 0 END) AS number_of_completed_movies, MAX(aka_title.production_year) AS latest_production_year, MIN(aka_title.production_year) AS earliest_production_year FROM movie_companies JOIN company_type AS ct ON movie_companies.company_type_id = ct.id JOIN aka_title ON movie_companies.movie_id = aka_title.movie_id JOIN cast_info ON aka_title.movie_id = cast_info.movie_id LEFT JOIN complete_cast ON aka_title.movie_id = complete_cast.movie_id WHERE cast_info.person_id = 1448 AND complete_cast.id = 2902 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS total_movies_with_complete_cast, AVG(mc.company_id) AS average_company_id, SUM(ml.linked_movie_id) AS total_linked_movie_ids FROM complete_cast cc JOIN kind_type kt ON cc.subject_id = kt.id JOIN movie_companies mc ON cc.movie_id = mc.movie_id JOIN movie_link ml ON cc.movie_id = ml.movie_id WHERE cc.status_id IN (1, 2) AND kt.id IN (1, 2, 5, 3) AND mc.id IN (2678, 1671, 621, 430) AND ml.movie_id IN (20571, 5979, 11130) GROUP BY kt.kind;
SELECT kt.kind, COUNT(DISTINCT at.movie_id) AS num_movies, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT ml.movie_id) AS num_linked_movies, COUNT(DISTINCT cn.id) AS num_companies_involved, SUM(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) AS count_video_movie, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS count_tv_movie FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id LEFT JOIN company_name cn ON cn.id = ANY(ARRAY[68879, 29883]) WHERE kt.id IN (4, 7) AND kt.kind IN ('video movie', 'tv movie') AND ml.linked_movie_id IN (577922, 468657, 898205, 1933962) GROUP BY kt.kind ORDER BY num_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, AVG((n.gender = 'M')::int) AS avg_male_actors, AVG((n.gender = 'F')::int) AS avg_female_actors, SUM(CASE WHEN mi_idx.info_type_id = 1 THEN 1 ELSE 0 END) AS number_of_movies, COUNT(DISTINCT pi.person_id) AS number_of_person_info_entries FROM company_type AS ct JOIN company_name AS cn ON cn.country_code NOT LIKE '[pl]' JOIN movie_info_idx AS mi_idx ON mi_idx.movie_id = cn.id LEFT JOIN person_info AS pi ON pi.info_type_id = mi_idx.info_type_id LEFT JOIN name AS n ON n.id = pi.person_id WHERE cn.name LIKE '%Entertainment%' AND ct.id IN (1, 2, 3) AND n.surname_pcode LIKE 'A4%' GROUP BY ct.kind;
SELECT AVG(pi.info::numeric) AS average_rating, COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT k.id) AS number_of_keywords, COUNT(DISTINCT ml.id) AS number_of_movie_links FROM aka_title AS at JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN link_type AS lt ON ml.link_type_id = lt.id AND lt.id = 16 JOIN company_name AS cn ON cn.md5sum IN ('578fa287906ab94df0273377f2f64716', 'bdfeccb6a71e0ac0218a8e8c30e858c0', 'c60e88006ef709f7ec524d615f01771b') JOIN keyword AS k ON k.keyword IN ('waking-nightmare', 'air') JOIN person_info AS pi ON pi.info_type_id = 1 WHERE at.title IN ('Nino', 'Fafner', 'Der Freund', 'Fifty Thousand Dollar Reward', 'La guerre de 1812') AND at.production_year >= 2000 AND pi.person_id = ANY (SELECT id FROM company_name WHERE country_code = 'US') GROUP BY at.movie_id;
SELECT AVG(acast.cnt) AS average_cast_per_movie, AVG(alink.link_cnt) AS average_links_per_movie, SUM(kw.keyword_count) AS total_keyword_occurrences, COUNT(DISTINCT atitle.movie_id) AS count_distinct_movies FROM (SELECT movie_id, COUNT(*) AS cnt FROM cast_info GROUP BY movie_id) AS acast JOIN aka_title atitle ON acast.movie_id = atitle.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS link_cnt FROM movie_link GROUP BY movie_id) AS alink ON atitle.movie_id = alink.movie_id LEFT JOIN (SELECT movie_id, COUNT(*) AS keyword_count FROM keyword INNER JOIN movie_keyword ON keyword.id = movie_keyword.keyword_id GROUP BY movie_id) AS kw ON atitle.movie_id = kw.movie_id WHERE atitle.production_year IS NOT NULL AND atitle.production_year >= 2000 AND atitle.kind_id = 1 AND (atitle.note LIKE '%(International: English title)%' OR atitle.note LIKE '%(Hong Kong: Mandarin title)%') AND EXISTS (SELECT 1 FROM cast_info WHERE cast_info.movie_id = atitle.movie_id AND person_role_id IN (1210, 1072, 1419)) AND EXISTS (SELECT 1 FROM info_type WHERE id IN (68, 61)) AND EXISTS (SELECT 1 FROM keyword WHERE keyword IN ('assumed-identity', 'midnight-snack', 'dyslexia') AND id IN (SELECT keyword_id FROM movie_keyword WHERE movie_id = atitle.movie_id)) GROUP BY atitle.production_year ORDER BY atitle.production_year DESC;
SELECT COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT n.id) AS total_actors, AVG(mi_idx.info::numeric) AS average_movie_length, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS total_us_companies, COUNT(DISTINCT ml.movie_id) AS total_movies_with_links, MIN(n.name) AS earliest_actor_name FROM company_name AS cn JOIN movie_info AS mi ON cn.id = mi.movie_id JOIN movie_info_idx AS mi_idx ON mi.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 1 JOIN movie_link AS ml ON mi.movie_id = ml.movie_id JOIN name AS n ON n.id = cn.id JOIN aka_name AS an ON n.id = an.person_id WHERE mi.info_type_id = 3 AND an.name_pcode_cf IN ('C6156', 'A2535', 'K1254') AND an.name IN ('McPherson, Robert', 'Albert, Kimson ''Full Nerf''', 'Alonzo, Alicia', 'Alfredsson, Per', 'Allain, Gregg', 'Ackerman, Faith') AND n.gender = 'M' GROUP BY n.name ORDER BY earliest_actor_name ASC;
SELECT ct.kind AS cast_type_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(mi.info_type_id) AS average_info_type_id, COUNT(DISTINCT rt.id) AS distinct_role_types, SUM(CASE WHEN ml.linked_movie_id IN ('2506545', '2342579', '147212', '15711', '1448011') THEN 1 ELSE 0 END) AS linked_movies_count, STRING_AGG(DISTINCT mi.info, ', ') AS movie_languages FROM movie_link AS ml JOIN movie_info AS mi ON ml.movie_id = mi.movie_id JOIN comp_cast_type AS ct ON ml.link_type_id = ct.id JOIN role_type AS rt ON ct.id = rt.id WHERE mi.info IN ('Tatar', 'Arabic', 'Slovenian', 'Mandarin', 'Maori', 'Icelandic') AND rt.role IN ('actor', 'writer', 'miscellaneous crew', 'director') AND mi.id IN ('7270303', '7268889', '7270059', '7267623', '7271071', '7268128') AND ct.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY ct.kind;
SELECT ct.kind AS company_kind, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, COUNT(DISTINCT k.id) AS unique_keywords_count, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count FROM movie_link AS ml JOIN movie_link AS linked_ml ON ml.linked_movie_id = linked_ml.movie_id JOIN keyword AS k ON ml.id = k.id JOIN name AS n ON linked_ml.movie_id = n.id JOIN role_type AS rt ON n.id = rt.id JOIN company_type AS ct ON k.id = ct.id WHERE ct.id = 2 AND n.imdb_index = 'III' AND (n.name_pcode_nf = 'J5234' OR n.name_pcode_nf = 'W6526') GROUP BY ct.kind;
SELECT rt.ROLE, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT at.movie_id) AS movie_count, SUM(unique_name_count) AS unique_names_sum FROM aka_title at JOIN (SELECT id, COUNT(DISTINCT name) as unique_name_count FROM char_name GROUP BY id) cn ON at.movie_id = cn.id JOIN role_type rt ON cn.id = rt.id WHERE at.note IN ('(new title)', '(USA) (working title)') GROUP BY rt.ROLE;
SELECT ct.kind AS cast_type, AVG(mc.company_id) AS average_company_id, SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS count_genre_info, COUNT(DISTINCT k.id) AS unique_keyword_count, MAX(mi.movie_id) AS max_movie_id FROM comp_cast_type ct JOIN complete_cast cc ON ct.id = cc.subject_id JOIN movie_companies mc ON cc.movie_id = mc.movie_id JOIN movie_info mi ON mc.movie_id = mi.movie_id JOIN keyword k ON k.id = ANY(ARRAY[6997, 6526]) WHERE mc.company_type_id BETWEEN 1 AND 5 AND mi.info_type_id IN (1, 2, 3, 4) AND mi.note IS NOT NULL AND cc.status_id IN (SELECT id FROM link_type WHERE id IN (4, 8, 12)) GROUP BY ct.kind ORDER BY unique_keyword_count DESC, average_company_id;
SELECT AVG(nc.name_count) AS average_cast_per_movie, SUM(mc.company_count) AS total_production_companies, COUNT(DISTINCT r.id) AS total_roles, COUNT(DISTINCT m.movie_id) AS total_movies FROM (SELECT c.movie_id, COUNT(*) AS name_count FROM complete_cast AS c WHERE c.status_id IN (3, 4) GROUP BY c.movie_id) AS nc JOIN (SELECT mc.movie_id, COUNT(*) AS company_count FROM movie_companies AS mc WHERE mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') GROUP BY mc.movie_id) AS mc ON nc.movie_id = mc.movie_id JOIN movie_companies AS m ON m.movie_id = nc.movie_id JOIN role_type AS r ON r.id = m.company_type_id WHERE m.movie_id = '30202';
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS movies_participated, AVG(mi_idx.info::numeric) AS average_movie_rating, COUNT(DISTINCT cc.subject_id) AS distinct_subjects_involved, SUM(CASE WHEN it.info = 'LD video quality' THEN 1 ELSE 0 END) AS count_LD_video_quality_movies, SUM(CASE WHEN it.info = 'crazy credits' THEN 1 ELSE 0 END) AS count_crazy_credits_movies FROM name AS n JOIN cast_info AS ci ON n.id = ci.person_id LEFT JOIN movie_info_idx AS mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN complete_cast AS cc ON ci.movie_id = cc.movie_id LEFT JOIN info_type AS it ON mi_idx.info_type_id = it.id WHERE ci.person_id IN (1837, 1344) AND (mi_idx.movie_id IN (8431, 19632, 8488) OR mi_idx.movie_id IS NULL) GROUP BY n.name ORDER BY movies_participated DESC, average_movie_rating DESC;
SELECT c.name AS company_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(k.id) AS average_keyword_id, SUM(CASE WHEN mi.info_type_id = 4 THEN 1 ELSE 0 END) AS count_of_info_type_4, STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords, STRING_AGG(DISTINCT mi.info, ', ') FILTER (WHERE mi.info_type_id = 4) AS movie_info_languages FROM company_name AS c JOIN movie_companies AS mc ON c.id = mc.company_id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id LEFT JOIN keyword AS k ON mk.keyword_id = k.id LEFT JOIN cast_info AS ci ON mc.movie_id = ci.movie_id WHERE c.country_code = '[us]' AND mi.info IN ('Czech', 'Ladino', 'Ukrainian') GROUP BY c.name ORDER BY number_of_movies DESC, average_keyword_id;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT ml.movie_id) AS number_of_movie_links, COUNT(DISTINCT mk.movie_id) AS number_of_movie_keywords, AVG(mi.info_type_id) AS average_info_type_id, SUM(CASE WHEN mc.company_type_id = 1 THEN 1 ELSE 0 END) AS total_production_companies FROM movie_companies AS mc JOIN kind_type AS kt ON mc.company_type_id = kt.id LEFT JOIN movie_link AS ml ON mc.movie_id = ml.movie_id AND ml.link_type_id IN (9, 8, 13) LEFT JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id AND mk.keyword_id = 2926 LEFT JOIN movie_info AS mi ON mc.movie_id = mi.movie_id WHERE mc.note SIMILAR TO '%\([0-9]{4}\) \((USA|Canada|Greece|Australia)\) \((DVD|TV)\)%' AND kt.kind IN ('tv mini series', 'tv movie', 'video game', 'video movie', 'movie', 'episode') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT cn.name AS company_name, cn.country_code, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(cn.imdb_id) AS average_movie_imdb_id, COUNT(DISTINCT k.id) AS total_unique_keywords FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN kind_type kt ON mc.company_type_id = kt.id JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword k ON mi.info = k.keyword WHERE kt.id IN ('5', '2', '4', '1', '7') AND mc.note IN ('(2001-) (USA) (TV)', '(????) (Czech Republic) (TV)') AND mi.movie_id IN ('19232', '19598', '10553', '12245') GROUP BY cn.name, cn.country_code ORDER BY total_movies_produced DESC;
SELECT t.kind_id, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.link = 'featured in' THEN 1 ELSE 0 END) AS featured_in_count, SUM(CASE WHEN lt.link = 'references' THEN 1 ELSE 0 END) AS references_count, SUM(CASE WHEN lt.link = 'spoofed in' THEN 1 ELSE 0 END) AS spoofed_in_count, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS similar_to_count, SUM(CASE WHEN lt.link = 'features' THEN 1 ELSE 0 END) AS features_count, SUM(CASE WHEN lt.link = 'followed by' THEN 1 ELSE 0 END) AS followed_by_count, COUNT(DISTINCT pi.person_id) AS unique_persons_involved, AVG(CASE WHEN pi.info_type_id = 1 THEN CAST(pi.info AS INTEGER) END) AS average_info_type_1, COUNT(DISTINCT CASE WHEN pi.note IS NOT NULL THEN pi.person_id END) AS count_persons_with_notes FROM title AS t JOIN link_type AS lt ON t.kind_id = lt.id LEFT JOIN person_info AS pi ON t.id = pi.person_id GROUP BY t.kind_id ORDER BY total_titles DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.person_id) AS total_people, AVG(CASE WHEN pi.info_type_id = 3 THEN pi.info::NUMERIC ELSE NULL END) AS average_salary, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, SUM(CASE WHEN pi.info LIKE '%(1980s)%' THEN 1 ELSE 0 END) AS eighties_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN person_info pi ON ci.person_id = pi.person_id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = 4 WHERE ci.note NOT LIKE '%(credit only)%' AND n.name_pcode_nf IN ('M2424', 'R5434', 'N6416', 'P5232', 'J2545', 'M6235') GROUP BY rt.ROLE ORDER BY total_people DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, COUNT(DISTINCT mc.company_id) AS total_production_companies, AVG(COUNT(mi.id)) OVER (PARTITION BY mc.movie_id) AS average_info_per_movie FROM movie_companies mc INNER JOIN cast_info ci ON mc.movie_id = ci.movie_id AND ci.role_id = (SELECT id FROM comp_cast_type WHERE kind = 'actor') INNER JOIN movie_info mi ON mc.movie_id = mi.movie_id WHERE mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production companies') GROUP BY mc.movie_id;
SELECT ct.kind AS company_kind, AVG(mi_idx.info::NUMERIC) AS average_movie_length, COUNT(DISTINCT ch_name.id) AS unique_character_count, COUNT(DISTINCT cn_name.id) AS unique_company_count, SUM(CASE WHEN ml.link_type_id = 2 THEN 1 ELSE 0 END) AS sequel_link_count FROM movie_info_idx AS mi_idx JOIN company_name AS cn_name ON cn_name.imdb_id = mi_idx.movie_id JOIN company_type AS ct ON cn_name.id = ct.id JOIN char_name AS ch_name ON ch_name.imdb_id = mi_idx.movie_id JOIN movie_link AS ml ON ml.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = 1 AND ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND ch_name.name IN ('Dr. Carlos Ventura', 'John Hartman Jr.', 'Paw Slawson', 'Pera', 'The Jester', 'Guitarist') GROUP BY ct.kind;
SELECT COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE it.info = 'rating') AS average_rating FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id WHERE it.info = 'rating' AND mi.info ~ '^[0-9]+(\.[0-9]+)?$';
SELECT t.title AS Movie_Title, t.production_year AS Production_Year, COUNT(DISTINCT mk.keyword_id) AS Number_of_Keywords, COUNT(DISTINCT mc.company_id) AS Number_of_Companies_Involved, AVG(t.production_year) OVER () AS Average_Production_Year, COUNT(*) OVER () AS Total_Movies_Analyzed FROM title AS t JOIN movie_keyword AS mk ON t.id = mk.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN movie_link AS ml ON t.id = ml.movie_id WHERE ml.link_type_id IN ('12', '11', '13', '6') AND t.series_years IN ('1985-????', '2004-????', '2013-????', '1988-????', '2010-2010') AND t.production_year > (SELECT AVG(production_year) FROM title) GROUP BY t.id HAVING COUNT(DISTINCT mk.keyword_id) > 5 ORDER BY Number_of_Keywords DESC, Production_Year DESC;
SELECT cn.name AS company_name, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.movie_id) AS number_of_movies, COUNT(DISTINCT an.person_id) AS unique_actors FROM company_name AS cn JOIN aka_title AS at ON at.title = cn.name LEFT JOIN aka_name AS an ON an.name = at.title GROUP BY cn.name HAVING COUNT(DISTINCT at.movie_id) > 5 ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT t.title AS movie_title, COUNT(DISTINCT mi.id) AS info_count, AVG(CAST(mi.info AS NUMERIC)) FILTER (WHERE it.info = 'rating') AS average_rating, SUM(mc.company_id) FILTER (WHERE mc.company_type_id = 1) AS sum_production_companies, COUNT(DISTINCT cc.id) AS cast_count, MAX(t.production_year) AS latest_production_year FROM title AS t JOIN movie_info AS mi ON t.id = mi.movie_id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN complete_cast AS cc ON t.id = cc.movie_id JOIN info_type AS it ON mi.info_type_id = it.id WHERE t.production_year > 1990 AND (mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'rating' OR info = 'countries')) AND mc.company_type_id = 1 AND (mc.note NOT LIKE '%(USA)%' OR mc.note IS NULL) AND (cc.status_id = 1 OR cc.status_id = 2) GROUP BY t.title ORDER BY average_rating DESC, sum_production_companies DESC LIMIT 10;
SELECT rt.ROLE as role, COUNT(ci.id) as total_cast, AVG(ci.nr_order) as average_order, SUM(case when ci.note LIKE '%(voice:%' THEN 1 ELSE 0 END) as total_voice_roles, cm.name as company_name, cm.country_code as company_country, COUNT(distinct mc.movie_id) as total_movies_produced FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id AND rt.id IN (1, 10, 3, 5, 8, 9) JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN company_name cm ON mc.company_id = cm.id WHERE mc.company_type_id = 1 AND mc.note LIKE '%(USA)%' AND ci.note NOT LIKE '%(credit only)%' GROUP BY role, company_name, company_country ORDER BY total_movies_produced DESC, total_cast DESC;
SELECT ct.kind AS company_type, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT k.id) AS number_of_keywords, SUM(CASE WHEN at.episode_of_id IS NOT NULL THEN 1 ELSE 0 END) AS number_of_episodes, COUNT(DISTINCT n.id) AS number_of_names, COUNT(DISTINCT cc.id) AS number_of_complete_cast_records FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN keyword AS k ON at.id = k.id JOIN name AS n ON at.id = n.id WHERE mc.note LIKE '%(TV)%' AND at.production_year > 1990 AND (at.episode_nr IN (37, 566, 13, 606, 41) OR at.episode_of_id IN (12586, 2536, 13063, 16867, 21471)) GROUP BY ct.kind;
SELECT ct.kind AS company_type, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN t.kind_id = 3 THEN 1 ELSE 0 END) AS number_of_distributors_titles, SUM(CASE WHEN t.kind_id = 4 THEN 1 ELSE 0 END) AS number_of_special_effects_titles FROM title AS t JOIN company_type AS ct ON t.kind_id = ct.id GROUP BY ct.kind HAVING COUNT(DISTINCT t.id) > 0 ORDER BY number_of_titles DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cc.id) AS total_complete_casts, COUNT(DISTINCT ml.id) AS total_movie_links, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS subject_1_cast_count FROM company_type ct LEFT JOIN complete_cast cc ON cc.subject_id = ct.id LEFT JOIN movie_link ml ON ml.movie_id = cc.movie_id GROUP BY ct.kind ORDER BY total_complete_casts DESC;
SELECT AVG(CASE WHEN mi.info_type_id = 101 THEN mi.info::NUMERIC END) AS average_rating, COUNT(DISTINCT ci.movie_id) AS total_movies_with_cast, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_tv_shows FROM title t LEFT JOIN movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = 101 LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN aka_title at ON at.movie_id = t.id LEFT JOIN comp_cast_type cct ON cct.id = t.kind_id LEFT JOIN movie_link ml ON ml.movie_id = t.id LEFT JOIN cast_info ci ON ci.movie_id = t.id WHERE t.production_year BETWEEN 1990 AND 2000 AND (cct.kind = 'cast' OR cct.kind IS NULL) AND (mi.info::NUMERIC > 5 OR mi.info IS NULL) AND mc.movie_id IN ('27126', '18504', '29107', '9067', '19664') AND mc.id IN ('2907', '3863', '4319') AND (at.title LIKE 'äÎÅ×ÎÉË ÕÂÉÊÃÙ' OR at.title IS NULL) AND (mi.note LIKE '%(only a few lines)%' OR mi.note IS NULL) GROUP BY t.kind_id;
SELECT kt.kind, AVG(CAST(mi.info AS numeric)) AS average_rating, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT c.id) AS total_cast_members, SUM(CASE WHEN t.production_year > 2010 THEN 1 ELSE 0 END) AS movies_after_2010, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM title t JOIN kind_type kt ON t.kind_id = kt.id JOIN movie_info mi ON t.id = mi.movie_id JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id JOIN complete_cast c ON t.id = c.movie_id WHERE t.kind_id IN (2, 7) AND mi.info_type_id = (SELECT id FROM movie_info WHERE info = 'rating') AND t.episode_nr IN (332, 104, 36) AND mi_idx.info_type_id IN (SELECT id FROM movie_info_idx WHERE note = 'R') GROUP BY kt.kind ORDER BY average_rating DESC;
SELECT SUM(CASE WHEN ni.gender = 'M' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN ni.gender = 'F' THEN 1 ELSE 0 END) AS female_count, COUNT(DISTINCT mi.movie_id) AS movie_count, COUNT(DISTINCT pi.person_id) AS person_count, AVG(pi.info_type_id) AS avg_info_type_id FROM name ni JOIN movie_info mi ON ni.id = mi.movie_id JOIN person_info pi ON ni.id = pi.person_id GROUP BY ni.gender;
SELECT AVG(CAST(mi.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ci.movie_id) AS number_of_movies, SUM(CASE WHEN k.keyword = 'sugar' THEN 1 ELSE 0 END) AS sugar_keyword_count, SUM(CASE WHEN k.keyword = 'chair' THEN 1 ELSE 0 END) AS chair_keyword_count, COUNT(DISTINCT akn.person_id) AS unique_actors_with_alternate_names, MAX(mi.note) AS longest_note FROM movie_info mi JOIN info_type it ON mi.info_type_id = it.id AND it.info = 'rating' JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id AND k.id IN ('5046', '3865') LEFT JOIN aka_name akn ON ci.person_id = akn.person_id WHERE mi.movie_id IN (SELECT movie_id FROM movie_keyword WHERE keyword_id IN ('5046', '3865')) GROUP BY it.info;
SELECT rt.ROLE, COUNT(ci.id) AS total_casts, AVG(pi.info::numeric) AS average_salary, SUM(CASE WHEN an.name IS NOT NULL THEN 1 ELSE 0 END) AS aliases_count FROM role_type rt LEFT JOIN cast_info ci ON rt.id = ci.role_id LEFT JOIN person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = 6 LEFT JOIN aka_name an ON ci.person_id = an.person_id GROUP BY rt.ROLE ORDER BY total_casts DESC, average_salary DESC;
SELECT kt.kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN mi_idx.info_type_id = 1 THEN 1 ELSE 0 END) AS count_of_info_type_1, AVG(CASE WHEN mi_idx.info_type_id = 1 THEN CAST(mi_idx.info AS FLOAT) ELSE NULL END) AS average_info_value_for_type_1 FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN movie_info_idx mi_idx ON ci.movie_id = mi_idx.movie_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT kt.kind as movie_kind, AVG(t.production_year) as average_production_year, COUNT(DISTINCT t.id) as total_movies, SUM(CASE WHEN at.title IS NOT NULL THEN 1 ELSE 0 END) as total_aka_titles, COUNT(DISTINCT mi_idx.movie_id) as movies_with_info, AVG(CASE WHEN mi_idx.info ~ E'^\\d+(\\.\\d+)?$' THEN CAST(mi_idx.info AS FLOAT) ELSE NULL END) as average_numeric_info FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_title at ON t.id = at.movie_id LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id WHERE t.production_year BETWEEN 2000 AND 2020 GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.role, AVG(mc.company_type_id) AS average_company_type, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS count_main_subject_movies FROM movie_companies mc INNER JOIN movie_keyword mk ON mc.movie_id = mk.movie_id INNER JOIN movie_info_idx mi ON mc.movie_id = mi.movie_id INNER JOIN complete_cast cc ON mc.movie_id = cc.movie_id INNER JOIN role_type rt ON rt.id = cc.subject_id WHERE rt.role IN ('costume designer', 'writer', 'guest', 'editor') AND mc.note IS NOT NULL AND mi.note IS NOT NULL GROUP BY rt.role;
SELECT it.id AS link_type_id, COUNT(DISTINCT ml.movie_id) AS linked_movie_count, AVG(CAST(ml.movie_id AS numeric)) AS average_movie_imdb_id, COUNT(DISTINCT cn.name) AS distinct_character_count FROM movie_link AS ml JOIN char_name AS cn ON cn.imdb_id = ml.movie_id JOIN info_type AS it ON it.id = ml.link_type_id WHERE cn.md5sum IN ( '9c88a1d05f3506772ca5e69f66dc1249', '636fad97342736741e6911a8771502e5', '328bda83d9fc509b059cfde00bcd1636', 'a69ed1d744f3064af88264ac95a13e8f', 'c4f803b9dca9a572c24d55895e9eaf0a' ) AND ml.link_type_id IN ('4', '5', '9', '17') GROUP BY it.id ORDER BY linked_movie_count DESC, average_movie_imdb_id;
SELECT cn.country_code, COUNT(DISTINCT cn.id) AS num_companies, AVG(mi_idx.id) AS avg_movie_info_idx_id, SUM(CASE WHEN mi.info_type_id = mi_idx.info_type_id THEN 1 ELSE 0 END) AS sum_matching_info_types, COUNT(DISTINCT pi.person_id) AS num_people FROM company_name AS cn LEFT JOIN movie_info_idx AS mi_idx ON cn.imdb_id = mi_idx.movie_id LEFT JOIN movie_info AS mi ON mi.movie_id = mi_idx.movie_id LEFT JOIN person_info AS pi ON pi.info_type_id = mi.info_type_id WHERE cn.country_code = '[be]' AND mi_idx.movie_id IN ('925666', '929198', '939783', '925877', '930515', '925116') AND cn.md5sum IN ('6490953d16a7d7a36b9daafe4a9e84b6', 'b68f1bd9708e765d511e6e251f56419a', '11b8906a4c994a2996176bba270124ac', '8eb39544eea1fca12f1a46d1747c807c') GROUP BY cn.country_code;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT ml.movie_id) AS count_of_movies_with_links, COUNT(DISTINCT at.movie_id) AS count_of_alternate_titles, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS count_of_movies, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS count_of_tv_shows, COUNT(DISTINCT k.id) AS count_of_unique_keywords FROM aka_title at LEFT JOIN movie_link ml ON at.movie_id = ml.movie_id LEFT JOIN keyword k ON at.title LIKE CONCAT('%', k.keyword, '%') WHERE at.production_year > 2000 AND (ml.id IN (4856, 1568, 48, 747, 1537, 3901) OR ml.linked_movie_id = 2323856) AND at.episode_nr IN (38, 29, 26, 64, 24) AND k.phonetic_code IS NOT NULL GROUP BY at.kind_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ml.link_type_id = lt.id AND lt.link = 'features' THEN 1 ELSE 0 END) AS total_features_links, COUNT(DISTINCT cn.id) AS number_of_production_companies, AVG(ati.production_year) AS average_production_year_of_akas FROM cast_info ci JOIN kind_type kt ON ci.role_id = kt.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id LEFT JOIN aka_title ati ON ci.movie_id = ati.movie_id LEFT JOIN company_name cn ON ati.movie_id = cn.imdb_id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT AVG(akat.production_year) AS average_movie_year, COUNT(DISTINCT n.id) AS unique_actor_count, COUNT(DISTINCT akat.id) AS total_movie_aliases, SUM(CASE WHEN lt.link = 'remake of' THEN 1 ELSE 0 END) AS total_remake_links, SUM(CASE WHEN lt.link = 'edited from' THEN 1 ELSE 0 END) AS total_edited_from_links FROM aka_title akat JOIN name n ON akat.movie_id = n.id JOIN link_type lt ON lt.id = akat.movie_id WHERE akat.phonetic_code IN ('K2545', 'R5321', 'S1232', 'S3425', 'B5314') AND n.name_pcode_cf IN ('A465', 'A4634', 'A5212', 'A2516', 'A5261', 'A3561') AND akat.production_year BETWEEN 1990 AND 2020 AND n.gender = 'M' GROUP BY n.gender;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_id = 1867 THEN 1 ELSE 0 END) AS total_movies_person_1867, SUM(CASE WHEN ci.person_id = 1769 THEN 1 ELSE 0 END) AS total_movies_person_1769, SUM(CASE WHEN ci.person_id = 1459 THEN 1 ELSE 0 END) AS total_movies_person_1459, COUNT(DISTINCT cn.id) AS total_companies, COUNT(DISTINCT mi.info) AS distinct_movie_info_types FROM kind_type AS kt JOIN movie_info AS mi ON mi.movie_id = kt.id JOIN cast_info AS ci ON ci.movie_id = kt.id JOIN company_name AS cn ON cn.imdb_id = ci.movie_id WHERE kt.kind = 'movie' AND ci.person_id IN (1867, 1769, 1459, 1473, 1640, 1126) AND ci.movie_id IN (152924, 2374081, 1326173, 1098477, 1321487, 1288531) GROUP BY kt.kind;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_position, SUM(CASE WHEN lt.link LIKE '%producer%' THEN 1 ELSE 0 END) AS total_producers_linked, COUNT(DISTINCT mk.keyword_id) AS total_unique_keywords, COUNT(DISTINCT mc.company_id) AS total_companies_involved FROM cast_info ci JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN link_type lt ON mc.company_type_id = lt.id WHERE ci.person_role_id IS NOT NULL AND mc.note IS NULL AND ci.movie_id IN (SELECT movie_id FROM movie_companies WHERE id = '3813') GROUP BY ci.movie_id;
SELECT kt.kind AS movie_type, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN cct.kind = 'complete+verified' THEN 1 ELSE 0 END) AS total_complete_verified_casts, COUNT(DISTINCT mc.company_id) AS number_of_different_companies_involved FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id JOIN cast_info ci ON akat.movie_id = ci.movie_id JOIN movie_keyword mk ON akat.movie_id = mk.movie_id JOIN comp_cast_type cct ON ci.person_role_id = cct.id JOIN movie_companies mc ON akat.movie_id = mc.movie_id WHERE ci.person_role_id = 1215 AND mk.id = 1952 AND mc.id IN (4224, 2075, 3671, 3125, 1386) GROUP BY kt.kind;
SELECT COUNT(DISTINCT ci.id) AS total_actors, AVG(mc.id) AS avg_company_id, SUM(CASE WHEN rt.id = 6 THEN 1 ELSE 0 END) AS total_directors, MIN(n.name) AS first_actor_name, MAX(t.title) AS last_movie_title, COUNT(DISTINCT ml.movie_id) FILTER (WHERE ml.link_type_id = 3 OR ml.link_type_id = 7) AS total_related_movies FROM cast_info AS ci JOIN name AS n ON ci.person_id = n.id JOIN aka_title AS at ON ci.movie_id = at.movie_id JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN role_type AS rt ON ci.role_id = rt.id JOIN movie_link AS ml ON at.movie_id = ml.movie_id JOIN title AS t ON at.movie_id = t.id WHERE ci.note NOT LIKE '%uncredited%' AND at.production_year BETWEEN 2000 AND 2010 AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'production') AND rt.role IN ('actor', 'actress', 'director') GROUP BY rt.id;
SELECT AVG(ak.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mk.movie_id) AS number_of_movies_with_keywords, SUM(CASE WHEN cc.subject_id = 1 THEN 1 ELSE 0 END) AS total_movies_with_complete_cast, MAX(pi.note) AS most_recent_person_note FROM aka_title ak JOIN movie_info mi ON ak.movie_id = mi.movie_id JOIN movie_keyword mk ON ak.movie_id = mk.movie_id JOIN company_name cn ON cn.country_code NOT IN ('[pl]') LEFT JOIN complete_cast cc ON ak.movie_id = cc.movie_id LEFT JOIN person_info pi ON pi.info_type_id = mi.info_type_id WHERE mi.info_type_id = '4' AND (pi.note IN ('Be Free Films', 'Autor', 'Fan Club President', 'Nick van de Wall', 'hwatson4964@excite.com', 'Anon.') OR pi.note IS NULL) AND ak.title IN ('DR-Dokumentar: 28. maj', 'I Want to Rob Jeff Goldblum') GROUP BY ak.kind_id ORDER BY average_production_year DESC;
SELECT kt.kind, t.production_year AS production_year, COUNT(DISTINCT t.id) AS number_of_titles, AVG(CAST(mi_idx.info AS FLOAT)) FILTER (WHERE mi_idx.info_type_id = 101) AS average_rating, COUNT(cc.id) AS complete_cast_count FROM title AS t LEFT JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info_idx AS mi_idx ON t.id = mi_idx.movie_id LEFT JOIN complete_cast AS cc ON t.id = cc.movie_id WHERE t.kind_id IN (2, 7) GROUP BY kt.kind, production_year ORDER BY kt.kind, production_year DESC;
SELECT AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT akat.movie_id) AS total_movies, CK.keyword, COUNT(DISTINCT chn.id) AS total_characters, SUM(CASE WHEN akat.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies_kind_1, SUM(CASE WHEN akat.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies_kind_2 FROM aka_title AS akat JOIN char_name AS chn ON akat.movie_id = chn.id JOIN keyword AS CK ON CK.id = akat.id WHERE akat.production_year BETWEEN 1990 AND 2020 AND CK.phonetic_code IN ('L165', 'M4236', 'B61') AND chn.surname_pcode IN ('D6452', 'A6245', 'V5612', 'C4532', 'O6252', 'P635') GROUP BY CK.keyword ORDER BY total_movies DESC, average_production_year DESC;
SELECT kt.kind AS movie_kind, lt.LINK AS link_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, AVG(cn.imdb_id) AS average_imdb_id, SUM(cn.imdb_id) AS total_imdb_id, MIN(cn.name) AS first_company_name_in_list FROM movie_link AS ml JOIN link_type AS lt ON lt.id = ml.link_type_id JOIN kind_type AS kt ON kt.id = 1 JOIN company_name AS cn ON cn.imdb_id = ml.movie_id WHERE lt.link IN ('edited into', 'edited from', 'remade as') AND cn.country_code = 'US' AND cn.name_pcode_nf IN ('Z5121', 'B4513', 'I5353', 'A3531') GROUP BY kt.kind, lt.LINK ORDER BY number_of_movies DESC;
SELECT ct.kind AS cast_type, COUNT(ci.id) AS total_cast_entries, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS total_sequel_links, COUNT(DISTINCT ci.movie_id) AS unique_movies, COUNT(DISTINCT ci.person_id) AS unique_persons FROM cast_info ci JOIN comp_cast_type ct ON ci.role_id = ct.id LEFT JOIN movie_link ml ON ci.movie_id = ml.movie_id AND ml.linked_movie_id = 9108 WHERE ci.movie_id IN (2348393, 1843055, 2354998, 2143306, 1326354, 1589480) AND ci.nr_order IN (75, 20, 2, 35) GROUP BY ct.kind ORDER BY total_cast_entries DESC;
SELECT CT.kind AS company_kind, COUNT(DISTINCT CN.id) AS number_of_companies, COUNT(DISTINCT ML.movie_id) AS number_of_movies_linked, AVG(CAST(PI.info AS INTEGER)) AS average_person_info, SUM(CASE WHEN CN.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies FROM company_type CT JOIN company_name CN ON CT.id = CN.id LEFT JOIN movie_link ML ON CN.id = ML.movie_id LEFT JOIN person_info PI ON CN.id = PI.person_id WHERE CT.kind <> 'Unknown' AND ML.id <> 4420 GROUP BY CT.kind ORDER BY number_of_companies DESC, number_of_movies_linked DESC;
SELECT rt.role, COUNT(DISTINCT akn.person_id) AS distinct_person_count, COUNT(DISTINCT mk.movie_id) AS distinct_movie_count, AVG(LENGTH(akn.name)) AS average_name_length, SUM(CASE WHEN mk.id IN (2147, 3674, 4385, 278, 891, 2589) THEN 1 ELSE 0 END) AS specific_keyword_movie_count FROM role_type rt LEFT JOIN aka_name akn ON rt.id = akn.id LEFT JOIN movie_keyword mk ON mk.movie_id = akn.person_id WHERE rt.role IN ('production designer', 'composer', 'producer', 'cinematographer', 'actor') AND rt.id IN ('6', '4') AND akn.name IN ('Aldave, Damie', 'Alkhovskaya, V.', 'Allen, Flanagan and', 'Allum, Dan', 'Rando, Jesús Alvaide', 'Allen, Eric') AND mk.movie_id IN ('7272', '8946', '15394', '15484', '7641') GROUP BY rt.role;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi_idx.movie_id) AS total_movies, AVG(LENGTH(mi_idx.info)) AS average_info_length, SUM(CASE WHEN mi_idx.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_info_count FROM movie_info_idx AS mi_idx JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ct.kind AS company_type, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT mc.movie_id) AS number_of_movies FROM movie_companies AS mc INNER JOIN company_type AS ct ON mc.company_type_id = ct.id INNER JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') AND mi_idx.note IS DISTINCT FROM '1' GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN ci.person_role_id IN (56, 1326) THEN 1 ELSE 0 END) AS count_special_roles, COUNT(DISTINCT cn.id) AS total_unique_characters, COUNT(DISTINCT k.id) AS total_unique_keywords, MAX(mi.info) AS longest_movie_info FROM cast_info ci JOIN char_name cn ON ci.person_id = cn.id JOIN movie_info mi ON ci.movie_id = mi.movie_id JOIN keyword k ON k.phonetic_code = 'O16' WHERE mi.info <> 'None' AND mi.info LIKE '%Czech%' GROUP BY ci.movie_id;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS num_companies, COUNT(DISTINCT ch.id) AS num_characters, AVG(pi.person_id) AS avg_person_id, SUM(pi.id) AS total_person_info_ids FROM role_type rt JOIN person_info pi ON rt.id = pi.info_type_id JOIN char_name ch ON pi.person_id = ch.id JOIN company_name cn ON ch.surname_pcode = cn.name_pcode_sf WHERE rt.ROLE = 'director' AND ch.name_pcode_nf = 'P3636' AND cn.name_pcode_sf = 'I1341' AND rt.id IN ('7', '5', '3', '1', '9') GROUP BY rt.ROLE ORDER BY num_companies DESC;
SELECT lt.LINK AS link_type, COUNT(DISTINCT at.movie_id) AS total_movies, AVG(at.production_year) AS average_production_year, MIN(n.name) AS earliest_person_name, MAX(pi.info_type_id) AS max_info_type_id FROM aka_title at JOIN link_type lt ON at.kind_id = lt.id JOIN name n ON at.id = n.id JOIN person_info pi ON n.id = pi.person_id WHERE at.production_year IS NOT NULL AND pi.info_type_id IN (1057, 2456) AND at.title IN ('Doctor Hassan', 'Arjeplog - Lappland zwischen Eis und Hightech') AND at.season_nr IN (1, 14, 4, 20, 11) AND lt.id IN (4, 17, 12, 8, 14, 1) GROUP BY lt.LINK ORDER BY total_movies DESC, average_production_year;
SELECT ct.kind AS company_kind, kt.kind AS movie_kind, COUNT(mc.movie_id) AS num_movies, AVG(mi_idx.info::NUMERIC) AS average_info, SUM(CASE WHEN mi_idx.note = 'Y' THEN 1 ELSE 0 END) AS noted_count FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id JOIN kind_type AS kt ON mi_idx.info_type_id = kt.id JOIN movie_keyword AS mk ON mc.movie_id = mk.movie_id WHERE mc.movie_id IN (8982, 14559, 8408) AND kt.id IN (6, 2, 3, 4, 5, 1) GROUP BY company_kind, movie_kind ORDER BY num_movies DESC, average_info DESC;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT ci.person_id) AS number_of_actors, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS US_based_companies, t.production_year, COUNT(DISTINCT t.id) AS number_of_movies FROM title t LEFT JOIN movie_info_idx mi_idx ON t.id = mi_idx.movie_id AND mi_idx.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN company_name cn ON mc.company_id = cn.id WHERE t.production_year IS NOT NULL GROUP BY t.production_year HAVING COUNT(DISTINCT t.id) > 10 ORDER BY t.production_year DESC;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS total_movies, COUNT(DISTINCT mk.keyword_id) AS total_unique_keywords, SUM(CASE WHEN mk.keyword_id = 1849 THEN 1 ELSE 0 END) AS keyword_1849_count, SUM(CASE WHEN mk.keyword_id = 830 THEN 1 ELSE 0 END) AS keyword_830_count, SUM(CASE WHEN mk.keyword_id = 3752 THEN 1 ELSE 0 END) AS keyword_3752_count, AVG(cc.status_id) AS average_status_id FROM complete_cast AS cc JOIN movie_keyword AS mk ON cc.movie_id = mk.movie_id JOIN kind_type AS kt ON cc.subject_id = kt.id WHERE kt.kind IN ('video movie', 'tv series', 'video game') GROUP BY kt.kind;
SELECT COUNT(DISTINCT at.id) AS total_alternate_titles, COUNT(DISTINCT ci.id) AS total_cast_members, AVG(at.production_year) AS average_production_year, SUM(mc.company_id) AS total_companies_involved, COUNT(DISTINCT cc.id) AS total_complete_casts, STRING_AGG(DISTINCT lt.LINK, '; ') AS link_types_used FROM aka_title AS at JOIN cast_info AS ci ON at.movie_id = ci.movie_id JOIN movie_companies AS mc ON at.movie_id = mc.movie_id JOIN complete_cast AS cc ON at.movie_id = cc.movie_id JOIN link_type AS lt ON cc.status_id = lt.id WHERE at.production_year > 2000 AND ci.note IS NOT NULL AND cc.id IN ('2731', '2678', '7', '3665') AND at.season_nr IN (8, 4, 11, 22) AND at.md5sum IN ('ae1ec4b6524d40f203cb722b6e74c9d6', '51978b45ff1151ec3cc873180401b93c') GROUP BY at.kind_id ORDER BY total_alternate_titles DESC, average_production_year;
SELECT COUNT(DISTINCT mi.movie_id) AS number_of_movies, AVG(CAST(mi.info AS DECIMAL)) AS average_info_rating, SUM(CASE WHEN mi.info_type_id = 101 THEN CAST(mi.info AS BIGINT) ELSE 0 END) AS total_info_type_101, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS earliest_production_year, COUNT(DISTINCT mk.keyword_id) AS distinct_keywords, COUNT(DISTINCT t.id) FILTER (WHERE t.production_year BETWEEN 2000 AND 2010) AS movies_between_2000_and_2010 FROM movie_info_idx mi JOIN title t ON mi.movie_id = t.id LEFT JOIN movie_keyword mk ON t.id = mk.movie_id WHERE mi.info SIMILAR TO '%(4.4|0100111101|36|6000000001|1.0..10113)%' AND mi.movie_id IN (19624, 8384) GROUP BY t.kind_id ORDER BY total_info_type_101 DESC;
SELECT COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN cc.status_id = 4 THEN 1 ELSE 0 END) AS count_completed_status_4, SUM(CASE WHEN cc.status_id = 3 THEN 1 ELSE 0 END) AS count_completed_status_3, pi.info_type_id, it.info AS info_type_description, COUNT(DISTINCT pi.person_id) AS number_of_people_with_info, AVG(t.production_year) AS average_movie_production_year, COUNT(DISTINCT n.id) AS number_of_actors, MAX(t.production_year) AS latest_movie_production_year, MIN(t.production_year) AS oldest_movie_production_year FROM cast_info ci JOIN title t ON ci.movie_id = t.id JOIN name n ON ci.person_id = n.id LEFT JOIN complete_cast cc ON t.id = cc.movie_id JOIN person_info pi ON n.id = pi.person_id JOIN info_type it ON pi.info_type_id = it.id WHERE it.id = '46' AND pi.note ILIKE '%yasmine%' AND (ci.note ILIKE '%(segment "Requiem")%' OR ci.note ILIKE '%(2010)%' OR ci.note ILIKE '%(as Alima Abubarka)%' OR ci.note ILIKE '%(segment "Soulmates")%' OR ci.note ILIKE '%(as Dr Anthony Absalom)%' OR ci.note ILIKE '%(as Mitch Abshire)%') GROUP BY pi.info_type_id, it.info;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_order, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count FROM cast_info ci JOIN kind_type kt ON ci.person_role_id = kt.id JOIN name n ON ci.person_id = n.id JOIN complete_cast cc ON ci.movie_id = cc.movie_id WHERE cc.subject_id = 1 AND ci.id IN (17192, 15329, 15074) AND kt.kind <> 'unknown' GROUP BY kt.kind ORDER BY total_movies DESC, movie_kind;
SELECT COUNT(DISTINCT at.id) AS total_titles, AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.episode_of_id) AS total_series, SUM(CASE WHEN at.kind_id = 1 THEN 1 ELSE 0 END) AS total_movies, SUM(CASE WHEN at.kind_id = 3 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN at.kind_id = 4 THEN 1 ELSE 0 END) AS total_videos, COUNT(DISTINCT ct.id) AS total_company_types, COUNT(DISTINCT cct.id) AS total_cast_types, COUNT(DISTINCT lt.id) AS total_link_types FROM aka_title at LEFT JOIN company_type ct ON at.movie_id = ct.id LEFT JOIN comp_cast_type cct ON at.kind_id = cct.id LEFT JOIN link_type lt ON at.id = lt.id WHERE at.production_year BETWEEN 1990 AND 2000 AND at.phonetic_code IN ('S1232', 'W5165') AND ct.id IS NOT NULL AND cct.id IN (1) AND lt.id IN (12, 2, 4, 15);
SELECT kt.kind AS kind_of_title, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_titles, SUM(CASE WHEN mi.info_type_id = 2 THEN 1 ELSE 0 END) AS count_of_info_type_2, MAX(t.episode_nr) AS highest_episode_number FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_info mi ON t.id = mi.movie_id WHERE t.kind_id IN (2, 7) AND kt.id IN (4, 7, 6, 1) AND kt.kind IN ('video game', 'movie', 'video movie', 'tv series') GROUP BY kt.kind ORDER BY average_production_year DESC;
SELECT kt.kind, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, AVG(aka_count.aka_name_count) AS average_aka_names_per_movie_kind FROM kind_type kt JOIN movie_info_idx t ON kt.id = t.info_type_id JOIN movie_companies mc ON t.movie_id = mc.movie_id LEFT JOIN ( SELECT an.person_id, COUNT(*) as aka_name_count FROM aka_name an GROUP BY an.person_id ) aka_count ON mc.movie_id = aka_count.person_id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(ml.movie_id) AS average_movie_id, MIN(cn.name) AS character_name_with_min_id, MAX(an.name) AS aka_name_with_max_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id LEFT JOIN char_name AS cn ON cn.id = ml.movie_id AND cn.surname_pcode = 'E2146' LEFT JOIN aka_name AS an ON an.id = ml.linked_movie_id AND an.md5sum = '7df6a930bde6eff675fae9eecfb9ff7e' GROUP BY lt.LINK ORDER BY total_links DESC;
SELECT AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, COUNT(DISTINCT a_title.movie_id) AS number_of_movies, COUNT(DISTINCT a_name.person_id) AS number_of_people, SUM(CASE WHEN m_link.link_type_id = 1 THEN 1 ELSE 0 END) AS number_of_prequels, SUM(CASE WHEN m_link.link_type_id = 2 THEN 1 ELSE 0 END) AS number_of_sequels, AVG(a_title.production_year) AS average_production_year FROM aka_title AS a_title JOIN aka_name AS a_name ON a_title.movie_id = a_name.person_id JOIN movie_info_idx AS mi_idx ON a_title.movie_id = mi_idx.movie_id JOIN movie_link AS m_link ON a_title.movie_id = m_link.movie_id WHERE a_title.md5sum IN ('d4b78437f259ec962b25a518a77b6488', '982d91d043a457fb7114c4e57fba41a9') AND mi_idx.info_type_id = 101 GROUP BY a_title.kind_id HAVING COUNT(DISTINCT a_title.movie_id) > 10;
SELECT ct.kind AS company_type, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mi_idx.avg_movie_score) AS average_movie_score, SUM(CASE WHEN mi.info = '(Original Version)' THEN 1 ELSE 0 END) AS original_version_count, SUM(CASE WHEN mi.info = '(English subtitles)' THEN 1 ELSE 0 END) AS english_subtitles_count FROM movie_companies AS mc JOIN company_name AS cn ON mc.company_id = cn.id JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN (SELECT movie_id, AVG(CAST(info AS DOUBLE PRECISION)) AS avg_movie_score FROM movie_info_idx WHERE info_type_id = 101 GROUP BY movie_id) AS mi_idx ON mc.movie_id = mi_idx.movie_id LEFT JOIN movie_info AS mi ON mc.movie_id = mi.movie_id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind;
SELECT it.info AS info_category, COUNT(DISTINCT n.id) AS total_people, COUNT(DISTINCT pi.person_id) AS people_with_info, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS total_males, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS total_females FROM name AS n LEFT JOIN person_info AS pi ON n.id = pi.person_id JOIN info_type AS it ON pi.info_type_id = it.id GROUP BY it.info;
SELECT ct.kind AS company_type, AVG(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS avg_female_cast, AVG(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS avg_male_cast, COUNT(DISTINCT mc.movie_id) AS num_movies, COUNT(DISTINCT mc.company_id) AS num_companies, SUM(CASE WHEN mc.note LIKE '%worldwide%' THEN 1 ELSE 0 END) AS worldwide_releases FROM movie_companies AS mc JOIN comp_cast_type AS ct ON mc.company_type_id = ct.id JOIN name AS n ON mc.company_id = n.id GROUP BY ct.kind HAVING COUNT(DISTINCT mc.movie_id) > 10 ORDER BY num_movies DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN lt.id = 3 THEN 1 ELSE 0 END) AS count_of_sequels, SUM(CASE WHEN lt.id = 4 THEN 1 ELSE 0 END) AS count_of_prequels FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN title t ON ci.movie_id = t.id LEFT JOIN movie_link ml ON t.id = ml.movie_id LEFT JOIN link_type lt ON ml.link_type_id = lt.id WHERE n.gender = 'F' AND t.kind_id IN (2, 7) AND t.production_year BETWEEN 1990 AND 2000 GROUP BY n.name HAVING COUNT(DISTINCT ci.movie_id) > 5 ORDER BY number_of_movies DESC, average_production_year DESC;
SELECT n.name AS actor_name, COUNT(DISTINCT cn.id) AS character_count, AVG(mk.keyword_id) AS average_keyword_id, SUM(CASE WHEN ml.link_type_id = 1 THEN 1 ELSE 0 END) AS direct_movie_links, COUNT(DISTINCT ml.movie_id) AS linked_movies_count FROM name n JOIN aka_name an ON n.id = an.person_id JOIN char_name cn ON an.id = cn.imdb_id JOIN movie_keyword mk ON cn.id = mk.movie_id JOIN movie_link ml ON mk.movie_id = ml.movie_id WHERE n.gender = 'm' GROUP BY n.name;
SELECT AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS number_of_movies, cn.country_code, rt.ROLE, SUM(CASE WHEN t.kind_id = 1 THEN 1 ELSE 0 END) AS number_of_feature_films, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS number_of_short_films, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved, COUNT(DISTINCT ml.link_type_id) AS number_of_unique_link_types FROM title AS t JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN company_name AS cn ON mc.company_id = cn.id JOIN role_type AS rt ON mc.company_type_id = rt.id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE t.production_year BETWEEN 1990 AND 2000 AND rt.id IN ('6', '8') AND mc.note LIKE '%(TV)%' GROUP BY cn.country_code, rt.ROLE ORDER BY average_production_year DESC, number_of_movies DESC;
SELECT rt.ROLE, COUNT(ci.id) AS num_cast_entries, AVG(ci.nr_order) AS average_order, SUM(ci.person_id) AS total_person_ids, MAX(pinfo.info) AS latest_info, MIN(pinfo.info) AS earliest_info FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN person_info pinfo ON ci.person_id = pinfo.person_id WHERE ci.nr_order IS NOT NULL AND pinfo.info_type_id = ( SELECT id FROM info_type WHERE info = 'quotes' ) GROUP BY rt.ROLE ORDER BY num_cast_entries DESC, average_order;
SELECT k.keyword, ci.person_role_id, COUNT(DISTINCT ci.person_id) AS unique_person_count, COUNT(ci.movie_id) AS movie_count, AVG(ci.nr_order) AS average_cast_order FROM cast_info ci JOIN movie_keyword mk ON ci.movie_id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE k.phonetic_code IN ('V315', 'G2324') GROUP BY k.keyword, ci.person_role_id ORDER BY unique_person_count DESC, movie_count DESC;
SELECT kt.kind, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT t.id) AS number_of_titles, COUNT(DISTINCT mc.company_id) AS number_of_companies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_companies AS mc ON t.id = mc.movie_id LEFT JOIN movie_link AS ml ON t.id = ml.movie_id WHERE kt.kind IN ('tv series', 'episode', 'tv mini series') AND mc.company_type_id = '1' AND t.production_year BETWEEN 2005 AND 2015 GROUP BY kt.kind;
SELECT AVG(CASE WHEN mc.company_type_id = 1 THEN mi_box_office.info::NUMERIC ELSE NULL END) AS avg_box_office_producer, AVG(CASE WHEN mc.company_type_id = 2 THEN mi_box_office.info::NUMERIC ELSE NULL END) AS avg_box_office_distributor, COUNT(DISTINCT mc.movie_id) FILTER (WHERE mc.company_type_id = 1) AS num_movies_produced, COUNT(DISTINCT mc.movie_id) FILTER (WHERE mc.company_type_id = 2) AS num_movies_distributed, COUNT(DISTINCT cn.id) AS num_companies, COUNT(DISTINCT an.person_id) AS num_persons_with_aka FROM movie_companies mc JOIN company_name cn ON mc.company_id = cn.id JOIN movie_info mi_box_office ON mc.movie_id = mi_box_office.movie_id AND mi_box_office.info_type_id = 107 LEFT JOIN aka_name an ON cn.id = an.person_id WHERE cn.country_code = 'US' AND mi_box_office.info ~ '^\d+$' GROUP BY cn.country_code;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cct.id) AS num_comp_cast_types, AVG(mlink.movie_id) AS average_movie_id, SUM(mlink.linked_movie_id) AS total_linked_movie_id, COUNT(DISTINCT mlink.id) AS num_movie_links FROM company_type ct JOIN comp_cast_type cct ON ct.id = cct.id JOIN movie_link mlink ON mlink.link_type_id = ct.id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') GROUP BY ct.kind ORDER BY num_comp_cast_types DESC;
SELECT rt.ROLE, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT pi.person_id) AS total_people, COUNT(DISTINCT cc.movie_id) AS total_movies, AVG(pi.id) AS average_person_info_id, SUM(ct.id) AS sum_company_type_ids FROM role_type rt JOIN char_name cn ON cn.md5sum IN ('87fb1da22896f8674cfb742fe549ec67', 'bf85b5265ca46bac451dcdce6f3625f7', '74802eebae1a12921215b7402178254c') JOIN person_info pi ON pi.person_id = cn.id JOIN complete_cast cc ON cc.subject_id = cn.id JOIN company_type ct ON ct.id = 2 WHERE rt.ROLE IN ('actress', 'miscellaneous crew', 'editor', 'director', 'composer') AND pi.note IN ('frankfob2@yahoo.com', 'Deception Films', 'CelebrityLoop.com', 'Spook Show Entertainment', 'E Adamson') AND pi.person_id IN ('3716', '1740595') GROUP BY rt.ROLE ORDER BY total_movies DESC;
SELECT it.info AS information_type, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, AVG(n.imdb_id) AS average_imdb_id, MAX(k.keyword) AS most_common_keyword, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count FROM movie_link AS ml JOIN info_type AS it ON ml.link_type_id = it.id JOIN name AS n ON ml.movie_id = n.id JOIN keyword AS k ON k.id = ml.id WHERE ml.link_type_id = 9 AND k.phonetic_code IN ('I4243', 'B43', 'D63', 'B4523', 'T521') AND ml.linked_movie_id IN (2406273, 1737708, 1377064) GROUP BY it.info;
SELECT n.name, COUNT(DISTINCT ci.movie_id) AS total_movies, AVG(ci.nr_order) AS average_cast_position, COUNT(DISTINCT ci.role_id) AS total_distinct_roles FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN movie_keyword mk ON ci.movie_id = mk.movie_id WHERE mk.keyword_id IN (3583, 3557) GROUP BY n.name ORDER BY total_movies DESC, average_cast_position;
SELECT rt.ROLE, COUNT(ci.id) AS num_roles, AVG(ci.nr_order) AS avg_order, COUNT(DISTINCT ci.person_id) AS unique_actors, COUNT(DISTINCT cn.id) AS character_count FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id LEFT JOIN char_name cn ON ci.person_role_id = cn.id GROUP BY rt.ROLE ORDER BY num_roles DESC;
SELECT COUNT(DISTINCT ci.person_id) AS total_actors, AVG(ci.nr_order) AS average_cast_order, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_actors_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_actors_count, t.production_year, COUNT(DISTINCT k.id) AS total_keywords_used, COUNT(DISTINCT t.id) AS total_movies FROM cast_info ci JOIN name n ON ci.person_id = n.id JOIN title t ON ci.movie_id = t.id JOIN movie_keyword mk ON t.id = mk.movie_id JOIN keyword k ON mk.keyword_id = k.id WHERE t.production_year >= 2000 AND t.kind_id = 1 GROUP BY t.production_year ORDER BY t.production_year DESC;
SELECT kt.kind, COUNT(DISTINCT t.id) AS total_titles, AVG(t.production_year) AS avg_production_year, COUNT(DISTINCT n.id) AS total_unique_persons, SUM(CASE WHEN t.kind_id = 6 THEN 1 ELSE 0 END) AS total_episodes, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_video_games FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN aka_name an ON an.person_id = t.id LEFT JOIN char_name cn ON cn.id = an.person_id LEFT JOIN name n ON n.id = an.person_id LEFT JOIN keyword k ON k.id IN (7895, 1560, 4900, 639, 4708, 2246) WHERE kt.kind IN ('episode', 'video game') GROUP BY kt.kind ORDER BY total_titles DESC;
SELECT info_type.info AS info_category, COUNT(DISTINCT movie_info.movie_id) AS number_of_movies, AVG(LENGTH(movie_info.info)) AS average_info_length, SUM(CASE WHEN comp_cast_type.kind = 'complete+verified' THEN 1 ELSE 0 END) AS complete_verified_count, SUM(CASE WHEN comp_cast_type.kind = 'cast' THEN 1 ELSE 0 END) AS cast_count, SUM(CASE WHEN comp_cast_type.kind = 'crew' THEN 1 ELSE 0 END) AS crew_count FROM movie_info JOIN info_type ON movie_info.info_type_id = info_type.id JOIN movie_info_idx ON movie_info.movie_id = movie_info_idx.movie_id JOIN comp_cast_type ON movie_info_idx.info_type_id = comp_cast_type.id WHERE info_type.info IN ('LD original title', 'LD quality of source', 'tech info', 'LD master format', 'salary history', 'LD release country') AND comp_cast_type.kind IN ('complete+verified', 'cast', 'crew', 'complete') GROUP BY info_type.info ORDER BY number_of_movies DESC;
SELECT at.title AS alternate_title, COUNT(DISTINCT an.id) AS number_of_alternate_names, AVG(CAST(cc.status_id AS DECIMAL)) AS average_status_id, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_count, SUM(CASE WHEN n.gender <> 'm' THEN 1 ELSE 0 END) AS female_count, COUNT(DISTINCT cc.id) AS complete_cast_count, MIN(at.production_year) AS earliest_production_year, MAX(at.production_year) AS latest_production_year FROM aka_title at JOIN aka_name an ON at.movie_id = an.person_id JOIN complete_cast cc ON at.movie_id = cc.movie_id JOIN name n ON an.person_id = n.id WHERE cc.subject_id = 1 AND cc.status_id IN (3, 4) AND n.gender = 'm' AND n.imdb_index IN ('V', 'VI', 'II') AND an.md5sum = 'f20a817147ce1df99c8e3b5614dbee2f' AND at.season_nr IN (28, 2, 5, 14, 37, 9) AND at.movie_id IN (1701837, 1248358, 1697981, 1674394, 1633043) GROUP BY at.title;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN cn.country_code = '[us]' THEN 1 ELSE 0 END) AS total_us_productions, COUNT(DISTINCT pi.person_id) AS unique_actors_info, MAX(n.name) AS latest_actor_name FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON ci.movie_id = t.id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN person_info pi ON n.id = pi.person_id LEFT JOIN company_name cn ON cn.imdb_id = t.imdb_id WHERE kt.kind IN ('tv series', 'video movie', 'movie', 'video game') AND (cn.country_code = '[us]' OR cn.country_code IS NULL) AND n.id IN ('7106', '6832', '5625') AND pi.info_type_id IN ('34', '39', '27', '21') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT SUM(mc.company_id) AS total_company_ids, AVG(CASE WHEN mc.company_type_id = 1 THEN mc.movie_id ELSE NULL END) AS average_movie_id_for_type_1, COUNT(DISTINCT ml.link_type_id) AS unique_link_types, COUNT(DISTINCT pi.person_id) AS unique_person_count, AVG(CASE WHEN pi.info_type_id = 5 THEN LENGTH(pi.info) ELSE NULL END) AS average_info_length_for_type_5 FROM movie_companies mc FULL OUTER JOIN movie_link ml ON mc.movie_id = ml.movie_id FULL OUTER JOIN person_info pi ON mc.company_id = pi.person_id GROUP BY mc.company_type_id;
SELECT kt.kind AS movie_kind, mc.company_type_id, COUNT(DISTINCT t.id) AS movie_count, t.production_year AS production_year, AVG((SELECT COUNT(*) FROM char_name WHERE char_name.id = t.id)) AS avg_character_count FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id GROUP BY kt.kind, mc.company_type_id, t.production_year ORDER BY production_year DESC, kt.kind, mc.company_type_id;
SELECT mc.company_type_id, COUNT(DISTINCT mc.movie_id) AS num_movies, AVG(at.production_year) AS avg_production_year, COUNT(DISTINCT lt.id) AS num_link_types FROM movie_companies AS mc JOIN aka_title AS at ON mc.movie_id = at.movie_id JOIN link_type AS lt ON at.id = lt.id WHERE mc.company_type_id = 1 AND lt.link IN ('alternate language version of', 'featured in', 'edited into', 'edited from', 'spoofs', 'referenced in') GROUP BY mc.company_type_id;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN mc.note LIKE '%(TV)%' THEN 1 ELSE 0 END) AS total_tv_movies, COUNT(DISTINCT cn.id) AS total_characters, COUNT(DISTINCT an.person_id) AS total_actors_with_aliases FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN char_name cn ON cn.imdb_id = t.imdb_id LEFT JOIN aka_name an ON an.person_id = t.id WHERE t.production_year > 2000 AND t.kind_id IN (2, 3, 6, 7) AND (mc.note LIKE '%(TV)%' OR mc.note IS NULL) AND (cn.surname_pcode = 'B654' OR cn.surname_pcode IS NULL) AND (mc.company_type_id = kt.id OR mc.company_type_id IS NULL) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS INTEGER)) AS average_movie_length, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_actors_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_actors_count FROM movie_info_idx AS mi JOIN kind_type AS kt ON kt.id = mi.info_type_id JOIN complete_cast AS cc ON cc.movie_id = mi.movie_id JOIN name AS n ON n.id = cc.subject_id WHERE kt.kind = 'movie' AND mi.info_type_id = 1 AND n.gender IN ('m', 'f') AND n.md5sum IN ('594acd6658a43cf86de526cf11f2acb5', 'a157e8d3f5f4f0f9e2d7ae2274e39da6', '2f10a51a8697d24b73eb80aa0b19530b', '7b4ea18b87a76a35e2ca4a22b5ce898c') GROUP BY kt.kind;
SELECT COUNT(DISTINCT mk.movie_id) AS total_movies, k.keyword, AVG(lt.id) AS average_link_type_id, SUM(CASE WHEN k.phonetic_code = 'T2351' THEN 1 ELSE 0 END) AS count_t2351, SUM(CASE WHEN k.phonetic_code = 'D35' THEN 1 ELSE 0 END) AS count_d35 FROM movie_keyword AS mk JOIN keyword AS k ON mk.keyword_id = k.id JOIN link_type AS lt ON mk.id = lt.id GROUP BY k.keyword ORDER BY total_movies DESC, k.keyword;
SELECT cc.kind AS company_cast_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT cn.id) AS number_of_companies, AVG(name.length) AS average_name_length FROM movie_companies AS mc JOIN comp_cast_type AS cc ON mc.company_type_id = cc.id JOIN company_name AS cn ON mc.company_id = cn.id JOIN (SELECT id, CHAR_LENGTH(name) AS length FROM name WHERE gender = 'm') AS name ON name.id = mc.movie_id WHERE mc.movie_id IN ('18930', '11158', '28073', '9831', '18529', '30177') AND cc.kind IN ('complete', 'crew', 'cast') GROUP BY cc.kind;
SELECT kt.kind AS movie_kind, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT t.id) AS total_movies, COUNT(DISTINCT mi.info) AS unique_info_types, SUM(CASE WHEN t.season_nr IN ('8', '20', '12', '24', '33') THEN 1 ELSE 0 END) AS count_specific_seasons, COUNT(DISTINCT pi.person_id) AS total_persons_involved FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id LEFT JOIN movie_info_idx AS mi ON t.id = mi.movie_id LEFT JOIN person_info AS pi ON pi.person_id = t.id GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT ml.movie_id, lt.LINK AS link_type, COUNT(ml.id) AS total_links, AVG(cn.imdb_id) AS avg_company_imdb_id FROM movie_link AS ml JOIN link_type AS lt ON ml.link_type_id = lt.id JOIN company_name AS cn ON ml.movie_id = cn.id GROUP BY ml.movie_id, lt.LINK ORDER BY total_links DESC, avg_company_imdb_id DESC;
SELECT k.kind AS movie_genre, COUNT(DISTINCT c.person_id) AS number_of_actors, AVG(c.nr_order) AS average_cast_position, SUM(CASE WHEN t.production_year >= 2000 THEN 1 ELSE 0 END) AS movies_from_2000_onwards, MAX(t.title) AS latest_movie_title, MAX(t.production_year) AS latest_production_year FROM cast_info AS c JOIN title AS t ON c.movie_id = t.id JOIN kind_type AS k ON t.kind_id = k.id WHERE k.id = 7 GROUP BY k.kind ORDER BY number_of_actors DESC, average_cast_position, movies_from_2000_onwards DESC;
SELECT kt.kind AS movie_kind, AVG(aka.production_year) AS avg_production_year, COUNT(DISTINCT aka.movie_id) AS total_movies, COUNT(DISTINCT mc.company_id) AS total_companies_involved, SUM(CASE WHEN aka.kind_id = 4 THEN 1 ELSE 0 END) AS total_tv_series FROM aka_title aka JOIN kind_type kt ON aka.kind_id = kt.id LEFT JOIN movie_companies mc ON aka.movie_id = mc.movie_id GROUP BY kt.kind HAVING COUNT(DISTINCT aka.movie_id) > 100 ORDER BY avg_production_year DESC, total_movies;
SELECT kt.kind AS movie_kind, AVG(CAST(mi.info AS INTEGER)) AS average_budget, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT at.id) AS number_of_alternate_titles, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS completed_cast_count FROM movie_info mi JOIN movie_companies mc ON mc.movie_id = mi.movie_id JOIN kind_type kt ON kt.id = (SELECT kind_id FROM aka_title WHERE movie_id = mi.movie_id LIMIT 1) LEFT JOIN aka_title at ON at.movie_id = mi.movie_id LEFT JOIN complete_cast cc ON cc.movie_id = mi.movie_id WHERE mi.info_type_id = 3 AND mc.company_type_id = 2 AND mi.movie_id IN ('929898', '931171', '924369', '925167', '939922') AND kt.kind <> 'tv series' GROUP BY kt.kind ORDER BY average_budget DESC;
SELECT AVG(aka_title.production_year) AS avg_production_year, COUNT(DISTINCT movie_keyword.keyword_id) AS num_keywords, COUNT(DISTINCT aka_title.movie_id) AS num_movies, AVG(COUNT(DISTINCT aka_title.movie_id)) OVER (PARTITION BY aka_title.production_year) AS avg_num_movies_per_year FROM aka_title JOIN complete_cast ON aka_title.movie_id = complete_cast.movie_id JOIN movie_keyword ON aka_title.movie_id = movie_keyword.movie_id WHERE complete_cast.status_id = 1 GROUP BY aka_title.production_year;
SELECT AVG(ati.production_year) AS average_production_year, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_people_involved, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS total_directors, MAX(ati.title) AS latest_added_alternative_title FROM cast_info ci JOIN aka_title ati ON ati.movie_id = ci.movie_id WHERE ati.production_year BETWEEN 1990 AND 2000 AND ci.person_role_id IN ('902', '627', '757', '669') AND ci.id IN ('18028', '15918', '15273', '16871') GROUP BY ati.movie_id ORDER BY total_movies DESC, total_people_involved DESC;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ml.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT pi.person_id) AS number_of_unique_persons, AVG(pi.id) AS average_person_info_id, SUM(CASE WHEN pi.note IN ('Mimi Gold', 'Paul Becker', 'Rory Leahy', 'Archie York', 'Laurel A Adler', 'Chris') THEN 1 ELSE 0 END) AS count_special_notes FROM kind_type kt LEFT JOIN movie_link ml ON ml.link_type_id = kt.id LEFT JOIN company_name cn ON cn.imdb_id = ml.movie_id LEFT JOIN person_info pi ON pi.info_type_id = kt.id WHERE ml.link_type_id = '15' GROUP BY kt.kind;
SELECT COUNT(DISTINCT n.id) AS total_names, AVG(n.imdb_id) AS average_imdb_id, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_count, mi.info_type_id, k.keyword, AVG(CAST(mi.info AS DOUBLE PRECISION)) FILTER (WHERE mi.info ~ '^\d+(\.\d+)?$') AS average_numeric_info FROM name n JOIN movie_info mi ON n.id = mi.movie_id JOIN keyword k ON k.id = mi.info_type_id WHERE n.name_pcode_nf IN ('H6142', 'K434', 'L4', 'B2415') GROUP BY mi.info_type_id, k.keyword ORDER BY total_names DESC, average_numeric_info DESC;
SELECT CT.kind AS company_kind, AVG(CAST(MI.info AS FLOAT)) AS average_rating, COUNT(DISTINCT CI.person_id) AS total_cast_members, COUNT(DISTINCT MC.movie_id) AS number_of_movies FROM movie_companies AS MC JOIN company_type AS CT ON MC.company_type_id = CT.id JOIN movie_info AS MI ON MC.movie_id = MI.movie_id AND MI.info_type_id = 101 JOIN cast_info AS CI ON MC.movie_id = CI.movie_id WHERE (MC.note LIKE '%(TV)' OR MC.note IS NULL) AND CT.kind IN ('special effects companies', 'miscellaneous companies', 'production companies', 'distributors') AND CI.role_id = 1 GROUP BY CT.kind ORDER BY average_rating DESC;
SELECT COUNT(DISTINCT n.id) as ActorCount, AVG(at.production_year) as AverageProductionYear, SUM(CASE WHEN mi.info = 'Color' THEN 1 ELSE 0 END) as ColorMoviesCount, SUM(CASE WHEN mi.info = 'Black and White' THEN 1 ELSE 0 END) as BW_MoviesCount, mi_idx.info_type_id, cn.name as MostCommonActorName FROM name n JOIN aka_title at ON n.id = at.movie_id JOIN movie_info mi ON mi.movie_id = at.movie_id JOIN movie_info_idx mi_idx ON mi_idx.movie_id = mi.movie_id JOIN char_name cn ON cn.id = n.id WHERE mi.info IN ('Korean', 'Serbo-Croatian', 'Tatar', 'Filipino', 'Icelandic') AND mi_idx.info LIKE '...11..3.3' AND at.production_year > 1990 GROUP BY mi_idx.info_type_id, cn.name ORDER BY ActorCount DESC, AverageProductionYear DESC LIMIT 10;
SELECT kt.kind, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_cast_count FROM complete_cast cc JOIN kind_type kt ON cc.subject_id = kt.id JOIN name n ON cc.movie_id = n.id WHERE kt.kind IN ('video movie', 'tv series') GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT mc.company_type_id, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN t.kind_id = 2 THEN 1 ELSE 0 END) AS total_series_movies, ROUND(AVG(t.production_year), 2) AS average_production_year, SUM(CASE WHEN rt.role = 'producer' THEN 1 ELSE 0 END) AS total_producer_roles FROM title t JOIN movie_companies mc ON mc.movie_id = t.id LEFT JOIN role_type rt ON rt.id = mc.company_type_id WHERE t.production_year > 2000 GROUP BY mc.company_type_id HAVING COUNT(DISTINCT t.id) > 0 ORDER BY number_of_movies DESC, total_series_movies DESC;
SELECT AVG(mc.company_id) AS average_company_id, COUNT(DISTINCT ml.movie_id) AS linked_movies_count, SUM(CASE WHEN mi.info = 'Tatar' THEN 1 ELSE 0 END) AS tatar_movies_count, SUM(CASE WHEN mi.info = 'Hebrew' THEN 1 ELSE 0 END) AS hebrew_movies_count, SUM(CASE WHEN mi.info = 'Inuktitut' THEN 1 ELSE 0 END) AS inuktitut_movies_count, COUNT(DISTINCT an.person_id) AS unique_actors_count FROM movie_companies AS mc JOIN movie_link AS ml ON mc.movie_id = ml.movie_id JOIN movie_info AS mi ON mc.movie_id = mi.movie_id LEFT JOIN aka_name AS an ON an.surname_pcode = mi.info WHERE an.name_pcode_cf IN ('V3415', 'A5163', 'B6525') AND mi.info IN ('Tatar', 'Hebrew', 'Inuktitut') GROUP BY mc.company_type_id;
SELECT kt.kind AS movie_kind, AVG(akat.production_year) AS average_production_year, COUNT(DISTINCT cn.id) AS number_of_actors, COUNT(DISTINCT kn.id) AS number_of_keywords, SUM(CASE WHEN cn.name LIKE 'A%' THEN 1 ELSE 0 END) AS actors_starting_with_a, COUNT(DISTINCT cmn.id) AS number_of_companies, MAX(akat.episode_nr) AS max_episode_number FROM aka_title akat JOIN kind_type kt ON akat.kind_id = kt.id LEFT JOIN complete_cast cc ON akat.movie_id = cc.movie_id LEFT JOIN char_name cn ON cn.id = cc.subject_id LEFT JOIN movie_keyword mk ON akat.movie_id = mk.movie_id LEFT JOIN keyword kn ON mk.keyword_id = kn.id AND kn.phonetic_code IN ('D525', 'G6431', 'T2623', 'S1425', 'M4165', 'G5123') LEFT JOIN movie_companies mc ON akat.movie_id = mc.movie_id LEFT JOIN company_name cmn ON mc.company_id = cmn.id WHERE akat.production_year >= 2000 GROUP BY kt.kind
SELECT kt.kind AS movie_genre, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, COUNT(DISTINCT mc.company_id) AS total_production_companies, COUNT(DISTINCT n.id) AS total_unique_actors FROM title AS t JOIN kind_type AS kt ON t.kind_id = kt.id JOIN movie_companies AS mc ON t.id = mc.movie_id JOIN cast_info AS ci ON t.id = ci.movie_id JOIN name AS n ON ci.person_id = n.id WHERE t.production_year > 1990 AND mc.movie_id IN ('9013', '18754', '19628', '12173') AND mc.id IN ('2363', '1293', '1757', '2957') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, MAX(t.production_year) AS latest_production_year, MIN(t.production_year) AS oldest_production_year, COUNT(DISTINCT k.keyword_id) AS unique_keywords, COUNT(DISTINCT cn.id) AS total_companies_involved, COUNT(DISTINCT at.id) AS total_alternate_titles FROM title AS t JOIN movie_keyword AS k ON t.id = k.movie_id JOIN company_name AS cn ON cn.id = t.id LEFT JOIN aka_title AS at ON t.id = at.movie_id WHERE t.production_year >= 2000 AND t.production_year <= 2010 GROUP BY t.kind_id HAVING COUNT(DISTINCT cn.country_code) > 1;
SELECT kt.kind, AVG(mi_idx_nr_count.count) AS average_number_of_facts, SUM(cast_member_count.count) AS total_cast_members, COUNT(DISTINCT ci.movie_id) AS number_of_movies, COUNT(DISTINCT n.id) AS number_of_actors FROM kind_type kt LEFT JOIN ( SELECT movie_id, COUNT(*) AS count FROM movie_info_idx GROUP BY movie_id ) mi_idx_nr_count ON mi_idx_nr_count.movie_id = kt.id LEFT JOIN ( SELECT movie_id, COUNT(*) AS count FROM cast_info GROUP BY movie_id ) cast_member_count ON cast_member_count.movie_id = kt.id LEFT JOIN cast_info ci ON ci.movie_id = kt.id LEFT JOIN name n ON n.id = ci.person_id WHERE kt.kind IN ('tv series', 'video game', 'episode', 'tv mini series', 'video movie') AND ci.nr_order IN (41, 43, 49, 3) GROUP BY kt.kind ORDER BY average_number_of_facts DESC;
SELECT kt.kind AS content_type, COUNT(DISTINCT ci.movie_id) AS total_movies, COUNT(DISTINCT ci.person_id) AS total_actors, AVG(movie_link.id) AS average_movie_link_id, SUM(mc.company_id) AS total_company_ids, COUNT(DISTINCT k.id) AS unique_keywords FROM cast_info ci JOIN kind_type kt ON ci.movie_id IN (2360100, 2237184, 947729, 1615145) JOIN movie_link ON movie_link.movie_id = ci.movie_id JOIN movie_companies mc ON ci.movie_id = mc.movie_id JOIN keyword k ON k.phonetic_code IN ('S4623', 'P4162', 'M4252') WHERE kt.kind IN ('video game', 'tv movie', 'episode', 'video movie', 'tv series', 'tv mini series') AND ci.nr_order IN (87, 12, 8, 34) AND movie_link.id IN (1606, 3369, 1804, 3838) GROUP BY kt.kind;
SELECT AVG(cast_count) AS average_cast_per_movie, AVG(link_count) AS average_links_per_movie, COUNT(DISTINCT mi.info_type_id) AS unique_info_types FROM (SELECT movie_id, COUNT(*) AS cast_count FROM cast_info WHERE note LIKE '%(Band)%' GROUP BY movie_id) AS cast_counts JOIN (SELECT movie_id, COUNT(*) AS link_count FROM movie_link WHERE link_type_id IN (6, 5, 11, 15) GROUP BY movie_id) AS link_counts ON cast_counts.movie_id = link_counts.movie_id JOIN movie_info AS mi ON cast_counts.movie_id = mi.movie_id;
SELECT ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_rating, SUM(CASE WHEN n.gender = 'F' THEN 1 ELSE 0 END) AS female_cast_count, SUM(CASE WHEN n.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_count FROM company_type ct JOIN movie_companies mc ON ct.id = mc.company_type_id JOIN movie_info_idx mi_idx ON mc.movie_id = mi_idx.movie_id AND mi_idx.info_type_id = ( SELECT id FROM comp_cast_type WHERE kind = 'rating' ) JOIN name n ON mc.movie_id = n.id WHERE ct.kind IN ('special effects companies', 'miscellaneous companies', 'distributors') AND mc.movie_id IN ('19654', '24487', '18671', '31117', '18944') AND mc.company_id IN ('209', '936', '1140') AND n.name_pcode_cf IN ('A6232', 'A5163') GROUP BY ct.kind ORDER BY number_of_movies DESC, average_rating DESC;
SELECT AVG(at.production_year) AS average_production_year, COUNT(DISTINCT at.movie_id) AS number_of_movies, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, SUM(CASE WHEN lt.link = 'similar to' THEN 1 ELSE 0 END) AS count_similar_movies, rt.role AS role_type, COUNT(DISTINCT cct.id) AS count_of_cast_types FROM aka_title at JOIN movie_link ml ON at.movie_id = ml.movie_id JOIN link_type lt ON ml.link_type_id = lt.id JOIN role_type rt ON rt.id = 4 JOIN comp_cast_type cct ON cct.kind IN ('complete+verified', 'cast', 'crew', 'complete') WHERE at.md5sum IN ('efba398a3a676bcdd49811cf868754d9', '532902abff1e92fb97a2eef43fb530a6', '803eb3353f2aeb81555223391ef4de88', 'eaf5b1adddabc3742e27581d5b19c2ac') GROUP BY rt.role;
SELECT it.info AS info_category, COUNT(DISTINCT cc.movie_id) AS number_of_movies, COUNT(DISTINCT cc.id) AS total_complete_cast_records, COUNT(DISTINCT mi_idx.movie_id) AS movies_with_additional_info, AVG(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS average_votes, SUM(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS total_votes, MIN(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS min_votes, MAX(CAST(mi_idx.info AS INTEGER)) FILTER (WHERE it.info = 'votes') AS max_votes, COUNT(DISTINCT lt.id) AS number_of_link_types, STRING_AGG(DISTINCT lt.link, ', ') AS link_types_used FROM complete_cast cc JOIN movie_info_idx mi_idx ON cc.movie_id = mi_idx.movie_id JOIN info_type it ON mi_idx.info_type_id = it.id JOIN link_type lt ON lt.id = mi_idx.info_type_id WHERE cc.status_id <> 0 AND it.info IN ('height', 'tech info', 'votes', 'mini biography') AND lt.link IN ('remake of', 'remade as', 'featured in', 'spin off') GROUP BY it.info;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT mi.movie_id) AS total_movies, AVG(CAST(mi.info AS NUMERIC)) AS average_movie_length, SUM(CASE WHEN mi_idx.info_type_id = 26 THEN 1 ELSE 0 END) AS total_movies_with_votes, COUNT(DISTINCT mk.keyword_id) AS unique_keywords_used, COUNT(DISTINCT an.person_id) AS number_of_aka_names FROM movie_info mi JOIN kind_type kt ON mi.info_type_id = kt.id LEFT JOIN movie_info_idx mi_idx ON mi.movie_id = mi_idx.movie_id AND mi_idx.info_type_id IN (26, 41, 27, 80, 87) LEFT JOIN movie_keyword mk ON mi.movie_id = mk.movie_id LEFT JOIN aka_name an ON mi.movie_id = an.person_id WHERE mi.info_type_id = 1 AND mi_idx.movie_id = '8945' AND an.md5sum IN ('536004f9d825a8468fbfa85cb0221d0c', '5126b143aa05c2a7a362057c4543038b') GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT rt.ROLE, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT name.id) AS number_of_unique_actors FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN name ON ci.person_id = name.id WHERE rt.id IN (1) AND ci.nr_order IS NOT NULL AND name.md5sum IN ('0d93c2f49007eb923f1f3983f0a8cc6b', 'c73602ee6ad37663369ca6e3bd40e7dd', 'db97c7dc12820b568f8351333075a92d', '53ebf953411448090e3e779bf1486727', 'f22535a12044b89484f9cba769cf437a', '6f608ba1bd4dd87eac0e663a877f54bc') GROUP BY rt.ROLE;
SELECT c.id AS company_id, c.name AS company_name, COUNT(DISTINCT m.id) AS number_of_movies, AVG(mi_numeric.info::FLOAT) AS average_movie_length, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS number_of_actors, COUNT(DISTINCT k.id) AS number_of_unique_keywords, MAX(ci.nr_order) AS max_cast_order, MIN(mc.note) AS earliest_production_note FROM movie_companies mc JOIN company_name c ON mc.company_id = c.id JOIN title m ON mc.movie_id = m.id LEFT JOIN movie_info mi ON m.id = mi.movie_id LEFT JOIN movie_info_idx mi_idx ON m.id = mi_idx.movie_id LEFT JOIN info_type it1 ON mi.info_type_id = it1.id AND it1.info = 'running time' LEFT JOIN cast_info ci ON m.id = ci.movie_id LEFT JOIN movie_keyword mk ON m.id = mk.movie_id LEFT JOIN keyword k ON mk.keyword_id = k.id LEFT JOIN movie_info mi_numeric ON m.id = mi_numeric.movie_id AND mi_numeric.info_type_id = it1.id WHERE c.country_code = '[us]' AND mi_numeric.info ~ '^[0-9]+(\.[0-9]+)?$' GROUP BY c.id, c.name ORDER BY number_of_movies DESC, average_movie_length DESC LIMIT 10;
SELECT cn.name AS company_name, ct.kind AS company_kind, COUNT(DISTINCT mc.movie_id) AS total_movies_produced, AVG(mk.keyword_count) AS average_keywords_per_movie, MAX(mi.info) AS most_common_language FROM company_name cn JOIN movie_companies mc ON mc.company_id = cn.id JOIN company_type ct ON mc.company_type_id = ct.id AND ct.kind IN ('production companies', 'special effects companies') JOIN (SELECT movie_id, COUNT(keyword_id) AS keyword_count FROM movie_keyword GROUP BY movie_id) mk ON mk.movie_id = mc.movie_id JOIN (SELECT movie_id, info FROM movie_info WHERE info_type_id = 4 AND info IN ('Slovak', 'Gujarati', 'Czech') ) mi ON mi.movie_id = mc.movie_id GROUP BY cn.name, ct.kind ORDER BY total_movies_produced DESC, average_keywords_per_movie DESC;
SELECT it.info AS info_type, COUNT(DISTINCT pi.person_id) AS number_of_persons, COUNT(DISTINCT cc.movie_id) AS number_of_movies, AVG(cc.status_id) AS average_status_id, SUM(case when pi.info_type_id = 36 then 1 else 0 end) AS count_type_36_info, SUM(case when pi.info_type_id = 37 then 1 else 0 end) AS count_type_37_info FROM person_info pi JOIN info_type it ON pi.info_type_id = it.id LEFT JOIN complete_cast cc ON pi.person_id = cc.subject_id WHERE it.info IN ('LD analog right', 'pictorial', 'languages') AND pi.info_type_id IN (36, 37) AND cc.movie_id IN (1699369, 1690770, 1647675, 81514, 1634423) AND cc.subject_id = 1 GROUP BY it.info;
SELECT kt.kind AS movie_type, COUNT(DISTINCT at.id) AS total_alternate_titles, AVG(cc.status_id) AS average_status_id, SUM(CASE WHEN at.kind_id = 7 THEN 1 ELSE 0 END) AS total_tv_shows, SUM(CASE WHEN at.kind_id = 2 THEN 1 ELSE 0 END) AS total_movies, COUNT(DISTINCT mi.id) AS total_movie_info_entries, COUNT(DISTINCT cc.id) AS total_complete_cast_entries FROM aka_title at JOIN kind_type kt ON at.kind_id = kt.id JOIN complete_cast cc ON at.movie_id = cc.movie_id LEFT JOIN movie_info_idx mi ON at.movie_id = mi.movie_id GROUP BY kt.kind ORDER BY total_alternate_titles DESC;
SELECT cn.name AS company_name, COUNT(DISTINCT mi_idx.movie_id) AS number_of_movies, AVG(CAST(mi_idx.info AS NUMERIC)) AS average_runtime, SUM(CASE WHEN it.info = 'locations' THEN 1 ELSE 0 END) AS total_locations, COUNT(DISTINCT mk.keyword_id) AS unique_keywords, COUNT(DISTINCT cc.movie_id) AS complete_cast_movies FROM movie_info_idx AS mi_idx JOIN info_type AS it ON mi_idx.info_type_id = it.id JOIN movie_keyword AS mk ON mi_idx.movie_id = mk.movie_id JOIN complete_cast AS cc ON mi_idx.movie_id = cc.movie_id JOIN company_name AS cn ON cn.imdb_id = mi_idx.movie_id WHERE it.info IN ('runtimes', 'locations') AND cn.name_pcode_nf = 'G2642' GROUP BY cn.name ORDER BY average_runtime DESC, number_of_movies DESC;
SELECT ct.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT comp.id) AS number_of_companies, AVG(CAST(SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)') AS INTEGER)) AS average_production_year, COUNT(DISTINCT ccast.subject_id) AS number_of_unique_subjects, COUNT(DISTINCT k.id) AS number_of_keywords, SUM(CASE WHEN lt.link ILIKE '%spin off%' THEN 1 ELSE 0 END) AS count_spin_off_links FROM movie_companies AS mc JOIN company_type AS ct ON mc.company_type_id = ct.id JOIN company_name AS comp ON mc.company_id = comp.id LEFT JOIN complete_cast AS ccast ON mc.movie_id = ccast.movie_id LEFT JOIN movie_info_idx AS mi ON mc.movie_id = mi.movie_id LEFT JOIN keyword AS k ON mi.info = k.keyword LEFT JOIN link_type AS lt ON mi.info_type_id = lt.id WHERE mc.note NOT LIKE '%(TV)%' AND SUBSTRING(mc.note FROM '\\(([0-9]{4})\\)')::INTEGER BETWEEN 1990 AND 2023 GROUP BY ct.kind ORDER BY number_of_movies DESC;
SELECT kt.kind AS company_type, COUNT(DISTINCT mc.movie_id) AS number_of_movies, AVG(mc.company_id) AS average_company_id, SUM(mc.company_type_id) AS sum_company_type_ids FROM movie_companies mc JOIN kind_type kt ON mc.company_type_id = kt.id GROUP BY kt.kind ORDER BY number_of_movies DESC;
SELECT c.name AS company_name, COUNT(DISTINCT mc.movie_id) AS number_of_movies, COUNT(DISTINCT mk.keyword_id) AS number_of_keywords, COUNT(DISTINCT ml.linked_movie_id) AS number_of_linked_movies, SUM(CASE WHEN c.name_pcode_sf = 'M2462' THEN 1 ELSE 0 END) AS count_M2462, SUM(CASE WHEN c.name_pcode_sf = 'P5323' THEN 1 ELSE 0 END) AS count_P5323 FROM company_name c JOIN movie_companies mc ON c.id = mc.company_id LEFT JOIN movie_keyword mk ON mc.movie_id = mk.movie_id LEFT JOIN movie_link ml ON mc.movie_id = ml.movie_id GROUP BY c.name ORDER BY number_of_movies DESC, number_of_keywords DESC;
SELECT ct.kind AS company_kind, COUNT(DISTINCT cn.id) AS number_of_companies, COUNT(DISTINCT lt.id) AS number_of_link_types, AVG(cn.imdb_id) AS average_imdb_id, SUM(CASE WHEN cn.country_code = 'US' THEN 1 ELSE 0 END) AS number_of_us_companies, MAX(cn.id) AS max_company_id FROM company_name cn JOIN company_type ct ON cn.id = ct.id JOIN link_type lt ON cn.id = lt.id WHERE cn.md5sum IN ('98b3290c059fa23b472f7277bba9e6c9', '7ddd8c092b2c8500fe94d9138d2cacd7') AND lt.id IN ('12', '13', '4', '14') GROUP BY ct.kind;
SELECT ct.kind AS company_kind, it.info AS info_category, AVG(t.production_year) AS average_production_year, COUNT(t.id) AS total_titles, SUM(CASE WHEN p.info = 'Adams, Terry Wayne' THEN 1 ELSE 0 END) AS count_terry_wayne_adams_mentions, SUM(CASE WHEN p.info = '14 March 1879' THEN 1 ELSE 0 END) AS count_14_march_1879_mentions FROM title AS t JOIN company_type AS ct ON t.kind_id = ct.id JOIN person_info AS p ON p.info_type_id = ct.id JOIN info_type AS it ON p.info_type_id = it.id WHERE t.production_year BETWEEN 1990 AND 2020 GROUP BY ct.kind, it.info HAVING COUNT(t.id) > 10;
SELECT kt.kind AS movie_kind, COUNT(DISTINCT ci.movie_id) AS number_of_movies, AVG(at.production_year) AS average_production_year, SUM(CASE WHEN it.info = 'budget' THEN CAST(mi.info AS MONEY) ELSE 0::MONEY END) AS total_budget, COUNT(DISTINCT ci.person_id) AS number_of_actors, COUNT(DISTINCT mc.company_id) AS number_of_companies_involved FROM movie_info mi JOIN movie_companies mc ON mi.movie_id = mc.movie_id JOIN cast_info ci ON mi.movie_id = ci.movie_id JOIN aka_title at ON ci.movie_id = at.movie_id JOIN kind_type kt ON kt.id = at.kind_id JOIN info_type it ON it.id = mi.info_type_id WHERE it.info IN ('budget', 'box office gross') AND kt.kind IN ('actor', 'actress') AND mc.company_type_id IN (1, 2) GROUP BY kt.kind;
SELECT AVG(mi_idx.info::numeric) AS average_rating, COUNT(DISTINCT mc.movie_id) AS total_movies, COUNT(DISTINCT pi.person_id) AS total_persons_involved, SUM(CASE WHEN pi.note LIKE '%Self%' THEN 1 ELSE 0 END) AS count_of_self_mentions FROM movie_companies AS mc JOIN person_info AS pi ON mc.movie_id = pi.person_id JOIN role_type AS rt ON pi.info_type_id = rt.id JOIN movie_info_idx AS mi_idx ON mc.movie_id = mi_idx.movie_id WHERE mc.note LIKE '%(TV)%' AND pi.note NOT IN ('Nati Adler', 'Anoymous') AND rt.ROLE NOT LIKE '%actor%' GROUP BY mc.company_type_id;
SELECT kt.kind, COUNT(DISTINCT t.id) AS total_movies, AVG(t.production_year) AS average_production_year, SUM(CASE WHEN ci.role_id = 1 THEN 1 ELSE 0 END) AS total_actors, SUM(CASE WHEN ci.role_id = 2 THEN 1 ELSE 0 END) AS total_directors, COUNT(DISTINCT mc.company_id) AS total_companies_involved, COUNT(DISTINCT k.id) AS total_unique_keywords FROM title t JOIN kind_type kt ON t.kind_id = kt.id LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN movie_companies mc ON t.id = mc.movie_id LEFT JOIN keyword k ON t.id = k.id WHERE t.production_year > 2000 AND kt.id = 5 AND ci.note LIKE '%(20%' AND ci.role_id IN (1, 2) GROUP BY kt.kind ORDER BY total_movies DESC;
SELECT cn.name AS character_name, COUNT(DISTINCT cl.movie_id) AS total_linked_movies, COUNT(ci.person_id) AS total_roles_played, AVG(ci.nr_order) AS average_role_order FROM char_name AS cn JOIN cast_info AS ci ON cn.id = ci.person_id JOIN movie_link AS cl ON ci.movie_id = cl.movie_id WHERE cn.name IN ('Boy Negro''s Gang', 'Lazoglu', 'Paco Hernández Gil', 'Tedddy Hart', 'Funcionario prisión', 'Make Up Man') GROUP BY cn.name ORDER BY total_linked_movies DESC, total_roles_played DESC;
SELECT lt.LINK, COUNT(DISTINCT mk.movie_id) AS num_movies, AVG(mk.keyword_id) AS avg_keyword_id, SUM(CASE WHEN mi.movie_id = 924359 THEN 1 ELSE 0 END) AS count_specific_movie_info, COUNT(DISTINCT an.person_id) AS num_person_aliases FROM link_type lt LEFT JOIN movie_keyword mk ON lt.id = mk.id LEFT JOIN movie_info mi ON mk.movie_id = mi.movie_id LEFT JOIN aka_name an ON an.person_id = mi.movie_id WHERE lt.LINK IN ('featured in', 'version of', 'features', 'edited into') AND mk.id IN (1943, 3232, 4574, 1304) GROUP BY lt.LINK;
SELECT rt.ROLE AS role_type, COUNT(DISTINCT ci.person_id) AS number_of_people, AVG(ci.nr_order) AS average_nr_order, COUNT(DISTINCT t.id) AS number_of_movies, SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS complete_cast_count, MIN(t.production_year) AS earliest_production_year, MAX(t.production_year) AS latest_production_year FROM cast_info ci JOIN role_type rt ON ci.role_id = rt.id JOIN title t ON ci.movie_id = t.id LEFT JOIN complete_cast cc ON t.id = cc.movie_id AND cc.subject_id = 1 WHERE t.kind_id IN (2, 7) AND (ci.person_role_id IS NULL OR ci.person_role_id IN (1264, 1098, 226, 448, 1154)) AND t.production_year BETWEEN 1990 AND 2023 GROUP BY rt.ROLE ORDER BY number_of_people DESC;
SELECT kt.kind, COUNT(DISTINCT ml.movie_id) AS total_movies, COUNT(DISTINCT cn.id) AS distinct_companies, cn.country_code, AVG(cn.imdb_id) AS avg_imdb_id_of_companies FROM movie_link AS ml INNER JOIN kind_type AS kt ON ml.link_type_id = kt.id INNER JOIN movie_link AS ml2 ON ml.movie_id = ml2.movie_id INNER JOIN company_name AS cn ON ml2.movie_id = cn.id GROUP BY kt.kind, cn.country_code ORDER BY total_movies DESC;
SELECT rt.role, COUNT(DISTINCT cn.id) AS total_characters, AVG(p.id) AS average_person_id, SUM(mc.company_id) AS total_company_id_sum, COUNT(DISTINCT k.id) AS total_unique_keywords FROM role_type rt LEFT JOIN char_name cn ON CAST(cn.id AS VARCHAR) = rt.id::varchar LEFT JOIN person_info p ON p.info_type_id = rt.id LEFT JOIN movie_companies mc ON mc.movie_id = cn.id LEFT JOIN keyword k ON k.id = mc.movie_id LEFT JOIN company_name cnm ON cnm.id = mc.company_id WHERE rt.role IN ('costume designer', 'miscellaneous crew', 'writer', 'actress', 'cinematographer', 'editor') AND mc.movie_id IN (12988, 12661, 11129, 26451, 19305, 12141) AND cnm.id IN (59673, 4533, 60539, 5934, 16779) GROUP BY rt.role ORDER BY total_unique_keywords DESC, total_characters DESC;
SELECT t.title AS movie_title, t.production_year, COUNT(ci.id) AS total_cast, AVG(ci.nr_order) AS average_cast_order, COUNT(DISTINCT a.id) AS total_alternate_titles, SUM(CASE WHEN n.gender = 'm' THEN 1 ELSE 0 END) AS male_cast_count, SUM(CASE WHEN n.gender = 'f' THEN 1 ELSE 0 END) AS female_cast_count, COUNT(DISTINCT mi.id) AS total_movie_info_entries FROM title t LEFT JOIN cast_info ci ON t.id = ci.movie_id LEFT JOIN aka_title a ON t.id = a.movie_id LEFT JOIN name n ON ci.person_id = n.id LEFT JOIN movie_info mi ON t.id = mi.movie_id WHERE t.production_year > 2000 AND n.name_pcode_cf IN ('A264', 'A4312') AND ci.nr_order IN (20, 21, 42) AND ci.person_role_id IN (936, 1189, 544) AND a.episode_of_id IN (23907, 8118) GROUP BY t.title, t.production_year ORDER BY t.production_year DESC, total_cast DESC;
